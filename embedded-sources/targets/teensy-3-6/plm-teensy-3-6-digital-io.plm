//——————————————————————————————————————————————————————————————————————————————

check target "teensy-3-6/unprivileged", "teensy-3-6/privileged"

//——————————————————————————————————————————————————————————————————————————————
  
enum $digitalPort {
  case D0  // PTB16
  case D1  // PTB17
  case D2  // PTD0
  case D3  // PTA12
  case D4  // PTA13
  case D5  // PTD7
  case D6  // PTD4
  case D7  // PTD2
  case D8  // PTD3
  case D9  // PTC3
  case D10 // PTC4
  case D11 // PTC6
  case D12 // PTC7
  case D13 // PTC5
  case D14 // PTD1
  case D15 // PTC0
  case D16 // PTB0
  case D17 // PTB1
  case D18 // PTB3
  case D19 // PTB2
  case D20 // PTD5
  case D21 // PTD6
  case D22 // PTC1
  case D23 // PTC2
}

//··············································································

enum $digitalMode {
  case OUTPUT
  case INPUT
  case INPUT_PULLUP
}

//——————————————————————————————————————————————————————————————————————————————
// By default, the 32 PORTA_PCR registers are not accessible in user mode
// Their adresses : 0x4004_9000 --> 0x4004_907C
// This corresponds to AIPS slot 73 (§4.5.1)
// By default, the 32 PORTB_PCR registers are not accessible in user mode
// Their adresses : 0x4004_A000 --> 0x4004_A07C
// This corresponds to AIPS slot 74 (§4.5.1)
// By default, the 32 PORTC_PCR registers are not accessible in user mode
// Their adresses : 0x4004_B000 --> 0x4004_B07C
// This corresponds to AIPS slot 75 (§4.5.1)
// By default, the 32 PORTD_PCR registers are not accessible in user mode
// Their adresses : 0x4004_C000 --> 0x4004_C07C
// This corresponds to AIPS slot 76 (§4.5.1)
//··············································································

boot 50 { // See §19.2.2 page 351
// Slot 73 is accessible in user mode by resetting bits 27:24 of AIPS0_PACRJ
// Slot 74 is accessible in user mode by resetting bits 23:20 of AIPS0_PACRJ
// Slot 75 is accessible in user mode by resetting bits 19:16 of AIPS0_PACRJ
// Slot 76 is accessible in user mode by resetting bits 15:12 of AIPS0_PACRJ
// Simplification: all bits of AIPS0_PACRJ are reseted
  AIPS0_PACRJ = 0
}

//··············································································

public func pinMode @noUnusedWarning (?port:port $digitalPort
                                      ?mode:mode $digitalMode) {
  switch port {
  case D0 : // PTB16
    switch mode {
    case OUTPUT :
      PORTB_PCR [16] = {PORTB_PCR !MUX:1}
      GPIOB_PDDR |= (1 << 16)
    case INPUT :
      PORTB_PCR [16] = {PORTB_PCR !MUX:1}
      GPIOB_PDDR &= ~ (1 << 16)
    case INPUT_PULLUP :
      PORTB_PCR [16] = {PORTB_PCR !MUX:1 !PE:1 !PS:1}
      GPIOB_PDDR &= ~ (1 << 16)
    }
  case D1 : // PTB17
    switch mode {
    case OUTPUT :
      PORTB_PCR [17] = {PORTB_PCR !MUX:1}
      GPIOB_PDDR |= (1 << 17)
    case INPUT :
      PORTB_PCR [17] = {PORTB_PCR !MUX:1}
      GPIOB_PDDR &= ~ (1 << 17)
    case INPUT_PULLUP :
      PORTB_PCR [17] = {PORTB_PCR !MUX:1 !PE:1 !PS:1}
      GPIOB_PDDR &= ~ (1 << 17)
    }
  case D2 : // PTD0
    switch mode {
    case OUTPUT :
      PORTD_PCR [0] = {PORTD_PCR !MUX:1}
      GPIOD_PDDR |= (1 << 0)
    case INPUT :
      PORTD_PCR [0] = {PORTD_PCR !MUX:1}
      GPIOD_PDDR &= ~ (1 << 0)
    case INPUT_PULLUP :
      PORTD_PCR [0] = {PORTD_PCR !MUX:1 !PE:1 !PS:1}
      GPIOD_PDDR &= ~ (1 << 0)
    }
  case D3 : // PTA12
    switch mode {
    case OUTPUT :
      PORTA_PCR [12] = {PORTA_PCR !MUX:1}
      GPIOA_PDDR |= (1 << 12)
    case INPUT :
      PORTA_PCR [12] = {PORTA_PCR !MUX:1}
      GPIOA_PDDR &= ~ (1 << 12)
    case INPUT_PULLUP :
      PORTA_PCR [12] = {PORTA_PCR !MUX:1 !PE:1 !PS:1}
      GPIOA_PDDR &= ~ (1 << 12)
    }
  case D4 : // PTA13
    switch mode {
    case OUTPUT :
      PORTA_PCR [13] = {PORTA_PCR !MUX:1}
      GPIOA_PDDR |= (1 << 13)
    case INPUT :
      PORTA_PCR [13] = {PORTA_PCR !MUX:1}
      GPIOA_PDDR &= ~ (1 << 13)
    case INPUT_PULLUP :
      PORTA_PCR [13] = {PORTA_PCR !MUX:1 !PE:1 !PS:1}
      GPIOA_PDDR &= ~ (1 << 13)
    }
  case D5 : // PTD7
    switch mode {
    case OUTPUT :
      PORTD_PCR [7] = {PORTD_PCR !MUX:1}
      GPIOD_PDDR |= (1 << 7)
    case INPUT :
      PORTD_PCR [7] = {PORTD_PCR !MUX:1}
      GPIOD_PDDR &= ~ (1 << 7)
    case INPUT_PULLUP :
      PORTD_PCR [7] = {PORTD_PCR !MUX:1 !PE:1 !PS:1}
      GPIOD_PDDR &= ~ (1 << 7)
    }
  case D6 : // PTD4
    switch mode {
    case OUTPUT :
      PORTD_PCR [4] = {PORTD_PCR !MUX:1}
      GPIOD_PDDR |= (1 << 4)
    case INPUT :
      PORTD_PCR [4] = {PORTD_PCR !MUX:1}
      GPIOD_PDDR &= ~ (1 << 4)
    case INPUT_PULLUP :
      PORTD_PCR [4] = {PORTD_PCR !MUX:1 !PE:1 !PS:1}
      GPIOD_PDDR &= ~ (1 << 4)
    }
  case D7 : // PTD2
    switch mode {
    case OUTPUT :
      PORTD_PCR [2] = {PORTD_PCR !MUX:1}
      GPIOD_PDDR |= (1 << 2)
    case INPUT :
      PORTD_PCR [2] = {PORTD_PCR !MUX:1}
      GPIOD_PDDR &= ~ (1 << 2)
    case INPUT_PULLUP :
      PORTD_PCR [2] = {PORTD_PCR !MUX:1 !PE:1 !PS:1}
      GPIOD_PDDR &= ~ (1 << 2)
    }
  case D8 : // PTD3
    switch mode {
    case OUTPUT :
      PORTD_PCR [3] = {PORTD_PCR !MUX:1}
      GPIOD_PDDR |= (1 << 3)
    case INPUT :
      PORTD_PCR [3] = {PORTD_PCR !MUX:1}
      GPIOD_PDDR &= ~ (1 << 3)
    case INPUT_PULLUP :
      PORTD_PCR [3] = {PORTD_PCR !MUX:1 !PE:1 !PS:1}
      GPIOD_PDDR &= ~ (1 << 3)
    }
  case D9  : // PTC3
    switch mode {
    case OUTPUT :
      PORTC_PCR [3] = {PORTC_PCR !MUX:1}
      GPIOC_PDDR |= (1 << 3)
    case INPUT :
      PORTC_PCR [3] = {PORTC_PCR !MUX:1}
      GPIOC_PDDR &= ~ (1 << 3)
    case INPUT_PULLUP :
      PORTC_PCR [3] = {PORTC_PCR !MUX:1 !PE:1 !PS:1}
      GPIOC_PDDR &= ~ (1 << 3)
    }
  case D10 : // PTC4
    switch mode {
    case OUTPUT :
      PORTC_PCR [4] = {PORTC_PCR !MUX:1}
      GPIOC_PDDR |= (1 << 4)
    case INPUT :
      PORTC_PCR [4] = {PORTC_PCR !MUX:1}
      GPIOC_PDDR &= ~ (1 << 4)
    case INPUT_PULLUP :
      PORTC_PCR [4] = {PORTC_PCR !MUX:1 !PE:1 !PS:1}
      GPIOC_PDDR &= ~ (1 << 4)
    }
  case D11 : // PTC6
    switch mode {
    case OUTPUT :
      PORTC_PCR [6] = {PORTC_PCR !MUX:1}
      GPIOC_PDDR |= (1 << 6)
    case INPUT :
      PORTC_PCR [6] = {PORTC_PCR !MUX:1}
      GPIOC_PDDR &= ~ (1 << 6)
    case INPUT_PULLUP :
      PORTC_PCR [6] = {PORTC_PCR !MUX:1 !PE:1 !PS:1}
      GPIOC_PDDR &= ~ (1 << 6)
    }
  case D12 : // PTC7
    switch mode {
    case OUTPUT :
      PORTC_PCR [7] = {PORTC_PCR !MUX:1}
      GPIOC_PDDR |= (1 << 7)
    case INPUT :
      PORTC_PCR [7] = {PORTC_PCR !MUX:1}
      GPIOC_PDDR &= ~ (1 << 7)
    case INPUT_PULLUP :
      PORTC_PCR [7] = {PORTC_PCR !MUX:1 !PE:1 !PS:1}
      GPIOC_PDDR &= ~ (1 << 7)
    }
  case D13 : // PTC5
    switch mode {
    case OUTPUT :
      PORTC_PCR [5] = {PORTC_PCR !MUX:1}
      GPIOC_PDDR |= (1 << 5)
    case INPUT :
      PORTC_PCR [5] = {PORTC_PCR !MUX:1}
      GPIOC_PDDR &= ~ (1 << 5)
    case INPUT_PULLUP :
      PORTC_PCR [5] = {PORTC_PCR !MUX:1 !PE:1 !PS:1}
      GPIOC_PDDR &= ~ (1 << 5)
    }
  case D14 : // PTD1
    switch mode {
    case OUTPUT :
      PORTD_PCR [1] = {PORTD_PCR !MUX:1}
      GPIOD_PDDR |= (1 << 1)
    case INPUT :
      PORTD_PCR [1] = {PORTD_PCR !MUX:1}
      GPIOD_PDDR &= ~ (1 << 1)
    case INPUT_PULLUP :
      PORTD_PCR [1] = {PORTD_PCR !MUX:1 !PE:1 !PS:1}
      GPIOD_PDDR &= ~ (1 << 1)
    }
  case D15 : // PTC0
    switch mode {
    case OUTPUT :
      PORTC_PCR [0] = {PORTC_PCR !MUX:1}
      GPIOC_PDDR |= (1 << 0)
    case INPUT :
      PORTC_PCR [0] = {PORTC_PCR !MUX:1}
      GPIOC_PDDR &= ~ (1 << 0)
    case INPUT_PULLUP :
      PORTC_PCR [0] = {PORTC_PCR !MUX:1 !PE:1 !PS:1}
      GPIOC_PDDR &= ~ (1 << 0)
    }
  case D16 : // PTB0
    switch mode {
    case OUTPUT :
      PORTB_PCR [0] = {PORTB_PCR !MUX:1}
      GPIOB_PDDR |= (1 << 0)
    case INPUT :
      PORTB_PCR [0] = {PORTB_PCR !MUX:1}
      GPIOB_PDDR &= ~ (1 << 0)
    case INPUT_PULLUP :
      PORTB_PCR [0] = {PORTB_PCR !MUX:1 !PE:1 !PS:1}
      GPIOB_PDDR &= ~ (1 << 0)
    }
  case D17 : // PTB1
    switch mode {
    case OUTPUT :
      PORTB_PCR [1] = {PORTB_PCR !MUX:1}
      GPIOB_PDDR |= (1 << 1)
    case INPUT :
      PORTB_PCR [1] = {PORTB_PCR !MUX:1}
      GPIOB_PDDR &= ~ (1 << 1)
    case INPUT_PULLUP :
      PORTB_PCR [1] = {PORTB_PCR !MUX:1 !PE:1 !PS:1}
      GPIOB_PDDR &= ~ (1 << 1)
    }
  case D18 : // PTB3
    switch mode {
    case OUTPUT :
      PORTB_PCR [3] = {PORTB_PCR !MUX:1}
      GPIOB_PDDR |= (1 << 3)
    case INPUT :
      PORTB_PCR [3] = {PORTB_PCR !MUX:1}
      GPIOB_PDDR &= ~ (1 << 3)
    case INPUT_PULLUP :
      PORTB_PCR [3] = {PORTB_PCR !MUX:1 !PE:1 !PS:1}
      GPIOB_PDDR &= ~ (1 << 3)
    }
  case D19 : // PTB2
    switch mode {
    case OUTPUT :
      PORTB_PCR [2] = {PORTB_PCR !MUX:1}
      GPIOB_PDDR |= (1 << 2)
    case INPUT :
      PORTB_PCR [2] = {PORTB_PCR !MUX:1}
      GPIOB_PDDR &= ~ (1 << 2)
    case INPUT_PULLUP :
      PORTB_PCR [2] = {PORTB_PCR !MUX:1 !PE:1 !PS:1}
      GPIOB_PDDR &= ~ (1 << 2)
    }
  case D20 : // PTD5
    switch mode {
    case OUTPUT :
      PORTD_PCR [5] = {PORTD_PCR !MUX:1}
      GPIOD_PDDR |= (1 << 5)
    case INPUT :
      PORTD_PCR [5] = {PORTD_PCR !MUX:1}
      GPIOD_PDDR &= ~ (1 << 5)
    case INPUT_PULLUP :
      PORTD_PCR [5] = {PORTD_PCR !MUX:1 !PE:1 !PS:1}
      GPIOD_PDDR &= ~ (1 << 5)
    }
  case D21 : // PTD6
    switch mode {
    case OUTPUT :
      PORTD_PCR [6] = {PORTD_PCR !MUX:1}
      GPIOD_PDDR |= (1 << 6)
    case INPUT :
      PORTD_PCR [6] = {PORTD_PCR !MUX:1}
      GPIOD_PDDR &= ~ (1 << 6)
    case INPUT_PULLUP :
      PORTD_PCR [6] = {PORTD_PCR !MUX:1 !PE:1 !PS:1}
      GPIOD_PDDR &= ~ (1 << 6)
    }
  case D22 : // PTC1
    switch mode {
    case OUTPUT :
      PORTC_PCR [1] = {PORTC_PCR !MUX:1}
      GPIOC_PDDR |= (1 << 1)
    case INPUT :
      PORTC_PCR [1] = {PORTC_PCR !MUX:1}
      GPIOC_PDDR &= ~ (1 << 1)
    case INPUT_PULLUP :
      PORTC_PCR [1] = {PORTC_PCR !MUX:1 !PE:1 !PS:1}
      GPIOC_PDDR &= ~ (1 << 1)
    }
  case D23 : // PTC2
    switch mode {
    case OUTPUT :
      PORTC_PCR [2] = {PORTC_PCR !MUX:1}
      GPIOC_PDDR |= (1 << 2)
    case INPUT :
      PORTC_PCR [2] = {PORTC_PCR !MUX:1}
      GPIOC_PDDR &= ~ (1 << 2)
    case INPUT_PULLUP :
      PORTC_PCR [2] = {PORTC_PCR !MUX:1 !PE:1 !PS:1}
      GPIOC_PDDR &= ~ (1 << 2)
    }
  }
}

//——————————————————————————————————————————————————————————————————————————————

public func digitalWrite @noUnusedWarning (?port:port $digitalPort
                                           ?value $bool) {
  switch port {
  case D0 : // PTB16
    if value {
      GPIOB_PSOR = 1 << 16 ;
    }else{
      GPIOB_PCOR = 1 << 16 ;
    }
  case D1 : // PTB17
    if value {
      GPIOB_PSOR = 1 << 17 ;
    }else{
      GPIOB_PCOR = 1 << 17 ;
    }
  case D2 : // PTD0
    if value {
      GPIOD_PSOR = 1 << 0 ;
    }else{
      GPIOD_PCOR = 1 << 0 ;
    }
  case D3 : // PTA12
    if value {
      GPIOA_PSOR = 1 << 12 ;
    }else{
      GPIOA_PCOR = 1 << 12 ;
    }
  case D4 : // PTA13
    if value {
      GPIOA_PSOR = 1 << 13 ;
    }else{
      GPIOA_PCOR = 1 << 13 ;
    }
  case D5 : // PTD7
    if value {
      GPIOD_PSOR = 1 << 7 ;
    }else{
      GPIOD_PCOR = 1 << 7 ;
    }
  case D6 : // PTD4
    if value {
      GPIOD_PSOR = 1 << 4 ;
    }else{
      GPIOD_PCOR = 1 << 4 ;
    }
  case D7 : // PTD2
    if value {
      GPIOD_PSOR = 1 << 2 ;
    }else{
      GPIOD_PCOR = 1 << 2 ;
    }
  case D8 : // PTD3
    if value {
      GPIOD_PSOR = 1 << 3 ;
    }else{
      GPIOD_PCOR = 1 << 3 ;
    }
  case D9  : // PTC3
    if value {
      GPIOC_PSOR = 1 << 3 ;
    }else{
      GPIOC_PCOR = 1 << 3 ;
    }
  case D10 : // PTC4
    if value {
      GPIOC_PSOR = 1 << 4 ;
    }else{
      GPIOC_PCOR = 1 << 4 ;
    }
  case D11 : // PTC6
    if value {
      GPIOC_PSOR = 1 << 6 ;
    }else{
      GPIOC_PCOR = 1 << 6 ;
    }
  case D12 : // PTC7
    if value {
      GPIOC_PSOR = 1 << 7 ;
    }else{
      GPIOC_PCOR = 1 << 7 ;
    }
  case D13 : // PTC5
    if value {
      GPIOC_PSOR = 1 << 5 ;
    }else{
      GPIOC_PCOR = 1 << 5 ;
    }
  case D14 : // PTD1
    if value {
      GPIOD_PSOR = 1 << 1 ;
    }else{
      GPIOD_PCOR = 1 << 1 ;
    }
  case D15 : // PTC0
    if value {
      GPIOC_PSOR = 1 << 0 ;
    }else{
      GPIOC_PCOR = 1 << 0 ;
    }
  case D16 : // PTB0
    if value {
      GPIOB_PSOR = 1 << 0 ;
    }else{
      GPIOB_PCOR = 1 << 0 ;
    }
  case D17 : // PTB1
    if value {
      GPIOB_PSOR = 1 << 1 ;
    }else{
      GPIOB_PCOR = 1 << 1 ;
    }
  case D18 : // PTB3
    if value {
      GPIOB_PSOR = 1 << 3 ;
    }else{
      GPIOB_PCOR = 1 << 3 ;
    }
  case D19 : // PTB2
    if value {
      GPIOB_PSOR = 1 << 2 ;
    }else{
      GPIOB_PCOR = 1 << 2 ;
    }
  case D20 : // PTD5
    if value {
      GPIOD_PSOR = 1 << 5 ;
    }else{
      GPIOD_PCOR = 1 << 5 ;
    }
  case D21 : // PTD6
    if value {
      GPIOD_PSOR = 1 << 6 ;
    }else{
      GPIOD_PCOR = 1 << 6 ;
    }
  case D22 : // PTC1
    if value {
      GPIOC_PSOR = 1 << 1 ;
    }else{
      GPIOC_PCOR = 1 << 1 ;
    }
  case D23 : // PTC2
    if value {
      GPIOC_PSOR = 1 << 2 ;
    }else{
      GPIOC_PCOR = 1 << 2 ;
    }
  }
}

//··············································································

public func toggle @noUnusedWarning (?port:port $digitalPort) {
  switch port {
  case D0 : // PTB16
    GPIOB_PTOR = 1 << 16 ;
  case D1 : // PTB17
    GPIOB_PTOR = 1 << 17 ;
  case D2 : // PTD0
    GPIOD_PTOR = 1 << 0 ;
  case D3 : // PTA12
    GPIOA_PTOR = 1 << 12 ;
  case D4 : // PTA13
    GPIOA_PTOR = 1 << 13 ;
  case D5 : // PTD7
    GPIOD_PTOR = 1 << 7 ;
  case D6 : // PTD4
    GPIOD_PTOR = 1 << 4 ;
  case D7 : // PTD2
    GPIOD_PTOR = 1 << 2 ;
  case D8 : // PTD3
    GPIOD_PTOR = 1 << 3 ;
  case D9  : // PTC3
    GPIOC_PTOR = 1 << 3 ;
  case D10 : // PTC4
    GPIOC_PTOR = 1 << 4 ;
  case D11 : // PTC6
    GPIOC_PTOR = 1 << 6 ;
  case D12 : // PTC7
    GPIOC_PTOR = 1 << 7 ;
  case D13 : // PTC5
    GPIOC_PTOR = 1 << 5 ;
  case D14 : // PTD1
    GPIOD_PTOR = 1 << 1 ;
  case D15 : // PTC0
    GPIOC_PTOR = 1 << 0 ;
  case D16 : // PTB0
    GPIOB_PTOR = 1 << 0 ;
  case D17 : // PTB1
    GPIOB_PTOR = 1 << 1 ;
  case D18 : // PTB3
    GPIOB_PTOR = 1 << 3 ;
  case D19 : // PTB2
    GPIOB_PTOR = 1 << 2 ;
  case D20 : // PTD5
    GPIOD_PTOR = 1 << 5 ;
  case D21 : // PTD6
    GPIOD_PTOR = 1 << 6 ;
  case D22 : // PTC1
    GPIOC_PTOR = 1 << 1 ;
  case D23 : // PTC2
    GPIOC_PTOR = 1 << 2 ;
  }
}

//——————————————————————————————————————————————————————————————————————————————

public func digitalRead @noUnusedWarning (?port:port $digitalPort) -> $bool {
  switch port {
  case D0 : // PTB16
    result = (GPIOB_PDIR & (1 << 16)) ≠ 0
  case D1 : // PTB17
    result = (GPIOB_PDIR & (1 << 17)) ≠ 0
  case D2 : // PTD0
    result = (GPIOD_PDIR & (1 << 0)) ≠ 0
  case D3 : // PTA12
    result = (GPIOA_PDIR & (1 << 12)) ≠ 0
  case D4 : // PTA13
    result = (GPIOA_PDIR & (1 << 13)) ≠ 0
  case D5 : // PTD7
    result = (GPIOD_PDIR & (1 << 7)) ≠ 0
  case D6 : // PTD4
    result = (GPIOD_PDIR & (1 << 4)) ≠ 0
  case D7 : // PTD2
    result = (GPIOD_PDIR & (1 << 2)) ≠ 0
  case D8 : // PTD3
    result = (GPIOD_PDIR & (1 << 3)) ≠ 0
  case D9  : // PTC3
    result = (GPIOC_PDIR & (1 << 3)) ≠ 0
  case D10 : // PTC4
    result = (GPIOC_PDIR & (1 << 4)) ≠ 0
  case D11 : // PTC6
    result = (GPIOC_PDIR & (1 << 6)) ≠ 0
  case D12 : // PTC7
    result = (GPIOC_PDIR & (1 << 7)) ≠ 0
  case D13 : // PTC5
    result = (GPIOC_PDIR & (1 << 5)) ≠ 0
  case D14 : // PTD1
    result = (GPIOD_PDIR & (1 << 1)) ≠ 0
  case D15 : // PTC0
    result = (GPIOC_PDIR & (1 << 0)) ≠ 0
  case D16 : // PTB0
    result = (GPIOB_PDIR & (1 << 0)) ≠ 0
  case D17 : // PTB1
    result = (GPIOB_PDIR & (1 << 1)) ≠ 0
  case D18 : // PTB3
    result = (GPIOB_PDIR & (1 << 3)) ≠ 0
  case D19 : // PTB2
    result = (GPIOB_PDIR & (1 << 2)) ≠ 0
  case D20 : // PTD5
    result = (GPIOD_PDIR & (1 << 5)) ≠ 0
  case D21 : // PTD6
    result = (GPIOD_PDIR & (1 << 6)) ≠ 0
  case D22 : // PTC1
    result = (GPIOC_PDIR & (1 << 1)) ≠ 0
  case D23 : // PTC2
    result = (GPIOC_PDIR & (1 << 2)) ≠ 0
  }
}

//——————————————————————————————————————————————————————————————————————————————
