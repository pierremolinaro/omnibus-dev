
check target "teensy-3-6/unprivileged"

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

driver time ()

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   TIME (for Cortex M4)
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

driver time > root {
  var mUptime $uint32 = 0

  //····················································································································

  init { // Configure Systick interrupt every ms
    SYST.RVR = F_CPU_MHZ * 1000 - 1 // Interrupt every ms
    SYST.CVR = 0
    SYST.CSR = {SYST.CSR !CLKSOURCE:1 !ENABLE:1 !TICKINT:1}
  }

  //····················································································································
  //   Functions callable in init mode
  //····················································································································

  public func init oneMillisecondBusyWait @noUnusedWarning () {
    while not SYST.CSR.COUNTFLAG.bool {}
  }

  //····················································································································

  public func init busyWaitingDuringMS @noUnusedWarning (?inDelay $uint32) {
    for _ $uint32 in 0 ..< inDelay {
      self.oneMillisecondBusyWait ()
    }
  }

  //····················································································································
  //   Functions callable in panic mode
  //····················································································································

  public func panic panicOneMillisecondBusyWait @noUnusedWarning () {
    while not SYST.CSR.COUNTFLAG.bool {}
  }

  //····················································································································

  public func panic panicBusyWaitingDuringMS @noUnusedWarning (?inDelay $uint32) {
    for _ $uint32 in 0 ..< inDelay {
      self.panicOneMillisecondBusyWait ()
    }
  }

  //····················································································································
  //   systick interrupt service routine
  //····················································································································

  isr service systick {
 //   noteCurrentTaskFreeStackSize ()
    let now = self.mUptime +% 1
    self.mUptime = now
    makeTasksReady (!fromCurrentDate:now)
    notifyChangeForGuardedWaitUntil (!withCurrentDate:now)
  }

  //····················································································································
  //   Primitives callable in user mode
  //····················································································································

  public system primitive wait @noUnusedWarning (?untilDeadline: inDate $uint32) {
    if inDate > self.mUptime {
      block (!onDeadline:inDate)
    }
  }

  //····················································································································

  public system primitive wait @noUnusedWarning (?duringDelay: inDelay $uint32) {
    if inDelay > 0 {
      block (!onDeadline:self.mUptime +% inDelay)
    }
  }

  //····················································································································

  public guard wait @noUnusedWarning (?untilDeadline:inDeadline $uint32) {
//    noteCurrentTaskFreeStackSize ()
    accept = inDeadline ≤ self.mUptime
    if not accept {
      handle (!guardedDeadline:inDeadline)
    }
  }

  //····················································································································
  //   Primitives callable in user mode
  //····················································································································

  public system section now @safe @noUnusedWarning () -> $uint32 {
    result = self.mUptime
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
