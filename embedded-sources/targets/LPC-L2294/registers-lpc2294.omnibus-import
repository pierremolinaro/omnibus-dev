//------------------------------------------------------------------------------

// Vectored $interrupt Controller (VIC)
registers ©VIC @at 0xFFFF_F000 {
  IRQStatus   @offset 0x000 $u32
  FIQStatus   @offset 0x000 $u32
  RawIntr     @offset 0x008 $u32
  IntSelect   @offset 0x00C $u32
  IntEnable   @offset 0x010 $u32
  IntEnClr    @offset 0x014 $u32
  SoftInt     @offset 0x018 $u32
  SoftIntClr  @offset 0x01C $u32
  Protection  @offset 0x020 $u32
  VectAddr    @offset 0x030 $u32
  DefVectAddr @offset 0x034 $u32

  VectAddr0   @offset 0x100 $u32
  VectAddr1   @offset 0x104 $u32
  VectAddr2   @offset 0x108 $u32
  VectAddr3   @offset 0x10C $u32
  VectAddr4   @offset 0x110 $u32
  VectAddr5   @offset 0x114 $u32
  VectAddr6   @offset 0x118 $u32
  VectAddr7   @offset 0x11C $u32
  VectAddr8   @offset 0x120 $u32
  VectAddr9   @offset 0x124 $u32
  VectAddr10  @offset 0x128 $u32
  VectAddr11  @offset 0x12C $u32
  VectAddr12  @offset 0x130 $u32
  VectAddr13  @offset 0x134 $u32
  VectAddr14  @offset 0x138 $u32
  VectAddr15  @offset 0x13C $u32

  VectCntl0   @offset 0x200 $u32
  VectCntl1   @offset 0x204 $u32
  VectCntl2   @offset 0x208 $u32
  VectCntl3   @offset 0x20C $u32
  VectCntl4   @offset 0x210 $u32
  VectCntl5   @offset 0x214 $u32
  VectCntl6   @offset 0x218 $u32
  VectCntl7   @offset 0x21C $u32
  VectCntl8   @offset 0x220 $u32
  VectCntl9   @offset 0x224 $u32
  VectCntl10  @offset 0x228 $u32
  VectCntl11  @offset 0x22C $u32
  VectCntl12  @offset 0x230 $u32
  VectCntl13  @offset 0x234 $u32
  VectCntl14  @offset 0x238 $u32
  VectCntl15  @offset 0x23C $u32
}

//------------------------------------------------------------------------------

// Watchdog
registers ©WD @at 0xE000_0000 {
  MOD            @offset 0x00 $u8
  TC             @offset 0x04 $u32
  FEED           @offset 0x08 $u8
  TV             @offset 0x0C $u32
}

// Pin Connect Block
registers ©PIN @at 0xE002_C000 {
  SEL0        @offset 0x00 $u32
  SEL1        @offset 0x04 $u32
  SEL2        @offset 0x14 $u32
}

// General Purpose Input/Output (GPIO)
registers ©IO0 @at 0xE002_8000 {
  PIN          @offset 0x00 $u32
  SET          @offset 0x04 $u32
  DIR          @offset 0x08 $u32
  CLR          @offset 0x0C $u32
}

registers ©IO1 @at 0xE002_8010 {
  PIN          @offset 0x00 $u32
  SET          @offset 0x04 $u32
  DIR          @offset 0x08 $u32
  CLR          @offset 0x0C $u32
}

registers ©IO2 @at 0xE002_8020 {
  PIN          @offset 0x00 $u32
  SET          @offset 0x04 $u32
  DIR          @offset 0x08 $u32
  CLR          @offset 0x0C $u32
}

registers ©IO3 @at 0xE002_8030 {
  PIN          @offset 0x00 $u32
  SET          @offset 0x04 $u32
  DIR          @offset 0x08 $u32
  CLR          @offset 0x0C $u32
}

// Memory Accelerator Module (MAM)
registers ©MAM @at 0xE01F_C000 {
  CR            @offset 0x00 $u8
  TIM           @offset 0x04 $u8
}

registers ©MEM @at 0xE01F_C000 {
  MAP           @offset 0x40 $u8
}

// Phase Locked Loop (PLL)
registers ©PLL @at 0xE01F_C000 {
  CON           @offset 0x80 $u8
  CFG           @offset 0x84 $u8
  STAT          @offset 0x88 $u16
  FEED          @offset 0x8C $u8
}

// VPB Divider */
registers ©VPB @at 0xE01F_C100 {
  DIV           @offset 0x0 $u8
}

// Power Control */
registers ©PC @at 0xE01F_C0C0 {
  ON             @offset 0x0 $u8
  ONP            @offset 0x4 $u32
}

// External $interrupts
registers ©EXT @at 0xE01F_C140 {
  INT           @offset 0x0 $u8
  WAKE          @offset 0x4 $u8
  MODE          @offset 0x8 $u8
  POLAR         @offset 0xC $u8
}

// Timer 0
registers ©TIMER0 @at 0xE000_4000 {
  IR      @offset 0x00 $u32
  TCR     @offset 0x04 $u32
  TC      @offset 0x08 $u32
  PR      @offset 0x0C $u32
  PC      @offset 0x10 $u32
  MCR     @offset 0x14 $u32
  MR0     @offset 0x18 $u32
  MR1     @offset 0x1C $u32
  MR2     @offset 0x20 $u32
  MR3     @offset 0x24 $u32
  CCR     @offset 0x28 $u32
  CR0     @offset 0x2C $u32
  CR1     @offset 0x30 $u32
  CR2     @offset 0x34 $u32
  CR3     @offset 0x38 $u32
  EMR     @offset 0x3C $u32
}

// Timer 1
registers ©TIMER1 @at 0xE000_8000 {
  IR      @offset 0x00 $u32
  TCR     @offset 0x04 $u32
  TC      @offset 0x08 $u32
  PR      @offset 0x0C $u32
  PC      @offset 0x10 $u32
  MCR     @offset 0x14 $u32
  MR0     @offset 0x18 $u32
  MR1     @offset 0x1C $u32
  MR2     @offset 0x20 $u32
  MR3     @offset 0x24 $u32
  CCR     @offset 0x28 $u32
  CR0     @offset 0x2C $u32
  CR1     @offset 0x30 $u32
  CR2     @offset 0x34 $u32
  CR3     @offset 0x38 $u32
  EMR     @offset 0x3C $u32
}

// Pulse Width Modulator (PWM)
registers ©PWM @at 0xE001_4000 {
  IR         @offset 0x00 $u32
  TCR        @offset 0x04 $u32
  TC         @offset 0x08 $u32
  PR         @offset 0x0C $u32
  PC         @offset 0x10 $u32
  MCR        @offset 0x14 $u32
  MR0        @offset 0x18 $u32
  MR1        @offset 0x1C $u32
  MR2        @offset 0x20 $u32
  MR3        @offset 0x24 $u32
  MR4        @offset 0x40 $u32
  MR5        @offset 0x44 $u32
  MR6        @offset 0x48 $u32
  CCR        @offset 0x28 $u32
  CR0        @offset 0x2C $u32
  CR1        @offset 0x30 $u32
  CR2        @offset 0x34 $u32
  CR3        @offset 0x38 $u32
  EMR        @offset 0x3C $u32
  PCR        @offset 0x4C $u32
  LER        @offset 0x50 $u32
}

// Universal Asynchronous Receiver Transmitter 0 (UART0)
registers ©U0 @at 0xE000_C000 {
  RBR        @offset 0x00 $u8
  THR        @offset 0x00 $u8
  DLL        @offset 0x00 $u8
  DLM        @offset 0x04 $u8
  IER        @offset 0x04 $u32
  IIR        @offset 0x08 $u32
  FCR        @offset 0x08 $u8
  LCR        @offset 0x0C $u8
  LSR        @offset 0x14 $u8
  SCR        @offset 0x1C $u8
  ACR        @offset 0x20 $u32
  FDR        @offset 0x28 $u32
  TER        @offset 0x30 $u8
}

// Universal Asynchronous Receiver Transmitter 1 (UART1)
registers ©U1 @at 0xE001_0000 {
  RBR        @offset 0x00 $u8
  THR        @offset 0x00 $u8
  DLL        @offset 0x00 $u8
  DLM        @offset 0x04 $u8
  IER        @offset 0x04 $u32
  IIR        @offset 0x08 $u32
  FCR        @offset 0x08 $u8
  LCR        @offset 0x0C $u8
  MCR        @offset 0x10 $u8
  LSR        @offset 0x14 $u8
  MSR        @offset 0x18 $u8
  SCR        @offset 0x1C $u8
  ACR        @offset 0x20 $u32
  FDR        @offset 0x28 $u32
  TER        @offset 0x30 $u8
}

// I2C $interface
registers ©I2C @at 0xE001_C000 {
  I2CONSET     @offset 0x00 $u8
  I2STAT       @offset 0x04 $u8
  I2DAT        @offset 0x08 $u8
  I2ADR        @offset 0x0C $u8
  I2SCLH       @offset 0x10 $u16
  I2SCLL       @offset 0x14 $u16
  I2CONCLR     @offset 0x18 $u8
}

// SPI 0 (Serial Peripheral $interface 0)
registers ©SPI0 @at 0xE002_0000 {
  SPCR          @offset 0x00 $u16
  SPSR          @offset 0x04 $u8
  SPDR          @offset 0x08 $u16
  SPCCR         @offset 0x0C $u8
  // SPTCR        @offset 0x10 $u8
  // SPTSR        @offset 0x14 $u8
  // SPTOR        @offset 0x18 $u8
  SPINT         @offset 0x1C $u8
}

// SPI 1 (Serial Peripheral $interface 1)
registers ©SPI1 @at 0xE003_0000 {
  SPCR          @offset 0x00 $u16
  SPSR          @offset 0x04 $u8
  SPDR          @offset 0x08 $u16
  SPCCR         @offset 0x0C $u8
  // SPTCR        @offset 0x10 $u8
  // SPTSR        @offset 0x14 $u8
  // SPTOR        @offset 0x18 $u8
  SPINT         @offset 0x1C $u8
}

// Real Time Clock
registers ©RTC @at 0xE002_4000 {
  ILR          @offset 0x00 $u8
  CTC          @offset 0x04 $u16
  CCR          @offset 0x08 $u8
  CIIR         @offset 0x0C $u8
  AMR          @offset 0x10 $u8
  CTIME0       @offset 0x14 $u32
  CTIME1       @offset 0x18 $u32
  CTIME2       @offset 0x1C $u32
  SEC          @offset 0x20 $u8
  MIN          @offset 0x24 $u8
  HOUR         @offset 0x28 $u8
  DOM          @offset 0x2C $u8
  DOW          @offset 0x30 $u8
  DOY          @offset 0x34 $u16
  MONTH        @offset 0x38 $u8
  YEAR         @offset 0x3C $u16
  ALSEC        @offset 0x60 $u8
  ALMIN        @offset 0x64 $u8
  ALHOUR       @offset 0x68 $u8
  ALDOM        @offset 0x6C $u8
  ALDOW        @offset 0x70 $u8
  ALDOY        @offset 0x74 $u16
  ALMON        @offset 0x78 $u8
  ALYEAR       @offset 0x7C $u16
  PREINT       @offset 0x80 $u16
  PREFRAC      @offset 0x84 $u16
}

// Bank Configuration registers
registers ©BCF @at 0xFFE0_0000 {
  G0          @offset 0x00 $u32
  G1          @offset 0x04 $u32
  G2          @offset 0x08 $u32
  G3          @offset 0x0C $u32
}

// CAN Controllers
registers ©CAN @at 0xE004_4000 {
  CMR [4 @offset 0x4 @inc 1 << 14] $u8 {
    STB3, STB2, STB1, SRR, CDO, RRB, AT, TR
  }
//  AMFR          @offset 0xE003_C000 $u32
//  SFF_SA        @offset 0xE003_C004 $u32
//  SFF_GRP_SA    0xE003_C008 $u32
//  EFF_SA        0xE003_C00C $u32
//  EFF_GRP_SA    0xE003_C010 $u32
//  END_OF_TABLES 0xE003_C014 $u32
}

// Analog/Digital Converter (ADC)
registers ©AD @at 0xE003_4000 {
  CR           @offset 0x00 $u32
  GDR          @offset 0x04 $u32
  INTEN        @offset 0x0C $u32
}

//------------------------------------------------------------------------------
