/*--------------------------------------------------------------------------------------------------------------------*/
/*                                                                                                                    */
/*                                   Memory                                                                           */
/*                                                                                                                    */
/*--------------------------------------------------------------------------------------------------------------------*/

MEMORY {
  flash (rx) : ORIGIN = 0, LENGTH = 248k 
  internalRam (rwx) : ORIGIN = 0x40000000, LENGTH = 16k 
  externalRam (rwx) : ORIGIN = 0x81000000, LENGTH = 1M 
}

/*--------------------------------------------------------------------------------------------------------------------*/

__internalRam_end = 0x40000000 + 16k ;
__externalRam_end = 0x81000000 + 1M ;

/*--------------------------------------------------------------------------------------------------------------------*/
/*                                                                                                                    */
/*                                ISR Vectors                                                                         */
/*                                                                                                                    */
/*--------------------------------------------------------------------------------------------------------------------*/

SECTIONS {
  .vectors : {
    __vectors_start = . ;
    KEEP (*(.isr_vector)) ;
    __vectors_end = . ;
  } > internalRam
}

/*--------------------------------------------------------------------------------------------------------------------*/
/*                                                                                                                    */
/*                                    Code                                                                            */
/*                                                                                                                    */
/*--------------------------------------------------------------------------------------------------------------------*/

SECTIONS {
  .text : {
    FILL(0xff)
    __code_start = . ;
  /*--- Code */
    *(.text.*) ;
    *(.text) ;
    *(text) ;
    *(.gnu.linkonce.t.*) ;
  /*---- ROM data ----*/
    . = ALIGN(4);
    *(.rodata);
    . = ALIGN(4);
    *(.rodata*);
    . = ALIGN(4);
    *(.gnu.linkonce.r.*);
    . = ALIGN(4);
    *(.glue_7t);
    . = ALIGN(4);
    *(.glue_7);
    . = ALIGN(4);
    __code_end = . ;
  } > externalRam

  /DISCARD/ : {
    *(rel.ARM.*);
    *(.ARM.*);
    *(.gnu.linkonce.armexidx.*);
  }
}

/*--------------------------------------------------------------------------------------------------------------------*/
/*                                                                                                                    */
/*                          Data (initialized data)                                                                   */
/*                                                                                                                    */
/*--------------------------------------------------------------------------------------------------------------------*/

SECTIONS {
  .data : {
    FILL (0xFF)
    . = ALIGN (4) ;
    __data_start = . ;
    * (.data.*init*) ;
    * (.data*) ;
    . = ALIGN (4) ;
    __data_end = . ;
  } > externalRam AT > flash
}


/*--------------------------------------------------------------------------------------------------------------------*/

__data_load_start = LOADADDR (.data) ;
__data_load_end   = LOADADDR (.data) + SIZEOF (.data) ;

/*--------------------------------------------------------------------------------------------------------------------*/
/*                                                                                                                    */
/*                          BSS (zero initialized data)                                                               */
/*                                                                                                                    */
/*--------------------------------------------------------------------------------------------------------------------*/

SECTIONS {
  .bss : {
    . = ALIGN(4);
    __bss_start = . ;
    * (.bss.*) ;
    * (.bss) ;
    * (COMMON) ;
    . = ALIGN(4);
    __bss_end = . ;
  } > externalRam
}

/*--------------------------------------------------------------------------------------------------------------------*/
/*                                                                                                                    */
/*                                Stacks                                                                              */
/*                                                                                                                    */
/*--------------------------------------------------------------------------------------------------------------------*/

SECTIONS {
  .stacks :{
    . = ALIGN (4) ;
    . += 1k ;
    . = ALIGN (4) ;
    __irq_stack_end = . ;
    __svc_stack_end = . ;
  } > externalRam
}

/*--------------------------------------------------------------------------------------------------------------------*/

SECTIONS {
  .stacks :{
    . = ALIGN (4) ;
    . += 1k ;
    . = ALIGN (4) ;
    __und_stack_end = . ;
  } > externalRam
}

/*--------------------------------------------------------------------------------------------------------------------*/

SECTIONS {
  .stacks :{
    . = ALIGN (4) ;
    . += 512 ;
    . = ALIGN (4) ;
    __abt_stack_end = . ;
  } > externalRam
}

/*--------------------------------------------------------------------------------------------------------------------*/

SECTIONS {
  .stacks :{
    . = ALIGN (4) ;
    . += 512 ;
    . = ALIGN (4) ;
    __fiq_stack_end = . ;
  } > externalRam
}

/*--------------------------------------------------------------------------------------------------------------------*/
/*                                                                                                                    */
/*                                    Heap                                                                            */
/*                                                                                                                    */
/*--------------------------------------------------------------------------------------------------------------------*/

SECTIONS {
  .heap : {
    . = ALIGN (4) ;
    __heap_start = . ;
  } > externalRam
}

/*--------------------------------------------------------------------------------------------------------------------*/

__heap_end = __externalRam_end ;

/*--------------------------------------------------------------------------------------------------------------------*/
