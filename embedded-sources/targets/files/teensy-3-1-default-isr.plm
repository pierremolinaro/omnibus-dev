//-----------------------------------------------------------------------------*

required proc NMIHandler `isr ()

proc NMIHandler `isr @nullOnNoException @weak () {
  panic 2
}

//-----------------------------------------------------------------------------*

required proc HardFaultHandler `isr ()

proc HardFaultHandler `isr @nullOnNoException @weak () {
  panic 3
}

//-----------------------------------------------------------------------------*

required proc MemManageHandler `isr ()

proc MemManageHandler `isr @nullOnNoException @weak () {
  panic 4
}

//-----------------------------------------------------------------------------*

required proc BusFaultHandler `isr ()

proc BusFaultHandler `isr @nullOnNoException @weak () {
  panic 5
}

//-----------------------------------------------------------------------------*

required proc UsageFaultHandler `isr ()

proc UsageFaultHandler `isr @nullOnNoException @weak () {
  panic 6
}

//-----------------------------------------------------------------------------*

required proc svcHandler `isr ()

proc svcHandler `isr @nullOnNoException @weak () {
  panic 11
}

//-----------------------------------------------------------------------------*

required proc DebugMonitorHandler `isr ()

proc DebugMonitorHandler `isr @nullOnNoException @weak () {
  panic 12
}

//-----------------------------------------------------------------------------*

required proc PendSVHandler `isr ()

proc PendSVHandler `isr @nullOnNoException @weak () {
  panic 14
}

//-----------------------------------------------------------------------------*

init 0 { // Configure Systick interrupt every ms
  SYST_RVR = 96000 - 1 // Interrupt every 96000 core clocks, i.e. every ms
  SYST_CVR = 0
  SYST_CSR = SYST_CSR::CLKSOURCE | SYST_CSR::TICKINT | SYST_CSR::ENABLE
}

var gCompteur $uint32 = 0 {
  @rw proc systickHandler ()
  proc waitMS (?inDuration $uint32)
  proc busyWaitingDuringMS (?inDuration $uint32)
}

proc busyWaitingDuringMS `init @noWarningIfUnused (?inDuration $uint32) {
  let deadline = gCompteur + inDuration
  while gCompteur < deadline do
  end
}

required proc systickHandler `isr ()

proc systickHandler `isr () {
  gCompteur &++
  userSystickHandler ()
}

proc userSystickHandler `isr @weak () {
}

proc waitMS `user `init @noWarningIfUnused (?inDuration $uint32) {
  let deadline = gCompteur + inDuration
  while gCompteur < deadline do
  end
}

//-----------------------------------------------------------------------------*

required proc DMAChannel0TranfertCompleteHandler `isr ()

proc DMAChannel0TranfertCompleteHandler `isr @nullOnNoException @weak () {
  panic 16
}

//-----------------------------------------------------------------------------*

required proc DMAChannel1TranfertCompleteHandler `isr ()

proc DMAChannel1TranfertCompleteHandler `isr @nullOnNoException @weak () {
  panic 17
}

//-----------------------------------------------------------------------------*

required proc DMAChannel2TranfertCompleteHandler `isr ()

proc DMAChannel2TranfertCompleteHandler `isr @nullOnNoException @weak () {
  panic 18
}

//-----------------------------------------------------------------------------*

required proc DMAChannel3TranfertCompleteHandler `isr ()

proc DMAChannel3TranfertCompleteHandler `isr @nullOnNoException @weak () {
  panic 19
}

//-----------------------------------------------------------------------------*

required proc DMAChannel4TranfertCompleteHandler `isr ()

proc DMAChannel4TranfertCompleteHandler `isr @nullOnNoException @weak () {
  panic 20
}

//-----------------------------------------------------------------------------*

required proc DMAChannel5TranfertCompleteHandler `isr ()

proc DMAChannel5TranfertCompleteHandler `isr @nullOnNoException @weak () {
  panic 21
}

//-----------------------------------------------------------------------------*

required proc DMAChannel6TranfertCompleteHandler `isr ()

proc DMAChannel6TranfertCompleteHandler `isr @nullOnNoException @weak () {
  panic 22
}

//-----------------------------------------------------------------------------*

required proc DMAChannel7TranfertCompleteHandler `isr ()

proc DMAChannel7TranfertCompleteHandler `isr @nullOnNoException @weak () {
  panic 23
}

//-----------------------------------------------------------------------------*

required proc DMAChannel8TranfertCompleteHandler `isr ()

proc DMAChannel8TranfertCompleteHandler `isr @nullOnNoException @weak () {
  panic 24
}

//-----------------------------------------------------------------------------*

required proc DMAChannel9TranfertCompleteHandler `isr ()

proc DMAChannel9TranfertCompleteHandler `isr @nullOnNoException @weak () {
  panic 25
}

//-----------------------------------------------------------------------------*

required proc DMAChannel10TranfertCompleteHandler `isr ()

proc DMAChannel10TranfertCompleteHandler `isr @nullOnNoException @weak () {
  panic 26
}

//-----------------------------------------------------------------------------*

required proc DMAChannel11TranfertCompleteHandler `isr ()

proc DMAChannel11TranfertCompleteHandler `isr @nullOnNoException @weak () {
  panic 27
}

//-----------------------------------------------------------------------------*

required proc DMAChannel12TranfertCompleteHandler `isr ()

proc DMAChannel12TranfertCompleteHandler `isr @nullOnNoException @weak () {
  panic 28
}

//-----------------------------------------------------------------------------*

required proc DMAChannel13TranfertCompleteHandler `isr ()

proc DMAChannel13TranfertCompleteHandler `isr @nullOnNoException @weak () {
  panic 29
}

//-----------------------------------------------------------------------------*

required proc DMAChannel14TranfertCompleteHandler `isr ()

proc DMAChannel14TranfertCompleteHandler `isr @nullOnNoException @weak () {
  panic 30
}

//-----------------------------------------------------------------------------*

required proc DMAChannel15TranfertCompleteHandler `isr ()

proc DMAChannel15TranfertCompleteHandler `isr @nullOnNoException @weak () {
  panic 31
}

//-----------------------------------------------------------------------------*

required proc DMAErrorHandler `isr ()

proc DMAErrorHandler `isr @nullOnNoException @weak () {
  panic 32
}

//-----------------------------------------------------------------------------*

required proc flashMemoryCommandCompleteHandler `isr ()

proc flashMemoryCommandCompleteHandler `isr @nullOnNoException @weak () {
  panic 34
}

//-----------------------------------------------------------------------------*

required proc flashMemoryReadCollisionHandler `isr ()

proc flashMemoryReadCollisionHandler `isr @nullOnNoException @weak () {
  panic 35
}

//-----------------------------------------------------------------------------*

required proc modeControllerHandler `isr ()

proc modeControllerHandler `isr @nullOnNoException @weak () {
  panic 36
}

//-----------------------------------------------------------------------------*

required proc LLWUHandler `isr ()

proc LLWUHandler `isr @nullOnNoException @weak () {
  panic 37
}

//-----------------------------------------------------------------------------*

required proc WDOGEWMHandler `isr ()

proc WDOGEWMHandler `isr @nullOnNoException @weak () {
  panic 38
}

//-----------------------------------------------------------------------------*

required proc I2C0Handler `isr ()

proc I2C0Handler `isr @nullOnNoException @weak () {
  panic 40
}

//-----------------------------------------------------------------------------*

required proc I2C1Handler `isr ()

proc I2C1Handler `isr @nullOnNoException @weak () {
  panic 41
}

//-----------------------------------------------------------------------------*

required proc SPI0Handler `isr ()

proc SPI0Handler `isr @nullOnNoException @weak () {
  panic 42
}

//-----------------------------------------------------------------------------*

required proc SPI1Handler `isr ()

proc SPI1Handler `isr @nullOnNoException @weak () {
  panic 43
}

//-----------------------------------------------------------------------------*

required proc CAN0MessageBufferHandler `isr ()

proc CAN0MessageBufferHandler `isr @nullOnNoException @weak () {
  panic 45
}

//-----------------------------------------------------------------------------*

required proc CAN0BusOffHandler `isr ()

proc CAN0BusOffHandler `isr @nullOnNoException @weak () {
  panic 46
}

//-----------------------------------------------------------------------------*

required proc CAN0ErrorHandler `isr ()

proc CAN0ErrorHandler `isr @nullOnNoException @weak () {
  panic 47
}

//-----------------------------------------------------------------------------*

required proc CAN0TransmitWarningHandler `isr ()

proc CAN0TransmitWarningHandler `isr @nullOnNoException @weak () {
  panic 48
}

//-----------------------------------------------------------------------------*

required proc CAN0ReceiveWarningHandler `isr ()

proc CAN0ReceiveWarningHandler `isr @nullOnNoException @weak () {
  panic 49
}

//-----------------------------------------------------------------------------*

required proc CAN0WakeUpHandler `isr ()

proc CAN0WakeUpHandler `isr @nullOnNoException @weak () {
  panic 50
}

//-----------------------------------------------------------------------------*

required proc I2S0TransmitHandler `isr ()

proc I2S0TransmitHandler `isr @nullOnNoException @weak () {
  panic 51
}

//-----------------------------------------------------------------------------*

required proc I2S0ReceiveHandler `isr ()

proc I2S0ReceiveHandler `isr @nullOnNoException @weak () {
  panic 52
}

//-----------------------------------------------------------------------------*

required proc UART0LONHandler `isr ()

proc UART0LONHandler `isr @nullOnNoException @weak () {
  panic 60
}

//-----------------------------------------------------------------------------*

required proc UART0StatusHandler `isr ()

proc UART0StatusHandler `isr @nullOnNoException @weak () {
  panic 61
}

//-----------------------------------------------------------------------------*

required proc UART0ErrorHandler `isr ()

proc UART0ErrorHandler `isr @nullOnNoException @weak () {
  panic 62
}

//-----------------------------------------------------------------------------*

required proc UART1StatusHandler `isr ()

proc UART1StatusHandler `isr @nullOnNoException @weak () {
  panic 63
}

//-----------------------------------------------------------------------------*

required proc UART1ErrorHandler `isr ()

proc UART1ErrorHandler `isr @nullOnNoException @weak () {
  panic 64
}

//-----------------------------------------------------------------------------*

required proc UART2StatusHandler `isr ()

proc UART2StatusHandler `isr @nullOnNoException @weak () {
  panic 64
}

//-----------------------------------------------------------------------------*

required proc UART2ErrorHandler `isr ()

proc UART2ErrorHandler `isr @nullOnNoException @weak () {
  panic 65
}

//-----------------------------------------------------------------------------*

required proc ADC0Handler `isr ()

proc ADC0Handler `isr @nullOnNoException @weak () {
  panic 73
}

//-----------------------------------------------------------------------------*

required proc ADC1Handler `isr ()

proc ADC1Handler `isr @nullOnNoException @weak () {
  panic 74
}

//-----------------------------------------------------------------------------*

required proc CMP0Handler `isr ()

proc CMP0Handler `isr @nullOnNoException @weak () {
  panic 75
}

//-----------------------------------------------------------------------------*

required proc CMP1Handler `isr ()

proc CMP1Handler `isr @nullOnNoException @weak () {
  panic 76
}

//-----------------------------------------------------------------------------*

required proc CMP2Handler `isr ()

proc CMP2Handler `isr @nullOnNoException @weak () {
  panic 77
}

//-----------------------------------------------------------------------------*

required proc FMT0Handler `isr ()

proc FMT0Handler `isr @nullOnNoException @weak () {
  panic 78
}

//-----------------------------------------------------------------------------*

required proc FMT1Handler `isr ()

proc FMT1Handler `isr @nullOnNoException @weak () {
  panic 79
}

//-----------------------------------------------------------------------------*

required proc FMT2Handler `isr ()

proc FMT2Handler `isr @nullOnNoException @weak () {
  panic 80
}

//-----------------------------------------------------------------------------*

required proc CMTHandler `isr ()

proc CMTHandler `isr @nullOnNoException @weak () {
  panic 81
}

//-----------------------------------------------------------------------------*

required proc RTCAlarmHandler `isr ()

proc RTCAlarmHandler `isr @nullOnNoException @weak () {
  panic 82
}

//-----------------------------------------------------------------------------*

required proc RTCSecondHandler `isr ()

proc RTCSecondHandler `isr @nullOnNoException @weak () {
  panic 83
}

//-----------------------------------------------------------------------------*

required proc PITChannel0Handler `isr ()

proc PITChannel0Handler `isr @nullOnNoException @weak () {
  panic 84
}

//-----------------------------------------------------------------------------*

required proc PITChannel1Handler `isr ()

proc PITChannel1Handler `isr @nullOnNoException @weak () {
  panic 85
}

//-----------------------------------------------------------------------------*

required proc PITChannel2Handler `isr ()

proc PITChannel2Handler `isr @nullOnNoException @weak () {
  panic 86
}

//-----------------------------------------------------------------------------*

required proc PITChannel3Handler `isr ()

proc PITChannel3Handler `isr @nullOnNoException @weak () {
  panic 87
}

//-----------------------------------------------------------------------------*

required proc PDBHandler `isr ()

proc PDBHandler `isr @nullOnNoException @weak () {
  panic 88
}

//-----------------------------------------------------------------------------*

required proc USBOTGHandler `isr ()

proc USBOTGHandler `isr @nullOnNoException @weak () {
  panic 89
}

//-----------------------------------------------------------------------------*

required proc USBChargerDetectHandler `isr ()

proc USBChargerDetectHandler `isr @nullOnNoException @weak () {
  panic 90
}

//-----------------------------------------------------------------------------*

required proc DAC0Handler `isr ()

proc DAC0Handler `isr @nullOnNoException @weak () {
  panic 97
}

//-----------------------------------------------------------------------------*

required proc TSIHandler `isr ()

proc TSIHandler `isr @nullOnNoException @weak () {
  panic 99
}

//-----------------------------------------------------------------------------*

required proc MCGHandler `isr ()

proc MCGHandler `isr @nullOnNoException @weak () {
  panic 100
}

//-----------------------------------------------------------------------------*

required proc lowPowerTimerHandler `isr ()

proc lowPowerTimerHandler `isr @nullOnNoException @weak () {
  panic 101
}

//-----------------------------------------------------------------------------*

required proc pinDetectPortAHandler `isr ()

proc pinDetectPortAHandler `isr @nullOnNoException @weak () {
  panic 103
}

//-----------------------------------------------------------------------------*

required proc pinDetectPortBHandler `isr ()

proc pinDetectPortBHandler `isr @nullOnNoException @weak () {
  panic 104
}

//-----------------------------------------------------------------------------*

required proc pinDetectPortCHandler `isr ()

proc pinDetectPortCHandler `isr @nullOnNoException @weak () {
  panic 105
}

//-----------------------------------------------------------------------------*

required proc pinDetectPortDHandler `isr ()

proc pinDetectPortDHandler `isr @nullOnNoException @weak () {
  panic 106
}

//-----------------------------------------------------------------------------*

required proc pinDetectPortEHandler `isr ()

proc pinDetectPortEHandler `isr @nullOnNoException @weak () {
  panic 107
}

//-----------------------------------------------------------------------------*

required proc softwareInterruptHandler `isr ()

proc softwareInterruptHandler `isr @nullOnNoException @weak () {
  panic 110
}

//-----------------------------------------------------------------------------*
