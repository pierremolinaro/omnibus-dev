//-----------------------------------------------------------------------------*
//   SYNCHRONIZATION TOOLS ROUTINES                                            *
//-----------------------------------------------------------------------------*

opaqueType $taskList @instantiable : 32

//--- Block running task
extern proc blockInList `kernel (?!list:ioWaitingList $taskList)

extern proc blockOnDeadline `kernel (?deadline:inDeadlineMS $uint32) 

//--- Make task Ready
extern proc makeTaskReady `kernel (
  ?!list:ioWaitingList $taskList
  !found:outFound $bool
)

extern proc makeTasksReadyFromCurrentDate `isr (?currentDate:inCurrentDate $uint32)

//-----------------------------------------------------------------------------*
//   GUARD                                                                     *
//-----------------------------------------------------------------------------*

opaqueType $guardList @instantiable : 32

extern proc tickHandlerForGuardedWaitUntil `isr (?currentDate:inCurrentDate $uint32)

extern proc handleGuardedCommand `guard (?!guard:ioGuard $guardList)

extern proc handleGuardedWaitUntil `guard (?deadline:inDeadlineMS $uint32)

extern proc guardDidChange `kernel (?!guard:ioGuard $guardList)

//-----------------------------------------------------------------------------*

init 0 { // Configure Systick interrupt every ms
  SYST_RVR = 96000 - 1 // Interrupt every 96000 core clocks, i.e. every ms
  SYST_CVR = 0
  SYST_CSR = SYST_CSR::CLKSOURCE | SYST_CSR::TICKINT | SYST_CSR::ENABLE
}

//-----------------------------------------------------------------------------*

var gUptimeMS $uint32 = 0 {
  @rw proc systickHandler
  proc busyWaitingDuringMS
  func millis
}

//-----------------------------------------------------------------------------*

func millis `isr `kernel `user `guard @noWarningIfUnused () -> $uint32 {
  result = gUptimeMS
}

//-----------------------------------------------------------------------------*

proc busyWaitingDuringMS `init @noWarningIfUnused (?inDuration $uint32) {
  let deadline = gUptimeMS + inDuration
  while gUptimeMS < deadline do
  end
}

//-----------------------------------------------------------------------------*

required proc systickHandler `isr ()

proc systickHandler `isr @global () {
  gUptimeMS +%= 1
  makeTasksReadyFromCurrentDate (!currentDate:millis ())
  tickHandlerForGuardedWaitUntil (!currentDate:millis ())
  userSystickHandler ()
}

proc userSystickHandler `isr @weak () {
}

//-----------------------------------------------------------------------------*

service waitUntilMS `kernel @noWarningIfUnused (?deadline: inDate $uint32) {
  if inDate > millis () then
    blockOnDeadline (!deadline:inDate)
  end
}

//-----------------------------------------------------------------------------*

proc waitDuringMS `user @noWarningIfUnused (?delay: inDelay $uint32) {
  waitUntilMS (!deadline:millis () + inDelay)
}

//-----------------------------------------------------------------------------*

guard waitUntilMS @noWarningIfUnused (?deadline:inDeadline $uint32) {
  accepted = inDeadline <= millis ()
  if not accepted then
    handleGuardedWaitUntil (!deadline:inDeadline)
  end
}

//-----------------------------------------------------------------------------*
