//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

check target "teensy-3-1/unprivileged"

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

registers @user PORTA (PCR, GPCLR, GPCHR)
registers @user PORTB (PCR, GPCLR, GPCHR)
registers @user PORTC (PCR, GPCLR, GPCHR)
registers @user PORTD (PCR, GPCLR, GPCHR)

registers @user GPIOA (PDOR, PSOR, PCOR, PTOR, PDDR)
registers @user GPIOB (PDOR, PSOR, PCOR, PTOR, PDDR)
registers @user GPIOC (PDOR, PSOR, PCOR, PTOR, PDDR)
registers @user GPIOD (PDOR, PSOR, PCOR, PTOR, PDDR)

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum DigitalPort {
  case D0  // PTB16
  case D1  // PTB17
  case D2  // PTD0
  case D3  // PTA12
  case D4  // PTA13
  case D5  // PTD7
  case D6  // PTD4
  case D7  // PTD2
  case D8  // PTD3
  case D9  // PTC3
  case D10 // PTC4
  case D11 // PTC6
  case D12 // PTC7
  case D13 // PTC5
  case D14 // PTD1
  case D15 // PTC0
  case D16 // PTB0
  case D17 // PTB1
  case D18 // PTB3
  case D19 // PTB2
  case D20 // PTD5
  case D21 // PTD6
  case D22 // PTC1
  case D23 // PTC2
}

//··············································································

enum DigitalMode {
  case OUTPUT
  case OUTPUT_OPEN_COLLECTOR
  case INPUT
  case INPUT_PULLUP
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

driver digital ()

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

driver digital > root {

  //··············································································
  // By default, the 32 PORTA:PCR registers are not accessible in user mode
  // Their adresses : 0x4004_9000 --> 0x4004_907C
  // This corresponds to AIPS slot 73 (§4.5.1)
  // By default, the 32 PORTB:PCR registers are not accessible in user mode
  // Their adresses : 0x4004_A000 --> 0x4004_A07C
  // This corresponds to AIPS slot 74 (§4.5.1)
  // By default, the 32 PORTC:PCR registers are not accessible in user mode
  // Their adresses : 0x4004_B000 --> 0x4004_B07C
  // This corresponds to AIPS slot 75 (§4.5.1)
  // By default, the 32 PORTD:PCR registers are not accessible in user mode
  // Their adresses : 0x4004_C000 --> 0x4004_C07C
  // This corresponds to AIPS slot 76 (§4.5.1)
  //··············································································

  boot { // See §19.2.2 page 351
  // Slot 73 is accessible in user mode by resetting bits 27:24 of AIPS0.PACRJ
  // Slot 74 is accessible in user mode by resetting bits 23:20 of AIPS0.PACRJ
  // Slot 75 is accessible in user mode by resetting bits 19:16 of AIPS0.PACRJ
  // Slot 76 is accessible in user mode by resetting bits 15:12 of AIPS0.PACRJ
  // Simplification: all bits of AIPS0.PACRJ are reseted
    $(AIPS0:PACRJ) = 0
  }

  //··············································································

  public func set safe @noUnusedWarning (?mode:mode : DigitalMode
                                         ?toPort:port : DigitalPort) {
  //--- Set config and dir to apply
   var config : UInt32
    var dir : UInt1
    switch mode {
    case OUTPUT :
      config = ${PORTC:PCR !MUX:1}
      dir = 1
    case OUTPUT_OPEN_COLLECTOR :
      config = ${PORTC:PCR !MUX:1 !ODE:1}
      dir = 1
    case INPUT :
      config = ${PORTC:PCR !MUX:1}
      dir = 0
    case INPUT_PULLUP :
      config = ${PORTC:PCR !MUX:1 !PE:1 !PS:1}
      dir = 0
    }
  //---Apply
    switch port {
    case D0 : // PTB16
      $(PORTB:PCR [16]) = config
      $(GPIOB:PDDR @bit 16) = dir
    case D1 : // PTB17
      $(PORTB:PCR [17]) = config
      $(GPIOB:PDDR @bit 17) = dir
    case D2 : // PTD0
      $(PORTD:PCR [0]) = config
      $(GPIOD:PDDR @bit 0) = dir
    case D3 : // PTA12
      $(PORTA:PCR [12]) = config
      $(GPIOA:PDDR @bit 12) = dir
    case D4 : // PTA13
      $(PORTA:PCR [13]) = config
      $(GPIOA:PDDR @bit 13) = dir
    case D5 : // PTD7
      $(PORTD:PCR [7]) = config
      $(GPIOD:PDDR @bit 7) = dir
    case D6 : // PTD4
      $(PORTD:PCR [4]) = config
      $(GPIOD:PDDR @bit 4) = dir
    case D7 : // PTD2
      $(PORTD:PCR [2]) = config
      $(GPIOD:PDDR @bit 2) = dir
    case D8 : // PTD3
      $(PORTD:PCR [3]) = config
      $(GPIOD:PDDR @bit 3) = dir
    case D9  : // PTC3
      $(PORTC:PCR [3]) = config
      $(GPIOC:PDDR @bit 3) = dir
    case D10 : // PTC4
      $(PORTC:PCR [4]) = config
      $(GPIOC:PDDR @bit 4) = dir
    case D11 : // PTC6
      $(PORTC:PCR [6]) = config
      $(GPIOC:PDDR @bit 6) = dir
    case D12 : // PTC7
      $(PORTC:PCR [7]) = config
      $(GPIOC:PDDR @bit 7) = dir
    case D13 : // PTC5
      $(PORTC:PCR [5]) = config
      $(GPIOC:PDDR @bit 5) = dir
    case D14 : // PTD1
      $(PORTD:PCR [1]) = config
      $(GPIOD:PDDR @bit 1) = dir
    case D15 : // PTC0
      $(PORTC:PCR [0]) = config
      $(GPIOC:PDDR @bit 0) = dir
    case D16 : // PTB0
      $(PORTB:PCR [0]) = config
      $(GPIOB:PDDR @bit 0) = dir
    case D17 : // PTB1
      $(PORTB:PCR [1]) = config
      $(GPIOB:PDDR @bit 1) = dir
    case D18 : // PTB3
      $(PORTB:PCR [3]) = config
      $(GPIOB:PDDR @bit 3) = dir
    case D19 : // PTB2
      $(PORTB:PCR [2]) = config
      $(GPIOB:PDDR @bit 2) = dir
    case D20 : // PTD5
      $(PORTD:PCR [5]) = config
      $(GPIOD:PDDR @bit 5) = dir
    case D21 : // PTD6
      $(PORTD:PCR [6]) = config
      $(GPIOD:PDDR @bit 6) = dir
    case D22 : // PTC1
      $(PORTC:PCR [1]) = config
      $(GPIOC:PDDR @bit 1) = dir
    case D23 : // PTC2
      $(PORTC:PCR [2]) = config
      $(GPIOC:PDDR @bit 2) = dir
    }
  }

  //··············································································

  public func write safe @noUnusedWarning (?value : Bool
                                           ?toPort: port : DigitalPort) {
    switch port {
    case D0 : // PTB16
      if value {
        $(GPIOB:PSOR) = 1 << 16
      }else{
        $(GPIOB:PCOR) = 1 << 16
      }
    case D1 : // PTB17
      if value {
        $(GPIOB:PSOR) = 1 << 17
      }else{
        $(GPIOB:PCOR) = 1 << 17
      }
    case D2 : // PTD0
      if value {
        $(GPIOD:PSOR) = 1 << 0
      }else{
        $(GPIOD:PCOR) = 1 << 0
      }
    case D3 : // PTA12
      if value {
        $(GPIOA:PSOR) = 1 << 12
      }else{
        $(GPIOA:PCOR) = 1 << 12
      }
    case D4 : // PTA13
      if value {
        $(GPIOA:PSOR) = 1 << 13
      }else{
        $(GPIOA:PCOR) = 1 << 13
      }
    case D5 : // PTD7
      if value {
        $(GPIOD:PSOR) = 1 << 7
      }else{
        $(GPIOD:PCOR) = 1 << 7
      }
    case D6 : // PTD4
      if value {
        $(GPIOD:PSOR) = 1 << 4
      }else{
        $(GPIOD:PCOR) = 1 << 4
      }
    case D7 : // PTD2
      if value {
        $(GPIOD:PSOR) = 1 << 2
      }else{
        $(GPIOD:PCOR) = 1 << 2
      }
    case D8 : // PTD3
      if value {
        $(GPIOD:PSOR) = 1 << 3
      }else{
        $(GPIOD:PCOR) = 1 << 3
      }
    case D9  : // PTC3
      if value {
        $(GPIOC:PSOR) = 1 << 3
      }else{
        $(GPIOC:PCOR) = 1 << 3
      }
    case D10 : // PTC4
      if value {
        $(GPIOC:PSOR) = 1 << 4
      }else{
        $(GPIOC:PCOR) = 1 << 4
      }
    case D11 : // PTC6
      if value {
        $(GPIOC:PSOR) = 1 << 6
      }else{
        $(GPIOC:PCOR) = 1 << 6
      }
    case D12 : // PTC7
      if value {
        $(GPIOC:PSOR) = 1 << 7
      }else{
        $(GPIOC:PCOR) = 1 << 7
      }
    case D13 : // PTC5
      if value {
        $(GPIOC:PSOR) = 1 << 5
      }else{
        $(GPIOC:PCOR) = 1 << 5
      }
    case D14 : // PTD1
      if value {
        $(GPIOD:PSOR) = 1 << 1
      }else{
        $(GPIOD:PCOR) = 1 << 1
      }
    case D15 : // PTC0
      if value {
        $(GPIOC:PSOR) = 1 << 0
      }else{
        $(GPIOC:PCOR) = 1 << 0
      }
    case D16 : // PTB0
      if value {
        $(GPIOB:PSOR) = 1 << 0
      }else{
        $(GPIOB:PCOR) = 1 << 0
      }
    case D17 : // PTB1
      if value {
        $(GPIOB:PSOR) = 1 << 1
      }else{
        $(GPIOB:PCOR) = 1 << 1
      }
    case D18 : // PTB3
      if value {
        $(GPIOB:PSOR) = 1 << 3
      }else{
        $(GPIOB:PCOR) = 1 << 3
      }
    case D19 : // PTB2
      if value {
        $(GPIOB:PSOR) = 1 << 2
      }else{
        $(GPIOB:PCOR) = 1 << 2
      }
    case D20 : // PTD5
      if value {
        $(GPIOD:PSOR) = 1 << 5
      }else{
        $(GPIOD:PCOR) = 1 << 5
      }
    case D21 : // PTD6
      if value {
        $(GPIOD:PSOR) = 1 << 6
      }else{
        $(GPIOD:PCOR) = 1 << 6
      }
    case D22 : // PTC1
      if value {
        $(GPIOC:PSOR) = 1 << 1
      }else{
        $(GPIOC:PCOR) = 1 << 1
      }
    case D23 : // PTC2
      if value {
        $(GPIOC:PSOR) = 1 << 2
      }else{
        $(GPIOC:PCOR) = 1 << 2
      }
    }
  }

  //··············································································

  public func read safe @noUnusedWarning (?port:port : DigitalPort) -> Bool {
    switch port {
    case D0 : // PTB16
      result = ($(GPIOB:PDIR) & (1 << 16)) ≠ 0
    case D1 : // PTB17
      result = ($(GPIOB:PDIR) & (1 << 17)) ≠ 0
    case D2 : // PTD0
      result = ($(GPIOD:PDIR) & (1 << 0)) ≠ 0
    case D3 : // PTA12
      result = ($(GPIOA:PDIR) & (1 << 12)) ≠ 0
    case D4 : // PTA13
      result = ($(GPIOA:PDIR) & (1 << 13)) ≠ 0
    case D5 : // PTD7
      result = ($(GPIOD:PDIR) & (1 << 7)) ≠ 0
    case D6 : // PTD4
      result = ($(GPIOD:PDIR) & (1 << 4)) ≠ 0
    case D7 : // PTD2
      result = ($(GPIOD:PDIR) & (1 << 2)) ≠ 0
    case D8 : // PTD3
      result = ($(GPIOD:PDIR) & (1 << 3)) ≠ 0
    case D9  : // PTC3
      result = ($(GPIOC:PDIR) & (1 << 3)) ≠ 0
    case D10 : // PTC4
      result = ($(GPIOC:PDIR) & (1 << 4)) ≠ 0
    case D11 : // PTC6
      result = ($(GPIOC:PDIR) & (1 << 6)) ≠ 0
    case D12 : // PTC7
      result = ($(GPIOC:PDIR) & (1 << 7)) ≠ 0
    case D13 : // PTC5
      result = ($(GPIOC:PDIR) & (1 << 5)) ≠ 0
    case D14 : // PTD1
      result = ($(GPIOD:PDIR) & (1 << 1)) ≠ 0
    case D15 : // PTC0
      result = ($(GPIOC:PDIR) & (1 << 0)) ≠ 0
    case D16 : // PTB0
      result = ($(GPIOB:PDIR) & (1 << 0)) ≠ 0
    case D17 : // PTB1
      result = ($(GPIOB:PDIR) & (1 << 1)) ≠ 0
    case D18 : // PTB3
      result = ($(GPIOB:PDIR) & (1 << 3)) ≠ 0
    case D19 : // PTB2
      result = ($(GPIOB:PDIR) & (1 << 2)) ≠ 0
    case D20 : // PTD5
      result = ($(GPIOD:PDIR) & (1 << 5)) ≠ 0
    case D21 : // PTD6
      result = ($(GPIOD:PDIR) & (1 << 6)) ≠ 0
    case D22 : // PTC1
      result = ($(GPIOC:PDIR) & (1 << 1)) ≠ 0
    case D23 : // PTC2
      result = ($(GPIOC:PDIR) & (1 << 2)) ≠ 0
    }
  }

  //··············································································

  public func toggle safe @noUnusedWarning (?port:port : DigitalPort) {
    switch port {
    case D0 : // PTB16
      $(GPIOB:PTOR) = 1 << 16
    case D1 : // PTB17
      $(GPIOB:PTOR) = 1 << 17
    case D2 : // PTD0
      $(GPIOD:PTOR) = 1 << 0
    case D3 : // PTA12
      $(GPIOA:PTOR) = 1 << 12
    case D4 : // PTA13
      $(GPIOA:PTOR) = 1 << 13
    case D5 : // PTD7
      $(GPIOD:PTOR) = 1 << 7
    case D6 : // PTD4
      $(GPIOD:PTOR) = 1 << 4
    case D7 : // PTD2
      $(GPIOD:PTOR) = 1 << 2
    case D8 : // PTD3
      $(GPIOD:PTOR) = 1 << 3
    case D9  : // PTC3
      $(GPIOC:PTOR) = 1 << 3
    case D10 : // PTC4
      $(GPIOC:PTOR) = 1 << 4
    case D11 : // PTC6
      $(GPIOC:PTOR) = 1 << 6
    case D12 : // PTC7
      $(GPIOC:PTOR) = 1 << 7
    case D13 : // PTC5
      $(GPIOC:PTOR) = 1 << 5
    case D14 : // PTD1
      $(GPIOD:PTOR) = 1 << 1
    case D15 : // PTC0
      $(GPIOC:PTOR) = 1 << 0
    case D16 : // PTB0
      $(GPIOB:PTOR) = 1 << 0
    case D17 : // PTB1
      $(GPIOB:PTOR) = 1 << 1
    case D18 : // PTB3
      $(GPIOB:PTOR) = 1 << 3
    case D19 : // PTB2
      $(GPIOB:PTOR) = 1 << 2
    case D20 : // PTD5
      $(GPIOD:PTOR) = 1 << 5
    case D21 : // PTD6
      $(GPIOD:PTOR) = 1 << 6
    case D22 : // PTC1
      $(GPIOC:PTOR) = 1 << 1
    case D23 : // PTC2
      $(GPIOC:PTOR) = 1 << 2
    }
  }
  //··············································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
