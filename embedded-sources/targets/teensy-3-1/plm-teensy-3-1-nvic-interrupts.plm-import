
section enable safe @noUnusedWarning (?interrupt: inInterruptCode ISRSlot) {
  let idx : UInt32 = extend (inInterruptCode.uint7 -% 16)
  let bitIndex = idx & 0x1F
  let registerIndex = idx >> 5
  #NVIC:ISER [registerIndex]! = 1 << bitIndex
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

section disable safe @noUnusedWarning (?interrupt: inInterruptCode ISRSlot) {
  let idx : UInt32 = extend (inInterruptCode.uint7 -% 16)
  let bitIndex = idx & 0x1F
  let registerIndex = idx >> 5
  #NVIC:ICER [registerIndex]! = 1 << bitIndex
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

// 0 = highest priority
// Cortex-M4: 0,16,32,48,64,80,96,112,128,144,160,176,192,208,224,240
section set safe @noUnusedWarning (?interrupt: inInterruptCode ISRSlot ?priority:inPriority UInt8) {
  #NVIC:IPR [inInterruptCode.uint7]! = inPriority
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

section getPriorityOf @noUnusedWarning (?interrupt: inInterruptCode ISRSlot) -> UInt8 {
  result = #NVIC:IPR [inInterruptCode.uint7]!
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
