
system section enable @noUnusedWarning (?interrupt: inInterruptCode $isrSlot) {
  let idx $uint32 = extend (inInterruptCode.uint7 () - 16)
  let bitIndex = idx & 0x1F
  let registerIndex = idx >> 5
  #NVIC:ISER [registerIndex] = 1 << bitIndex
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

system section disable @noUnusedWarning (?interrupt: inInterruptCode $isrSlot) {
  let idx $uint32 = extend (inInterruptCode.uint7 () - 16)
  let bitIndex = idx & 0x1F
  let registerIndex = idx >> 5
  #NVIC:ICER [registerIndex] = 1 << bitIndex
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

// 0 = highest priority
// Cortex-M4: 0,16,32,48,64,80,96,112,128,144,160,176,192,208,224,240
system section set @noUnusedWarning (?interrupt: inInterruptCode $isrSlot ?priority:inPriority $uint8) {
  #NVIC:IPR [inInterruptCode.uint7 ()] = inPriority
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

system section getPriorityOf @noUnusedWarning (?interrupt: inInterruptCode $isrSlot) -> $uint8 {
  result = #NVIC:IPR [inInterruptCode.uint7 ()]
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
