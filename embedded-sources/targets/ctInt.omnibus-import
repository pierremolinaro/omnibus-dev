//——————————————————————————————————————————————————————————————————————————————
//   COMPILE TIME INTEGER
//  (a and b) is implicitly defined as not (not a or not b)
//  (a ≠ b) is implicitly defined as not (a == b)
//  (a ≤ b) is implicitly defined as (a == b) | (a < b)
//  (a > b) is implicitly defined as not ((a == b) | (a < b))
//  (a ≥ b) is implicitly defined as not (a ≤ b)
//  (a - b) is implicitly defined as (a + - b)
//——————————————————————————————————————————————————————————————————————————————

compiletime func (left $ctInt) == (right $ctInt) -> $ctBool {
  left == right
}

compiletime func (left $ctInt) < (right $ctInt) -> $ctBool {
  left < right
}

compiletime func - (operand $ctInt) -> $ctInt {
  - operand
}

compiletime func (left $ctInt) << (right $ctInt) -> $ctInt {
  left << right
}

compiletime func (left $ctInt) >> (right $ctInt) -> $ctInt {
  left >> right
}

compiletime func (left $ctInt) + (right $ctInt) -> $ctInt {
  left + right
}

compiletime func (left $ctInt) - (right $ctInt) -> $ctInt {
  left - right
}

compiletime func (left $ctInt) * (right $ctInt) -> $ctInt {
  left * right
}

compiletime func (left $ctInt) / (right $ctInt) -> $ctInt {
  left / right
}

compiletime func (left $ctInt) % (right $ctInt) -> $ctInt {
  left % right
}

compiletime func (left $ctInt) & (right $ctInt) -> $ctInt {
  left & right
}

compiletime func (left $ctInt) | (right $ctInt) -> $ctInt {
  left | right
}

compiletime func (left $ctInt) ^ (right $ctInt) -> $ctInt {
  left ^ right
}

//——————————————————————————————————————————————————————————————————————————————
