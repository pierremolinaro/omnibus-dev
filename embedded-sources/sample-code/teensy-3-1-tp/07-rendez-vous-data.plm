target "teensy-3-1-tp"

//-----------------------------------------------------------------------------*

struct $rendezVousData {
  var autoriserLecture  = $semaphore (!value:0)
  var autoriserEcriture = $semaphore (!value:1)
  var signalerDonneeLue = $semaphore (!value:0)
  var data $uint32 = 0

  func `user output (?data:inData $uint32) {
    self.autoriserEcriture.P ()
    self.data = inData
    self.autoriserLecture.V ()
    self.signalerDonneeLue.P ()
  }

  func `user input (!data:outData $uint32) {
    self.autoriserLecture.P ()
    outData = self.data
    self.signalerDonneeLue.V ()
    self.autoriserEcriture.V ()
  }

  guard input (!data:outData $uint32) : self.autoriserLecture.P () {
    outData = self.data
    self.signalerDonneeLue.V ()
    self.autoriserEcriture.V ()
  }

}

//-----------------------------------------------------------------------------*

var rdvs = $rendezVousData () {
  func $T0.loop
}

//-----------------------------------------------------------------------------*

var rdvs2 = $rendezVousData () {
  func $T1.loop
}

//-----------------------------------------------------------------------------*

var s = $semaphore (!value:1) {
  func $T0.loop
}

//-----------------------------------------------------------------------------*

task T0 priority 0 stackSize 512 {
  var top $uint32 = 0
  var n $uint32 = 1

  func loop () {
    time.waitUntilMS (!deadline:self.top)
    rdvs.output (!data:self.n)
    rdvs2.output (!data:self.n)
    leds.toggle (!LED_L0)
    self.top += 500
    self.n += 1
  }
}

//-----------------------------------------------------------------------------*

task T1 priority 1 stackSize 1024 {

  func loop () {
    rdvs.input (?data:let x)
    leds.toggle (!LED_L1)
    s.P ()
      lcd.goto (!line:0 !column:0)
      lcd.printUnsigned (!x)
    s.V ()
  }
}

//-----------------------------------------------------------------------------*

task T2 priority 2 stackSize 1024 {
  var deadline $uint32 = 0

  func loop () {
    select
    upon rdvs2.input (?data:let x) :
      leds.toggle (!LED_L2)
      s.P ()
        lcd.goto (!line:1 !column:0)
        lcd.printUnsigned (!x)
      s.V ()
    upon time.waitUntilMS (!deadline:self.deadline) :
      self.deadline += 200
      leds.toggle  (!LED_L4)
    end
  }
}

//-----------------------------------------------------------------------------*
