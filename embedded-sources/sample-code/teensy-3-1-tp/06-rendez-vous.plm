target "teensy-3-1-tp"

//-----------------------------------------------------------------------------*

struct $rendezVous {
  var inputWaitList = $taskList ()
  var outputWaitList = $taskList ()
  var inputGuardList = $guardList ()
  var outputGuardList = $guardList ()

  primitive input () {
    let found = makeTaskReady (!?list:self.outputWaitList)
    if not found then
      guardDidChange (!?guard:self.outputGuardList)
      blockInList (!?list:self.inputWaitList)
    end
  }

  primitive output () {
    let found = makeTaskReady (!?list:self.inputWaitList)
    if not found then
      guardDidChange (!?guard:self.inputGuardList)
      blockInList (!?list:self.outputWaitList)
    end
  }

  primitive inputUntil (?deadline:inDeadline $uint32) -> $bool {
    result = makeTaskReady (!?list:self.outputWaitList)
    if (not result) and (inDeadline > millis ()) then 
      blockInListAndOnDeadline (!?list:self.inputWaitList !deadline:inDeadline)
    end
  }

  primitive outputUntil (?deadline:inDeadline $uint32) -> $bool {
    result = makeTaskReady (!?list:self.inputWaitList)
    if (not result) and (inDeadline > millis ()) then 
      blockInListAndOnDeadline (!?list:self.outputWaitList !deadline:inDeadline)
    end
  }

  guard input () {
    accept = makeTaskReady (!?list:self.outputWaitList)
    if not accept then
      handleGuardedCommand (!?guard:self.inputGuardList)
    end
  }

  guard output () {
    accept = makeTaskReady (!?list:self.inputWaitList)
    if not accept then
      handleGuardedCommand (!?guard:self.outputGuardList)
    end
  }


}

//-----------------------------------------------------------------------------*

var rdvs = $rendezVous () {
  func $T0.loop
  func $T1.loop
}

//-----------------------------------------------------------------------------*

task T0 priority 0 stackSize 512 {
  var top $uint32 = 0

  func loop () {
    waitUntilMS (!deadline:self.top)
    rdvs.output ()
    self.top += 250
    ledOn (!LED_L0)
    waitUntilMS (!deadline:self.top)
    rdvs.output ()
    self.top += 250
    ledOff (!LED_L0)
  }
}

//-----------------------------------------------------------------------------*

task T1 priority 1 stackSize 512 {

  func loop () {
    rdvs.input ()
    ledOn (!LED_L1)
    rdvs.input ()
    ledOff (!LED_L1)
  }
}

//-----------------------------------------------------------------------------*
