target "teensy-3-1-tp"

//——————————————————————————————————————————————————————————————————————————————

section emptySection () {
}

//——————————————————————————————————————————————————————————————————————————————

service emptyService () {
}

//——————————————————————————————————————————————————————————————————————————————

section getSysTick () -> $uint32 {
  result = SYST_CVR
}

//——————————————————————————————————————————————————————————————————————————————

let ITERATIONS = 7

//——————————————————————————————————————————————————————————————————————————————

task T priority 0 stackSize 512 {

  //············································································

  init 1 {
    var cumul $uint32 = 0
  //--- Compute getSysTick duration
    for x $uint32 in 0 ..< ITERATIONS :
      time.waitDuringMS (!delay:1)
      let t0 = getSysTick ()
      let t1 = getSysTick ()
      cumul += t0 - t1
      lcd.printUnsigned (!t0 - t1)
      lcd.printSpaces (!1)
    end
    let systickDuration = cumul / ITERATIONS
  //--- Compute emptySection duration
    lcd.goto (!line:1 !column:0)
    for y $uint32 in 0 ..< ITERATIONS :
      time.waitDuringMS (!delay:1)
      let t0 = getSysTick ()
      emptySection ()
      let t1 = getSysTick ()
      lcd.printUnsigned (!t0 - t1 - systickDuration)
      lcd.printSpaces (!1)
    end
  //--- Compute emptyService duration
    lcd.goto (!line:2 !column:0)
    for z $uint32 in 0 ..< 4 :
      time.waitDuringMS (!delay:1)
      let t0 = getSysTick ()
      emptyService ()
      let t1 = getSysTick ()
      lcd.printUnsigned (!t0 - t1 - systickDuration)
      lcd.printSpaces (!1)
   end
  }
  
  //············································································

  func loop () {
    time.waitDuringMS (!delay:250)
    leds.toggle (!LED_L1) // Allumer la led
  }

  //············································································

}

//——————————————————————————————————————————————————————————————————————————————
