target "teensy-3-1-tp"

let SIZE = 9

type $A : $uint32 [SIZE]

//------------------------------------------------*

task T priority 12 stackSize 512 {
  var deadline $uint32 = 0
  var array = $A ()
  var array2 = $A ()
  var index $int32 = 0

  while time.waitUntilMS (!deadline:self.deadline) {
    self.deadline +%= 1000
    leds.toggle (!LED_L1)
    self.array [self.index] = 0
    self.index += 1
    if self.index == SIZE {
      self.index = 0
    }
    for i $uint32 in 0 ..< $A.size {
      self.array [i] += 1
    }
    self.array2 = self.array 
    lcd.goto (!line:0 !column:0)
    for i $uint32 in 0 ..< $A.size {
      lcd.printUnsigned (!self.array2 [i])
      lcd.printSpaces (!1)
    }
  }
}

//------------------------------------------------*

struct $exemple {
  var x $int32
  
  func `user getNok () -> $int32 {
    result = self.x // Erreur : @userAccess est nécéssaire
  }
  
  func `user getOk @userAccess () -> $int32 {
    result = self.x // Ok : @userAccess autorise l'accès
  }
  
  func `user getNok2  () -> $int32 {
    result = self.getOk () // Erreur : @userAccess est nécéssaire
  }
  
  func `user getOk2 @userAccess () -> $int32 {
    result = self.getOk () // Ok : @userAccess autorise l'accès
  }
  
  func `section sGet () -> $int32 {
    result = self.x // Ok : @userAccess est inutile
  }
  
  section sectionGet () -> $int32 {
    result = self.x
  }

  func `user getOk3 () -> $int32 {
    result = self.sectionGet ()
  }

}
