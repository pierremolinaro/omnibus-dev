target "teensy-3-1-tp"

//-----------------------------------------------------------------------------*

struct $semaphore {
  var value $uint32
  var list = $taskList ()
  var guardList = $guardList ()

  service P `kernel @noWarningIfUnused () {
    if self.value > 0 then
      self.value -= 1
    else
      blockInList (!?list:self.list)
    end
  }

  service V `kernel () {
    makeTaskReady (!?list:self.list ?found:let found)
    if not found then
      self.value += 1
      guardDidChange (!?guard:self.guardList)
    end
  }

  guard P () {
    accepted = self.value > 0
    if accepted then
      self.value -= 1
    else
      handleGuardedCommand (!?guard:self.guardList)
    end
  }
}

//-----------------------------------------------------------------------------*

var s0 = $semaphore (!value:0) {
  func $T0.loop
}

//-----------------------------------------------------------------------------*

var s1 = $semaphore (!value:0) {
  func $T1.loop
}

//-----------------------------------------------------------------------------*

task T0 priority 0 stackSize 512 {
  var top $uint32 = 0

  func loop () {
    waitUntilMS (!deadline:self.top)
    s0.V ()
    self.top += 250
    ledOn (!LED_L0)
    waitUntilMS (!deadline:self.top)
    s0.V ()
    self.top += 250
    ledOff (!LED_L0)
  }
}

//-----------------------------------------------------------------------------*

task T1 priority 1 stackSize 512 {
  var top $uint32 = 0

  func loop () {
    waitUntilMS (!deadline:self.top)
    s1.V ()
    self.top += 249
    ledOn (!LED_L4)
    waitUntilMS (!deadline:self.top)
    s1.V ()
    self.top += 249
    ledOff (!LED_L4)
  }
}

//-----------------------------------------------------------------------------*

task T2 priority 2 stackSize 512 {
  var flag0 = true
  var flag1 = true
  var flag2 = true
  var deadline $uint32 = 0
  
  func loop () {
    select
    on s0.P () :
      if self.flag0 then
        ledOn  (!LED_L1)
      else
        ledOff (!LED_L1)
      end
      self.flag0 = self.flag0 xor true
    on s1.P () :
      if self.flag1 then
        ledOn  (!LED_L3)
      else
        ledOff (!LED_L3)
      end
      self.flag1 = self.flag1 xor true
    when self.flag2 on waitUntilMS (!deadline:self.deadline) :
      self.deadline += 200
      ledOn  (!LED_L2)
      self.flag2 = false
    when not self.flag2 on waitUntilMS (!deadline:self.deadline) :
      self.deadline += 200
      ledOff  (!LED_L2)
      self.flag2 = true
    end
  }
}

//-----------------------------------------------------------------------------*
