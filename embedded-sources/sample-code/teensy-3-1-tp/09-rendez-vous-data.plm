target "teensy-3-1-tp"

//-----------------------------------------------------------------------------*

struct $rendezVousDataé {
  var autoriserLecture  = $semaphore (!value:0)
  var autoriserEcriture = $semaphore (!value:1)
  var signalerDonneeLue = $semaphore (!value:0)
  var donnée $uint32 = 0

  public func `user output @mutating @userAccess (?data:inData $uint32) {
    self.autoriserEcriture.P ()
    self.donnée = inData
    self.autoriserLecture.V ()
    self.signalerDonneeLue.P ()
  }

//  public func `user input (!data:outData $uint32) {
//    self.autoriserLecture.P ()
//    outData = self.data
//    self.signalerDonneeLue.V ()
//    self.autoriserEcriture.V ()
//  }

  public guard entrée (!data:outData $uint32) : self.autoriserLecture.P () {
    outData = self.donnée
    self.signalerDonneeLue.V ()
    self.autoriserEcriture.V ()
  }

}

//-----------------------------------------------------------------------------*

var rdvs = $rendezVousDataé ()

//-----------------------------------------------------------------------------*

var rdvs2 = $rendezVousDataé ()

//-----------------------------------------------------------------------------*

var s = $semaphore (!value:1)

//-----------------------------------------------------------------------------*

task T0 priority 0 stackSize 512 {
  var top $uint32 = 0
  var n $uint32 = 1

  while time.waitUntilMS (!deadline:self.top) {
    rdvs.output (!data:self.n)
    rdvs2.output (!data:self.n)
    leds.toggle (!LED_L0)
    self.top += 500
    self.n += 1
  }
}

//-----------------------------------------------------------------------------*

task T1 priority 1 stackSize 1024 {

  while rdvs.entrée (?data:let x) {
    leds.toggle (!LED_L1)
    s.P ()
      lcd.goto (!line:0 !column:0)
      lcd.printUnsigned (!x)
    s.V ()
  }
}

//-----------------------------------------------------------------------------*

task T2 priority 2 stackSize 1024 {
  var deadline $uint32 = 0

  while rdvs2.entrée (?data:let x) {
    leds.toggle (!LED_L2)
    s.P ()
      lcd.goto (!line:1 !column:0)
      lcd.printUnsigned (!x)
    s.V ()
  }
  
  while time.waitUntilMS (!deadline:self.deadline) {
    self.deadline += 200
    leds.toggle  (!LED_L4)
  }
}

//-----------------------------------------------------------------------------*
