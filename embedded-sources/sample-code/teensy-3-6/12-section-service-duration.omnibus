target "teensy-3-6/xtr32"
let F_CPU_MHZ = 240

import "carte-tp-teensy-3-6.omnibus-import"

//——————————————————————————————————————————————————————————————————————————————

section emptySection () {
}

//——————————————————————————————————————————————————————————————————————————————

service emptyService () {
}

//——————————————————————————————————————————————————————————————————————————————

section getSysTick () -> $uint32 {
  result = ©SYST.CVR
}

//——————————————————————————————————————————————————————————————————————————————

let ITERATIONS = 7

//——————————————————————————————————————————————————————————————————————————————

task T @stacksize 512 @autostart {

  //············································································

  event @onSetup first {
    var cumul $uint32 = 0
  //--- Compute getSysTick duration
    for _ $uint32 in 0 ..< ITERATIONS {
      time.wait (!during:1)
      let t0 = getSysTick ()
      let t1 = getSysTick ()
      cumul += t0 - t1
      lcd.print (!u32:t0 - t1)
      lcd.print (!spaces:1)
    }
    let systickDuration = cumul / ITERATIONS
  //--- Compute emptySection duration
    lcd.goto (!line:1 !column:0)
    for _ $uint32 in 0 ..< ITERATIONS {
      time.wait (!during:1)
      let t0 = getSysTick ()
      emptySection ()
      let t1 = getSysTick ()
      lcd.print (!u32:t0 - t1 - systickDuration)
      lcd.print (!spaces:1)
    }
  //--- Compute emptyService duration
    lcd.goto (!line:2 !column:0)
    for _ $uint32 in 0 ..< 4 {
      time.wait (!during:1)
      let t0 = getSysTick ()
      emptyService ()
      let t1 = getSysTick ()
      lcd.print (!u32:t0 - t1 - systickDuration)
      lcd.print (!spaces:1)
    }
  }


  //············································································

}

//——————————————————————————————————————————————————————————————————————————————
