target "teensy-3-6/privileged"
let F_CPU_MHZ = 180

driver lcd (!DB4:.D16 !DB5:.D15 !DB6:.D14 !DB7:.D19 !RS:.D18 !ENABLE:.D17)

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   ACTIVITY LED                                                                                                       
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func activityLedOn @safe @exported () {
  digital.write (!yes !toPort:.D13)
}

func activityLedOff @safe @exported () {
  digital.write (!no !toPort:.D13)
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

let LED_L0 = $digitalPort.D3

let PATTERN_LENGTH = 1000

newtype $patternArray : $uint32 [PATTERN_LENGTH]

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

task Tâche priority 1 stackSize 5512 {
  var compteur $uint32 = 0
  var x = $patternArray (!repeated:0)
  var y = $patternArray (!repeated:0)

  setup 1000 {
    digital.set (!mode:.OUTPUT !toPort:.D13) // Led Teensy
    digital.set (!mode:.OUTPUT !toPort:LED_L0)
  }
   
  on time.wait (!untilDeadline:self.compteur) {
    self.y = self.x
    for i $uint32 in 0 ..< self.x.count {
      self.y [i] += self.compteur
    }
    digital.write (!yes !toPort:LED_L0)
    self.compteur +%= 500
    time.wait (!untilDeadline: self.compteur)
    digital.write (!no !toPort:LED_L0)
    self.compteur +%= 500
    lcd.goto (!line:0 !column:0)
    lcd.print (!unsigned:$patternArray.count)
  }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
