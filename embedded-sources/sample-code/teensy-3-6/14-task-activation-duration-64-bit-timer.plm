target "teensy-3-6/xtr32"
let F_CPU_MHZ = 240
let @display BUS_MHZ2 = BUS_MHZ

import "carte-tp-teensy-3-6.plm-import"
driver timer ()

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

driver timer > root {
  var tick = $uint64 ()

  startup {
  //--- Power on PIT
    ©SIM.SCGC6 |= ©{SIM.SCGC6 !PIT:1}
   //--- Enable PIT module
    ©PIT.MCR = 0
  //--- Disable PIT0 and PIT1
    ©PIT.TCTRL [0] = 0
    ©PIT.TCTRL [1] = 0
  //--- PIT0 clock frequency is BUS_MHZ (in MHz)
    ©PIT.LDVAL [0] = $uint32.max
    ©PIT.LDVAL [1] = $uint32.max
  //--- Enable PIT0 and PIT1 : start counting, no interrupt
    ©PIT.TCTRL [1] = ©{PIT.TCTRL !CHN:1 !TEN:1}
    ©PIT.TCTRL [0] = ©{PIT.TCTRL !TEN:1}
  }

  public section setTick () {
    self.tick = self.now ()
  }

  public section getTick () -> $uint64 {
    result = self.tick
  }

  public section now () -> $uint64 {
    result = extend (©PIT.LTMR64H)
    result <<= 32
    result |= extend (©PIT.LTMR64L)
    result = ~ result
    result +%= 1
  }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

sync s = $Semaphore (!value:0)

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

task Tâche0 @stacksize 512 @activate {
  var compteur $uint32 = 0

  event @setup first {
    s.wait ()
    let duration = ((timer.now () - timer.getTick ()) * 1000) / BUS_MHZ
    lcd.print (!u64:duration)
  }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

task Tâche1 @stacksize 512 @activate {

  event @setup first {
    timer.setTick ()
    s.signal ()
  }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
