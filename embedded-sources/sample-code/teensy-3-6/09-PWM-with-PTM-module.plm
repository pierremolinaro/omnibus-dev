target "teensy-3-6/unprivileged"
let F_CPU_MHZ = 180

driver lcd (!DB4:.D16 !DB5:.D15 !DB6:.D14 !DB7:.D19 !RS:.D18 !ENABLE:.D17)

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   ACTIVITY LED                                                                                                       
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func section activityLedOn @safe @exported () {
  digital.write (!yes !toPort:.D13)
}

func section activityLedOff @safe @exported () {
  digital.write (!no !toPort:.D13)
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

driver PWMOutput > root {

  //····················································································································

  init {
  //--- Activate #TPM1 and #TPM2 modules
    #SIM:SCGC2 |= {#SIM:SCGC2 !TPM1:1 !TPM2:1}
  //--- Use the OSCERCLK 16 MHz clock for TPM Module OSC_DIV.ERPS = 0 (--> divide by 1)
  // TPMSRC --> 0:disabled, 1:see PLLFLLSEL, 2:OSCERCLK, 3:MCGIRCCLK
  // PLLFLLSEL --> 0:MCGFLLCLK, 1:MCGPLLCLK, 2:USB1 PFD clock, 3:IRC48 clock (48 MHz)
    #SIM:SOPT2 |= {#SIM:SOPT2 !TPMSRC:2}
  //------------------- #TPM1:channel 0 is 32 kHz square wave
  //--- Set counter value to 0
    #TPM1:CNT = {#TPM1:CNT !COUNT:0}
  //--- Set counter period --> 32 kHz
    #TPM1:MOD = {#TPM1:MOD !MOD:125 - 1}
  //--- Configure channel 0 as single PWM output
    #TPM1:C0SC = {#TPM1:C0SC !MSB:1 !ELSB:1}
  //--- Channel 0 match value --> Square wave
    #TPM1:C0V = {#TPM1:C0V !VAL: 125 / 2}
  //--- Use PTA12 (#3) as #TPM1_CH0 output (ALT7)
    #PORTA:PCR [12] = {#PORTA:PCR !MUX:7}
  //--- Configure #TPM1 (COMD=1 --> comptage, PS=2 --> prescaler = 4)
    #TPM1:SC = {#TPM1:SC !CMOD:1 !PS:2}
  //------------------- #TPM2:channel 0 is 100 Hz wave
  //--- Set counter value to 0
    #TPM2:CNT = {#TPM2:CNT !COUNT:0}
  //--- Set counter period --> 100 Hz
    #TPM2:MOD = {#TPM2:MOD !MOD:40_000 - 1}
  //--- Configure channel 0 as single PWM output
    #TPM2:C0SC = {#TPM2:C0SC !MSB:1 !ELSB:1}
  //--- Channel 0 match value
    #TPM2:C0V = {#TPM2:C0V !VAL: 125 - 1}
  //--- Channel 0 polarity
    #TPM2:POL = {#TPM2:POL !POL0:1}
  //--- Use PTB18 (#29) as #TPM2_CH0 output (ALT6)
    #PORTB:PCR [18] = {#PORTB:PCR !MUX:6}
  //--- Configure #TPM1 (COMD=1 --> comptage, PS=2 --> prescaler = 4)
    #TPM2:SC = {#TPM2:SC !CMOD:1 !PS:2}
  }

  //····················································································································
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

driver PWMOutput ()

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

let LED_L4 = $digitalPort.D7

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

task Tâche1 @priority 1 @stacksize 512 {
  var compteur $uint32 = 0

  setup 1000 {
    digital.set (!mode:.OUTPUT !toPort:.D13) // Led Teensy
    digital.set (!mode:.OUTPUT !toPort:LED_L4)
  }
   
  on time.wait (!untilDeadline:self.compteur) {
    digital.toggle (!port:LED_L4)
    self.compteur +%= 500
  }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
