target "teensy-3-6/unprivileged"
let F_CPU_MHZ = 240

driver lcd (!DB4:.D16 !DB5:.D15 !DB6:.D14 !DB7:.D19 !RS:.D18 !ENABLE:.D17)

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   ACTIVITY LED                                                               
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func section activityLedOn @safe @exported () {
  digital.write (!yes !toPort:.D13)
}

func section activityLedOff @safe @exported () {
  digital.write (!no !toPort:.D13)
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
// USB DEVICE DRIVER
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

let NUM_ENDPOINTS = 4

//······················································································································

struct $bdt_t @copyable {
 var desc $uint32 = 0
 var addr $uint32 = 0 // void * addr;
}

//······················································································································

driver usb_device > digital {
// Descriptor table should be aligned on a 512 byte-boudary
  var descriptorTable @align 512 = $bdt_t [(NUM_ENDPOINTS+1)*4] (!repeated:$bdt_t ())

  //····················································································································

  init {
  // This basically follows the flowchart in the Kinetis Quick Reference User Guide, Rev. 3, 05/2014, page 134
  //-- Assume 48 MHz clock already running
    SIM:SCGC4 |= {SIM:SCGC4 !USBOTG:1} // SIM - enable clock
    MPU:RGDAAC [0] |= {MPU:RGDAAC !M4RE:1 !M4WE:1}
  //--- If using IRC48M, turn on the USB clock recovery hardware
    if @static (F_CPU_MHZ == 180) or (F_CPU_MHZ == 216) {
      USB0:CLK_RECOVERY_IRCN_EN = {USB0:CLK_RECOVERY_IRCN_EN !IRC_EN:1 !REG_EN:1}
      USB0:CLK_RECOVERY_CTRL = {USB0:CLK_RECOVERY_CTRL !CLOCK_RECOVER_EN:1 !RESTART_IFRTRIM_EN:1}
    }
  //-- Set descriptor table base address
    let descriptorTableBaseAddress = addressof (self.descriptorTable)
    USB0:BDTPAGE1 = descriptorTableBaseAddress [08...15]
    USB0:BDTPAGE2 = descriptorTableBaseAddress [16...23]
    USB0:BDTPAGE3 = descriptorTableBaseAddress [24...31]
  //--- Clear all ISR flags
    USB0:ISTAT = 0xFF
    USB0:ERRSTAT = 0xFF
    USB0:OTGISTAT = 0xFF
  //-- Enable USB
    USB0:CTL = {USB0:CTL !USBENOFEN:1}
    USB0:USBCTRL = 0
  //-- Enable reset interrupt
    USB0:INTEN = {USB0:INTEN !USBRSTEN:1}
  //-- Enable interrupt in NVIC
    enable (!interrupt: .USB_HS_OTG)
  //--- Enable d+ pullup
    USB0:CONTROL = {USB0:CONTROL !DPPULLNONOTG:1}
  }

  //····················································································································
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

driver usb_device ()

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
// TASK
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

let LED_L0 = $digitalPort.D3

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

task T @priority 0 @stacksize 512 {
  var tick $uint32 = 0
  
  //····················································································································

  setup 1 {
    digital.set (!mode:.OUTPUT !toPort:.D13) // Led Teensy
    digital.set (!mode:.OUTPUT !toPort:LED_L0)
  }
  
  //····················································································································

  on time.wait (!untilDeadline:self.tick) {
    digital.toggle (!port:LED_L0)
    self.tick +%= 500
   } 

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
