target "teensy-3-1"

//——————————————————————————————————————————————————————————————————————————————
//   ACTIVITY LED                                                               
//——————————————————————————————————————————————————————————————————————————————

func safe activityLedOn @exported () {
  digitalWrite (!port:.D13 !true)
}

func safe activityLedOff @exported () {
  digitalWrite (!port:.D13 !false)
}

//——————————————————————————————————————————————————————————————————————————————

init 1000 {
  pinMode (!port:.D13 !mode:.OUTPUT)
}

//——————————————————————————————————————————————————————————————————————————————

system section emptySection () {
}

//——————————————————————————————————————————————————————————————————————————————

system service emptyService () {
}

//——————————————————————————————————————————————————————————————————————————————

system section getSysTick () -> $uint32 {
  result = SYST_CVR
}

//——————————————————————————————————————————————————————————————————————————————

let ITERATIONS = 7

//——————————————————————————————————————————————————————————————————————————————

task T priority 0 stackSize 512 {

  //············································································

  setup 1 {
    var cumul $uint32 = 0
  //--- Compute getSysTick duration
    for _ $uint32 in 0 ..< ITERATIONS {
      time.waitDuringMS (!delay:1)
      let t0 = getSysTick ()
      let t1 = getSysTick ()
      cumul += t0 - t1
      lcd.printUnsigned (!t0 - t1)
      lcd.printSpaces (!1)
    }
    let systickDuration = cumul / ITERATIONS
  //--- Compute emptySection duration
    lcd.goto (!line:1 !column:0)
    for _ $uint32 in 0 ..< ITERATIONS {
      time.waitDuringMS (!delay:1)
      let t0 = getSysTick ()
      emptySection ()
      let t1 = getSysTick ()
      lcd.printUnsigned (!t0 - t1 - systickDuration)
      lcd.printSpaces (!1)
    }
  //--- Compute emptyService duration
    lcd.goto (!line:2 !column:0)
    for _ $uint32 in 0 ..< 4 {
      time.waitDuringMS (!delay:1)
      let t0 = getSysTick ()
      emptyService ()
      let t1 = getSysTick ()
      lcd.printUnsigned (!t0 - t1 - systickDuration)
      lcd.printSpaces (!1)
    }
  }
  

  //············································································

}

//——————————————————————————————————————————————————————————————————————————————
