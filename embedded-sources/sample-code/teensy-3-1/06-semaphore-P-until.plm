target "teensy-3-1/unprivileged"

module lcd (!DB4:.D16 !DB5:.D15 !DB6:.D14 !DB7:.D19 !RS:.D18 !ENABLE:.D17)

//——————————————————————————————————————————————————————————————————————————————
//   ACTIVITY LED                                                               
//——————————————————————————————————————————————————————————————————————————————

func safe activityLedOn @exported () {
  digitalWrite (!port:.D13 !yes)
}

func safe activityLedOff @exported () {
  digitalWrite (!port:.D13 !no)
}

//-----------------------------------------------------------------------------*

init 100 {
  pinMode (!port:.D13 !mode:.OUTPUT)
}

let LED_L0 = $digitalPort.D3
let LED_L1 = $digitalPort.D4

init 1000 {
  pinMode (!port:LED_L0 !mode:.OUTPUT)
  pinMode (!port:LED_L1 !mode:.OUTPUT)
}

//-----------------------------------------------------------------------------*

struct $monSemaphore {
  var value $uint32
  var list = $taskList ()

  public system service V @mutating () {
    makeTaskReady (!?fromList:self.list ?found:let found)
    if not found {
      self.value += 1
    }
  }

  public system primitive P_until @mutating (?deadline:inDeadline $uint32
                                             !result: result $bool) {
    result = self.value > 0
    if result {
      self.value -= 1
    }else if inDeadline > time.now () {
      block (!?inList:self.list !onDeadline:inDeadline !?result:result)
    }
  }

}

//-----------------------------------------------------------------------------*

var s = $monSemaphore (!value:0)

//-----------------------------------------------------------------------------*

task T1 priority 1 stackSize 512 {
  var top $uint32 = 0
  
  on time.wait (!untilDeadline:self.top) {
    s.V ()
    self.top += 300
    digitalWrite (!port:LED_L0 !yes)
    time.wait (!untilDeadline:self.top)
    s.V ()
    self.top += 700
    digitalWrite (!port:LED_L0 !no)
  }
}

//-----------------------------------------------------------------------------*

task T2 priority 2 stackSize 512 {
  var top $uint32 = 0
  var deadlineReachedCount $uint32 = 0
  var semaphoreMatchCount $uint32 = 0

  on time.wait (!untilDeadline:0) { // no wait...
    s.P_until (!deadline:self.top ?result:let r)
    if r {
      toggle (!port:LED_L1)
      self.deadlineReachedCount += 1
      lcd.goto (!line:0 !column:0)
      lcd.print (!unsigned:self.deadlineReachedCount)
    }else{
      self.top += 400
      toggle (!port:LED_L1)
      self.semaphoreMatchCount += 1
      lcd.goto (!line:1 !column:0)
      lcd.print (!unsigned:self.semaphoreMatchCount)
    }
  }
}

//-----------------------------------------------------------------------------*
