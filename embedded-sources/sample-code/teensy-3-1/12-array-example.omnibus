target "teensy-3-1/unprivileged"

import "carte-tp-teensy-3-1.omnibus-import"

//-----------------------------------------------------------------------------*

let SIZE = 3

typealias $A = [SIZE : $u32]

struct $B {
  var a $u32 = 0
  var b $u32 = 0
}

struct $C {
  var c = $B ()
}

let array = $A (!1 !2 !3)

//------------------------------------------------*

task T @stacksize 512 @autostart {
  var deadline $u32 = 0
  var array = $A (!repeated:0)
  var array2 = $A (!repeated:1)
  var index $i32 = 0

  event @onSetup first {
    digital.set (!mode:.output !toPort:.D13)
    digital.set (!mode:.output !toPort:LED_L1)
  }

  event time.wait (!until:self.deadline) {
    self.deadline +%= 1000
//    digital.toggle (!port:LED_L1)
    self.array [self.index] = 0
    self.index +%= 1
    if self.index == SIZE {
      self.index = 0
    }
    for i $u32 in 0 ..< $A.count {
      self.array [i] +%= 1
    }
    self.array2 = self.array
    lcd.goto (!line:0 !column:0)
    for i $u32 in 0 ..< $A.count {
      lcd.print (!u32:self.array2 [i])
      lcd.print (!spaces:1)
    }

  //--- Init from a repeated static value
    var a = $A (!repeated:5)
  //--- Init from a repeated dynamic value
    var e $u32 = 5
    var b = $A (!repeated:e)
  //--- Init from a static values
    var c = $A (!0 !1 !2)
  //--- Init from a dynamic values
    var d = $A (!0 !e !2)
  //---
    var x $u32 = 0
    for i $u32 in 0 ..< $A.count {
      a [i] = 9
      a [i] += 9
      x += a [i]
    }

    var s = $B ()
    var aa = s.a
    var bb = s.b
    s.a = aa
    var s2 = $C ()
    s2.c.a = aa
  }
}

//------------------------------------------------*
