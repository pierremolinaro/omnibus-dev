target "teensy-3-1/privileged"

driver lcd (!DB4:.D16 !DB5:.D15 !DB6:.D14 !DB7:.D19 !RS:.D18 !ENABLE:.D17)

//——————————————————————————————————————————————————————————————————————————————
//   ACTIVITY LED                                                               
//——————————————————————————————————————————————————————————————————————————————

func safe activityLedOn @exported () {
  digital.write (!yes !toPort:.D13)
}

func safe activityLedOff @exported () {
  digital.write (!no !toPort:.D13)
}

//-----------------------------------------------------------------------------*

let LED_L1 = $digitalPort.D4

//-----------------------------------------------------------------------------*

system section setupPIT () {
  PIT_MCR = 0
  PIT_LDVAL [0] = 200000
  PIT_TCTRL [0] = {PIT_TCTRL !TIE:1 !TEN:1} // Interrupt, enabled
  enable (!interrupt: .PITChannel0)
}

//------------------------------------------------*

driver pit > digital {
  var gPITValue $uint32 = 0

  init {
    digital.set (!mode:.OUTPUT !toPort:.D13)
    digital.set (!mode:.OUTPUT !toPort:LED_L1)
    SIM_SCGC6 |= SIM_SCGC6_PIT
  }

  system section getPITValue (!outValue $uint32) {
    outValue = self.gPITValue
  }

  isr safe PITChannel0 {
  //--- Acquitter l'interruption
    PIT_TFLG [0] = {PIT_TFLG !TIF:1}
  //--- Incrémenter le compteur
    self.gPITValue += 1
  }
}

driver pit ()

//------------------------------------------------*

task T priority 12 stackSize 512 {
  var deadline $uint32 = 0

  setup 0 {
    setupPIT ()
  }
  
  on time.wait (!untilDeadline:self.deadline) {
    self.deadline +%= 250
    digital.write (!yes !toPort:LED_L1) // Allumer la led
    time.wait (!untilDeadline:self.deadline)
    self.deadline +%= 250
    digital.write (!no !toPort:LED_L1)  // Éteindre la led
    lcd.goto (!line:1 !column:0)
    lcd.print (!spaces:10)
    lcd.goto (!line:1 !column:0)
    var value $uint32
    pit.getPITValue (?value)
    lcd.print (!unsigned:value)
  }
}

//------------------------------------------------*
