#! /usr/bin/env python
# -*- coding: UTF-8 -*-

#----------------------------------------------------------------------------------------------------------------------*

import sys, os

#----------------------------------------------------------------------------------------------------------------------*

sys.path.append (os.path.dirname (os.path.abspath (sys.argv [0])) + "/sources")
import plm

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#                         Object files directories                                                                     *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

def archiveBaseURL ():
  return "http://crossgcc.rts-software.org/downloads/plm-tools/"

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#   Tool dir                                                                                                           *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

def toolDir ():
#  return os.path.expanduser ("~/plm-tools/llvm-3.6.2-binutils-2.25-libusb-1.0.19")
  return os.path.expanduser ("~/plm-tools/llvm-3.7.0rc3-binutils-2.25-libusb-1.0.19")

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#   Compiler invocation                                                                                                *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

def llvmCompiler ():
  return [toolDir () + "/bin/llc"]

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#   LLVM Optimizer invocation                                                                                          *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

def llvmOptimizer ():
  return [toolDir () + "/bin/opt"]

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#   Display object size invocation                                                                                     *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

def displayObjectSize ():
  return [toolDir () + "/bin/arm-eabi-size", "-t"]

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#   Object Dump invocation                                                                                             *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

def dumpObjectCode ():
  return [toolDir () + "/bin/arm-eabi-objdump", "-Sdh", "-Mforce-thumb"]
#  return [toolDir () + "/bin/llvm-objdump", "-disassemble", "-s", "-arch-name=thumb"]

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#    LLVM Compiler options                                                                                             *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*
# -disable-simplify-libcalls : prevent to generate @llvm-memset
# http://stackoverflow.com/questions/21318229/llvm-optimizes-with-library-functions
 
def llvmCompilerOptions ():
  result = []
#  result.append ("-asm-show-inst")
  result.append ("-disable-simplify-libcalls")
  result.append ("-O2")
  return result

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#    LLVM Optimizer options                                                                                            *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

def llvmOptimizerOptions ():
  result = []
#  result.append ("-asm-show-inst")
#  result.append ("-disable-opt")
  result.append ("-disable-simplify-libcalls")
#  result.append ("-disable-loop-unrolling")
  result.append ("-Os")
  return result

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#   assembler invocation                                                                                               *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

def assembler ():
  return [toolDir () + "/bin/arm-eabi-as"]

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#   Linker invocation                                                                                                  *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

def linker ():
  return [toolDir () + "/bin/arm-eabi-ld"]

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#   Linker options                                                                                                     *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

def linkerOptions ():
  result = []
  result.append ("-nostartfiles")
  result.append ("-nostdlib")
  result.append ("--fatal-warnings")
  result.append ("--warn-common")
  result.append ("--no-undefined")
  result.append ("--cref")
  return result

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#   objcopy invocation                                                                                                 *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

def objcopy ():
  return [toolDir () + "/bin/arm-eabi-objcopy"]

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#   Source files                                                                                                       *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

def llvmSourceList ():
  return ["plm.ll"]

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#   Product directory                                                                                                  *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

def productDir ():
  return "product"

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#                         Object files directories                                                                     *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

def objectDir ():
  return "objects"

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#   Run executable                                                                                                      *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

def runExecutableOnTarget ():
  return [toolDir () + "/bin/teensy-loader-cli", "-w", "-v", "-mmcu=mk20dx128"]

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#   MAIN                                                                                                               *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

plm.runMakefile (toolDir (), archiveBaseURL (), llvmSourceList (), objectDir (), \
                 llvmCompiler (), llvmCompilerOptions (), \
                 llvmOptimizer (), llvmOptimizerOptions (), assembler (), \
                 productDir (), \
                 linker (), linkerOptions (), \
                 objcopy (), dumpObjectCode (), displayObjectSize (), runExecutableOnTarget ())

#----------------------------------------------------------------------------------------------------------------------*
