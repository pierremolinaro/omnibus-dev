
setter @instructionListIR appendStoreComputedPropertyValue
  ?let @objectIR inReceiverIR
  ?let @string inLLVMSetterName
  ?let @objectIR inValueIR
{
  self += !@storeComputedPropertyValueIR.init {!inReceiverIR !inLLVMSetterName !inValueIR}
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @storeComputedPropertyValueIR : @abstractInstructionIR {
  public var @objectIR mReceiverIR
  public var @string mLLVMSetterName
  public var @objectIR mValueIR
}

#·······················································································································

override method @storeComputedPropertyValueIR llvmInstructionCode
  ?!@string ioLLVMcode
  ?let @generationContext unused inGenerationContext
  ?!@generationAdds unused ioGenerationAdds
{
  ioLLVMcode += "  call void @" + [self.mLLVMSetterName assemblerRepresentation] 
  ioLLVMcode += " (" + [[self.mReceiverIR type] llvmTypeName] + "* " + [self.mReceiverIR llvmName] + ", "
  ioLLVMcode += [[self.mValueIR type] llvmTypeName] + " " + [self.mValueIR llvmName] + ")\n"
}

#·······················································································································

override method @storeComputedPropertyValueIR enterAccessibleEntities
  ?!@stringset ioInvokedRoutineSet
  ?!@uint unused ioMaxBranchOfOnInstructions
{
  ioInvokedRoutineSet += !self.mLLVMSetterName
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
