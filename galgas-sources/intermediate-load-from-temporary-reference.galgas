
setter @instructionListIR appendLoadFromTemporaryReference
  ?let @objectIR inTargetValue
  ?let @string inLLVMName
{
  self += !@loadFromTemporaryReferenceIR.new {!inTargetValue !inLLVMName}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @loadFromTemporaryReferenceIR : @abstractInstructionIR {
  @objectIR mTargetValue
  @string mLLVMName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @loadFromTemporaryReferenceIR llvmInstructionCode
  ?!@string ioLLVMcode
  ?let @generationContext unused inGenerationContext
  ?!@generationAdds unused ioGenerationAdds
{
  let llvmType = [mTargetValue llvmTypeName]
  ioLLVMcode += "  " + [mTargetValue llvmName] + " = load "
             + llvmType + ", " + llvmType + " * " + mLLVMName + "\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @loadFromTemporaryReferenceIR enterAccessibleEntities 
  ?!@accessibleEntities unused ioAccessibleEntities
  ?!@uint unused ioMaxBranchOfOnInstructions
{
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
