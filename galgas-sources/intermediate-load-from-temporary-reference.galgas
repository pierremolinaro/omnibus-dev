
setter @instructionListIR appendLoadFromTemporaryReference
  ?let @objectIR inTargetValue
  ?let @string inLLVMName
  ?let @bool inVolatile
{
  self += !@loadFromTemporaryReferenceIR.new {!inTargetValue !inLLVMName !inVolatile}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @loadFromTemporaryReferenceIR : @abstractInstructionIR {
  @objectIR mTargetValue
  @string mLLVMName
  @bool mVolatile
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

#override method @loadFromTemporaryReferenceIR llvmInstructionCode
#  ?!@string ioLLVMcode
#  ?let @generationContext unused inGenerationContext
#  ?!@generationAdds unused ioGenerationAdds
#{
#  let llvmType = [mTargetValue llvmTypeName]
#  ioLLVMcode += "  " + [mTargetValue llvmName] + " = load "
#  if mVolatile then
#    ioLLVMcode += "volatile "
#  end
#  ioLLVMcode += llvmType + ", " + llvmType + " * %" + mLLVMName + "\n"
#}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

#override method @loadFromTemporaryReferenceIR enterAccessibleEntities 
#  ?!@accessibleEntities unused ioAccessibleEntities
#  ?!@uint unused ioMaxBranchOfOnInstructions
#{
#}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
