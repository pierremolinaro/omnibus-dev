
setter @instructionListIR appendLoadRegisterAddress
  ?let @string inLLVMName
  ?let @bigint inAddress
  ?let @string inRegisterName
{
  self += !@intToPtrIR.new {!inLLVMName !inAddress !inRegisterName}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @intToPtrIR : @abstractInstructionIR {
  @string mLLVMName
  @bigint mRegisterAddress
  @string mRegisterName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @intToPtrIR llvmInstructionCode
  ?!@string ioLLVMcode
  ?let @generationContext unused inGenerationContext
  ?!@generationAdds unused ioGenerationAdds
{
  ioLLVMcode += "  " + mLLVMName + " = add i32 " + mRegisterAddress
             + ", 0 ; Register " + mRegisterName + " at " + [mRegisterAddress hexString] + "\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @intToPtrIR enterAccessibleEntities 
  ?!@accessibleEntities unused ioAccessibleEntities
  ?!@uint unused ioMaxBranchOfOnInstructions
{
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
