
setter @instructionListIR appendGetArrayElementReference
  ?let @objectIR inTarget
  ?let @objectIR inSource
  ?let @objectIR inElement
{
  self += !@getArrayElementReferenceIR.new {!inTarget !inSource !inElement}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @getArrayElementReferenceIR : @abstractInstructionIR {
  @objectIR mTarget
  @objectIR mSource
  @objectIR mElement
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @getArrayElementReferenceIR llvmInstructionCode
  ?!@string ioLLVMcode
  ?let @generationContext unused inGenerationContext
  ?!@generationAdds unused ioGenerationAdds
{
  let llvmType = [[mSource type] llvmTypeName]
  ioLLVMcode += "  " + [mTarget llvmName] + " = getelementptr inbounds "
  ioLLVMcode += llvmType + ", " + llvmType + " * " + [mSource llvmName] + ", i32 0, " + [mElement llvmTypeName] + " " + [mElement llvmName]
  ioLLVMcode += " ; Element of index " + [mElement llvmName] + "\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @getArrayElementReferenceIR enterAccessibleEntities 
  ?!@accessibleEntities unused ioAccessibleEntities
  ?!@uint unused ioMaxBranchOfOnInstructions
{
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
