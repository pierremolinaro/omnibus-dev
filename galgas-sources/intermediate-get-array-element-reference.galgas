
setter @instructionListIR appendGetArrayElementReference
  ?let @objectIR inTarget
  ?let @objectIR inSource
  ?let @string inElementIndex
{
  self += !@getArrayElementReferenceIR.new {!inTarget !inSource !inElementIndex}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @getArrayElementReferenceIR : @abstractInstructionIR {
  @objectIR mTarget
  @objectIR mSource
  @string mElementIndex
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @getArrayElementReferenceIR llvmInstructionCode
  ?!@string ioLLVMcode
  ?let @generationContext unused inGenerationContext
  ?!@generationAdds unused ioGenerationAdds
{
  let llvmType = [[[mSource type] kind] llvmTypeName]
  ioLLVMcode += "  " + [mTarget llvmName] + " = getelementptr inbounds "
  ioLLVMcode += llvmType + ", " + llvmType + " * " + [mSource llvmName] + ", i32 0, i32 " + mElementIndex
  ioLLVMcode += " ; Element of index " + mElementIndex + "\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @getArrayElementReferenceIR enterAccessibleEntities 
  ?!@accessibleEntities unused ioAccessibleEntities
  ?!@uint unused ioMaxBranchOfOnInstructions
{
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
