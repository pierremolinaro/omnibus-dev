setter @instructionListIR appendLoadFromMemory
  ?!@semanticTemporariesStruct ioTemporaries
  ?let @location inErrorLocation
  ?let @objectInMemoryIR inSource
  !@valueIR outResultingValue
{
  switch inSource
  case registerAddress (* *) :
    error .nowhere : "<<@instructionListIR appendLoadFromMemory>>" : outResultingValue
  case register (@unifiedTypeMap-proxy type * * * @bigint address * @uint arraySize *) :
    if arraySize > 0 then
      error inErrorLocation : "register array requires subscripting" : outResultingValue
    else
      getNewTempVariable (!type !?ioTemporaries ?outResultingValue)
      [!?self appendLoadVolatileRegister
        !outResultingValue
        !address
      ]
    end
  case globalVariable (@unifiedTypeMap-proxy type @string name @bool isVolatile) :
    getNewTempVariable (!type !?ioTemporaries ?outResultingValue)
    [!?self appendLoadGlobalVariable
      !outResultingValue
      !name
      !volatile:isVolatile
    ]
  case localVariable (@unifiedTypeMap-proxy type @string name @bool volatile) :
    getNewTempVariable (!type !?ioTemporaries ?outResultingValue)
    [!?self appendLoadLocalVariable
      !outResultingValue
      !name
      !volatile
    ]
  case staticConstant (@valueIR value @lstring unused name) :
    outResultingValue = value

  case property (* * *) :
    error .nowhere : "<<@instructionListIR appendLoadFromMemory>>" : outResultingValue
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @instructionListIR appendStoreInMemory
  ?let @objectInMemoryIR inTargetPtr
  ?let @valueIR inValue
{
  switch inTargetPtr
  case registerAddress (@unifiedTypeMap-proxy type @string llvmName) :
    [!?self appendStoreVolatileRegisterIndirect !type !llvmName !inValue]
  case register (@unifiedTypeMap-proxy type * * * @bigint address * * *) :
    [!?self appendStoreVolatileRegister !type !address !inValue]
  case globalVariable (@unifiedTypeMap-proxy type @string name @bool isVolatile) :
    [!?self appendStoreGlobalVariable !name !type !inValue !volatile:isVolatile]
  case localVariable (@unifiedTypeMap-proxy type @string name *) :
    [!?self appendStoreLocalVariable !name !type !inValue]
  case staticConstant (* *) :
     error .nowhere : "<<@objectInMemoryIR storeInMemory globalConstant>>"
  case property (* * *) :
    error .nowhere : "<<@instructionListIR appendStoreInMemory>>"
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
