#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#    V A R I A B L E    M A P                                                                                          *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

enum @variableKindIR {
  case register (@string name)
  case globalConstant (@string name)
  case globalVariable (@string name)
  case localVariable (@string name)
  case inArgument (@string name)
  case inOutArgument (@string name)
  case outArgument (@string name)
  case localConstant (@string name)
  case temporaryConstant (@uint idx)
  case localAccess (@string access)
  case literalUnsignedInteger (@uint64 value)
  case literalSignedInteger (@sint64 value)
  case literalString (@string value @string name)
}

#----------------------------------------------------------------------------------------------------------------------*

getter @variableKindIR isStatic -> @bool outResult {
  switch self
  case register (*) :
    outResult = false
  case globalConstant (*) :
    outResult = false
  case globalVariable (*) :
    outResult = false
  case localVariable (*) :
    outResult = false
  case inArgument (*) :
    outResult = false
  case inOutArgument (*) :
    outResult = false
  case outArgument (*) :
    outResult = false
  case localConstant (*) :
    outResult = false
  case temporaryConstant (*) :
    outResult = false
  case localAccess (*) :
    outResult = false
  case literalUnsignedInteger (*) :
    outResult = true
  case literalSignedInteger (*) :
    outResult = true
  case literalString (* *) :
    outResult = true
  end
}

#----------------------------------------------------------------------------------------------------------------------*

func initialVariableMap
  ?context:let @semanticContext inContext
  ?globalsAreConstant:@bool inGlobalsAreConstant
  -> @variableMap outVariableMap
{
#--- All mode set
  let allModeSet = [inContext.mModeMap keySet] ;
#--- Add registers
  outVariableMap = .emptyMap
  @procFormalArgumentListForGeneration formalArguments = {}
  for () in inContext.mRegisterMap do
    if mIsReadOnly || inGlobalsAreConstant then
      [!?outVariableMap insertUsedLocalConstant
        !lkey
        !mType
        !allModeSet
        !mangledNameForRegister (!name:lkey.string)
        !.register {!name:lkey.string}
        !true
        !mRegisterFieldAccessMap
      ]
    else
      [!?outVariableMap insertDefinedLocalVariable
        !lkey
        !mType
        !allModeSet
        !mangledNameForRegister (!name:lkey.string)
        !.register {!name:lkey.string}
        !true
        !mRegisterFieldAccessMap
      ]
    end
  end
#--- Add global constants
  for (constantName constantType sourceExpressionCode) in inContext.mGlobalConstantMap do
    [!?outVariableMap insertUsedLocalConstant
      !constantName
      !constantType
      !allModeSet
      !mangledNameForConstant (!name:constantName.string)
      !.globalConstant {!name:constantName.string}
      !true
      !{}
    ]
  end
#--- Add global variables
  for (variableName variableType modeSet *) in inContext.mGlobalVariableMap do
    if inGlobalsAreConstant then
      [!?outVariableMap insertUsedLocalConstant
        !variableName
        !variableType
        !modeSet
        !mangledNameForGlobalVariable (!name:variableName.string)
        !.globalVariable {!name:variableName.string}
        !true
        !{}
      ]
    else
      [!?outVariableMap insertGlobalVariable
        !variableName
        !variableType
        !modeSet
        !mangledNameForGlobalVariable (!name:variableName.string)
        !.globalVariable {!name:variableName.string}
        !true
        !{}
      ]
    end
  end
}

#----------------------------------------------------------------------------------------------------------------------*

proc getNewTempVariable
  ?!@semanticTemporariesStruct ioTemporaries
  !@variableKindIR outTempVariable
{
  outTempVariable = .temporaryConstant {!idx:ioTemporaries.mTemporaryIndex}
  ioTemporaries.mTemporaryIndex ++
}

#----------------------------------------------------------------------------------------------------------------------*

list @variableListIR {
  @variableKindIR mVar
}

#----------------------------------------------------------------------------------------------------------------------*

sharedmap @variableMap {
  @unifiedTypeMap-proxy mType
  @stringset mAcceptedModeSet
  @string mCppName
  @variableKindIR mVariableKind
  @bool copiable
  @registerBitSliceAccessMap fieldMap

#--- Used global variable
  state globalVariable {
    neutralAccess   -> globalVariable
    readAccess      -> globalVariable
    writeAccess     -> globalVariable
    readWriteAccess -> globalVariable
    dropAccess      -> globalVariable error "a global variable cannot be drop"
  }

#--- Used local constant
  state usedLocalConstant {
    neutralAccess   -> usedLocalConstant
    readAccess      -> usedLocalConstant
    writeAccess     -> usedLocalConstant error "a constant cannot be written"
    readWriteAccess -> usedLocalConstant error "a constant cannot be written"
    dropAccess      -> usedLocalConstant error "a constant cannot be drop"
  }

#--- Local constant
  state localConstant warning "the '%K' constant value is unused" {
    neutralAccess   -> localConstant
    readAccess      -> usedLocalConstant
    writeAccess     -> usedLocalConstant error "a constant cannot be written"
    readWriteAccess -> usedLocalConstant error "a constant cannot be written"
    dropAccess      -> usedLocalConstant error "a constant cannot be drop"
  }

#--- Undefined Local constant
  state undefinedLocalConstant warning "the '%K' constant value is unused" {
    neutralAccess   -> undefinedLocalConstant
    readAccess      -> undefinedLocalConstant error "the constant is undefined"
    writeAccess     -> localConstant
    readWriteAccess -> undefinedLocalConstant error "the constant is undefined"
    dropAccess      -> undefinedLocalConstant error "the constant is undefined"
  }

#--- Local variable
  state undefinedLocalVariable warning "the '%K' local variable is unused" {
    neutralAccess   -> undefinedLocalVariable
    readAccess      -> undefinedLocalVariable error "an undefined local variable cannot be read"
    writeAccess     -> definedLocalVariable
    readWriteAccess -> undefinedLocalVariable error "an undefined local variable cannot be read"
    dropAccess      -> undefinedLocalVariable warning "the local variable has no value"
  }
  state definedLocalVariable { # warning "the '%K' local variable value is unused" {
    neutralAccess   -> definedLocalVariable
    readAccess      -> usedLocalVariable
    writeAccess     -> definedLocalVariable # warning "the value has been changed without any read"
    readWriteAccess -> usedLocalVariable
    dropAccess      -> droppedLocalVariable warning "the local variable has been dropped without any read"
  }
  state usedLocalVariable {
    neutralAccess   -> usedLocalVariable
    readAccess      -> usedLocalVariable
    writeAccess     -> definedLocalVariable
    readWriteAccess -> definedLocalVariable
    dropAccess      -> droppedLocalVariable
  }
  state droppedLocalVariable {
    neutralAccess   -> droppedLocalVariable
    readAccess      -> droppedLocalVariable error "a dropped local variable cannot be read"
    writeAccess     -> definedLocalVariable
    readWriteAccess -> definedLocalVariable error "a dropped local variable cannot be read"
    dropAccess      -> droppedLocalVariable warning "the local variable is already dropped"
  }

#--- Output formal parameter
  state undefinedOutputFormalArgument error "the '%K' output formal parameter is undefined" {
    neutralAccess   -> undefinedOutputFormalArgument
    readAccess      -> undefinedOutputFormalArgument error "an undefined output formal parameter cannot be read"
    writeAccess     -> definedOutputFormalArgument
    readWriteAccess -> undefinedOutputFormalArgument error "an undefined output formal parameter cannot be read"
    dropAccess      -> undefinedOutputFormalArgument warning "the output formal parameter has no value"
  }
  state definedOutputFormalArgument {
    neutralAccess   -> definedOutputFormalArgument
    readAccess      -> definedOutputFormalArgument
    writeAccess     -> definedOutputFormalArgument
    readWriteAccess -> definedOutputFormalArgument
    dropAccess      -> undefinedOutputFormalArgument
  }

#--- Input/Output formal parameter
  state unusedInputOutputFormalArgument warning "the '%K' input/output formal parameter is unused" {
    neutralAccess   -> unusedInputOutputFormalArgument
    readAccess      -> usedInputOutputFormalArgument
    writeAccess     -> usedInputOutputFormalArgument
    readWriteAccess -> usedInputOutputFormalArgument
    dropAccess      -> droppedInputOutputFormalArgument
  }
  state usedInputOutputFormalArgument {
    neutralAccess   -> usedInputOutputFormalArgument
    readAccess      -> usedInputOutputFormalArgument
    writeAccess     -> usedInputOutputFormalArgument
    readWriteAccess -> usedInputOutputFormalArgument
    dropAccess      -> droppedInputOutputFormalArgument
  }
  state droppedInputOutputFormalArgument error "the '%K' input/ouput formal argument should be valuated at the end of the routine" {
    neutralAccess   -> droppedInputOutputFormalArgument
    readAccess      -> droppedInputOutputFormalArgument error "a dropped input/output formal argument cannot be read"
    writeAccess     -> usedInputOutputFormalArgument
    readWriteAccess -> droppedInputOutputFormalArgument error "a dropped input/output formal argument cannot be read"
    dropAccess      -> droppedInputOutputFormalArgument warning "the input/output formal argument is already dropped"
  }

#--- Input/Output formal parameter declared as unused
  state inputOutputFormalArgumentDeclaredAsUnused {
    neutralAccess   -> inputOutputFormalArgumentDeclaredAsUnused
    readAccess      -> usedInputOutputFormalArgument warning "the input/output formal parameter has been declared as unused"
    writeAccess     -> usedInputOutputFormalArgument warning "the input/output formal parameter has been declared as unused"
    readWriteAccess -> usedInputOutputFormalArgument warning "the input/output formal parameter has been declared as unused"
    dropAccess      -> droppedInputOutputFormalArgument warning "the input/output formal parameter has been declared as unused"
  }

#--- Constant input formal parameter
  state constantInputFormalArgument warning "the constant '%K' input formal parameter is not used and is not declared as unused" {
    neutralAccess   -> constantInputFormalArgument
    readAccess      -> usedConstantInputFormalArgument
    writeAccess     -> usedConstantInputFormalArgument error "a constant input formal parameter cannot be written"
    readWriteAccess -> usedConstantInputFormalArgument error "a constant input formal parameter cannot be written"
    dropAccess      -> usedConstantInputFormalArgument error "a constant input formal parameter cannot be dropped"
  }
  state usedConstantInputFormalArgument {
    neutralAccess   -> usedConstantInputFormalArgument
    readAccess      -> usedConstantInputFormalArgument
    writeAccess     -> usedConstantInputFormalArgument error "a constant input formal parameter cannot be written"
    readWriteAccess -> usedConstantInputFormalArgument error "a constant input formal parameter cannot be written"
    dropAccess      -> usedConstantInputFormalArgument error "a constant input formal parameter cannot be dropped"
  }

#--- Constant input formal parameter declared as unused
  state constantInputFormalArgumentDeclaredAsUnused {
    neutralAccess   -> constantInputFormalArgumentDeclaredAsUnused
    readAccess      -> usedConstantInputFormalArgument warning "the constant input formal parameter is declared as unused"
    writeAccess     -> usedConstantInputFormalArgument error "a constant input formal parameter cannot be written"
    readWriteAccess -> usedConstantInputFormalArgument error "a constant input formal parameter cannot be written"
    dropAccess      -> usedConstantInputFormalArgument error "a constant input formal parameter cannot be dropped"
  }

#--- Input formal parameter
  state inputFormalParameter warning "the '%K' input formal parameter is not used and is not declared as unused" {
    neutralAccess   -> inputFormalParameter
    readAccess      -> usedInputFormalArgument
    writeAccess     -> usedInputFormalArgument
    readWriteAccess -> usedInputFormalArgument
    dropAccess      -> droppedInputFormalArgument
  }
  state usedInputFormalArgument {
    neutralAccess   -> usedInputFormalArgument
    readAccess      -> usedInputFormalArgument
    writeAccess     -> usedInputFormalArgument
    readWriteAccess -> usedInputFormalArgument
    dropAccess      -> droppedInputFormalArgument
  }
  state droppedInputFormalArgument {
    neutralAccess   -> droppedInputFormalArgument
    readAccess      -> droppedInputFormalArgument error "a dropped input formal parameter cannot be read"
    writeAccess     -> usedInputFormalArgument
    readWriteAccess -> droppedInputFormalArgument error "a dropped input formal parameter cannot be read"
    dropAccess      -> droppedInputFormalArgument warning "the input formal parameter is already dropped"
  }

#--- Input formal parameter declared as unused
  state inputFormalArgumentDeclaredAsUnused {
    neutralAccess   -> inputFormalArgumentDeclaredAsUnused
    readAccess      -> usedInputFormalArgument warning "the input formal parameter is declared as unused"
    writeAccess     -> usedInputFormalArgument warning "the input formal parameter is declared as unused"
    readWriteAccess -> usedInputFormalArgument warning "the input formal parameter is declared as unused"
    dropAccess      -> droppedInputFormalArgument warning "the input formal parameter is declared as unused"
  }

#--- Current instance attribute in a method or a reader
  state currentInstanceAttribute {
    neutralAccess   -> currentInstanceAttribute
    readAccess      -> currentInstanceAttribute
    writeAccess     -> currentInstanceAttribute error "an attribute cannot be written within a method or a reader"
    readWriteAccess -> currentInstanceAttribute error "an attribute cannot be modified within a method or a reader"
    dropAccess      -> currentInstanceAttribute error "an attribute cannot be dropped within a method or a reader"
  }

#--- Current instance attribute in a modifier
  state currentInstanceAttributeInModifier {
    neutralAccess   -> currentInstanceAttributeInModifier
    readAccess      -> currentInstanceAttributeInModifier
    writeAccess     -> currentInstanceAttributeInModifier
    readWriteAccess -> currentInstanceAttributeInModifier
    dropAccess      -> currentInstanceDroppedAttributeInModifier
  }

  state currentInstanceDroppedAttributeInModifier warning "the '%K' attribute is in the dropped state at the end of the modifier" {
    neutralAccess   -> currentInstanceDroppedAttributeInModifier
    readAccess      -> currentInstanceDroppedAttributeInModifier error "the attribute cannot be read, it has been dropped"
    writeAccess     -> currentInstanceAttributeInModifier
    readWriteAccess -> currentInstanceDroppedAttributeInModifier error "the attribute cannot be read/written, it has been dropped"
    dropAccess      -> currentInstanceDroppedAttributeInModifier  warning "the attribute is already dropped"
  }

#--- Insert methods 
  insert insertGlobalVariable state globalVariable error message "redefinition of '%K' global variable (previous declaration was in %L)"
  insert insertMutableAttribute state currentInstanceAttributeInModifier error message "redefinition of '%K' attribute (previous declaration was in %L)"
  insert insertNonMutableAttribute state currentInstanceAttribute error message "redefinition of '%K' attribute (previous declaration was in %L)"
  insert insertUndefinedLocalVariable state undefinedLocalVariable error message "redefinition of '%K' variable (previous declaration was in %L)"
  insert insertDefinedLocalVariable state definedLocalVariable error message "redefinition of '%K' variable (previous declaration was in %L)"
  insert insertUndefinedLocalConstant state undefinedLocalConstant error message "redefinition of '%K' variable (previous declaration was in %L)"
  insert insertLocalConstant state localConstant error message "redefinition of '%K' variable (previous declaration was in %L)"
  insert insertUsedLocalConstant state usedLocalConstant error message "redefinition of '%K' variable (previous declaration was in %L)"
  insert insertInputFormalArgument state inputFormalParameter error message "redefinition of '%K' variable (previous declaration was in %L)"
  insert insertInputFormalArgumentDeclaredAsUnused state inputFormalArgumentDeclaredAsUnused error message "redefinition of '%K' variable (previous declaration was in %L)"
  insert insertConstantInputFormalArgument state constantInputFormalArgument error message "redefinition of '%K' variable (previous declaration was in %L)"
  insert insertUsedConstantInputFormalArgument state usedConstantInputFormalArgument error message "redefinition of '%K' variable (previous declaration was in %L)"
  insert insertConstantInputFormalArgumentDeclaredAsUnused state constantInputFormalArgumentDeclaredAsUnused error message "redefinition of '%K' variable (previous declaration was in %L)"
  insert insertOutputFormalArgument state undefinedOutputFormalArgument error message "redefinition of '%K' variable (previous declaration was in %L)"
  insert insertInputOutputFormalArgument state unusedInputOutputFormalArgument error message "redefinition of '%K' variable (previous declaration was in %L)"
  insert insertInputOutputFormalArgumentDeclaredAsUnused state inputOutputFormalArgumentDeclaredAsUnused error message "redefinition of '%K' variable (previous declaration was in %L)"

#--- Search methods
  search searchForReadAccess do readAccess error message "the '%K' variable is not declared"
  search searchForWriteAccess do writeAccess error message "the '%K' variable is not declared"
  search searchForReadWriteAccess do readWriteAccess error message "the '%K' variable is not declared"
  search searchForDropAccess do dropAccess error message "the '%K' variable is not declared"
  search neutralAccess do neutralAccess error message "the '%K' variable is not declared"

#--- 'selectBlock' override definitions
  override selectBlock {
    currentInstanceAttributeInModifier:currentInstanceDroppedAttributeInModifier -> currentInstanceDroppedAttributeInModifier
    currentInstanceDroppedAttributeInModifier:currentInstanceAttributeInModifier -> currentInstanceAttributeInModifier
    constantInputFormalArgument:usedConstantInputFormalArgument -> usedConstantInputFormalArgument
    constantInputFormalArgumentDeclaredAsUnused:usedConstantInputFormalArgument -> usedConstantInputFormalArgument
    definedLocalVariable:droppedLocalVariable -> droppedLocalVariable
    definedLocalVariable:usedLocalVariable -> usedLocalVariable
    definedOutputFormalArgument:undefinedOutputFormalArgument -> undefinedOutputFormalArgument
    droppedInputFormalArgument:usedInputFormalArgument -> usedInputFormalArgument
    droppedInputOutputFormalArgument:usedInputOutputFormalArgument -> usedInputOutputFormalArgument
    droppedLocalVariable:definedLocalVariable -> definedLocalVariable
    inputFormalParameter:droppedInputFormalArgument -> droppedInputFormalArgument
    inputFormalParameter:usedInputFormalArgument -> usedInputFormalArgument
    inputFormalArgumentDeclaredAsUnused:droppedInputFormalArgument -> droppedInputFormalArgument
    inputFormalArgumentDeclaredAsUnused:usedInputFormalArgument -> usedInputFormalArgument
    inputOutputFormalArgumentDeclaredAsUnused:droppedInputOutputFormalArgument -> droppedInputOutputFormalArgument
    inputOutputFormalArgumentDeclaredAsUnused:usedInputOutputFormalArgument -> usedInputOutputFormalArgument
    localConstant:usedLocalConstant -> usedLocalConstant
    undefinedLocalVariable:definedLocalVariable -> definedLocalVariable
    undefinedOutputFormalArgument:definedOutputFormalArgument -> definedOutputFormalArgument
    unusedInputOutputFormalArgument:droppedInputOutputFormalArgument -> droppedInputOutputFormalArgument
    unusedInputOutputFormalArgument:usedInputOutputFormalArgument -> usedInputOutputFormalArgument
    usedInputFormalArgument:droppedInputFormalArgument -> droppedInputFormalArgument
    usedInputOutputFormalArgument:droppedInputOutputFormalArgument -> droppedInputOutputFormalArgument
    usedLocalVariable:definedLocalVariable -> definedLocalVariable
    usedLocalVariable:droppedLocalVariable -> droppedLocalVariable
    droppedLocalVariable:usedLocalVariable -> usedLocalVariable
    undefinedLocalVariable:droppedLocalVariable -> droppedLocalVariable
    undefinedLocalVariable:usedLocalVariable -> usedLocalVariable
    undefinedLocalConstant:localConstant -> undefinedLocalConstant error "this branch defines the '%K' variable, while previous ones let it undefined"
    undefinedLocalConstant:usedLocalConstant -> undefinedLocalConstant error "this branch defines the '%K' variable, while previous ones let it undefined"
  }{
    currentInstanceAttributeInModifier:currentInstanceDroppedAttributeInModifier -> currentInstanceAttributeInModifier error "this branch drops the '%K' attribute, while previous ones let it defined"
    currentInstanceDroppedAttributeInModifier:currentInstanceAttributeInModifier -> currentInstanceAttributeInModifier error "this branch lets the '%K' attribute defined, while previous ones drop it"
    constantInputFormalArgument:usedConstantInputFormalArgument -> usedConstantInputFormalArgument
    constantInputFormalArgumentDeclaredAsUnused:usedConstantInputFormalArgument -> usedConstantInputFormalArgument
    definedLocalVariable:droppedLocalVariable -> definedLocalVariable error "this branch drops the '%K' variable, while previous ones let it defined"
    definedLocalVariable:undefinedLocalVariable -> definedLocalVariable error "this branch lets the '%K' variable undefined, while previous ones define it"
    definedLocalVariable:usedLocalVariable -> usedLocalVariable
    definedOutputFormalArgument:undefinedOutputFormalArgument -> definedOutputFormalArgument error "this branch lets the '%K' variable undefined, while previous ones define it"
    droppedInputFormalArgument:inputFormalParameter -> droppedInputFormalArgument error "this branch drops the '%K' input formal argument, while previous ones let it defined"
    droppedInputFormalArgument:inputFormalArgumentDeclaredAsUnused -> droppedInputFormalArgument
    droppedInputFormalArgument:usedInputFormalArgument -> usedInputFormalArgument error "this branch defines the '%K' input formal argument, while previous ones let it dropped"
    droppedInputOutputFormalArgument:inputOutputFormalArgumentDeclaredAsUnused -> inputOutputFormalArgumentDeclaredAsUnused error "this branch lets the '%K' input formal argument defined, while previous ones drop it"
    droppedInputOutputFormalArgument:unusedInputOutputFormalArgument -> unusedInputOutputFormalArgument error "this branch lets the '%K' input/output formal argument defined, while previous ones drop it"
    droppedInputOutputFormalArgument:usedInputOutputFormalArgument -> usedInputOutputFormalArgument error "this branch lets the '%K' input/output formal argument defined, while previous ones drop it"
    droppedLocalVariable:definedLocalVariable -> droppedLocalVariable error "this branch defines the '%K' variable, while previous ones drop it"
    droppedLocalVariable:usedLocalVariable -> droppedLocalVariable error "this branch defines the '%K' variable, while previous ones drop it"
    inputFormalParameter:droppedInputFormalArgument ->inputFormalParameter error "this branch drops the '%K' input formal argument, while previous let it defined"
    inputFormalParameter:usedInputFormalArgument -> usedInputFormalArgument
    inputFormalArgumentDeclaredAsUnused:usedInputFormalArgument -> usedInputFormalArgument
    inputOutputFormalArgumentDeclaredAsUnused:droppedInputOutputFormalArgument -> inputOutputFormalArgumentDeclaredAsUnused error "this branch drops the '%K' input formal argument defined, while previous ones let it defined"
    inputOutputFormalArgumentDeclaredAsUnused:usedInputOutputFormalArgument -> inputOutputFormalArgumentDeclaredAsUnused
    localConstant:usedLocalConstant -> usedLocalConstant
    undefinedLocalVariable:definedLocalVariable -> definedLocalVariable error "this branch defines the '%K' variable, while previous ones let it undefined"
    undefinedOutputFormalArgument:definedOutputFormalArgument -> definedOutputFormalArgument error "this branch defines the '%K' output formal argument, while previous ones let it undefined"
    unusedInputOutputFormalArgument:droppedInputOutputFormalArgument -> unusedInputOutputFormalArgument error "this branch drops the '%K' input/output formal argument, while previous ones let it undefined"
    unusedInputOutputFormalArgument:usedInputOutputFormalArgument -> usedInputOutputFormalArgument
    usedInputFormalArgument:droppedInputFormalArgument -> usedInputFormalArgument error "this branch drops the '%K' input formal argument, while previous ones let it defined"
    usedInputOutputFormalArgument:droppedInputOutputFormalArgument -> usedInputOutputFormalArgument error "this branch drops the '%K' input/output formal argument, while previous ones let it defined"
    usedLocalVariable:droppedLocalVariable -> usedLocalVariable error "this branch drops the '%K' variable, while previous ones let it defined"
    droppedLocalVariable:undefinedLocalVariable -> droppedLocalVariable
    undefinedLocalVariable:usedLocalVariable -> undefinedLocalVariable error "this branch defines the '%K' variable, while previous ones let it undefined"
    usedLocalVariable:undefinedLocalVariable -> usedLocalVariable error "this branch lets the '%K' variable undefined, while previous defines let it"
  }

#--- 'repeatBlock' override definitions
  override repeatBlock {
    undefinedLocalConstant:localConstant -> undefinedLocalConstant error "the repeated branch should not define the '%K' variable"
    undefinedLocalConstant:usedLocalConstant -> undefinedLocalConstant error "the repeated branch should not define the '%K' variable"
    currentInstanceAttributeInModifier:currentInstanceDroppedAttributeInModifier -> currentInstanceAttributeInModifier error "the repeated branch should not drop the '%K' attribute"
    currentInstanceDroppedAttributeInModifier:currentInstanceAttributeInModifier -> currentInstanceAttributeInModifier
    constantInputFormalArgument:usedConstantInputFormalArgument -> usedConstantInputFormalArgument
    constantInputFormalArgumentDeclaredAsUnused:usedConstantInputFormalArgument -> usedConstantInputFormalArgument
    definedLocalVariable:droppedLocalVariable -> definedLocalVariable error "the repeated branch should not drop the '%K' variable"
    definedLocalVariable:usedLocalVariable -> usedLocalVariable
    definedOutputFormalArgument:undefinedOutputFormalArgument -> definedOutputFormalArgument error "the repeated branch should not drop the '%K' output formal argument"
    droppedInputFormalArgument:usedInputFormalArgument -> droppedInputFormalArgument error "the repeated branch should not drop the '%K' input formal argument"
    droppedInputOutputFormalArgument:usedInputOutputFormalArgument -> droppedInputOutputFormalArgument error "the repeated branch should define the '%K' input formal argument"
    droppedLocalVariable:definedLocalVariable -> droppedLocalVariable error "the repeated branch should not drop the '%K' variable"
    inputFormalArgumentDeclaredAsUnused:droppedInputFormalArgument -> inputFormalArgumentDeclaredAsUnused error "the repeated branch should not drop the '%K' input formal argument"
    inputFormalArgumentDeclaredAsUnused:usedInputFormalArgument -> usedInputFormalArgument
    inputFormalParameter:droppedInputFormalArgument -> inputFormalParameter error "the repeated branch should not drop the '%K' input formal argument"
    inputFormalParameter:usedInputFormalArgument -> usedInputFormalArgument
    inputOutputFormalArgumentDeclaredAsUnused:droppedInputOutputFormalArgument -> inputOutputFormalArgumentDeclaredAsUnused error "the repeated branch should not drop the '%K' input/output formal argument"
    inputOutputFormalArgumentDeclaredAsUnused:usedInputOutputFormalArgument -> usedInputOutputFormalArgument
    localConstant:usedLocalConstant -> usedLocalConstant
    undefinedLocalVariable:definedLocalVariable -> undefinedLocalVariable error "the repeated branch should not define the '%K' variable"
    undefinedOutputFormalArgument:definedOutputFormalArgument -> undefinedOutputFormalArgument error "the repeated branch should not define the '%K' output formal argument"
    unusedInputOutputFormalArgument:droppedInputOutputFormalArgument -> unusedInputOutputFormalArgument error "the repeated branch should not drop the '%K' input/output formal argument"
    unusedInputOutputFormalArgument:usedInputOutputFormalArgument -> usedInputOutputFormalArgument
    usedInputFormalArgument:droppedInputFormalArgument -> usedInputFormalArgument error "the repeated branch should not drop the '%K' input formal argument"
    usedInputOutputFormalArgument:droppedInputOutputFormalArgument -> usedInputOutputFormalArgument error "the repeated branch should not drop the '%K' input/output formal argument"
    usedLocalVariable:definedLocalVariable -> definedLocalVariable
    usedLocalVariable:droppedLocalVariable -> usedLocalVariable error "the repeated branch should not drop the '%K' variable"
    droppedLocalVariable:usedLocalVariable -> droppedLocalVariable error "the repeated branch should not define the dropped '%K' variable"
    undefinedLocalVariable:droppedLocalVariable -> droppedLocalVariable
    undefinedLocalVariable:usedLocalVariable -> undefinedLocalVariable error "the repeated branch should not define the '%K' variable"
  }{
    currentInstanceAttributeInModifier:currentInstanceDroppedAttributeInModifier -> currentInstanceAttributeInModifier
    constantInputFormalArgument:usedConstantInputFormalArgument -> usedConstantInputFormalArgument
    constantInputFormalArgumentDeclaredAsUnused:usedConstantInputFormalArgument -> usedConstantInputFormalArgument
    definedLocalVariable:usedLocalVariable -> usedLocalVariable
    inputFormalArgumentDeclaredAsUnused:usedInputFormalArgument -> usedInputFormalArgument
    inputFormalParameter:usedInputFormalArgument -> usedInputFormalArgument
    localConstant:usedLocalConstant -> usedLocalConstant
    inputOutputFormalArgumentDeclaredAsUnused:usedInputOutputFormalArgument -> usedInputOutputFormalArgument
    usedInputOutputFormalArgument:unusedInputOutputFormalArgument -> usedInputOutputFormalArgument
    droppedLocalVariable:undefinedLocalVariable -> droppedLocalVariable
  }
}

#----------------------------------------------------------------------------------------------------------------------*
