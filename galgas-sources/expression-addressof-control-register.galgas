#—————————————————————————————————————————————————————————————————————————————————————————————————
#!  AST                                                                                                                  
#—————————————————————————————————————————————————————————————————————————————————————————————————

class @addressofControlRegisterAST : @expressionAST {
  public var @controlRegisterLValueAST mControlRegisterLValue
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#!  SYNTAX                                                                                                               
#—————————————————————————————————————————————————————————————————————————————————————————————————

syntax extension omnibus_syntax {

  #·····················································································································

  rule <primary> ?!@ast ioAST !@expressionAST outExpression {
    $addressof$
    <control_register_lvalue> !?ioAST ?let registerLValue
    outExpression = @addressofControlRegisterAST {!registerLValue}
  }

  #·····················································································································

}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#!  PRECEDENCE GRAPH FROM EXPRESSION                                                                                     
#—————————————————————————————————————————————————————————————————————————————————————————————————

override method @addressofControlRegisterAST addDependenceEdgeForStaticExpression
  ?let @lstring unused inConstantName
  ?!@semanticTypePrecedenceGraph unused ioGraph
{
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#!  NOTE TYPES                                                                                                           
#—————————————————————————————————————————————————————————————————————————————————————————————————

override method @addressofControlRegisterAST noteExpressionTypesInPrecedenceGraph
  ?!@semanticTypePrecedenceGraph ioGraph
{
  [self.mControlRegisterLValue noteExpressionTypesInPrecedenceGraph !?ioGraph]
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#!  SEMANTICS                                                                                                            
#—————————————————————————————————————————————————————————————————————————————————————————————————

override method @addressofControlRegisterAST analyzeExpression
  ?self:let @omnibusType inSelfType
  ?routineAttributes:let @routineAttributes inRoutineAttributes
  ?optionalTargetType:let @omnibusType unused inOptionalTargetType
  ?context:let @semanticContext inContext
  ?mode:let @mode inMode
  ?!temporary:@semanticTemporariesStruct ioTemporaries
  ?!staticEntityMap:@staticEntityMap ioStaticEntityMap
  ?!variableMap:@universalValuedObjectMap ioUniversalMap
  ?!alloca:@allocaList ioAllocaList
  ?!instructionListIR:@instructionListIR ioInstructionGenerationList
  !result:@objectIR outResult
{
  [self.mControlRegisterLValue controlRegisterLValueSemanticAnalysis
    !writeAccess:false
    !self: inSelfType
    !routineAttributes: inRoutineAttributes
    !context: inContext
    !mode: inMode
    !?temporary: ioTemporaries
    !?staticEntityMap: ioStaticEntityMap
    !?variableMap: ioUniversalMap
    !?alloca: ioAllocaList
    !?instructionListIR: ioInstructionGenerationList
    ?registerType:*
    ?registerBitCount:*
    ?sliceMap:*
    ?llvmRegisterAddressName:let llvmRegisterAddressName
  ]
#-------------------- Result
  let resultTypeProxy = [inContext.mTypeMap searchKey
    !["u" + [inContext.mTargetParameters.mPointerSize string] nowhere]
  ]
  outResult = .llvmNamedValue {!type:[resultTypeProxy type] !llvmName:llvmRegisterAddressName}
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
