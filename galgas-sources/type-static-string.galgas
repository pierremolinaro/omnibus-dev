#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  AST                                                                                                                 *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @literalStringDeclaration : @abstractDeclaration {
  @lstring mLiteralStringTypeName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @literalStringDeclaration location -> @location outLocation {
  outLocation = mLiteralStringTypeName.location
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  PRECEDENCE GRAPH                                                                                                    *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @literalStringDeclaration enterInPrecedenceGraph
  ?!@semanticTypePrecedenceGraph ioGraph
{
  [!?ioGraph addNode !mLiteralStringTypeName !self]
  [!?ioGraph addEdge !mLiteralStringTypeName !["uint8" nowhere]]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @literalStringDeclaration keyRepresentation -> @string outRepresentation {
  outRepresentation = "literal string " + mLiteralStringTypeName 
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  ENTER IN CONTEXT                                                                                                    *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @literalStringDeclaration enterInContext
  ?procedureDeclarationList:let @procedureDeclarationListAST unused inProcedureListAST
  ?!context:@semanticContext ioContext
  ?!staticStringMap:@staticStringMap unused ioGlobalLiteralStringMap
{
  [@unifiedTypeMap-proxy makeProxy !?ioContext.mTypeMap !["uint8" nowhere] ?let uint8Type]
#--- Enter in type map
  [!?ioContext.mTypeMap insertKey
    !lkey:mLiteralStringTypeName
    !kind:.literalString
    !typedConstantMap:{}
    !procedureMap:{}
    !copiable:true
    !equatable:true
    !comparable:true
    !enumerationType:uint8Type
  ]
#--- Enter operators
  enterStaticStringOperators (
    !integerTypeName:mLiteralStringTypeName
    !?context:ioContext
  )
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

proc enterStaticStringOperators
  ?integerTypeName:@lstring inBooleanTypeName
  ?!context:@semanticContext ioContext
{
  [@unifiedTypeMap-proxy makeProxy !?ioContext.mTypeMap !inBooleanTypeName ?let selfTypeProxy]
  [!?ioContext.mEqualOperatorMap insertKey
    !.new {!inBooleanTypeName.string + "." + inBooleanTypeName !inBooleanTypeName.location}
    !selfTypeProxy
    !@infixObjectObjectOperatorDescription.new {!.icmp_eq} # TODO
  ]
  [!?ioContext.mNonEqualOperatorMap insertKey
    !.new {!inBooleanTypeName.string + "." + inBooleanTypeName !inBooleanTypeName.location}
    !selfTypeProxy
    !@infixObjectObjectOperatorDescription.new {!.icmp_eq} # TODO
  ]
  [!?ioContext.mStrictInfOperatorMap insertKey
    !.new {!inBooleanTypeName.string + "." + inBooleanTypeName !inBooleanTypeName.location}
    !selfTypeProxy
    !@infixObjectObjectOperatorDescription.new {!.icmp_eq} # TODO
  ]
  [!?ioContext.mInfEqualOperatorMap insertKey
    !.new {!inBooleanTypeName.string + "." + inBooleanTypeName !inBooleanTypeName.location}
    !selfTypeProxy
    !@infixObjectObjectOperatorDescription.new {!.icmp_eq} # TODO
  ]
  [!?ioContext.mStrictSupOperatorMap insertKey
    !.new {!inBooleanTypeName.string + "." + inBooleanTypeName !inBooleanTypeName.location}
    !selfTypeProxy
    !@infixObjectObjectOperatorDescription.new {!.icmp_eq} # TODO
  ]
  [!?ioContext.mSupEqualOperatorMap insertKey
    !.new {!inBooleanTypeName.string + "." + inBooleanTypeName !inBooleanTypeName.location}
    !selfTypeProxy
    !@infixObjectObjectOperatorDescription.new {!.icmp_eq} # TODO
  ] 
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  SEMANTIC ANALYSIS                                                                                                   *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @literalStringDeclaration initAnalysis ?!context:@semanticContext unused ioContext { }

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @literalStringDeclaration semanticAnalysis
  ?context:let @semanticContext unused inContext
  ?!temporary:@semanticTemporariesStruct unused ioTemporaries
  ?!intermediateCode:@intermediateCodeStruct unused ioIntermediateCodeStruct
{
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  CODE GENERATION                                                                                                     *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @literalStringTypeIR : @abstractTypeIR {
  @string mLiteralStringTypeName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
