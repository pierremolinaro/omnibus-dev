#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  AST                                                                                                                  
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @literalStringDeclaration : @abstractDeclaration {
  @lstring mLiteralStringTypeName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @literalStringDeclaration location -> @location outLocation {
  outLocation = mLiteralStringTypeName.location
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  ADD EXTENSION                                                                                                        
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @literalStringDeclaration addExtension
  ?!@extensionDeclarationListAST unused ioExtensionDeclarationListAST
  !@abstractDeclaration outNewDeclaration
{
  outNewDeclaration = self
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  PRECEDENCE GRAPH                                                                                                     
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @literalStringDeclaration enterInPrecedenceGraph
  ?!@semanticTypePrecedenceGraph ioGraph
{
  let literalStringTypeName = @lstring.new {!"$" + mLiteralStringTypeName !mLiteralStringTypeName.location}
  [!?ioGraph addNode !literalStringTypeName !self]
  [!?ioGraph addEdge !literalStringTypeName !["$uint8" nowhere]]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @literalStringDeclaration keyRepresentationForErrorSignaling -> @string outRepresentation {
  outRepresentation = "literal string " + mLiteralStringTypeName 
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  ENTER IN CONTEXT                                                                                                     
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @literalStringDeclaration enterRoutinesInContext
  ?procedureDeclarationList:let @functionDeclarationListAST unused inProcedureListAST
  ?!context:@semanticContext unused ioContext
  ?!staticStringMap:@staticStringMap unused ioGlobalLiteralStringMap
{
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @literalStringDeclaration enterInContext
  ?procedureDeclarationList:let @functionDeclarationListAST unused inProcedureListAST
  ?!context:@semanticContext ioContext
  ?!staticStringMap:@staticStringMap unused ioGlobalLiteralStringMap
{
  let uint8Type = @unifiedTypeMap-proxy.searchKey {!ioContext.mTypeMap !["uint8" nowhere]}
#--- Enter in type map
  [!?ioContext.mTypeMap insertKey
    !lkey:mLiteralStringTypeName
    !llvmTypeName:"i8*"
    !kind:.literalString
    !classMethodMap:{}
    !instantiable:true
    !copyable:true
    !equatable:true
    !comparable:true
    !enumerationType:uint8Type
  ]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  SEMANTIC ANALYSIS                                                                                                    
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @literalStringDeclaration semanticAnalysis
  ?context:let @semanticContext unused inContext
  ?!temporary:@semanticTemporariesStruct unused ioTemporaries
  ?!intermediateCode:@intermediateCodeStruct unused ioIntermediateCodeStruct
{
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  CODE GENERATION                                                                                                      
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @literalStringTypeIR : @abstractTypeIR {
  @string mLiteralStringTypeName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
