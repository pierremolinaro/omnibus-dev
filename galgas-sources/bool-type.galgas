#----------------------------------------------------------------------------------------------------------------------*
#  AST                                                                                                                 *
#----------------------------------------------------------------------------------------------------------------------*

class @booleanDeclaration : @abstractDeclaration {
  @lstring mBooleanTypeName
  @lstringlist mAttributeList
}

#----------------------------------------------------------------------------------------------------------------------*

override getter @booleanDeclaration location -> @location outLocation {
  outLocation = mBooleanTypeName.location
}

#----------------------------------------------------------------------------------------------------------------------*
#  PRECEDENCE GRAPH                                                                                                    *
#----------------------------------------------------------------------------------------------------------------------*

override method @booleanDeclaration enterInPrecedenceGraph
  ?!@semanticTypePrecedenceGraph ioGraph
{
  [!?ioGraph addNode !mBooleanTypeName !self]
}

#----------------------------------------------------------------------------------------------------------------------*

override getter @booleanDeclaration keyRepresentation -> @string outRepresentation {
  outRepresentation = "bool " + mBooleanTypeName 
}

#----------------------------------------------------------------------------------------------------------------------*
#  ENTER IN CONTEXT                                                                                                    *
#----------------------------------------------------------------------------------------------------------------------*

override method @booleanDeclaration enterInContext
  ?procedureDeclarationList:let @procedureDeclarationListAST unused inProcedureListAST
  ?!context:@semanticContext ioContext
  ?!staticStringMap:@globalLiteralStringMap unused ioGlobalLiteralStringMap
{
#---
  var copiable = true
  for (s) in mAttributeList do
    if s.string == "unique" then
      if not copiable then
        error s : "duplicated attribute"
      end
      copiable = false
    end
  end
#--- Enter in type map
  [!?ioContext.mTypeMap insertKey
    !lkey:mBooleanTypeName
    !kind:.boolean
    !constructorMap:{}
    !procedureMap:{} # Procedure map
    !copiable:copiable
    !equatable:true
    !comparable:true
  ]
#--- Enter boolean type
  if ioContext.mBooleanType != .null then
    error mBooleanTypeName : "Boolean type already defined"
  end
  [@unifiedTypeMap-proxy makeProxy !?ioContext.mTypeMap !mBooleanTypeName ?let boolType]
  ioContext.mBooleanType = boolType
#--- Enter boolean operators
  enterBooleanOperators (
    !boolTypeName:mBooleanTypeName
    !?context:ioContext
  )
}

#----------------------------------------------------------------------------------------------------------------------*

private proc enterBooleanOperators
  ?boolTypeName:@lstring inBooleanTypeName
  ?!context:@semanticContext ioContext
{
  [@unifiedTypeMap-proxy makeProxy !?ioContext.mTypeMap !inBooleanTypeName ?let selfTypeProxy]
  let boolBoolOp = combineTypeNamesForInfixOperator (!inBooleanTypeName.string !inBooleanTypeName.string)
  [!?ioContext.mEqualOperatorMap insertKey
    !boolBoolOp
    !selfTypeProxy
    !.icmp_eq
    !@infixObjectObjectOperatorDescription.new {!.icmp_eq}
  ]
  [!?ioContext.mNonEqualOperatorMap insertKey
    !boolBoolOp
    !selfTypeProxy
    !.icmp_ne
    !@infixObjectObjectOperatorDescription.new {!.icmp_ne}
  ]
  [!?ioContext.mStrictInfOperatorMap insertKey
    !boolBoolOp
    !selfTypeProxy
    !.icmp_ult
    !@infixObjectObjectOperatorDescription.new {!.icmp_ult}
  ]
  [!?ioContext.mInfEqualOperatorMap insertKey
    !boolBoolOp
    !selfTypeProxy
    !.icmp_ule
    !@infixObjectObjectOperatorDescription.new {!.icmp_ule}
  ]
  [!?ioContext.mStrictSupOperatorMap insertKey
    !boolBoolOp
    !selfTypeProxy
    !.icmp_ugt
    !@infixObjectObjectOperatorDescription.new {!.icmp_ugt}
  ]
  [!?ioContext.mSupEqualOperatorMap insertKey
    !boolBoolOp
    !selfTypeProxy
    !.icmp_uge
    !@infixObjectObjectOperatorDescription.new {!.icmp_uge}
  ]
  [!?ioContext.mBooleanXorOperatorMap insertKey
    !boolBoolOp
    !selfTypeProxy
    !.xor
    !@infixObjectObjectOperatorDescription.new {!.xor}
  ]
  [!?ioContext.mNotOperatorMap insertKey
    !inBooleanTypeName
    !selfTypeProxy
  ]
}

#----------------------------------------------------------------------------------------------------------------------*
#  SEMANTIC ANALYSIS                                                                                                   *
#----------------------------------------------------------------------------------------------------------------------*

override method @booleanDeclaration initAnalysis ?!context:@semanticContext unused ioContext { }

#----------------------------------------------------------------------------------------------------------------------*

override method @booleanDeclaration semanticAnalysis
  ?context:let @semanticContext unused inContext
  ?!intermediateCode:@intermediateCodeStruct unused ioIntermediateCodeStruct
{
}

#----------------------------------------------------------------------------------------------------------------------*



