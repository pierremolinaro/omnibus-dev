
setter @instructionListIR appendTrunc
  ?let @PLMType inResultType
  ?!@objectIR ioObject
  ?!@semanticTemporariesStruct ioTemporaries
{
  if [ioObject isLiteralInteger] then
    [ioObject literalInteger ?type:* ?value:let @bigint value]
    ioObject = .literalInteger {!type:inResultType !value:value}
  else
    getNewTempValue (!inResultType !?ioTemporaries ?let result)
    self += !@truncIR.new {!result !ioObject}
    ioObject = result
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @truncIR : @abstractInstructionIR {
  @objectIR mResult
  @objectIR mSource
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @truncIR llvmInstructionCode
  ?!@string ioLLVMcode
  ?let @generationContext unused inGenerationContext
  ?!@generationAdds unused ioGenerationAdds
{
  ioLLVMcode += "  " + [mResult llvmName] + " = trunc "
  ioLLVMcode += [mSource  llvmTypeName] + " " + [mSource llvmName] + " to " + [mResult llvmTypeName] + "\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @truncIR enterAccessibleEntities
  ?!@accessibleEntities unused ioAccessibleEntities
  ?!@uint unused ioMaxBranchOfOnInstructions
{
}


#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
