
setter @instructionListIR appendShiftLeft
  ?let @objectIR inResult
  ?let @objectIR inSource
  ?let @uint inShiftAmount
{
  self += !@leftShiftIR.new {!inResult !inSource !inShiftAmount}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @leftShiftIR : @abstractInstructionIR {
  @objectIR mResult
  @objectIR mSource
  @uint mShiftAmount
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @leftShiftIR llvmInstructionCode
  ?!@string ioLLVMcode
  ?let @generationContext unused inGenerationContext
  ?!@generationAdds unused ioGenerationAdds
{
  ioLLVMcode += "  " + [self.mResult llvmName]
             + " = shl " + [self.mSource  llvmTypeName] + " " + [self.mSource llvmName]
             + ", " + self.mShiftAmount + "\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
