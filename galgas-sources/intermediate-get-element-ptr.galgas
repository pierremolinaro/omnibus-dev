
setter @instructionListIR appendGetElementPtr
  ?let @objectInMemoryIR inTarget
  ?let @objectInMemoryIR inSource
  ?let @uint inIndex
{
  self += !@getElementPtrIR.new {!inTarget !inSource !inIndex}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @getElementPtrIR : @abstractInstructionIR {
  @objectInMemoryIR mTarget
  @objectInMemoryIR mSource
  @uint mIndex
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @getElementPtrIR llvmInstructionCode
  ?!@string ioLLVMcode
  ?let @generationContext unused inGenerationContext
  ?!@generationAdds unused ioGenerationAdds
{
  let llvmType = [[mSource type] llvmTypeName]
  ioLLVMcode += "  " + [mTarget llvmName] + " = getelementptr inbounds "
  ioLLVMcode += llvmType + ", " + llvmType + "* " + [mSource llvmName] + ", i32 0, i32 " + mIndex + "\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @getElementPtrIR enterAccessibleEntities ?!@accessibleEntities unused ioAccessibleEntities {
}


#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
