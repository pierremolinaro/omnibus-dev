#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  AST                                                                                                                  
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @extensionDeclarationListAST {
  @lstring mTypeName
  @functionDeclarationListAST mProcedureDeclarationListAST
  @structurePropertyListAST mPropertyList
  @systemRoutineDeclarationListAST mSVCListAST
  @guardDeclarationListAST mGuardListAST
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  SYNTAX                                                                                                               
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax extension plm_syntax {

  #·····················································································································

  rule <declaration> ?!@ast ioAST {
    $extension$
    $\$type$ ?let typeName
    ${$
    @functionDeclarationListAST procedureDeclarationListAST = {}
    @structurePropertyListAST propertyList = {}
    @systemRoutineDeclarationListAST svcListAST = {}
    @guardDeclarationListAST guardListAST = {}
    repeat
    while
      <property_in_extension> !?propertyList
    while
      <function> !?procedureDeclarationListAST
    while
     <system_routine> !?svcListAST
    while
      <guard> !?guardListAST
    while
      $;$
    end
    $}$
    ioAST.mExtensionDeclarationListAST +=
      !typeName
      !procedureDeclarationListAST
      !propertyList
      !svcListAST
      !guardListAST
  }

  #·····················································································································

  rule <property_in_extension> ?!@structurePropertyListAST ioPropertyList {
    @bool public
    select
      public = false
    or
      $public$
      public = true
    end
    @bool constant
    select
      $var$
      constant = false
    or
      $let$
      constant = true
    end
    $identifier$ ?let fieldName
    $\$type$ ?let typeName
    $=$
    <expression> ?let initExpression
    ioPropertyList += !fieldName !constant !public !typeName !.expression{!initExpression:initExpression}
  }

  #·····················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

abstract method @abstractDeclarationAST addExtension
  ?!@extensionDeclarationListAST ioExtensionDeclarationListAST
  ?!@extendStaticArrayDeclarationAST ioExtendStaticArrayDeclarationAST
  !@abstractDeclarationAST outNewDeclaration

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
