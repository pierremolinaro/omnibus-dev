
setter @instructionListIR appendStoreTaskVariable
  ?let @string inTaskName
  ?let @string inVarName
  ?let @unifiedTypeMap-proxy inTargetVarType
  ?let @valueIR inSourceValue
{
  self += !@storeTaskVariableIR.new {!inTaskName !inVarName !inTargetVarType !inSourceValue}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @storeTaskVariableIR : @abstractInstructionIR {
  @string mTaskName
  @string mVarName
  @unifiedTypeMap-proxy mTargetVarType
  @valueIR mSourceValue
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @storeTaskVariableIR llvmInstructionCode
  ?!@string ioLLVMcode
  ?let @generationContext unused inGenerationContext
  ?!@generationAdds unused ioGenerationAdds
{
  let llvmType = [mTargetVarType llvmTypeName]
  ioLLVMcode += "  store "
  ioLLVMcode += llvmType + " " + [mSourceValue llvmName] + ", " + llvmType + " * @"
  ioLLVMcode += llvmNameForTaskVariable (!mTaskName !mVarName) + "\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @storeTaskVariableIR enterAccessibleEntities 
  ?!@accessibleEntities ioAccessibleEntities
  ?!@uint unused ioMaxBranchOfOnInstructions
{
  ioAccessibleEntities.mTaskVariableSet += !mTaskName + "." + mVarName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
