#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

#setter @instructionListIR appendPropertyReferenceFromSelf
#  ?let @objectIR inTarget
#  ?let @unifiedTypeMap-proxy inSelfType
#  ?let @string inPropertyName
#  ?let @uint inPropertyIndex
#{
#  if inSelfType == .null then
#    error .nowhere : "<<INTERNAL ERROR>>"
#  end
#  self += !@getPropertyReferenceFromSelfIR.new {!inTarget !inSelfType !inPropertyName !inPropertyIndex}
#}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

#class @getPropertyReferenceFromSelfIR : @abstractInstructionIR {
#  @objectIR mTarget
#  @unifiedTypeMap-proxy mSelfType
#  @string mPropertyName
#  @uint mPropertyIndex
#}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

#override method @getPropertyReferenceFromSelfIR llvmInstructionCode
#  ?!@string ioLLVMcode
#  ?let @generationContext unused inGenerationContext
#  ?!@generationAdds unused ioGenerationAdds
#{
#  let llvmType = [[mSelfType kind] llvmTypeName]
#  ioLLVMcode += "  " + [mTarget llvmName]
#  ioLLVMcode += " = call " + [mTarget llvmTypeName] + "* @\"" + llvmType + ".access." + mPropertyName
#  ioLLVMcode += "\" (" + llvmType + " * %self) ; " + mPropertyName + "\n"
#
##  ioLLVMcode += ";  " + [mTarget llvmName] + " = getelementptr inbounds "
##  ioLLVMcode += llvmType + ", " + llvmType + " * %self, i32 0, i32 " + mPropertyIndex
##  ioLLVMcode += " ; " + mPropertyName + "\n"
#}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

#override method @getPropertyReferenceFromSelfIR enterAccessibleEntities
#  ?!@accessibleEntities unused ioAccessibleEntities
#  ?!@uint unused ioMaxBranchOfOnInstructions
#{
#}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
