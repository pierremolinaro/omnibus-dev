#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  AST                                                                                                                  
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @letInstructionNOP : @instructionAST {
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  SYNTAX                                                                                                               
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax extension plm_syntax {

  #·····················································································································

  rule <instruction> ?!@instructionListAST ioInstructionList {
    $nop$
    ioInstructionList += !.here !@letInstructionNOP.new
  }

  #·····················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  NOTE TYPES                                                                                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @letInstructionNOP noteInstructionTypesInPrecedenceGraph ?!@semanticTypePrecedenceGraph unused ioGraph {
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  SEMANTICS                                                                                                            
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

#override method @letInstructionNOP analyze
#  ?self:let @unifiedTypeMap-proxy unused inSelfType
#  ?propertiesAreMutable:let @bool unused inRoutineCanMutateProperties
#  ?directAccessToPropertiesAllowed:let @bool unused inDirectAccessToPropertiesAllowed
#  ?routineNameForInvocationGraph:let @lstring unused inCallerNameForInvocationGraph
#  ?context:let @semanticContext unused inContext
#  ?mode:let @mode unused inCurrentMode
#  ?!temporary:@semanticTemporariesStruct unused ioTemporaries
#  ?!staticStringMap:@staticStringMap unused ioGlobalLiteralStringMap
#  ?!variableMap:@unifiedSymbolMapEx unused ioVariableMap
#  ?!variableMap:@universalPropertyAndRoutineMapForContext unused ioUniversalMap
#  ?!alloca:@allocaList unused ioAllocaList
#  ?!instructionListIR:@instructionListIR ioInstructionGenerationList
#{
#  [!?ioInstructionGenerationList appendNOP]
#}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
