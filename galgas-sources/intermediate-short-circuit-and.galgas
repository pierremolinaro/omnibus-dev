#—————————————————————————————————————————————————————————————————————————————————————————————————

setter @instructionListIR appendShortCircuitAndOperation
  ?let @objectIR inTargetOperand
  ?let @string inLeftOperandLLVMName
  ?let @instructionListIR inLeftInstructionList
  ?let @string inRightOperandLLVMName
  ?let @instructionListIR inRightInstructionList
  ?let @location inLocation
{
  self += !@shortCircuitAndOperationIR {
    !inTargetOperand
    !inLeftOperandLLVMName
    !inLeftInstructionList
    !inRightOperandLLVMName
    !inRightInstructionList
    !inLocation
  }
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

class @shortCircuitAndOperationIR : @abstractInstructionIR {
  public var @objectIR mTargetOperand
  public var @string mLeftOperandLLVMName
  public var @instructionListIR mLeftInstructionList
  public var @string mRightOperandLLVMName
  public var @instructionListIR mRightInstructionList
  public var @location mLocation
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override method @shortCircuitAndOperationIR enterAccessibleEntities 
  ?!@stringset ioInvokedRoutineSet
  ?!@uint ioMaxBranchOfOnInstructions
{
  [self.mLeftInstructionList  enterAccessibleEntities !?ioInvokedRoutineSet !?ioMaxBranchOfOnInstructions]
  [self.mRightInstructionList enterAccessibleEntities !?ioInvokedRoutineSet !?ioMaxBranchOfOnInstructions]
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override method @shortCircuitAndOperationIR llvmInstructionCode
  ?!@string ioLLVMcode
  ?let @generationContext inGenerationContext
  ?!@generationAdds ioGenerationAdds
{
  let startLabel  = "and." + [self.mLocation endLocationIndex] + ".start"
  let trueLabel  = "and." + [self.mLocation endLocationIndex] + ".true"
  let falseLabel = "and." + [self.mLocation endLocationIndex] + ".false"
  ioLLVMcode += "  br label %" + startLabel + "\n\n"
  ioLLVMcode += startLabel + ":\n"
  [self.mLeftInstructionList instructionListLLVMCode !?ioLLVMcode !inGenerationContext !?ioGenerationAdds]
  ioLLVMcode += "  br i1 " + self.mLeftOperandLLVMName + ", label %" + trueLabel + ", label %" + falseLabel + "\n\n"
  ioLLVMcode += trueLabel + ":\n"
  [self.mRightInstructionList instructionListLLVMCode !?ioLLVMcode !inGenerationContext !?ioGenerationAdds]
  ioLLVMcode += "  br label %" + falseLabel + "\n\n"
  ioLLVMcode += falseLabel + ":\n"
  ioLLVMcode += "  " + [self.mTargetOperand llvmName]
             + " = phi i1 [" + self.mRightOperandLLVMName + ", %" + trueLabel + "], [false, %" + startLabel + "]\n"
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
