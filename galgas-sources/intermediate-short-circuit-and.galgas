#----------------------------------------------------------------------------------------------------------------------*

setter @instructionListIR appendShortCircuitAndOperation
  ?let @valueIR inTargetOperand
  ?let @valueIR inLeftOperand
  ?let @instructionListIR inLeftInstructionList
  ?let @valueIR inRightOperand
  ?let @instructionListIR inRightInstructionList
  ?let @location inLocation
{
  self += !@shortCircuitAndOperationIR.new {
    !inTargetOperand
    !inLeftOperand
    !inLeftInstructionList
    !inRightOperand
    !inRightInstructionList
    !inLocation
  }
}

#----------------------------------------------------------------------------------------------------------------------*

class @shortCircuitAndOperationIR : @abstractInstructionIR {
  @valueIR mTargetOperand
  @valueIR mLeftOperand
  @instructionListIR mLeftInstructionList
  @valueIR mRightOperand
  @instructionListIR mRightInstructionList
  @location mLocation
}

#----------------------------------------------------------------------------------------------------------------------*

override method @shortCircuitAndOperationIR enterAccessibleEntities ?!@accessibleEntities ioAccessibleEntities {
  [mLeftInstructionList  enterAccessibleEntities !?ioAccessibleEntities]
  [mRightInstructionList enterAccessibleEntities !?ioAccessibleEntities]
}

#----------------------------------------------------------------------------------------------------------------------*

override method @shortCircuitAndOperationIR llvmInstructionCode
  ?!@string ioCode
  ?let @generationContext inGenerationContext
  ?!@stringset ioIntrinsicsDeclarationSet
{
  let startLabel  = "and." + [mLocation locationIndex] + ".start"
  let trueLabel  = "and." + [mLocation locationIndex] + ".true"
  let falseLabel = "and." + [mLocation locationIndex] + ".false"
  ioCode += "  br label %" + startLabel + "\n\n"
  ioCode += ";--- left operand of short circuit and\n"
  ioCode += startLabel + ":\n"
  [mLeftInstructionList instructionListLLVMCode !?ioCode !inGenerationContext !?ioIntrinsicsDeclarationSet]
  ioCode += "  br i1 " + mLeftOperand + ", label %" + trueLabel + ", label %" + falseLabel + "\n\n"
  ioCode += trueLabel + ":\n"
  [mRightInstructionList instructionListLLVMCode !?ioCode !inGenerationContext !?ioIntrinsicsDeclarationSet]
  ioCode += "  br label %" + falseLabel + "\n\n"
  ioCode += falseLabel + ":\n"
  ioCode += "  " + mTargetOperand + " = phi i1 [" + mRightOperand + ", %" + trueLabel + "], [false, %" + startLabel + "]\n"
}

#----------------------------------------------------------------------------------------------------------------------*
