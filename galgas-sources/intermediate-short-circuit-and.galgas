#----------------------------------------------------------------------------------------------------------------------*

setter @instructionListIR appendShortCircuitAndOperation
  ?let @operandIR inTargetOperand
  ?let @operandIR inLeftOperand
  ?let @instructionListIR inLeftInstructionList
  ?let @operandIR inRightOperand
  ?let @instructionListIR inRightInstructionList
  ?let @location inLocation
{
  self += !@shortCircuitAndOperationIR.new {
    !inTargetOperand
    !inLeftOperand
    !inLeftInstructionList
    !inRightOperand
    !inRightInstructionList
    !inLocation
  }
}

#----------------------------------------------------------------------------------------------------------------------*

class @shortCircuitAndOperationIR : @abstractInstructionIR {
  @operandIR mTargetOperand
  @operandIR mLeftOperand
  @instructionListIR mLeftInstructionList
  @operandIR mRightOperand
  @instructionListIR mRightInstructionList
  @location mLocation
}

#----------------------------------------------------------------------------------------------------------------------*

override method @shortCircuitAndOperationIR enterAccessibleEntities ?!@accessibleEntities ioAccessibleEntities {
  [mLeftInstructionList  enterAccessibleEntities !?ioAccessibleEntities]
  [mRightInstructionList enterAccessibleEntities !?ioAccessibleEntities]
}

#----------------------------------------------------------------------------------------------------------------------*

override method @shortCircuitAndOperationIR llvmInstructionCode
  ?!@string ioLLVMcode
  ?let @generationContext inGenerationContext
  ?!@generationAdds ioGenerationAdds
{
  let startLabel  = "and." + [mLocation locationIndex] + ".start"
  let trueLabel  = "and." + [mLocation locationIndex] + ".true"
  let falseLabel = "and." + [mLocation locationIndex] + ".false"
  ioLLVMcode += "  br label %" + startLabel + "\n\n"
  ioLLVMcode += ";--- left operand of short circuit and\n"
  ioLLVMcode += startLabel + ":\n"
  [mLeftInstructionList instructionListLLVMCode !?ioLLVMcode !inGenerationContext !?ioGenerationAdds]
  ioLLVMcode += "  br i1 " + mLeftOperand.mValue + ", label %" + trueLabel + ", label %" + falseLabel + "\n\n"
  ioLLVMcode += trueLabel + ":\n"
  [mRightInstructionList instructionListLLVMCode !?ioLLVMcode !inGenerationContext !?ioGenerationAdds]
  ioLLVMcode += "  br label %" + falseLabel + "\n\n"
  ioLLVMcode += falseLabel + ":\n"
  ioLLVMcode += "  " + mTargetOperand.mValue + " = phi i1 [" + mRightOperand.mValue + ", %" + trueLabel + "], [false, %" + startLabel + "]\n"
}

#----------------------------------------------------------------------------------------------------------------------*
