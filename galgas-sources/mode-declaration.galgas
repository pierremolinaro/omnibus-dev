#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  AST                                                                                                                 *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @modeDeclaration : @abstractDeclaration {
  @lstring mModeName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @modeDeclaration location -> @location outLocation {
  outLocation = mModeName.location
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  SYNTAX                                                                                                              *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax extension plm_target_specific_syntax {

  #·····················································································································

  rule <declaration> ?!@ast ioAST {
    $mode$
    $modeName$ ?let modeName
    ioAST.mDeclarationList += !@modeDeclaration.new {!modeName}
  }

  #·····················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  MODE NAMES                                                                                                          *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once bootModeName -> @string outResult {
  outResult = "boot"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  PRECEDENCE GRAPH                                                                                                    *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @modeDeclaration enterInPrecedenceGraph
  ?!@semanticTypePrecedenceGraph ioGraph
{
  [!?ioGraph addNode !mModeName !self]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @modeDeclaration keyRepresentation -> @string outRepresentation {
  outRepresentation = "mode " + mModeName 
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  ENTER IN CONTEXT                                                                                                    *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @modeDeclaration enterInContext
  ?procedureDeclarationList:let @procedureDeclarationListAST unused inProcedureListAST
  ?extensionList:let @extensionDeclarationListAST unused inExtensionDeclarationListAST
  ?!context:@semanticContext ioContext
  ?!staticStringMap:@staticStringMap unused ioGlobalLiteralStringMap
{
  [!?ioContext.mModeMap insertKey !mModeName] ;
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#  SEMANTIC ANALYSIS                                                                                                   *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @modeDeclaration initAnalysis ?!context:@semanticContext unused ioContext { }

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @modeDeclaration semanticAnalysis
  ?extensionList:let @extensionDeclarationListAST unused inExtensionDeclarationListAST
  ?context:let @semanticContext unused inContext
  ?!temporary:@semanticTemporariesStruct unused ioTemporaries
  ?!intermediateCode:@intermediateCodeStruct unused ioIntermediateCodeStruct
{
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

