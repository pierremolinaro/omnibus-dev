#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#!  AST                                                                                                                  
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @syncDeclarationAST : @abstractDeclarationAST {
  @lstring mSyncToolName
  @structurePropertyListAST mStructurePropertyListAST
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#!  SYNTAX                                                                                                               
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax extension omnibus_syntax {

  #·····················································································································

  rule <declaration> ?!@ast ioAST {
    $sync$
    $\$type$ ?let structureName
    ${$
    @structurePropertyListAST fieldList = {}
    repeat
    while
      <private_or_public_struct_property_declaration> !?ioAST !?fieldList
    while
      <function_declaration> !?ioAST !receiverTypeName: structureName
    while
      <system_routine_declaration> !?ioAST !receiverTypeName: structureName
    while
      <guard> !?ioAST !receiverTypeName: structureName !receiverLLVMBaseTypeName: structureName.string
    end
    $}$
    ioAST.mDeclarationListAST += !@syncDeclarationAST.new {
      !structureName
      !fieldList
    }
  }

  #·····················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#!  PRECEDENCE GRAPH                                                                                                     
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @syncDeclarationAST enterInPrecedenceGraph ?!@semanticTypePrecedenceGraph ioGraph {
#--- Add structure type name as node
  [!?ioGraph addNode !mSyncToolName !self]
#--- Add property types
  for (propertyName * public fieldTypeName propertyKind) in mStructurePropertyListAST do
    if fieldTypeName.string != "" then
      [!?ioGraph addEdge !mSyncToolName !fieldTypeName]
    end
    if public then
      error propertyName : "a sync tool property cannot be public (should be private)"
    end
    switch propertyKind
    case uninitializedStoredProperty, uninitializedConstantProperty :
    case initializedStoredProperty (initExpression) :
      [initExpression addDependenceEdgeForStaticExpression !mSyncToolName !?ioGraph]
    case initializedConstantProperty (initExpression) :
      [initExpression addDependenceEdgeForStaticExpression !mSyncToolName !?ioGraph]
    case readOnlyComputedProperty (instructionList *) :
      [instructionList noteInstructionListTypesInPrecedenceGraph !?ioGraph]
    case writeComputedProperty (writeInstructionList *) :
      [writeInstructionList noteInstructionListTypesInPrecedenceGraph !?ioGraph]
    end
  end
}

#·······················································································································

override getter @syncDeclarationAST keyRepresentationForErrorSignaling -> @string outRepresentation {
  outRepresentation = "sync " + mSyncToolName 
}

#·······················································································································

override getter @syncDeclarationAST locationForErrorSignaling -> @location outLocation {
  outLocation = mSyncToolName.location
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#!  ENTER IN CONTEXT                                                                                                     
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @syncDeclarationAST enterInContext
  ?!context:@semanticContext ioContext
  ?!@declarationDecorationList unused ioDecoratedDeclarationList
  ?!@decoratedRegularRoutineList ioDecoratedRoutineList
  ?!@routineListIR unused ioRoutineListIR
  ?!staticlistValues:@staticListInitializationMap unused ioStaticListValueMap
  ?!staticEntityMap:@staticEntityMap ioStaticEntityMap
  ?!registerUserAccess:@controlRegisterUserAccesMapAST unused ioControlRegisterUserAccesMapAST
  ?!userDefinedTypes:@userLLVMTypeDefinitionListIR ioUserLLVMTypeDefinitionListIR
{
#---------------------------------------- Properties
  @propertyList propertyList = {}
  @propertyGetterMap propertyGetterMap = {}
  @propertySetterMap propertySetterMap = {}
  @sortedOperandIRList sortedOperandIRList = {}
  @constructorSignature constructorSignature = {}
  @string constructorKey = "("
  for property in mStructurePropertyListAST do
    [property enterPropertyInContext
      !?context:ioContext
      !?staticEntityMap:ioStaticEntityMap
      !receiverTypeName:mSyncToolName
      !receiverLLVMBaseTypeName: mSyncToolName
      !?ioDecoratedRoutineList
      !?propertyList
      !?propertyGetterMap
      !?propertySetterMap
      !?sortedOperandIRList
      !?constructorSignature
      !?constructorKey
      !?*
    ]
  end
  constructorKey += ")"
#---------------------------------------- Constructor map
  @constructorMap constructorMap = {}
  [!?constructorMap insertKey
    !.new {!constructorKey !mSyncToolName.location}
    !constructorSignature
    !.structure {!sortedOperandList:sortedOperandIRList}
  ]
  [!?ioContext.mTypeConstructorMap insertKey !mSyncToolName !constructorMap]
#---------------------------------------- Enter in type map
  let structureType = @omnibusType.new {
    !propertyGetterMap:propertyGetterMap
    !propertySetterMap: propertySetterMap
    !subscript:.noSubscript
    !attributes:.instanciable
    !omnibusTypeDescriptionName: mSyncToolName
    !kind: .syncTool
    !llvmBaseTypeName:mSyncToolName
  }
  [!?ioContext.mTypeMap insertType
    !lkey:mSyncToolName
    !type:structureType
  ]
#-------------------------------------------- GenerateLLVM type definitions
  ioUserLLVMTypeDefinitionListIR += !@userLLVMSructureTypeDefinitionIR.new {
    ![structureType llvmTypeName]
    !propertyList
  }
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

