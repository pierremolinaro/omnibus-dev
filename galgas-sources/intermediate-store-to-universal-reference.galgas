
setter @instructionListIR appendStoreToUniversalReference
  ?let @string inLLVMVarName
  ?let @PLMType inTargetVarType
  ?let @objectIR inSourceValue
{
  self += !@storeToUniversalReferenceIR.new {!inLLVMVarName !inTargetVarType !inSourceValue}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @storeToUniversalReferenceIR : @abstractInstructionIR {
  @string mLLVMVarName
  @PLMType mTargetVarType
  @objectIR mSourceValue
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @storeToUniversalReferenceIR llvmInstructionCode
  ?!@string ioLLVMcode
  ?let @generationContext unused inGenerationContext
  ?!@generationAdds unused ioGenerationAdds
{
  let llvmType = [mTargetVarType llvmTypeName]
  ioLLVMcode += "  store " +  llvmType + " " + [mSourceValue llvmName] + ", " + llvmType + " * " + mLLVMVarName + "\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @storeToUniversalReferenceIR enterAccessibleEntities 
  ?!@accessibleEntities unused ioAccessibleEntities
  ?!@uint unused ioMaxBranchOfOnInstructions
{
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
