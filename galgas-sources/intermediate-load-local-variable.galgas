
setter @instructionListIR appendLoadLocalVariable
  ?let @objectIR inTargetValue
  ?let @string inVariableName
  ?let @bool inVolatile
{
  self += !@loadLocalVariableIR.new {!inTargetValue !inVariableName !inVolatile}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @loadLocalVariableIR : @abstractInstructionIR {
  @objectIR mTargetValue
  @string mVariableName
  @bool mVolatile
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @loadLocalVariableIR llvmInstructionCode
  ?!@string ioLLVMcode
  ?let @generationContext unused inGenerationContext
  ?!@generationAdds unused ioGenerationAdds
{
  let llvmType = [mTargetValue llvmTypeName]
  ioLLVMcode += "  " + [mTargetValue llvmName] + " = load "
  if mVolatile then
    ioLLVMcode += "volatile "
  end
  ioLLVMcode += llvmType + ", " + llvmType + " * %" + llvmNameForLocalVariable (!mVariableName) + "\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @loadLocalVariableIR enterAccessibleEntities 
  ?!@accessibleEntities unused ioAccessibleEntities
  ?!@uint unused ioMaxBranchOfOnInstructions
{
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @instructionListIR appendLoadFromTemporaryReference
  ?let @objectIR inTargetValue
  ?let @string inLLVMName
  ?let @bool inVolatile
{
  self += !@loadFromTemporaryReferenceIR.new {!inTargetValue !inLLVMName !inVolatile}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @loadFromTemporaryReferenceIR : @abstractInstructionIR {
  @objectIR mTargetValue
  @string mLLVMName
  @bool mVolatile
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @loadFromTemporaryReferenceIR llvmInstructionCode
  ?!@string ioLLVMcode
  ?let @generationContext unused inGenerationContext
  ?!@generationAdds unused ioGenerationAdds
{
  let llvmType = [mTargetValue llvmTypeName]
  ioLLVMcode += "  " + [mTargetValue llvmName] + " = load "
  if mVolatile then
    ioLLVMcode += "volatile "
  end
  ioLLVMcode += llvmType + ", " + llvmType + " * %" + mLLVMName + "\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @loadFromTemporaryReferenceIR enterAccessibleEntities 
  ?!@accessibleEntities unused ioAccessibleEntities
  ?!@uint unused ioMaxBranchOfOnInstructions
{
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
