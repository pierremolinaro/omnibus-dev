
setter @instructionListIR appendStoreVolatileRegisterIndirect
  ?let @unifiedTypeMap-proxy inTargetVarType
  ?let @string inLLVMName
  ?let @operandIR inSourceValue
{
  self += !@storeVolatileIndirectIR.new {!inTargetVarType !inLLVMName !inSourceValue}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @storeVolatileIndirectIR : @abstractInstructionIR {
  @unifiedTypeMap-proxy mTargetVarType
  @string mLLVMName
  @operandIR mSourceValue
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @storeVolatileIndirectIR llvmInstructionCode
  ?!@string ioLLVMcode
  ?let @generationContext unused inGenerationContext
  ?!@generationAdds unused ioGenerationAdds
{
  let llvmType = [mTargetVarType llvmTypeName]
  ioLLVMcode += "  store volatile " + llvmType + " " + [mSourceValue.mValue llvmName] + ", " + llvmType
             + " * " + mLLVMName + "\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @storeVolatileIndirectIR enterAccessibleEntities 
  ?!@accessibleEntities unused ioAccessibleEntities
  ?!@uint unused ioMaxBranchOfOnInstructions
{
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
