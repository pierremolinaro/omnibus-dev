#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! @objectIR
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum @propertyAccessKind {
  case constant (@string llvmValue)
  case indexed (@uint index)
}

#·······················································································································

enum @objectIR {
#--- No object (for example, no return value for a procedure)
  case null
#--- References
  case selfObject (@PLMType type)
  case globalVariableReference (@PLMType type @lstring plmName)
  case localVariableReference (@PLMType type @lstring plmName)
  case llvmReference (@PLMType type @string llvmName)
#--- Structure property
  case propertyRef (@PLMType type @lstring plmName @propertyAccessKind access)
#--- Values
  case llvmTemporaryValue (@PLMType type @lstring llvmName)
  case literalInteger  (@PLMType type @bigint value)
  case llvmStructureConstant (@PLMType type @sortedOperandIRList values)
  case literalString  (@uint utf8Size @uint index)
  case zero (@PLMType type)
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @objectIR location -> @location {
  switch self
  case null :
    error .nowhere : "<<@objectIR location null>>" : result
  case propertyRef (* plmName *) :
    result = plmName
  case globalVariableReference (* plmName) :
    result = plmName
  case localVariableReference (* plmName) :
    result = plmName
  case zero (*) :
    error .nowhere : "<<@objectIR location zero>>" : result
  case selfObject (*) :
    error .nowhere : "<<@objectIR location selfObject>>" : result
  case literalInteger (* *) :
    error .nowhere : "<<@objectIR location literalInteger>>" : result
  case llvmTemporaryValue (* llvmName) :
    result = llvmName
  case llvmReference (* llvmName) :
    result = [llvmName nowhere]
  case llvmStructureConstant (* *) :
    error .nowhere : "<<@objectIR location llvmStructureConstant>>" : result
  case literalString  (* *) :
    error .nowhere : "<<@objectIR location literalString>>" : result
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @objectIR isGlobalVariable -> @bool {
  result = [self isGlobalVariableReference]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @objectIR llvmName -> @string {
  switch self
  case null : error [self location] : "<<@objectIR llvmName null>>" : result
  case propertyRef (***) : error [self location] : "<<@objectIR property llvmName>>" : result
  case globalVariableReference (* plmName) : result = llvmNameForGlobalVariable (!plmName)
  case localVariableReference (* plmName)  : result = llvmNameForLocalVariable (!plmName)
  case zero (*) : result = "zeroinitializer"
  case selfObject (*) : result = llvmNameForSelf ()
  case literalInteger (* @bigint value) : result = [value string]
  case llvmTemporaryValue (* llvmName) : result = llvmName
  case llvmReference (* llvmName) : result = llvmName
  case llvmStructureConstant (* @sortedOperandIRList inValues) :
    result = "{"
    for () in inValues
      do result += [mOperand llvmTypeName] + " " + [mOperand llvmName]
      between result += ", "
    end
    result += "}"
  case literalString  (@uint size @uint index) :
    let sizeStr = [size string]
    result = "getelementptr inbounds ([" + sizeStr + " x i8], [" + sizeStr + " x i8]* "
    result += literalCharacterArrayName (!index) + ", i32 0, i32 0)"
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @objectIR type -> @PLMType {
  switch self
  case null :
    error [self location] : "<<@objectIR type null>>" : result
  case llvmReference (type *) : result = type
  case propertyRef (type **) : result = type
  case globalVariableReference (type *) : result = type
  case localVariableReference (type *) : result = type
  case zero (type) : result = type
  case selfObject (type) : result = type
  case literalInteger (type *) : result = type
  case llvmTemporaryValue (type *) : result = type
  case llvmStructureConstant (type *) : result = type
  case literalString  (* *) : result = .literalString
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @objectIR llvmTypeName -> @string {
  result = [[self type] llvmTypeName]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @objectIR key -> @string {
  result = [[self type] key]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @objectIR withType ?let @PLMType inType -> @objectIR {
  switch self
  case null : error [self location] : "<<@objectIR withType null>>" : result
  case llvmReference (* llvmName) :
    result = .llvmReference {!type:inType !llvmName:llvmName}
  case propertyRef (* plmName access) :
    result = .propertyRef {!type:inType !plmName:plmName !access:access}
  case localVariableReference (* name) :
    result = .localVariableReference {!type: inType !plmName: name}
  case globalVariableReference (* name) :
    result = .globalVariableReference {!type: inType !plmName: name}
  case literalInteger (* @bigint value) :
    result = .literalInteger {!type: inType !value: value}
  case llvmTemporaryValue (* llvmName) :
    result = .llvmTemporaryValue {!type: inType !llvmName:llvmName}
  case zero (*) :
    result = .zero {!type: inType}
  case selfObject (*) :
    result = .selfObject {!type:inType}
  case llvmStructureConstant (* @sortedOperandIRList values) :
    result = .llvmStructureConstant {!type: inType !values: values}
  case literalString  (@uint size @uint index) :
    result = .literalString {!utf8Size: size !index: index}
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @objectIR name -> @string {
  switch self
  case null : error [self location] : "<<@objectIR name null>>" : result
  case llvmReference (* llvmName) : result = llvmName
  case propertyRef (* name *) : result = name
  case localVariableReference (* name) : result = name
  case globalVariableReference (* name) : result = name
  case zero (*) : result = "zeroinitializer"
  case selfObject (*) : result = "self"
  case literalInteger (* @bigint value) : result = [value string]
  case llvmTemporaryValue (* name) : result = name
  case llvmStructureConstant (* *) : result = "{...}"
  case literalString  (@uint size @uint index) :
    let sizeStr = [size string]
    result = "getelementptr inbounds ([" + sizeStr + " x i8], [" + sizeStr + " x i8]* "
    result += literalCharacterArrayName (!index) + ", i32 0, i32 0)"
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @objectIR isStatic -> @bool {
  switch self
  case null : error [self location] : "<<@objectIR isStatic null>>" : result
  case llvmReference (**) : result = false
  case propertyRef (***) : result = false
  case localVariableReference (* *) : result = false
  case globalVariableReference (* *) : result = false
  case zero (*) : result = true
  case selfObject (*) : result = false
  case literalInteger (* *) : result = true
  case llvmTemporaryValue (* *) : result = false
  case llvmStructureConstant (* *) : result = true
  case literalString  (* *) : result = true
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
