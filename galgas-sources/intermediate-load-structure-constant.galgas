
setter @instructionListIR appendLoadStructureConstant
  ?let @operandIR inTargetValue
  ?let @string inTypeName
{
  self += !@loadStructureConstantIR.new {!inTargetValue !inTypeName}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @loadStructureConstantIR : @abstractInstructionIR {
  @operandIR mTargetValue
  @string mTypeName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @loadStructureConstantIR llvmInstructionCode
  ?!@string ioLLVMcode
  ?let @generationContext unused inGenerationContext
  ?!@generationAdds unused ioGenerationAdds
{
  let llvmType = [mTargetValue.mType llvmTypeName]
  ioLLVMcode += "  " + [mTargetValue.mValue llvmName] + " = load "
  ioLLVMcode += llvmType + ", " + llvmType + "* @" + mTypeName + ".init\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @loadStructureConstantIR enterAccessibleEntities 
  ?!@accessibleEntities unused ioAccessibleEntities
  ?!@uint unused ioMaxBranchOfOnInstructions
{
}


#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
