#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once llvmAttributeFunction -> @string outResult {
  outResult = " nounwind "
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#!   Module
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once modulePrefixName -> @string outResult {
  outResult = "module."
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#!   Modes
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once bootModeName -> @string outResult {
  outResult = "boot"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once initModeName -> @string outResult {
  outResult = "init"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once sectionModeName -> @string outResult {
  outResult = "section"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once userModeName -> @string outResult {
  outResult = "user"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once kernelModeName -> @string outResult {
  outResult = "kernel"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once serviceModeName -> @string outResult {
  outResult = "service"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once guardModeName -> @string outResult {
  outResult = "guard"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! Names for invocation graph
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func initNameForInvocationGraph ?@unifiedTypeMap-proxy inReceiverType ?@lbigint inPriority -> @lstring outName {
  var s = "init"
  if inReceiverType != .null then
    s += " $" + [inReceiverType key]
  end
  s += " " + inPriority.bigint
  outName = .new {!s !inPriority.location}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func panicNameForInvocationGraph ?@string inName ?@lbigint inPriority -> @lstring outName {
  let s = "panic " + inName + " " + inPriority.bigint
  outName = .new {!s !inPriority.location}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#!  Literal Strings
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func literalStringName ?let @uint inIndex -> @string outName {
  outName = "@string." + inIndex
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func literalCharacterArrayName ?let @uint inIndex -> @string outName {
  outName = "@str.array." + inIndex
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once staticStringTypeName -> @string outName {
  outName = "staticString"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once boolTypeName -> @string outName {
  outName = "bool"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once staticIntegerTypeName -> @string outName {
  outName = "staticInt"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#!   Functions
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once functionResultVariableName -> @string outName {
  outName = "result"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func llvmNameForFunction ?@string inName -> @string outName {
  outName = ["func." + inName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#!   Interrupt routine
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func interruptNameForInvocationGraph ?@lstring inName -> @lstring outName {
  let s = "interrupt " + inName
  outName = .new {!s !inName.location}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func llvmNameForInterrupt ?@lstring inName -> @lstring outName {
  outName = .new {!"interrupt." + inName !inName.location}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func llvmNameForISR ?@string inName -> @string outName {
  outName = "isr." + inName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#!   Primitives
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func llvmNameForPrimitiveCall ?@string inName -> @string outName {
  outName = ["primitive.call." + inName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func llvmNameForPrimitiveImplementation ?@string inName -> @string outName {
  outName = ["primitive.implementation." + inName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#!   Services
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func llvmNameForServiceCall ?@string inName -> @string outName {
  outName = ["service.call." + inName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func llvmNameForServiceImplementation ?@string inName -> @string outName {
  outName = ["service.implementation." + inName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#!   Sections
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func llvmNameForSectionCall ?@string inName -> @string outName {
  outName = ["section.call." + inName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func llvmNameForSectionImplementation ?@string inName -> @string outName {
  outName = ["section.implementation." + inName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#!   Guards
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once acceptVariableName -> @string outName {
  outName = "accept"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func llvmNameForGuardCall ?@string inName -> @string outName {
  outName = ["guard.call." + inName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func llvmNameForGuardImplementation ?@string inName -> @string outName {
  outName = ["guard.implementation." + inName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once waitForGuardChangeFunctionName -> @string outName {
  outName = "waitForGuardChange"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#!  Variable names
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func llvmNameForLocalVariable ?@string inName -> @string outName {
  outName = ["var." + inName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func llvmNameForGlobalVariable ?@string inName -> @string outName {
  outName = ["gvar." + inName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func llvmNameForRegister ?name:@string inName -> @string outName {
  outName = ["register." + inName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#!   Attributes
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once mutatingAttribute -> @string outResult {
  outResult = "mutating"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once userAccessAttribute -> @string outResult {
  outResult = "userAccess"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once noUnusedWarningAttribute -> @string outResult {
  outResult = "noUnusedWarning"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once globalAttribute -> @string outResult {
  outResult = "global"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once weakAttribute -> @string outResult {
  outResult = "weak"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! Tasks
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func taskProcNameForInvocationGraph ?@string inTaskName ?@lstring inProcName -> @lstring outName {
  let s = "taskproc " + inTaskName + " " + inProcName
  outName = .new {!s !inProcName.location}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func stackNameForTask ?let @string inTaskName -> @string outResult {
  outResult = "@" + ["task.stack." + inTaskName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func initNameForTaskType ?let @string inTaskTypeName -> @string outResult {
  outResult = "@" + ["task.init.$" + inTaskTypeName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func stackAddressForTask ?let @string inTaskName -> @string outResult {
  outResult = "%" + ["task.stack.address." + inTaskName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func mainRoutineNameForTask ?let @string inTaskName -> @string outResult {
  outResult = "@" + ["task.main." + inTaskName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func llvmNameForTaskGlobalVar ?@string inTaskName -> @string outName {
  outName = ["task.globalvar." + inTaskName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func llvmNameForTaskVariable ?@string inTaskName ?@string inVarName -> @string outName {
  outName = ["task.var." + inTaskName + "." + inVarName assemblerRepresentation]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once llvmNameForTaskLoopFunction -> @string outName {
  outName = "task$loop"
}
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once llvmNameForTaskSelfTerminateService -> @string outName {
  outName = "self.terminate"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

