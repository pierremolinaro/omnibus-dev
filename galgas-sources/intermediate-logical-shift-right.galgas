
setter @instructionListIR appendLogicalShiftRight
  ?let @objectIR inResult
  ?let @objectIR inSource
  ?let @uint inShiftAmount
{
  self += !@logicalRightShiftIR.new {!inResult !inSource !inShiftAmount}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @logicalRightShiftIR : @abstractInstructionIR {
  @objectIR mResult
  @objectIR mSource
  @uint mShiftAmount
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @logicalRightShiftIR llvmInstructionCode
  ?!@string ioLLVMcode
  ?let @generationContext unused inGenerationContext
  ?!@generationAdds unused ioGenerationAdds
{
  ioLLVMcode += "  " + [mResult llvmName] + " = "
  ioLLVMcode += "lshr " + [mResult  llvmTypeName] + " " + [mSource llvmName] + ", " + mShiftAmount + "\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @logicalRightShiftIR enterAccessibleEntities
  ?!@accessibleEntities unused ioAccessibleEntities
  ?!@uint unused ioMaxBranchOfOnInstructions
{
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
