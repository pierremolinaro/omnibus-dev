#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! @operandIR
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

struct @operandIR {
  @unifiedTypeMap-proxy mType
  @valueIR mValue
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! @valueIR
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum @valueIR {
  case selfObject (@unifiedTypeMap-proxy type)
  case literalInteger  (@bigint value)
  case llvmLocalObject (@unifiedTypeMap-proxy type @string name)
  case llvmGlobalObject (@unifiedTypeMap-proxy type @string name)
  case llvmStructureConstant (@unifiedTypeMap-proxy type @operandIRList values)
  case literalString  (@uint size @uint index)
  case zero (@unifiedTypeMap-proxy type)
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @valueIR llvmName -> @string outResult {
  switch self
  case zero (*) : outResult = "zeroinitializer"
  case selfObject (*) : outResult = "%self"
  case literalInteger (@bigint value) : outResult = [value string]
  case llvmLocalObject (* @string name) : outResult = "%" + name
  case llvmGlobalObject (* @string name) : outResult = "@" + name
  case llvmStructureConstant (* @operandIRList inValues) :
    outResult = "{"
    for () in inValues
      do outResult += [mOperand.mType llvmTypeName] + " " + [mOperand.mValue llvmName]
      between outResult += ", "
    end
    outResult += "}"
  case literalString  (@uint size @uint index) :
    let sizeStr = [size string]
    outResult = "getelementptr inbounds ([" + sizeStr + " x i8], [" + sizeStr + " x i8]* "
    outResult += literalCharacterArrayName (!index) + ", i32 0, i32 0)"
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @valueIR type -> @unifiedTypeMap-proxy outResult {
  switch self
  case zero (type) : outResult = type
  case selfObject (type) : outResult = type
  case literalInteger (*) : error .nowhere : "<<@valueIR type>>" : outResult
  case llvmLocalObject (type *) : outResult = type
  case llvmGlobalObject (type *) : outResult = type
  case llvmStructureConstant (type *) : outResult = type
  case literalString  (* *) : error .nowhere : "<<@valueIR type>>" : outResult
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @valueIR name -> @string outResult {
  switch self
  case zero (*) : outResult = "zeroinitializer"
  case selfObject (*) : outResult = "self"
  case literalInteger (@bigint value) : outResult = [value string]
  case llvmLocalObject (* @string name) : outResult = name
  case llvmGlobalObject (* @string name) : outResult = name
  case llvmStructureConstant (* *) : outResult = "{...}"
  case literalString  (* @uint index) : outResult = literalStringName (!index)
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @valueIR isStatic -> @bool outResult {
  switch self
  case zero (*) : outResult = true
  case selfObject (*) : outResult = false
  case literalInteger (*) : outResult = true
  case llvmLocalObject (* *) : outResult = false
  case llvmGlobalObject (* *) : outResult = false
  case llvmStructureConstant (* *) : outResult = true
  case literalString  (* *) : outResult = true
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! @objectInMemoryIR
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum @objectInMemoryIR {
  case registerAddress (@unifiedTypeMap-proxy type @string llvmName)
  case register (@unifiedTypeMap-proxy type
                 @lstring name
                 @bigint address
                 @controlRegisterBitSliceAccessMap sliceMap
                 @uint arraySize # 0 if not an array
                 @uint elementSize) # 0 if not an array
  case globalVariable (@unifiedTypeMap-proxy type @string name @bool volatile)
  case localVariable (@unifiedTypeMap-proxy type @string name)
  case staticConstant (@operandIR value @string name)
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @objectInMemoryIR llvmName -> @string outName {
  switch self
  case registerAddress (* @string llvmName) :
    outName = llvmName
  case register (* @lstring name * * * *) :
    error name : "@objectInMemoryIR name" : outName
  case globalVariable (* @string name *) :
    outName = "@" + llvmNameForGlobalVariable (!name)
  case localVariable (* @string name) :
    outName = "%" + llvmNameForLocalVariable (!name)
  case staticConstant (*  @string name) :
    outName = "%" + name
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @objectInMemoryIR name -> @string outName {
  switch self
  case registerAddress (* @string llvmName) :
    outName = llvmName
  case register (* @lstring name * * * *) :
    outName = name.string
  case globalVariable (* @string name *) :
    outName = name
  case localVariable (* @string name) :
    outName = name
  case staticConstant (*  @string name) :
    outName = name
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @objectInMemoryIR type -> @unifiedTypeMap-proxy outType {
  switch self
  case registerAddress (@unifiedTypeMap-proxy type *) :
    outType = type
  case register (@unifiedTypeMap-proxy type * * * * *) :
    outType = type
  case globalVariable (@unifiedTypeMap-proxy type * *) :
    outType = type
  case localVariable (@unifiedTypeMap-proxy type *) :
    outType = type
  case staticConstant (@operandIR value *) :
    outType = value.mType
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @objectInMemoryIR address -> @operandIR outOperand {
  switch self
  case registerAddress (* *) :
    error .nowhere : "@objectInMemoryIR register address" : outOperand
  case register (* * * * * *) :
    error .nowhere : "@objectInMemoryIR register address" : outOperand
  case globalVariable (@unifiedTypeMap-proxy type @string name *) :
    outOperand  = .new {!type !.llvmGlobalObject {!type: type !name:llvmNameForGlobalVariable (!name)}}
  case localVariable (@unifiedTypeMap-proxy type @string name) :
    outOperand  = .new {!type !.llvmLocalObject {!type:type !name:llvmNameForLocalVariable (!name)}}
  case staticConstant (* *) :
    error .nowhere : "@objectInMemoryIR globalConstantaddress" : outOperand
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
