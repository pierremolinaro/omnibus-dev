digraph G {
  user   [color=orange, shape=box];
  "func user"   [color=orange, shape=box];
  user -> "func user";
  primitive   [shape=box];
  user -> primitive   [color=blue, label=svc];
  service   [shape=box];
  user -> service   [color=blue, label=svc];
  section   [shape=box];
  user -> section   [color=blue, label=svc];
  "func user" -> "func user";
  "func user" -> primitive   [color=blue, label=svc];
  "func user" -> service   [color=blue, label=svc];
  "func user" -> section   [color=blue, label=svc];
  primitive -> service;
  "func primitive"   [shape=box];
  primitive -> "func primitive";
  "func service"   [shape=box];
  primitive -> "func service";
  "func section"   [shape=box];
  primitive -> "func section";
  
  "safe"     [shape=box];
  "safe" -> "func safe" ;
  user -> safe   [color=blue, label=svc];
  section -> safe ;
  "func section" -> safe ;
  service -> safe ;
  "func service" -> safe ;
  primitive -> safe ;
  "func primitive" -> safe ;
  panic -> safe ;
  "func panic" -> safe ;

  "func safe"    [shape=box];
  primitive -> "func safe" ;
  service -> "func service";
  service -> "section";
  service -> "func section";
  service -> "func safe" ;
  section -> "func section";
  section -> "func safe" ;
  "func primitive" -> "func primitive";
  "func primitive" -> "func service";
  "func primitive" -> "service";
  "func primitive" -> "func section";
  "func primitive" -> "func safe" ;
  "func service" -> "func service";
  "func service" -> "func safe" ;
  "func service" -> "func section";
  "func section" -> "func section";
  "func section" -> "func safe" ;
  init   [shape=box];
  "func init"   [shape=box];
  init -> "func init";
  init -> "func safe" ;
  "func init" -> "func init";
  "func init" -> "func safe" ;
  boot   [shape=box];
  "func boot"   [shape=box];
  boot -> "func boot";
  "func boot" -> "func boot";
  panic   [shape=box];
  "func panic"   [shape=box];
  panic -> "func panic";
  panic -> "func safe" ;
  "func panic" -> "func safe" ;
  guard   [shape=box];
  guard -> "func section";
  "func guard"   [shape=box];
  guard -> "service";
  guard -> "section" ;
  guard -> "func service";
  guard -> "func guard";
  guard -> "func safe" ;
  "func guard" -> "func section";
  "func guard" -> "func guard";
  "func guard" -> "func safe" ;
  "func safe"  -> "func safe" ;
}
