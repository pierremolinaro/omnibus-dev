target "target-teensy-sequential-systick.plms"

import "lcd.plm"

//-----------------------------------------------------------------------------*
//   Led L0 : PTA12
//   Led L1 : PTA13
//   Led L2 : PTD7
//   Led L3 : PTD4
//   Led L4 : PTD2
//   (Led sur carte Teensy : PTC5)
//-----------------------------------------------------------------------------*

init {
//--- Led L0 : PTA12
  PORTA_PCR12 = (1 << 8) ;
  GPIOA_PDDR |= (1 << 12) ;
//--- Led L1 : PTA13
  PORTA_PCR13 = (1 << 8) ;
  GPIOA_PDDR |= (1 << 13) ;
//--- Led L2 : PTD13
  PORTD_PCR7 = (1 << 8) ;
  GPIOD_PDDR |= (1 << 7) ;
//--- Led L3 : PTD4
  PORTD_PCR4 = (1 << 8) ;
  GPIOD_PDDR |= (1 << 4) ;
//--- Led L4 : PTD2
  PORTD_PCR2 = (1 << 8) ;
  GPIOD_PDDR |= (1 << 2) ;
}

//-----------------------------------------------------------------------------*

let LED_L0 : UInt32 = (1 << 0)
let LED_L1 : UInt32 =  (1 << 1)
let LED_L2 : UInt32 =  (1 << 2)
let LED_L3 : UInt32 =  (1 << 3)
let LED_L4 : UInt32 =  (1 << 4)

//-----------------------------------------------------------------------------*

proc $user ledOn (?inLeds : UInt32) {
//--- Led L0
  if ((inLeds & LED_L0) != 0) then
    GPIOA_PSOR = 1 << 12 ;
  end
//--- Led L1
  if ((inLeds & LED_L1) != 0) then
    GPIOA_PSOR = 1 << 13 ;
  end
//--- Led L2
  if ((inLeds & LED_L2) != 0) then
    GPIOD_PSOR = 1 << 7 ;
  end
//--- Led L3
  if ((inLeds & LED_L3) != 0) then
    GPIOD_PSOR = 1 << 4 ;
  end
//--- Led L4
  if ((inLeds & LED_L4) != 0) then
    GPIOD_PSOR = 1 << 2 ;
  end
}

//-----------------------------------------------------------------------------*

proc $user ledOff (?inLeds : UInt32) {
//--- Led L0
  if ((inLeds & LED_L0) != 0) then
    GPIOA_PCOR = 1 << 12 ;
  end
//--- Led L1
  if ((inLeds & LED_L1) != 0) then
    GPIOA_PCOR = 1 << 13 ;
  end
//--- Led L2
  if ((inLeds & LED_L2) != 0) then
    GPIOD_PCOR = 1 << 7 ;
  end
//--- Led L3
  if ((inLeds & LED_L3) != 0) then
    GPIOD_PCOR = 1 << 4 ;
  end
//--- Led L4
  if ((inLeds & LED_L4) != 0) then
    GPIOD_PCOR = 1 << 2 ;
  end
}

//-----------------------------------------------------------------------------*

proc $user setup () {
  PORTC_PCR5 = (1 << 8)
  GPIOC_PDDR = GPIOC_PDDR | (1 << 5)
}

//-----------------------------------------------------------------------------*

proc $user teensyLedOn () {
  GPIOC_PSOR = 1 << 5
}

//-----------------------------------------------------------------------------*

proc $user teensyLedOff () {
  GPIOC_PCOR = 1 << 5
}

//-----------------------------------------------------------------------------*

var $user $isr $init gCompteur : UInt32 = 0

var $isr gClignotement : UInt32 = 0

//-----------------------------------------------------------------------------*

proc $isr systickHandler () {
  gCompteur &++
  gClignotement ++
  if gClignotement == 500 then
    GPIOA_PSOR = 1 << 12 ;
  elsif gClignotement == 1000 then
    GPIOA_PCOR = 1 << 12 ;
    gClignotement = 0
  end
}

//-----------------------------------------------------------------------------*

proc $user waitMS (?inDuration : UInt32) {
  let deadline = gCompteur + inDuration
  while gCompteur < deadline do
  end
}

//-----------------------------------------------------------------------------*

var $user gVar : Int8 = 0

//-----------------------------------------------------------------------------*

proc $user loop () {
  let duration : UInt32 = 100
  waitMS (!duration)
  teensyLedOn ()
  waitMS (!duration)
  teensyLedOff ()
  gVar ++
  goto (!line:0 !column: 0)
  printSpaces (!4)
  goto (!line:0 !column: 0)
  printSigned (!gVar as Int32)
}

//-----------------------------------------------------------------------------*
