#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "all-declarations-3.h"


//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_assignmentSelfAccessAST_selfAccess::cEnumAssociatedValues_assignmentSelfAccessAST_selfAccess (const GALGAS_location & inAssociatedValue0
                                                                                                                    COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_assignmentSelfAccessAST_selfAccess::description (C_String & ioString,
                                                                            const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_assignmentSelfAccessAST_selfAccess::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_assignmentSelfAccessAST_selfAccess * ptr = dynamic_cast<const cEnumAssociatedValues_assignmentSelfAccessAST_selfAccess *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_assignmentSelfAccessAST::GALGAS_assignmentSelfAccessAST (void) :
mAssociatedValues (),
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_assignmentSelfAccessAST GALGAS_assignmentSelfAccessAST::constructor_noSelfAccess (UNUSED_LOCATION_ARGS) {
  GALGAS_assignmentSelfAccessAST result ;
  result.mEnum = kEnum_noSelfAccess ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_assignmentSelfAccessAST GALGAS_assignmentSelfAccessAST::constructor_selfAccess (const GALGAS_location & inAssociatedValue0
                                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_assignmentSelfAccessAST result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_selfAccess ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_assignmentSelfAccessAST_selfAccess (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_assignmentSelfAccessAST::method_selfAccess (GALGAS_location & outAssociatedValue0,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_selfAccess) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @assignmentSelfAccessAST selfAccess invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_assignmentSelfAccessAST_selfAccess * ptr = (const cEnumAssociatedValues_assignmentSelfAccessAST_selfAccess *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_assignmentSelfAccessAST [3] = {
  "(not built)",
  "noSelfAccess",
  "selfAccess"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_assignmentSelfAccessAST::getter_isNoSelfAccess (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_noSelfAccess == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_assignmentSelfAccessAST::getter_isSelfAccess (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_selfAccess == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_assignmentSelfAccessAST::description (C_String & ioString,
                                                  const int32_t inIndentation) const {
  ioString << "<enum @assignmentSelfAccessAST: " << gEnumNameArrayFor_assignmentSelfAccessAST [mEnum] ;
  mAssociatedValues.description (ioString, inIndentation) ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_assignmentSelfAccessAST::objectCompare (const GALGAS_assignmentSelfAccessAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mAssociatedValues.objectCompare (inOperand.mAssociatedValues) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @assignmentSelfAccessAST type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_assignmentSelfAccessAST ("assignmentSelfAccessAST",
                                                NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_assignmentSelfAccessAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_assignmentSelfAccessAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_assignmentSelfAccessAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_assignmentSelfAccessAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_assignmentSelfAccessAST GALGAS_assignmentSelfAccessAST::extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_assignmentSelfAccessAST result ;
  const GALGAS_assignmentSelfAccessAST * p = (const GALGAS_assignmentSelfAccessAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_assignmentSelfAccessAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("assignmentSelfAccessAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               Class for element of '@accessInAssignmentListAST' list                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_accessInAssignmentListAST : public cCollectionElement {
  public : GALGAS_accessInAssignmentListAST_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_accessInAssignmentListAST (const GALGAS_accessInAssignmentAST & in_mAccess
                                                         COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
  public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_accessInAssignmentListAST::cCollectionElement_accessInAssignmentListAST (const GALGAS_accessInAssignmentAST & in_mAccess
                                                                                            COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mAccess) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_accessInAssignmentListAST::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_accessInAssignmentListAST::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_accessInAssignmentListAST (mObject.mAttribute_mAccess COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_accessInAssignmentListAST::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAccess" ":" ;
  mObject.mAttribute_mAccess.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_accessInAssignmentListAST::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_accessInAssignmentListAST * operand = (cCollectionElement_accessInAssignmentListAST *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_accessInAssignmentListAST) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessInAssignmentListAST::GALGAS_accessInAssignmentListAST (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessInAssignmentListAST::GALGAS_accessInAssignmentListAST (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessInAssignmentListAST GALGAS_accessInAssignmentListAST::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_accessInAssignmentListAST result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessInAssignmentListAST GALGAS_accessInAssignmentListAST::constructor_listWithValue (const GALGAS_accessInAssignmentAST & inOperand0
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_accessInAssignmentListAST result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_accessInAssignmentListAST::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_accessInAssignmentListAST::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                  const GALGAS_accessInAssignmentAST & in_mAccess
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_accessInAssignmentListAST * p = NULL ;
  macroMyNew (p, cCollectionElement_accessInAssignmentListAST (in_mAccess COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_accessInAssignmentListAST::addAssign_operation (const GALGAS_accessInAssignmentAST & inOperand0
                                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_accessInAssignmentListAST (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_accessInAssignmentListAST::setter_insertAtIndex (const GALGAS_accessInAssignmentAST inOperand0,
                                                             const GALGAS_uint inInsertionIndex,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_accessInAssignmentListAST (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_accessInAssignmentListAST::setter_removeAtIndex (GALGAS_accessInAssignmentAST & outOperand0,
                                                             const GALGAS_uint inRemoveIndex,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_accessInAssignmentListAST * p = (cCollectionElement_accessInAssignmentListAST *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_accessInAssignmentListAST) ;
      outOperand0 = p->mObject.mAttribute_mAccess ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_accessInAssignmentListAST::setter_popFirst (GALGAS_accessInAssignmentAST & outOperand0,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_accessInAssignmentListAST * p = (cCollectionElement_accessInAssignmentListAST *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_accessInAssignmentListAST) ;
    outOperand0 = p->mObject.mAttribute_mAccess ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_accessInAssignmentListAST::setter_popLast (GALGAS_accessInAssignmentAST & outOperand0,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_accessInAssignmentListAST * p = (cCollectionElement_accessInAssignmentListAST *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_accessInAssignmentListAST) ;
    outOperand0 = p->mObject.mAttribute_mAccess ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_accessInAssignmentListAST::method_first (GALGAS_accessInAssignmentAST & outOperand0,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_accessInAssignmentListAST * p = (cCollectionElement_accessInAssignmentListAST *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_accessInAssignmentListAST) ;
    outOperand0 = p->mObject.mAttribute_mAccess ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_accessInAssignmentListAST::method_last (GALGAS_accessInAssignmentAST & outOperand0,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_accessInAssignmentListAST * p = (cCollectionElement_accessInAssignmentListAST *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_accessInAssignmentListAST) ;
    outOperand0 = p->mObject.mAttribute_mAccess ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessInAssignmentListAST GALGAS_accessInAssignmentListAST::add_operation (const GALGAS_accessInAssignmentListAST & inOperand,
                                                                                  C_Compiler * /* inCompiler */
                                                                                  COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_accessInAssignmentListAST result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessInAssignmentListAST GALGAS_accessInAssignmentListAST::getter_subListWithRange (const GALGAS_range & inRange,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_accessInAssignmentListAST result = GALGAS_accessInAssignmentListAST::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessInAssignmentListAST GALGAS_accessInAssignmentListAST::getter_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_accessInAssignmentListAST result = GALGAS_accessInAssignmentListAST::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessInAssignmentListAST GALGAS_accessInAssignmentListAST::getter_subListToIndex (const GALGAS_uint & inIndex,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_accessInAssignmentListAST result = GALGAS_accessInAssignmentListAST::constructor_emptyList (THERE) ;
  subListToIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_accessInAssignmentListAST::plusAssign_operation (const GALGAS_accessInAssignmentListAST inOperand,
                                                             C_Compiler * /* inCompiler */
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessInAssignmentAST GALGAS_accessInAssignmentListAST::getter_mAccessAtIndex (const GALGAS_uint & inIndex,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_accessInAssignmentListAST * p = (cCollectionElement_accessInAssignmentListAST *) attributes.ptr () ;
  GALGAS_accessInAssignmentAST result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_accessInAssignmentListAST) ;
    result = p->mObject.mAttribute_mAccess ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_accessInAssignmentListAST::cEnumerator_accessInAssignmentListAST (const GALGAS_accessInAssignmentListAST & inEnumeratedObject,
                                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessInAssignmentListAST_2D_element cEnumerator_accessInAssignmentListAST::current (LOCATION_ARGS) const {
  const cCollectionElement_accessInAssignmentListAST * p = (const cCollectionElement_accessInAssignmentListAST *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_accessInAssignmentListAST) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessInAssignmentAST cEnumerator_accessInAssignmentListAST::current_mAccess (LOCATION_ARGS) const {
  const cCollectionElement_accessInAssignmentListAST * p = (const cCollectionElement_accessInAssignmentListAST *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_accessInAssignmentListAST) ;
  return p->mObject.mAttribute_mAccess ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @accessInAssignmentListAST type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_accessInAssignmentListAST ("accessInAssignmentListAST",
                                                  NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_accessInAssignmentListAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_accessInAssignmentListAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_accessInAssignmentListAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_accessInAssignmentListAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessInAssignmentListAST GALGAS_accessInAssignmentListAST::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_accessInAssignmentListAST result ;
  const GALGAS_accessInAssignmentListAST * p = (const GALGAS_accessInAssignmentListAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_accessInAssignmentListAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("accessInAssignmentListAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetAccessKind::GALGAS_targetAccessKind (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetAccessKind GALGAS_targetAccessKind::constructor_read (UNUSED_LOCATION_ARGS) {
  GALGAS_targetAccessKind result ;
  result.mEnum = kEnum_read ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetAccessKind GALGAS_targetAccessKind::constructor_write (UNUSED_LOCATION_ARGS) {
  GALGAS_targetAccessKind result ;
  result.mEnum = kEnum_write ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetAccessKind GALGAS_targetAccessKind::constructor_readWrite (UNUSED_LOCATION_ARGS) {
  GALGAS_targetAccessKind result ;
  result.mEnum = kEnum_readWrite ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_targetAccessKind [4] = {
  "(not built)",
  "read",
  "write",
  "readWrite"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_targetAccessKind::getter_isRead (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_read == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_targetAccessKind::getter_isWrite (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_write == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_targetAccessKind::getter_isReadWrite (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_readWrite == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_targetAccessKind::description (C_String & ioString,
                                           const int32_t /* inIndentation */) const {
  ioString << "<enum @targetAccessKind: " << gEnumNameArrayFor_targetAccessKind [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_targetAccessKind::objectCompare (const GALGAS_targetAccessKind & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @targetAccessKind type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_targetAccessKind ("targetAccessKind",
                                         NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_targetAccessKind::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_targetAccessKind ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_targetAccessKind::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_targetAccessKind (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetAccessKind GALGAS_targetAccessKind::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_targetAccessKind result ;
  const GALGAS_targetAccessKind * p = (const GALGAS_targetAccessKind *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_targetAccessKind *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("targetAccessKind", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_variableMap::cMapElement_variableMap (const GALGAS_lstring & inKey,
                                                  const GALGAS_unifiedTypeMap_2D_proxy & in_type,
                                                  const GALGAS_bool & in_readAccessAllowed,
                                                  const GALGAS_objectIR & in_objectIR,
                                                  const GALGAS_bool & in_copyable,
                                                  const GALGAS_bool & in_canBeUsedAsInputParameter
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_type (in_type),
mAttribute_readAccessAllowed (in_readAccessAllowed),
mAttribute_objectIR (in_objectIR),
mAttribute_copyable (in_copyable),
mAttribute_canBeUsedAsInputParameter (in_canBeUsedAsInputParameter) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_variableMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_type.isValid () && mAttribute_readAccessAllowed.isValid () && mAttribute_objectIR.isValid () && mAttribute_copyable.isValid () && mAttribute_canBeUsedAsInputParameter.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_variableMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_variableMap (mAttribute_lkey, mAttribute_type, mAttribute_readAccessAllowed, mAttribute_objectIR, mAttribute_copyable, mAttribute_canBeUsedAsInputParameter COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_variableMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "type" ":" ;
  mAttribute_type.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "readAccessAllowed" ":" ;
  mAttribute_readAccessAllowed.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "objectIR" ":" ;
  mAttribute_objectIR.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "copyable" ":" ;
  mAttribute_copyable.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "canBeUsedAsInputParameter" ":" ;
  mAttribute_canBeUsedAsInputParameter.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_variableMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_variableMap * operand = (cMapElement_variableMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_type.objectCompare (operand->mAttribute_type) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_readAccessAllowed.objectCompare (operand->mAttribute_readAccessAllowed) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_objectIR.objectCompare (operand->mAttribute_objectIR) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_copyable.objectCompare (operand->mAttribute_copyable) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_canBeUsedAsInputParameter.objectCompare (operand->mAttribute_canBeUsedAsInputParameter) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap::GALGAS_variableMap (void) :
AC_GALGAS_uniqueMap (kMapAutomatonIssueWarning, "declaration of '%K' variable shadows a variable declared in %L") {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap::GALGAS_variableMap (const GALGAS_variableMap & inSource) :
AC_GALGAS_uniqueMap (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap & GALGAS_variableMap::operator = (const GALGAS_variableMap & inSource) {
  * ((AC_GALGAS_uniqueMap *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap GALGAS_variableMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_variableMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton states                                                                                               *
//---------------------------------------------------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const uint32_t kMapStateCount_variableMap = 22 ;
#endif
static const uint32_t kMapState_variableMap_constantInputFormalArgument = 15 ;
static const uint32_t kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused = 17 ;
static const uint32_t kMapState_variableMap_definedLocalVariable = 6 ;
static const uint32_t kMapState_variableMap_definedOutputFormalArgument = 10 ;
static const uint32_t kMapState_variableMap_droppedInputFormalArgument = 20 ;
static const uint32_t kMapState_variableMap_droppedInputOutputFormalArgument = 13 ;
static const uint32_t kMapState_variableMap_droppedLocalVariable = 8 ;
static const uint32_t kMapState_variableMap_inaccessibleControlRegister = 0 ;
static const uint32_t kMapState_variableMap_inputFormalArgumentDeclaredAsUnused = 21 ;
static const uint32_t kMapState_variableMap_inputFormalParameter = 18 ;
static const uint32_t kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused = 14 ;
static const uint32_t kMapState_variableMap_localConstant = 3 ;
static const uint32_t kMapState_variableMap_module = 1 ;
static const uint32_t kMapState_variableMap_undefinedLocalConstant = 4 ;
static const uint32_t kMapState_variableMap_undefinedLocalVariable = 5 ;
static const uint32_t kMapState_variableMap_undefinedOutputFormalArgument = 9 ;
static const uint32_t kMapState_variableMap_unusedInputOutputFormalArgument = 11 ;
static const uint32_t kMapState_variableMap_usedConstantInputFormalArgument = 16 ;
static const uint32_t kMapState_variableMap_usedInputFormalArgument = 19 ;
static const uint32_t kMapState_variableMap_usedInputOutputFormalArgument = 12 ;
static const uint32_t kMapState_variableMap_usedLocalConstant = 2 ;
static const uint32_t kMapState_variableMap_usedLocalVariable = 7 ;

//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton state names                                                                                          *
//---------------------------------------------------------------------------------------------------------------------*

static const char * kMapStateNames_variableMap [22] = {
  "inaccessibleControlRegister",
  "module",
  "usedLocalConstant",
  "localConstant",
  "undefinedLocalConstant",
  "undefinedLocalVariable",
  "definedLocalVariable",
  "usedLocalVariable",
  "droppedLocalVariable",
  "undefinedOutputFormalArgument",
  "definedOutputFormalArgument",
  "unusedInputOutputFormalArgument",
  "usedInputOutputFormalArgument",
  "droppedInputOutputFormalArgument",
  "inputOutputFormalArgumentDeclaredAsUnused",
  "constantInputFormalArgument",
  "usedConstantInputFormalArgument",
  "constantInputFormalArgumentDeclaredAsUnused",
  "inputFormalParameter",
  "usedInputFormalArgument",
  "droppedInputFormalArgument",
  "inputFormalArgumentDeclaredAsUnused"
} ;

//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton actions                                                                                              *
//---------------------------------------------------------------------------------------------------------------------*

static const uint32_t kMapActionCount_variableMap = 7 ;
static const uint32_t kMapAction_variableMap_constMethodCall = 4 ;
static const uint32_t kMapAction_variableMap_dropAccess = 3 ;
static const uint32_t kMapAction_variableMap_methodCall = 5 ;
static const uint32_t kMapAction_variableMap_neutralAccess = 6 ;
static const uint32_t kMapAction_variableMap_readAccess = 0 ;
static const uint32_t kMapAction_variableMap_readWriteAccess = 2 ;
static const uint32_t kMapAction_variableMap_writeAccess = 1 ;

//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton transitions                                                                                          *
//---------------------------------------------------------------------------------------------------------------------*

static const cMapAutomatonTransition kMapTransitions_variableMap [22 * 7] = {
// State 'inaccessibleControlRegister', index 0 
  {kMapState_variableMap_inaccessibleControlRegister /* 0 */, kMapAutomatonIssueError, "the control register is inaccessible"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_inaccessibleControlRegister /* 0 */, kMapAutomatonIssueError, "the control register is inaccessible"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_inaccessibleControlRegister /* 0 */, kMapAutomatonIssueError, "the control register is inaccessible"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_inaccessibleControlRegister /* 0 */, kMapAutomatonIssueError, "the control register is inaccessible"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_inaccessibleControlRegister /* 0 */, kMapAutomatonIssueError, "the control register is inaccessible"}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_inaccessibleControlRegister /* 0 */, kMapAutomatonIssueError, "the control register is inaccessible"}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_inaccessibleControlRegister /* 0 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'module', index 1 
  {kMapState_variableMap_module /* 1 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_module /* 1 */, kMapAutomatonIssueError, "a module cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_module /* 1 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_module /* 1 */, kMapAutomatonIssueError, "a module cannot be dropped"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_module /* 1 */, kMapAutomatonNoIssue, ""}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_module /* 1 */, kMapAutomatonNoIssue, ""}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_module /* 1 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'usedLocalConstant', index 2 
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonIssueError, "a constant cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonIssueError, "a constant cannot be modified"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonIssueError, "a constant cannot be dropped"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonIssueError, "a constant cannot be modified"}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'localConstant', index 3 
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonIssueError, "a constant cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonIssueError, "a constant cannot be modified"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonIssueError, "a constant cannot be dropped"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonIssueError, "a constant cannot be modified"}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_localConstant /* 3 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'undefinedLocalConstant', index 4 
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonIssueError, "the constant is undefined"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_localConstant /* 3 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonIssueError, "the constant is undefined"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonIssueError, "the constant is undefined"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonIssueError, "the constant is undefined"}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonIssueError, "a constant cannot be modified"}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'undefinedLocalVariable', index 5 
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapAutomatonIssueError, "an undefined local variable cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapAutomatonIssueError, "an undefined local variable cannot be modified"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapAutomatonIssueWarning, "the local variable has no value"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapAutomatonIssueError, "an undefined local variable cannot be read"}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapAutomatonIssueError, "an undefined local variable cannot be modified"}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'definedLocalVariable', index 6 
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonIssueWarning, "the local variable has been dropped without any read"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'usedLocalVariable', index 7 
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'droppedLocalVariable', index 8 
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonIssueError, "a dropped local variable cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonIssueError, "a dropped local variable cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonIssueWarning, "the local variable is already dropped"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonIssueError, "the local variable is dropped"}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonIssueError, "the local variable is dropped"}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'undefinedOutputFormalArgument', index 9 
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapAutomatonIssueError, "an undefined output formal parameter cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapAutomatonIssueError, "an undefined output formal parameter cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapAutomatonIssueWarning, "the output formal parameter has no value"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapAutomatonIssueWarning, "the output formal parameter has no value"}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapAutomatonIssueWarning, "the output formal parameter has no value"}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'definedOutputFormalArgument', index 10 
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'unusedInputOutputFormalArgument', index 11 
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'usedInputOutputFormalArgument', index 12 
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'droppedInputOutputFormalArgument', index 13 
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonIssueError, "a dropped input/output formal argument cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonIssueError, "a dropped input/output formal argument cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonIssueWarning, "the input/output formal argument is already dropped"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonIssueError, "the input/output formal argument is dropped"}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonIssueError, "the input/output formal argument is dropped"}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'inputOutputFormalArgumentDeclaredAsUnused', index 14 
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'constantInputFormalArgument', index 15 
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be modified"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be dropped"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be modified"}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_constantInputFormalArgument /* 15 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'usedConstantInputFormalArgument', index 16 
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be modified"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be dropped"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be modified"}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'constantInputFormalArgumentDeclaredAsUnused', index 17 
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueWarning, "the constant input formal parameter is declared as unused"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be modified"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be dropped"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueWarning, "the constant input formal parameter is declared as unused"}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be modified"}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 17 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'inputFormalParameter', index 18 
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_inputFormalParameter /* 18 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'usedInputFormalArgument', index 19 
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'droppedInputFormalArgument', index 20 
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonIssueError, "a dropped input formal parameter cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonIssueError, "a dropped input formal parameter cannot be modified"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonIssueWarning, "the input formal parameter is already dropped"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonIssueWarning, "the input formal parameter is dropped"}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonIssueError, "a dropped input formal parameter cannot be modified"}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
// State 'inputFormalArgumentDeclaredAsUnused', index 21 
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'constMethodCall', (index 4)
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'methodCall', (index 5)
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 6)
} ;

//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton final state issues                                                                                   *
//---------------------------------------------------------------------------------------------------------------------*

static const cMapAutomatonFinalIssue kMapAutomatonFinalIssue_variableMap [22] = {
  {kMapAutomatonNoIssue, ""},// state 'inaccessibleControlRegister' (index 0)
  {kMapAutomatonNoIssue, ""},// state 'module' (index 1)
  {kMapAutomatonNoIssue, ""},// state 'usedLocalConstant' (index 2)
  {kMapAutomatonIssueWarning, "the '%K' constant value is unused"},// state 'localConstant' (index 3)
  {kMapAutomatonIssueWarning, "the '%K' constant value is unused"},// state 'undefinedLocalConstant' (index 4)
  {kMapAutomatonIssueWarning, "the '%K' local variable is unused"},// state 'undefinedLocalVariable' (index 5)
  {kMapAutomatonNoIssue, ""},// state 'definedLocalVariable' (index 6)
  {kMapAutomatonNoIssue, ""},// state 'usedLocalVariable' (index 7)
  {kMapAutomatonNoIssue, ""},// state 'droppedLocalVariable' (index 8)
  {kMapAutomatonIssueError, "the '%K' output formal parameter is undefined"},// state 'undefinedOutputFormalArgument' (index 9)
  {kMapAutomatonNoIssue, ""},// state 'definedOutputFormalArgument' (index 10)
  {kMapAutomatonIssueWarning, "the '%K' input/output formal parameter is unused"},// state 'unusedInputOutputFormalArgument' (index 11)
  {kMapAutomatonNoIssue, ""},// state 'usedInputOutputFormalArgument' (index 12)
  {kMapAutomatonIssueError, "the '%K' input/ouput formal argument should be valuated at the end of the routine"},// state 'droppedInputOutputFormalArgument' (index 13)
  {kMapAutomatonNoIssue, ""},// state 'inputOutputFormalArgumentDeclaredAsUnused' (index 14)
  {kMapAutomatonIssueWarning, "the constant '%K' input formal parameter is not used and is not declared as unused"},// state 'constantInputFormalArgument' (index 15)
  {kMapAutomatonNoIssue, ""},// state 'usedConstantInputFormalArgument' (index 16)
  {kMapAutomatonNoIssue, ""},// state 'constantInputFormalArgumentDeclaredAsUnused' (index 17)
  {kMapAutomatonIssueWarning, "the '%K' input formal parameter is not used and is not declared as unused"},// state 'inputFormalParameter' (index 18)
  {kMapAutomatonNoIssue, ""},// state 'usedInputFormalArgument' (index 19)
  {kMapAutomatonNoIssue, ""},// state 'droppedInputFormalArgument' (index 20)
  {kMapAutomatonNoIssue, ""},// state 'inputFormalArgumentDeclaredAsUnused' (index 21)
} ;
//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_closeBranch (GALGAS_location inErrorLocation,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  closeBranch (inErrorLocation,
               kMapAutomatonFinalIssue_variableMap,
               #ifndef DO_NOT_GENERATE_CHECKINGS
                 kMapStateCount_variableMap,
               #endif
               inCompiler COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::method_checkAutomatonStates (GALGAS_location inErrorLocation,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  checkAutomatonStates (inErrorLocation, kMapAutomatonFinalIssue_variableMap, inCompiler COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                             map override 'selectBlock'                                              *
//---------------------------------------------------------------------------------------------------------------------*

static const cBranchOverrideTransformationDescriptor kBranchBehaviourForOverride_variableMap_selectBlock [28] = {
  {kMapState_variableMap_localConstant /* 3 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones let it undefined"},
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapState_variableMap_localConstant /* 3 */, kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones let it undefined"},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgument /* 15 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 17 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonNoIssue, ""},
} ;

//---------------------------------------------------------------------------------------------------------------------*

static const cBranchOverrideCompatibilityDescriptor kBranchCombinationForOverride_variableMap_selectBlock [40] = {
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapState_variableMap_localConstant /* 3 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_localConstant /* 3 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones let it undefined"},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones let it undefined"},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonIssueError, "this branch lets the '%K' variable undefined, while previous ones define it"},
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonIssueError, "this branch drops the '%K' variable, while previous ones let it defined"},
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonIssueError, "this branch lets the '%K' variable undefined, while previous defines let it"},
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonIssueError, "this branch drops the '%K' variable, while previous ones let it defined"},
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones drop it"},
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones drop it"},
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonIssueError, "this branch defines the '%K' output formal argument, while previous ones let it undefined"},
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonIssueError, "this branch lets the '%K' variable undefined, while previous ones define it"},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapAutomatonIssueError, "this branch drops the '%K' input/output formal argument, while previous ones let it undefined"},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonIssueError, "this branch drops the '%K' input/output formal argument, while previous ones let it defined"},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapAutomatonIssueError, "this branch lets the '%K' input/output formal argument defined, while previous ones drop it"},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonIssueError, "this branch lets the '%K' input/output formal argument defined, while previous ones drop it"},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapAutomatonIssueError, "this branch lets the '%K' input formal argument defined, while previous ones drop it"},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapAutomatonIssueError, "this branch drops the '%K' input formal argument defined, while previous ones let it defined"},
  {kMapState_variableMap_constantInputFormalArgument /* 15 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_constantInputFormalArgument /* 15 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 17 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 17 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_inputFormalParameter /* 18 */, kMapAutomatonIssueError, "this branch drops the '%K' input formal argument, while previous let it defined"},
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonIssueError, "this branch drops the '%K' input formal argument, while previous ones let it defined"},
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonIssueError, "this branch drops the '%K' input formal argument, while previous ones let it defined"},
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonIssueError, "this branch defines the '%K' input formal argument, while previous ones let it dropped"},
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonNoIssue, ""},
} ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_openOverrideForSelectBlock (C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  openOverride (kBranchBehaviourForOverride_variableMap_selectBlock, 28,
                kBranchCombinationForOverride_variableMap_selectBlock, 40,
                "selectBlock",
                inCompiler
                COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                             map override 'repeatBlock'                                              *
//---------------------------------------------------------------------------------------------------------------------*

static const cBranchOverrideTransformationDescriptor kBranchBehaviourForOverride_variableMap_repeatBlock [28] = {
  {kMapState_variableMap_localConstant /* 3 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonIssueError, "the repeated branch should not define the '%K' variable"},
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapState_variableMap_localConstant /* 3 */, kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonIssueError, "the repeated branch should not define the '%K' variable"},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapAutomatonIssueError, "the repeated branch should not define the '%K' variable"},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapAutomatonIssueError, "the repeated branch should not define the '%K' variable"},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' variable"},
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' variable"},
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' variable"},
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonIssueError, "the repeated branch should not define the dropped '%K' variable"},
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapAutomatonIssueError, "the repeated branch should not define the '%K' output formal argument"},
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' output formal argument"},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input/output formal argument"},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input/output formal argument"},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonIssueError, "the repeated branch should define the '%K' input formal argument"},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input/output formal argument"},
  {kMapState_variableMap_constantInputFormalArgument /* 15 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 17 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_inputFormalParameter /* 18 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input formal argument"},
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input formal argument"},
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input formal argument"},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input formal argument"},
} ;

//---------------------------------------------------------------------------------------------------------------------*

static const cBranchOverrideCompatibilityDescriptor kBranchCombinationForOverride_variableMap_repeatBlock [18] = {
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapState_variableMap_localConstant /* 3 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_localConstant /* 3 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgument /* 15 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_constantInputFormalArgument /* 15 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 17 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 17 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
} ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_openOverrideForRepeatBlock (C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  openOverride (kBranchBehaviourForOverride_variableMap_repeatBlock, 28,
                kBranchCombinationForOverride_variableMap_repeatBlock, 18,
                "repeatBlock",
                inCompiler
                COMMA_THERE) ;
}


//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertInaccessibleControlRegister (GALGAS_lstring inKey,
                                                                   GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                                   GALGAS_bool inArgument1,
                                                                   GALGAS_objectIR inArgument2,
                                                                   GALGAS_bool inArgument3,
                                                                   GALGAS_bool inArgument4,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' object (previous declaration was in %L)" ;
  insertInSharedMap (attributes,
                     inCompiler,
                     kMapState_variableMap_inaccessibleControlRegister,
                     kMapStateNames_variableMap [kMapState_variableMap_inaccessibleControlRegister],
                     kInsertErrorMessage
                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertModule (GALGAS_lstring inKey,
                                              GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                              GALGAS_bool inArgument1,
                                              GALGAS_objectIR inArgument2,
                                              GALGAS_bool inArgument3,
                                              GALGAS_bool inArgument4,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' object (previous declaration was in %L)" ;
  insertInSharedMap (attributes,
                     inCompiler,
                     kMapState_variableMap_module,
                     kMapStateNames_variableMap [kMapState_variableMap_module],
                     kInsertErrorMessage
                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertUndefinedVariable (GALGAS_lstring inKey,
                                                         GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                         GALGAS_bool inArgument1,
                                                         GALGAS_objectIR inArgument2,
                                                         GALGAS_bool inArgument3,
                                                         GALGAS_bool inArgument4,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' object (previous declaration was in %L)" ;
  insertInSharedMap (attributes,
                     inCompiler,
                     kMapState_variableMap_undefinedLocalVariable,
                     kMapStateNames_variableMap [kMapState_variableMap_undefinedLocalVariable],
                     kInsertErrorMessage
                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertDefinedVariable (GALGAS_lstring inKey,
                                                       GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                       GALGAS_bool inArgument1,
                                                       GALGAS_objectIR inArgument2,
                                                       GALGAS_bool inArgument3,
                                                       GALGAS_bool inArgument4,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' object (previous declaration was in %L)" ;
  insertInSharedMap (attributes,
                     inCompiler,
                     kMapState_variableMap_definedLocalVariable,
                     kMapStateNames_variableMap [kMapState_variableMap_definedLocalVariable],
                     kInsertErrorMessage
                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertUndefinedConstant (GALGAS_lstring inKey,
                                                         GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                         GALGAS_bool inArgument1,
                                                         GALGAS_objectIR inArgument2,
                                                         GALGAS_bool inArgument3,
                                                         GALGAS_bool inArgument4,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' object (previous declaration was in %L)" ;
  insertInSharedMap (attributes,
                     inCompiler,
                     kMapState_variableMap_undefinedLocalConstant,
                     kMapStateNames_variableMap [kMapState_variableMap_undefinedLocalConstant],
                     kInsertErrorMessage
                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertConstant (GALGAS_lstring inKey,
                                                GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                GALGAS_bool inArgument1,
                                                GALGAS_objectIR inArgument2,
                                                GALGAS_bool inArgument3,
                                                GALGAS_bool inArgument4,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' object (previous declaration was in %L)" ;
  insertInSharedMap (attributes,
                     inCompiler,
                     kMapState_variableMap_localConstant,
                     kMapStateNames_variableMap [kMapState_variableMap_localConstant],
                     kInsertErrorMessage
                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertUsedConstant (GALGAS_lstring inKey,
                                                    GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                    GALGAS_bool inArgument1,
                                                    GALGAS_objectIR inArgument2,
                                                    GALGAS_bool inArgument3,
                                                    GALGAS_bool inArgument4,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' object (previous declaration was in %L)" ;
  insertInSharedMap (attributes,
                     inCompiler,
                     kMapState_variableMap_usedLocalConstant,
                     kMapStateNames_variableMap [kMapState_variableMap_usedLocalConstant],
                     kInsertErrorMessage
                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertInputFormalArgument (GALGAS_lstring inKey,
                                                           GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                           GALGAS_bool inArgument1,
                                                           GALGAS_objectIR inArgument2,
                                                           GALGAS_bool inArgument3,
                                                           GALGAS_bool inArgument4,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' object (previous declaration was in %L)" ;
  insertInSharedMap (attributes,
                     inCompiler,
                     kMapState_variableMap_inputFormalParameter,
                     kMapStateNames_variableMap [kMapState_variableMap_inputFormalParameter],
                     kInsertErrorMessage
                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertInputFormalArgumentDeclaredAsUnused (GALGAS_lstring inKey,
                                                                           GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                                           GALGAS_bool inArgument1,
                                                                           GALGAS_objectIR inArgument2,
                                                                           GALGAS_bool inArgument3,
                                                                           GALGAS_bool inArgument4,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' object (previous declaration was in %L)" ;
  insertInSharedMap (attributes,
                     inCompiler,
                     kMapState_variableMap_inputFormalArgumentDeclaredAsUnused,
                     kMapStateNames_variableMap [kMapState_variableMap_inputFormalArgumentDeclaredAsUnused],
                     kInsertErrorMessage
                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertConstantInputFormalArgument (GALGAS_lstring inKey,
                                                                   GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                                   GALGAS_bool inArgument1,
                                                                   GALGAS_objectIR inArgument2,
                                                                   GALGAS_bool inArgument3,
                                                                   GALGAS_bool inArgument4,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' object (previous declaration was in %L)" ;
  insertInSharedMap (attributes,
                     inCompiler,
                     kMapState_variableMap_constantInputFormalArgument,
                     kMapStateNames_variableMap [kMapState_variableMap_constantInputFormalArgument],
                     kInsertErrorMessage
                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertUsedConstantInputFormalArgument (GALGAS_lstring inKey,
                                                                       GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                                       GALGAS_bool inArgument1,
                                                                       GALGAS_objectIR inArgument2,
                                                                       GALGAS_bool inArgument3,
                                                                       GALGAS_bool inArgument4,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' object (previous declaration was in %L)" ;
  insertInSharedMap (attributes,
                     inCompiler,
                     kMapState_variableMap_usedConstantInputFormalArgument,
                     kMapStateNames_variableMap [kMapState_variableMap_usedConstantInputFormalArgument],
                     kInsertErrorMessage
                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertConstantInputFormalArgumentDeclaredAsUnused (GALGAS_lstring inKey,
                                                                                   GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                                                   GALGAS_bool inArgument1,
                                                                                   GALGAS_objectIR inArgument2,
                                                                                   GALGAS_bool inArgument3,
                                                                                   GALGAS_bool inArgument4,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' object (previous declaration was in %L)" ;
  insertInSharedMap (attributes,
                     inCompiler,
                     kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused,
                     kMapStateNames_variableMap [kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused],
                     kInsertErrorMessage
                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertOutputFormalArgument (GALGAS_lstring inKey,
                                                            GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                            GALGAS_bool inArgument1,
                                                            GALGAS_objectIR inArgument2,
                                                            GALGAS_bool inArgument3,
                                                            GALGAS_bool inArgument4,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' object (previous declaration was in %L)" ;
  insertInSharedMap (attributes,
                     inCompiler,
                     kMapState_variableMap_undefinedOutputFormalArgument,
                     kMapStateNames_variableMap [kMapState_variableMap_undefinedOutputFormalArgument],
                     kInsertErrorMessage
                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertInputOutputFormalArgument (GALGAS_lstring inKey,
                                                                 GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                                 GALGAS_bool inArgument1,
                                                                 GALGAS_objectIR inArgument2,
                                                                 GALGAS_bool inArgument3,
                                                                 GALGAS_bool inArgument4,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' object (previous declaration was in %L)" ;
  insertInSharedMap (attributes,
                     inCompiler,
                     kMapState_variableMap_unusedInputOutputFormalArgument,
                     kMapStateNames_variableMap [kMapState_variableMap_unusedInputOutputFormalArgument],
                     kInsertErrorMessage
                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertInputOutputFormalArgumentDeclaredAsUnused (GALGAS_lstring inKey,
                                                                                 GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                                                 GALGAS_bool inArgument1,
                                                                                 GALGAS_objectIR inArgument2,
                                                                                 GALGAS_bool inArgument3,
                                                                                 GALGAS_bool inArgument4,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' object (previous declaration was in %L)" ;
  insertInSharedMap (attributes,
                     inCompiler,
                     kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused,
                     kMapStateNames_variableMap [kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused],
                     kInsertErrorMessage
                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForReadAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_searchForReadAccess (GALGAS_lstring inKey,
                                                     GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                     GALGAS_bool & outArgument1,
                                                     GALGAS_objectIR & outArgument2,
                                                     GALGAS_bool & outArgument3,
                                                     GALGAS_bool & outArgument4,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_readAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForReadAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_type ;
    outArgument1 = p->mAttribute_readAccessAllowed ;
    outArgument2 = p->mAttribute_objectIR ;
    outArgument3 = p->mAttribute_copyable ;
    outArgument4 = p->mAttribute_canBeUsedAsInputParameter ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForWriteAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_searchForWriteAccess (GALGAS_lstring inKey,
                                                      GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                      GALGAS_bool & outArgument1,
                                                      GALGAS_objectIR & outArgument2,
                                                      GALGAS_bool & outArgument3,
                                                      GALGAS_bool & outArgument4,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_writeAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForWriteAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_type ;
    outArgument1 = p->mAttribute_readAccessAllowed ;
    outArgument2 = p->mAttribute_objectIR ;
    outArgument3 = p->mAttribute_copyable ;
    outArgument4 = p->mAttribute_canBeUsedAsInputParameter ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForReadWriteAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_searchForReadWriteAccess (GALGAS_lstring inKey,
                                                          GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                          GALGAS_bool & outArgument1,
                                                          GALGAS_objectIR & outArgument2,
                                                          GALGAS_bool & outArgument3,
                                                          GALGAS_bool & outArgument4,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_readWriteAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForReadWriteAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_type ;
    outArgument1 = p->mAttribute_readAccessAllowed ;
    outArgument2 = p->mAttribute_objectIR ;
    outArgument3 = p->mAttribute_copyable ;
    outArgument4 = p->mAttribute_canBeUsedAsInputParameter ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForDropAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_searchForDropAccess (GALGAS_lstring inKey,
                                                     GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                     GALGAS_bool & outArgument1,
                                                     GALGAS_objectIR & outArgument2,
                                                     GALGAS_bool & outArgument3,
                                                     GALGAS_bool & outArgument4,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_dropAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForDropAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_type ;
    outArgument1 = p->mAttribute_readAccessAllowed ;
    outArgument2 = p->mAttribute_objectIR ;
    outArgument3 = p->mAttribute_copyable ;
    outArgument4 = p->mAttribute_canBeUsedAsInputParameter ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForConstantMethodCall = "the '%K' object is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_searchForConstantMethodCall (GALGAS_lstring inKey,
                                                             GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                             GALGAS_bool & outArgument1,
                                                             GALGAS_objectIR & outArgument2,
                                                             GALGAS_bool & outArgument3,
                                                             GALGAS_bool & outArgument4,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_constMethodCall,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForConstantMethodCall
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_type ;
    outArgument1 = p->mAttribute_readAccessAllowed ;
    outArgument2 = p->mAttribute_objectIR ;
    outArgument3 = p->mAttribute_copyable ;
    outArgument4 = p->mAttribute_canBeUsedAsInputParameter ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForMethodCall = "the '%K' object is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_searchForMethodCall (GALGAS_lstring inKey,
                                                     GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                     GALGAS_bool & outArgument1,
                                                     GALGAS_objectIR & outArgument2,
                                                     GALGAS_bool & outArgument3,
                                                     GALGAS_bool & outArgument4,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_methodCall,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForMethodCall
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_type ;
    outArgument1 = p->mAttribute_readAccessAllowed ;
    outArgument2 = p->mAttribute_objectIR ;
    outArgument3 = p->mAttribute_copyable ;
    outArgument4 = p->mAttribute_canBeUsedAsInputParameter ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_neutralAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_neutralAccess (GALGAS_lstring inKey,
                                               GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                               GALGAS_bool & outArgument1,
                                               GALGAS_objectIR & outArgument2,
                                               GALGAS_bool & outArgument3,
                                               GALGAS_bool & outArgument4,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_neutralAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_neutralAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_type ;
    outArgument1 = p->mAttribute_readAccessAllowed ;
    outArgument2 = p->mAttribute_objectIR ;
    outArgument3 = p->mAttribute_copyable ;
    outArgument4 = p->mAttribute_canBeUsedAsInputParameter ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_variableMap::getter_typeForKey (const GALGAS_string & inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_type ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableMap::getter_readAccessAllowedForKey (const GALGAS_string & inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_readAccessAllowed ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectIR GALGAS_variableMap::getter_objectIRForKey (const GALGAS_string & inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_objectIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_objectIR ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableMap::getter_copyableForKey (const GALGAS_string & inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_copyable ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableMap::getter_canBeUsedAsInputParameterForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_canBeUsedAsInputParameter ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_setTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                               GALGAS_string inKey,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_type = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_setReadAccessAllowedForKey (GALGAS_bool inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_readAccessAllowed = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_setObjectIRForKey (GALGAS_objectIR inAttributeValue,
                                                   GALGAS_string inKey,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_objectIR = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_setCopyableForKey (GALGAS_bool inAttributeValue,
                                                   GALGAS_string inKey,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_copyable = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_setCanBeUsedAsInputParameterForKey (GALGAS_bool inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_canBeUsedAsInputParameter = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_variableMap * GALGAS_variableMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                 const GALGAS_string & inKey
                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * result = (cMapElement_variableMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_variableMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_variableMap::cEnumerator_variableMap (const GALGAS_variableMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_variableMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_variableMap::current_type (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_variableMap) ;
  return p->mAttribute_type ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_variableMap::current_readAccessAllowed (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_variableMap) ;
  return p->mAttribute_readAccessAllowed ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectIR cEnumerator_variableMap::current_objectIR (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_variableMap) ;
  return p->mAttribute_objectIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_variableMap::current_copyable (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_variableMap) ;
  return p->mAttribute_copyable ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_variableMap::current_canBeUsedAsInputParameter (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_variableMap) ;
  return p->mAttribute_canBeUsedAsInputParameter ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                  @variableMap type                                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_variableMap ("variableMap",
                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_variableMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_variableMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_variableMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_variableMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap GALGAS_variableMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_variableMap result ;
  const GALGAS_variableMap * p = (const GALGAS_variableMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_variableMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("variableMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy::GALGAS_variableMap_2D_proxy (void) :
AC_GALGAS_uniqueMapProxy () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy GALGAS_variableMap_2D_proxy::constructor_null (LOCATION_ARGS) {
  GALGAS_variableMap_2D_proxy result ;
  result.makeNullProxy (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap_2D_proxy::class_method_makeProxy (GALGAS_variableMap & ioMap,
                                                          GALGAS_lstring inKey,
                                                          GALGAS_variableMap_2D_proxy & outProxy
                                                          COMMA_LOCATION_ARGS) {
  outProxy.internalMakeProxy (ioMap, inKey COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap_2D_proxy::class_method_makeProxyFromString (GALGAS_variableMap & ioMap,
                                                                    GALGAS_string inKey,
                                                                    GALGAS_variableMap_2D_proxy & outProxy
                                                                    COMMA_LOCATION_ARGS) {
  outProxy.internalMakeProxyFromString (ioMap, inKey COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_variableMap_2D_proxy::getter_type (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_unifiedTypeMap_2D_proxy result ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) getAttributeListPointer (inCompiler, "type" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_type;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableMap_2D_proxy::getter_readAccessAllowed (C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_bool result ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) getAttributeListPointer (inCompiler, "readAccessAllowed" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_readAccessAllowed;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectIR GALGAS_variableMap_2D_proxy::getter_objectIR (C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_objectIR result ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) getAttributeListPointer (inCompiler, "objectIR" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_objectIR;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableMap_2D_proxy::getter_copyable (C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_bool result ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) getAttributeListPointer (inCompiler, "copyable" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_copyable;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableMap_2D_proxy::getter_canBeUsedAsInputParameter (C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_bool result ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) getAttributeListPointer (inCompiler, "canBeUsedAsInputParameter" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_canBeUsedAsInputParameter;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy GALGAS_variableMap_2D_proxy::constructor_searchForReadAccess (const GALGAS_variableMap & inMap,
                                                                                          const GALGAS_lstring & inKey,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_variableMap_2D_proxy result ;
  result.internalMakeRegularProxyBySearchingKey (inMap, inKey, kSearchErrorMessage_variableMap_searchForReadAccess, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy GALGAS_variableMap_2D_proxy::constructor_searchForWriteAccess (const GALGAS_variableMap & inMap,
                                                                                           const GALGAS_lstring & inKey,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_LOCATION_ARGS) {
  GALGAS_variableMap_2D_proxy result ;
  result.internalMakeRegularProxyBySearchingKey (inMap, inKey, kSearchErrorMessage_variableMap_searchForWriteAccess, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy GALGAS_variableMap_2D_proxy::constructor_searchForReadWriteAccess (const GALGAS_variableMap & inMap,
                                                                                               const GALGAS_lstring & inKey,
                                                                                               C_Compiler * inCompiler
                                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_variableMap_2D_proxy result ;
  result.internalMakeRegularProxyBySearchingKey (inMap, inKey, kSearchErrorMessage_variableMap_searchForReadWriteAccess, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy GALGAS_variableMap_2D_proxy::constructor_searchForDropAccess (const GALGAS_variableMap & inMap,
                                                                                          const GALGAS_lstring & inKey,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_variableMap_2D_proxy result ;
  result.internalMakeRegularProxyBySearchingKey (inMap, inKey, kSearchErrorMessage_variableMap_searchForDropAccess, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy GALGAS_variableMap_2D_proxy::constructor_searchForConstantMethodCall (const GALGAS_variableMap & inMap,
                                                                                                  const GALGAS_lstring & inKey,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_variableMap_2D_proxy result ;
  result.internalMakeRegularProxyBySearchingKey (inMap, inKey, kSearchErrorMessage_variableMap_searchForConstantMethodCall, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy GALGAS_variableMap_2D_proxy::constructor_searchForMethodCall (const GALGAS_variableMap & inMap,
                                                                                          const GALGAS_lstring & inKey,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_variableMap_2D_proxy result ;
  result.internalMakeRegularProxyBySearchingKey (inMap, inKey, kSearchErrorMessage_variableMap_searchForMethodCall, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy GALGAS_variableMap_2D_proxy::constructor_neutralAccess (const GALGAS_variableMap & inMap,
                                                                                    const GALGAS_lstring & inKey,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_variableMap_2D_proxy result ;
  result.internalMakeRegularProxyBySearchingKey (inMap, inKey, kSearchErrorMessage_variableMap_neutralAccess, inCompiler COMMA_THERE) ;
  return result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @variableMap-proxy type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_variableMap_2D_proxy ("variableMap-proxy",
                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_variableMap_2D_proxy::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_variableMap_2D_proxy ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_variableMap_2D_proxy::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_variableMap_2D_proxy (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy GALGAS_variableMap_2D_proxy::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_variableMap_2D_proxy result ;
  const GALGAS_variableMap_2D_proxy * p = (const GALGAS_variableMap_2D_proxy *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_variableMap_2D_proxy *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("variableMap-proxy", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        '@semanticTypePrecedenceGraph' graph                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph::GALGAS_semanticTypePrecedenceGraph (void) :
AC_GALGAS_graph () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph GALGAS_semanticTypePrecedenceGraph::constructor_emptyGraph (LOCATION_ARGS) {
  GALGAS_semanticTypePrecedenceGraph result ;
  result.makeNewEmptyGraph (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::setter_addNode (GALGAS_lstring inKey,
                                                         GALGAS_abstractDeclaration inArgument_0,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  GALGAS_declarationListAST::makeAttributesFromObjects (attributes, inArgument_0 COMMA_THERE) ;
  const char * kErrorMessage = "the '%K' symbol is already declared at %L" ;
  internalAddNode (inKey, kErrorMessage, attributes, inCompiler COMMA_THERE) ;
}


//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::method_topologicalSort (GALGAS_declarationListAST & outSortedList,
                                                                 GALGAS_lstringlist & outSortedKeyList,
                                                                 GALGAS_declarationListAST & outUnsortedList,
                                                                 GALGAS_lstringlist & outUnsortedKeyList,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  cSharedList * sortedList = NULL ;
  cSharedList * unsortedList = NULL ;
  internalTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_declarationListAST (sortedList) ;
  outUnsortedList = GALGAS_declarationListAST (unsortedList) ;
  GALGAS_declarationListAST::detachSharedList (sortedList) ;
  GALGAS_declarationListAST::detachSharedList (unsortedList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::method_depthFirstTopologicalSort (GALGAS_declarationListAST & outSortedList,
                                                                           GALGAS_lstringlist & outSortedKeyList,
                                                                           GALGAS_declarationListAST & outUnsortedList,
                                                                           GALGAS_lstringlist & outUnsortedKeyList,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  cSharedList * sortedList = NULL ;
  cSharedList * unsortedList = NULL ;
  internalDepthFirstTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_declarationListAST (sortedList) ;
  outUnsortedList = GALGAS_declarationListAST (unsortedList) ;
  GALGAS_declarationListAST::detachSharedList (sortedList) ;
  GALGAS_declarationListAST::detachSharedList (unsortedList) ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph GALGAS_semanticTypePrecedenceGraph::getter_reversedGraph (LOCATION_ARGS) const {
  GALGAS_semanticTypePrecedenceGraph result ;
  result.reversedGraphFromGraph (*this COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::method_circularities (GALGAS_declarationListAST & outInfoList,
                                                               GALGAS_lstringlist & outKeyList
                                                               COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalFindCircularities (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_declarationListAST (infoList) ;
  GALGAS_declarationListAST::detachSharedList (infoList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::method_nodesWithNoSuccessor (GALGAS_declarationListAST & outInfoList,
                                                                      GALGAS_lstringlist & outKeyList
                                                                      COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalNodesWithNoSuccessor (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_declarationListAST (infoList) ;
  GALGAS_declarationListAST::detachSharedList (infoList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::method_nodesWithNoPredecessor (GALGAS_declarationListAST & outInfoList,
                                                                        GALGAS_lstringlist & outKeyList
                                                                        COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalNodesWithNoPredecessor (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_declarationListAST (infoList) ;
  GALGAS_declarationListAST::detachSharedList (infoList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph GALGAS_semanticTypePrecedenceGraph::getter_subgraphFromNodes (const GALGAS_lstringlist & inStartKeyList,
                                                                                                 const GALGAS_stringset & inKeysToExclude,
                                                                                                 C_Compiler * inCompiler
                                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_semanticTypePrecedenceGraph result ;
  subGraph (result, inStartKeyList, inKeysToExclude, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_semanticTypePrecedenceGraph::getter_accessibleNodesFrom (const GALGAS_lstringlist & inStartKeyList,
                                                                                   const GALGAS_stringset & inNodesToExclude,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_lstringlist result ;
  GALGAS_semanticTypePrecedenceGraph resultingGraph ;
  subGraph (resultingGraph,
            inStartKeyList,
            inNodesToExclude,
            inCompiler
            COMMA_THERE) ;
  if (resultingGraph.isValid ()) {
    result = resultingGraph.getter_lkeyList (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @semanticTypePrecedenceGraph type                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_semanticTypePrecedenceGraph ("semanticTypePrecedenceGraph",
                                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_semanticTypePrecedenceGraph::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_semanticTypePrecedenceGraph ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_semanticTypePrecedenceGraph::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_semanticTypePrecedenceGraph (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph GALGAS_semanticTypePrecedenceGraph::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_semanticTypePrecedenceGraph result ;
  const GALGAS_semanticTypePrecedenceGraph * p = (const GALGAS_semanticTypePrecedenceGraph *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_semanticTypePrecedenceGraph *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("semanticTypePrecedenceGraph", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       Abstract extension method '@abstractDeclaration enterInPrecedenceGraph'                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <extensionMethodSignature_abstractDeclaration_enterInPrecedenceGraph> gExtensionMethodTable_abstractDeclaration_enterInPrecedenceGraph ;

//---------------------------------------------------------------------------------------------------------------------*

void enterExtensionMethod_enterInPrecedenceGraph (const int32_t inClassIndex,
                                                  extensionMethodSignature_abstractDeclaration_enterInPrecedenceGraph inMethod) {
  gExtensionMethodTable_abstractDeclaration_enterInPrecedenceGraph.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeExtensionMethod_abstractDeclaration_enterInPrecedenceGraph (void) {
  gExtensionMethodTable_abstractDeclaration_enterInPrecedenceGraph.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractDeclaration_enterInPrecedenceGraph (NULL,
                                                                       freeExtensionMethod_abstractDeclaration_enterInPrecedenceGraph) ;

//---------------------------------------------------------------------------------------------------------------------*

void callExtensionMethod_enterInPrecedenceGraph (const cPtr_abstractDeclaration * inObject,
                                                 GALGAS_semanticTypePrecedenceGraph & io_ioGraph,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractDeclaration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    extensionMethodSignature_abstractDeclaration_enterInPrecedenceGraph f = NULL ;
    if (classIndex < gExtensionMethodTable_abstractDeclaration_enterInPrecedenceGraph.count ()) {
      f = gExtensionMethodTable_abstractDeclaration_enterInPrecedenceGraph (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
      const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
      while ((NULL == f) && (NULL != p)) {
        if (p->mSlotID < gExtensionMethodTable_abstractDeclaration_enterInPrecedenceGraph.count ()) {
          f = gExtensionMethodTable_abstractDeclaration_enterInPrecedenceGraph (p->mSlotID COMMA_HERE) ;
        }
        p = p->mSuperclassDescriptor ;
      }
      gExtensionMethodTable_abstractDeclaration_enterInPrecedenceGraph.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, io_ioGraph, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                 Abstract extension getter '@abstractDeclaration keyRepresentationForErrorSignaling'                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <enterExtensionGetter_abstractDeclaration_keyRepresentationForErrorSignaling> gExtensionGetterTable_abstractDeclaration_keyRepresentationForErrorSignaling ;

//---------------------------------------------------------------------------------------------------------------------*

void enterExtensionGetter_keyRepresentationForErrorSignaling (const int32_t inClassIndex,
                                                              enterExtensionGetter_abstractDeclaration_keyRepresentationForErrorSignaling inGetter) {
  gExtensionGetterTable_abstractDeclaration_keyRepresentationForErrorSignaling.forceObjectAtIndex (inClassIndex, inGetter, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeExtensionGetter_abstractDeclaration_keyRepresentationForErrorSignaling (void) {
  gExtensionGetterTable_abstractDeclaration_keyRepresentationForErrorSignaling.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gGetter_abstractDeclaration_keyRepresentationForErrorSignaling (NULL,
                                                                                   freeExtensionGetter_abstractDeclaration_keyRepresentationForErrorSignaling) ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string callExtensionGetter_keyRepresentationForErrorSignaling (const cPtr_abstractDeclaration * inObject,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractDeclaration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    enterExtensionGetter_abstractDeclaration_keyRepresentationForErrorSignaling f = NULL ;
    if (classIndex < gExtensionGetterTable_abstractDeclaration_keyRepresentationForErrorSignaling.count ()) {
      f = gExtensionGetterTable_abstractDeclaration_keyRepresentationForErrorSignaling (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gExtensionGetterTable_abstractDeclaration_keyRepresentationForErrorSignaling.count ()) {
           f = gExtensionGetterTable_abstractDeclaration_keyRepresentationForErrorSignaling (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gExtensionGetterTable_abstractDeclaration_keyRepresentationForErrorSignaling.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_routineMapForContext::cMapElement_routineMapForContext (const GALGAS_lstring & inKey,
                                                                    const GALGAS_lstring & in_mRoutineLLVMName,
                                                                    const GALGAS_bool & in_mIsPublic,
                                                                    const GALGAS_bool & in_mGlobal,
                                                                    const GALGAS_mode & in_mMode,
                                                                    const GALGAS_procedureSignature & in_mSignature,
                                                                    const GALGAS_routineKind & in_mRoutineKind,
                                                                    const GALGAS_bool & in_mWeak,
                                                                    const GALGAS_unifiedTypeMap_2D_proxy & in_mReturnType,
                                                                    const GALGAS_bool & in_mAppendFileAndLineArgumentForPanicLocation,
                                                                    const GALGAS_bool & in_mCanAccessProperties,
                                                                    const GALGAS_bool & in_mCanMutateProperties
                                                                    COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRoutineLLVMName (in_mRoutineLLVMName),
mAttribute_mIsPublic (in_mIsPublic),
mAttribute_mGlobal (in_mGlobal),
mAttribute_mMode (in_mMode),
mAttribute_mSignature (in_mSignature),
mAttribute_mRoutineKind (in_mRoutineKind),
mAttribute_mWeak (in_mWeak),
mAttribute_mReturnType (in_mReturnType),
mAttribute_mAppendFileAndLineArgumentForPanicLocation (in_mAppendFileAndLineArgumentForPanicLocation),
mAttribute_mCanAccessProperties (in_mCanAccessProperties),
mAttribute_mCanMutateProperties (in_mCanMutateProperties) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_routineMapForContext::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRoutineLLVMName.isValid () && mAttribute_mIsPublic.isValid () && mAttribute_mGlobal.isValid () && mAttribute_mMode.isValid () && mAttribute_mSignature.isValid () && mAttribute_mRoutineKind.isValid () && mAttribute_mWeak.isValid () && mAttribute_mReturnType.isValid () && mAttribute_mAppendFileAndLineArgumentForPanicLocation.isValid () && mAttribute_mCanAccessProperties.isValid () && mAttribute_mCanMutateProperties.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_routineMapForContext::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_routineMapForContext (mAttribute_lkey, mAttribute_mRoutineLLVMName, mAttribute_mIsPublic, mAttribute_mGlobal, mAttribute_mMode, mAttribute_mSignature, mAttribute_mRoutineKind, mAttribute_mWeak, mAttribute_mReturnType, mAttribute_mAppendFileAndLineArgumentForPanicLocation, mAttribute_mCanAccessProperties, mAttribute_mCanMutateProperties COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_routineMapForContext::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRoutineLLVMName" ":" ;
  mAttribute_mRoutineLLVMName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsPublic" ":" ;
  mAttribute_mIsPublic.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGlobal" ":" ;
  mAttribute_mGlobal.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mMode" ":" ;
  mAttribute_mMode.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSignature" ":" ;
  mAttribute_mSignature.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRoutineKind" ":" ;
  mAttribute_mRoutineKind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mWeak" ":" ;
  mAttribute_mWeak.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mReturnType" ":" ;
  mAttribute_mReturnType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAppendFileAndLineArgumentForPanicLocation" ":" ;
  mAttribute_mAppendFileAndLineArgumentForPanicLocation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCanAccessProperties" ":" ;
  mAttribute_mCanAccessProperties.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCanMutateProperties" ":" ;
  mAttribute_mCanMutateProperties.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_routineMapForContext::compare (const cCollectionElement * inOperand) const {
  cMapElement_routineMapForContext * operand = (cMapElement_routineMapForContext *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRoutineLLVMName.objectCompare (operand->mAttribute_mRoutineLLVMName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIsPublic.objectCompare (operand->mAttribute_mIsPublic) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mGlobal.objectCompare (operand->mAttribute_mGlobal) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMode.objectCompare (operand->mAttribute_mMode) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSignature.objectCompare (operand->mAttribute_mSignature) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRoutineKind.objectCompare (operand->mAttribute_mRoutineKind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mWeak.objectCompare (operand->mAttribute_mWeak) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mReturnType.objectCompare (operand->mAttribute_mReturnType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAppendFileAndLineArgumentForPanicLocation.objectCompare (operand->mAttribute_mAppendFileAndLineArgumentForPanicLocation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCanAccessProperties.objectCompare (operand->mAttribute_mCanAccessProperties) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCanMutateProperties.objectCompare (operand->mAttribute_mCanMutateProperties) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapForContext::GALGAS_routineMapForContext (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapForContext::GALGAS_routineMapForContext (const GALGAS_routineMapForContext & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapForContext & GALGAS_routineMapForContext::operator = (const GALGAS_routineMapForContext & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapForContext GALGAS_routineMapForContext::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_routineMapForContext result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapForContext GALGAS_routineMapForContext::constructor_mapWithMapToOverride (const GALGAS_routineMapForContext & inMapToOverride
                                                                                           COMMA_LOCATION_ARGS) {
  GALGAS_routineMapForContext result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapForContext GALGAS_routineMapForContext::getter_overriddenMap (C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  GALGAS_routineMapForContext result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::addAssign_operation (const GALGAS_lstring & inKey,
                                                       const GALGAS_lstring & inArgument0,
                                                       const GALGAS_bool & inArgument1,
                                                       const GALGAS_bool & inArgument2,
                                                       const GALGAS_mode & inArgument3,
                                                       const GALGAS_procedureSignature & inArgument4,
                                                       const GALGAS_routineKind & inArgument5,
                                                       const GALGAS_bool & inArgument6,
                                                       const GALGAS_unifiedTypeMap_2D_proxy & inArgument7,
                                                       const GALGAS_bool & inArgument8,
                                                       const GALGAS_bool & inArgument9,
                                                       const GALGAS_bool & inArgument10,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_routineMapForContext * p = NULL ;
  macroMyNew (p, cMapElement_routineMapForContext (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6, inArgument7, inArgument8, inArgument9, inArgument10 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@routineMapForContext insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_insertKey (GALGAS_lstring inKey,
                                                    GALGAS_lstring inArgument0,
                                                    GALGAS_bool inArgument1,
                                                    GALGAS_bool inArgument2,
                                                    GALGAS_mode inArgument3,
                                                    GALGAS_procedureSignature inArgument4,
                                                    GALGAS_routineKind inArgument5,
                                                    GALGAS_bool inArgument6,
                                                    GALGAS_unifiedTypeMap_2D_proxy inArgument7,
                                                    GALGAS_bool inArgument8,
                                                    GALGAS_bool inArgument9,
                                                    GALGAS_bool inArgument10,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_routineMapForContext * p = NULL ;
  macroMyNew (p, cMapElement_routineMapForContext (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6, inArgument7, inArgument8, inArgument9, inArgument10 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' routine is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_routineMapForContext_searchKey = "there is no '%K' routine" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::method_searchKey (GALGAS_lstring inKey,
                                                    GALGAS_lstring & outArgument0,
                                                    GALGAS_bool & outArgument1,
                                                    GALGAS_bool & outArgument2,
                                                    GALGAS_mode & outArgument3,
                                                    GALGAS_procedureSignature & outArgument4,
                                                    GALGAS_routineKind & outArgument5,
                                                    GALGAS_bool & outArgument6,
                                                    GALGAS_unifiedTypeMap_2D_proxy & outArgument7,
                                                    GALGAS_bool & outArgument8,
                                                    GALGAS_bool & outArgument9,
                                                    GALGAS_bool & outArgument10,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) performSearch (inKey,
                                                                                                           inCompiler,
                                                                                                           kSearchErrorMessage_routineMapForContext_searchKey
                                                                                                           COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
    outArgument7.drop () ;
    outArgument8.drop () ;
    outArgument9.drop () ;
    outArgument10.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    outArgument0 = p->mAttribute_mRoutineLLVMName ;
    outArgument1 = p->mAttribute_mIsPublic ;
    outArgument2 = p->mAttribute_mGlobal ;
    outArgument3 = p->mAttribute_mMode ;
    outArgument4 = p->mAttribute_mSignature ;
    outArgument5 = p->mAttribute_mRoutineKind ;
    outArgument6 = p->mAttribute_mWeak ;
    outArgument7 = p->mAttribute_mReturnType ;
    outArgument8 = p->mAttribute_mAppendFileAndLineArgumentForPanicLocation ;
    outArgument9 = p->mAttribute_mCanAccessProperties ;
    outArgument10 = p->mAttribute_mCanMutateProperties ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_removeKey (GALGAS_lstring inKey,
                                                    GALGAS_lstring & outArgument0,
                                                    GALGAS_bool & outArgument1,
                                                    GALGAS_bool & outArgument2,
                                                    GALGAS_mode & outArgument3,
                                                    GALGAS_procedureSignature & outArgument4,
                                                    GALGAS_routineKind & outArgument5,
                                                    GALGAS_bool & outArgument6,
                                                    GALGAS_unifiedTypeMap_2D_proxy & outArgument7,
                                                    GALGAS_bool & outArgument8,
                                                    GALGAS_bool & outArgument9,
                                                    GALGAS_bool & outArgument10,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  const char * kRemoveErrorMessage = "there is no '%K' routine" ;
  capCollectionElement attributes ;
  performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes.ptr () ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    outArgument0 = p->mAttribute_mRoutineLLVMName ;
    outArgument1 = p->mAttribute_mIsPublic ;
    outArgument2 = p->mAttribute_mGlobal ;
    outArgument3 = p->mAttribute_mMode ;
    outArgument4 = p->mAttribute_mSignature ;
    outArgument5 = p->mAttribute_mRoutineKind ;
    outArgument6 = p->mAttribute_mWeak ;
    outArgument7 = p->mAttribute_mReturnType ;
    outArgument8 = p->mAttribute_mAppendFileAndLineArgumentForPanicLocation ;
    outArgument9 = p->mAttribute_mCanAccessProperties ;
    outArgument10 = p->mAttribute_mCanMutateProperties ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_routineMapForContext::getter_mRoutineLLVMNameForKey (const GALGAS_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    result = p->mAttribute_mRoutineLLVMName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineMapForContext::getter_mIsPublicForKey (const GALGAS_string & inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    result = p->mAttribute_mIsPublic ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineMapForContext::getter_mGlobalForKey (const GALGAS_string & inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    result = p->mAttribute_mGlobal ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_mode GALGAS_routineMapForContext::getter_mModeForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) attributes ;
  GALGAS_mode result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    result = p->mAttribute_mMode ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature GALGAS_routineMapForContext::getter_mSignatureForKey (const GALGAS_string & inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) attributes ;
  GALGAS_procedureSignature result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    result = p->mAttribute_mSignature ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKind GALGAS_routineMapForContext::getter_mRoutineKindForKey (const GALGAS_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) attributes ;
  GALGAS_routineKind result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    result = p->mAttribute_mRoutineKind ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineMapForContext::getter_mWeakForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    result = p->mAttribute_mWeak ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_routineMapForContext::getter_mReturnTypeForKey (const GALGAS_string & inKey,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    result = p->mAttribute_mReturnType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineMapForContext::getter_mAppendFileAndLineArgumentForPanicLocationForKey (const GALGAS_string & inKey,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    result = p->mAttribute_mAppendFileAndLineArgumentForPanicLocation ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineMapForContext::getter_mCanAccessPropertiesForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    result = p->mAttribute_mCanAccessProperties ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineMapForContext::getter_mCanMutatePropertiesForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    result = p->mAttribute_mCanMutateProperties ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_setMRoutineLLVMNameForKey (GALGAS_lstring inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    p->mAttribute_mRoutineLLVMName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_setMIsPublicForKey (GALGAS_bool inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    p->mAttribute_mIsPublic = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_setMGlobalForKey (GALGAS_bool inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    p->mAttribute_mGlobal = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_setMModeForKey (GALGAS_mode inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    p->mAttribute_mMode = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_setMSignatureForKey (GALGAS_procedureSignature inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    p->mAttribute_mSignature = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_setMRoutineKindForKey (GALGAS_routineKind inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    p->mAttribute_mRoutineKind = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_setMWeakForKey (GALGAS_bool inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    p->mAttribute_mWeak = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_setMReturnTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    p->mAttribute_mReturnType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_setMAppendFileAndLineArgumentForPanicLocationForKey (GALGAS_bool inAttributeValue,
                                                                                              GALGAS_string inKey,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    p->mAttribute_mAppendFileAndLineArgumentForPanicLocation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_setMCanAccessPropertiesForKey (GALGAS_bool inAttributeValue,
                                                                        GALGAS_string inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    p->mAttribute_mCanAccessProperties = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_setMCanMutatePropertiesForKey (GALGAS_bool inAttributeValue,
                                                                        GALGAS_string inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    p->mAttribute_mCanMutateProperties = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_routineMapForContext * GALGAS_routineMapForContext::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                   const GALGAS_string & inKey
                                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_routineMapForContext * result = (cMapElement_routineMapForContext *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_routineMapForContext) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_routineMapForContext::cEnumerator_routineMapForContext (const GALGAS_routineMapForContext & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapForContext_2D_element cEnumerator_routineMapForContext::current (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return GALGAS_routineMapForContext_2D_element (p->mAttribute_lkey, p->mAttribute_mRoutineLLVMName, p->mAttribute_mIsPublic, p->mAttribute_mGlobal, p->mAttribute_mMode, p->mAttribute_mSignature, p->mAttribute_mRoutineKind, p->mAttribute_mWeak, p->mAttribute_mReturnType, p->mAttribute_mAppendFileAndLineArgumentForPanicLocation, p->mAttribute_mCanAccessProperties, p->mAttribute_mCanMutateProperties) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_routineMapForContext::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_routineMapForContext::current_mRoutineLLVMName (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return p->mAttribute_mRoutineLLVMName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineMapForContext::current_mIsPublic (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return p->mAttribute_mIsPublic ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineMapForContext::current_mGlobal (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return p->mAttribute_mGlobal ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_mode cEnumerator_routineMapForContext::current_mMode (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return p->mAttribute_mMode ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature cEnumerator_routineMapForContext::current_mSignature (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return p->mAttribute_mSignature ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKind cEnumerator_routineMapForContext::current_mRoutineKind (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return p->mAttribute_mRoutineKind ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineMapForContext::current_mWeak (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return p->mAttribute_mWeak ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_routineMapForContext::current_mReturnType (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return p->mAttribute_mReturnType ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineMapForContext::current_mAppendFileAndLineArgumentForPanicLocation (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return p->mAttribute_mAppendFileAndLineArgumentForPanicLocation ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineMapForContext::current_mCanAccessProperties (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return p->mAttribute_mCanAccessProperties ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineMapForContext::current_mCanMutateProperties (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return p->mAttribute_mCanMutateProperties ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @routineMapForContext type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineMapForContext ("routineMapForContext",
                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineMapForContext::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineMapForContext ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineMapForContext::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineMapForContext (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapForContext GALGAS_routineMapForContext::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_routineMapForContext result ;
  const GALGAS_routineMapForContext * p = (const GALGAS_routineMapForContext *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineMapForContext *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("routineMapForContext", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   Class for element of '@procedureSignature' list                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_procedureSignature : public cCollectionElement {
  public : GALGAS_procedureSignature_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_procedureSignature (const GALGAS_procFormalArgumentPassingMode & in_mFormalArgumentPassingMode,
                                                  const GALGAS_string & in_mSelector,
                                                  const GALGAS_unifiedTypeMap_2D_proxy & in_mType
                                                  COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
  public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_procedureSignature::cCollectionElement_procedureSignature (const GALGAS_procFormalArgumentPassingMode & in_mFormalArgumentPassingMode,
                                                                              const GALGAS_string & in_mSelector,
                                                                              const GALGAS_unifiedTypeMap_2D_proxy & in_mType
                                                                              COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mFormalArgumentPassingMode, in_mSelector, in_mType) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_procedureSignature::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_procedureSignature::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_procedureSignature (mObject.mAttribute_mFormalArgumentPassingMode, mObject.mAttribute_mSelector, mObject.mAttribute_mType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_procedureSignature::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFormalArgumentPassingMode" ":" ;
  mObject.mAttribute_mFormalArgumentPassingMode.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSelector" ":" ;
  mObject.mAttribute_mSelector.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mObject.mAttribute_mType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_procedureSignature::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_procedureSignature * operand = (cCollectionElement_procedureSignature *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_procedureSignature) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature::GALGAS_procedureSignature (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature::GALGAS_procedureSignature (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature GALGAS_procedureSignature::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_procedureSignature result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature GALGAS_procedureSignature::constructor_listWithValue (const GALGAS_procFormalArgumentPassingMode & inOperand0,
                                                                                const GALGAS_string & inOperand1,
                                                                                const GALGAS_unifiedTypeMap_2D_proxy & inOperand2
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_procedureSignature result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_procedureSignature::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureSignature::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                           const GALGAS_procFormalArgumentPassingMode & in_mFormalArgumentPassingMode,
                                                           const GALGAS_string & in_mSelector,
                                                           const GALGAS_unifiedTypeMap_2D_proxy & in_mType
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement_procedureSignature * p = NULL ;
  macroMyNew (p, cCollectionElement_procedureSignature (in_mFormalArgumentPassingMode,
                                                        in_mSelector,
                                                        in_mType COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureSignature::addAssign_operation (const GALGAS_procFormalArgumentPassingMode & inOperand0,
                                                     const GALGAS_string & inOperand1,
                                                     const GALGAS_unifiedTypeMap_2D_proxy & inOperand2
                                                     COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_procedureSignature (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureSignature::setter_insertAtIndex (const GALGAS_procFormalArgumentPassingMode inOperand0,
                                                      const GALGAS_string inOperand1,
                                                      const GALGAS_unifiedTypeMap_2D_proxy inOperand2,
                                                      const GALGAS_uint inInsertionIndex,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_procedureSignature (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureSignature::setter_removeAtIndex (GALGAS_procFormalArgumentPassingMode & outOperand0,
                                                      GALGAS_string & outOperand1,
                                                      GALGAS_unifiedTypeMap_2D_proxy & outOperand2,
                                                      const GALGAS_uint inRemoveIndex,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_procedureSignature * p = (cCollectionElement_procedureSignature *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_procedureSignature) ;
      outOperand0 = p->mObject.mAttribute_mFormalArgumentPassingMode ;
      outOperand1 = p->mObject.mAttribute_mSelector ;
      outOperand2 = p->mObject.mAttribute_mType ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureSignature::setter_popFirst (GALGAS_procFormalArgumentPassingMode & outOperand0,
                                                 GALGAS_string & outOperand1,
                                                 GALGAS_unifiedTypeMap_2D_proxy & outOperand2,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_procedureSignature * p = (cCollectionElement_procedureSignature *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_procedureSignature) ;
    outOperand0 = p->mObject.mAttribute_mFormalArgumentPassingMode ;
    outOperand1 = p->mObject.mAttribute_mSelector ;
    outOperand2 = p->mObject.mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureSignature::setter_popLast (GALGAS_procFormalArgumentPassingMode & outOperand0,
                                                GALGAS_string & outOperand1,
                                                GALGAS_unifiedTypeMap_2D_proxy & outOperand2,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_procedureSignature * p = (cCollectionElement_procedureSignature *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_procedureSignature) ;
    outOperand0 = p->mObject.mAttribute_mFormalArgumentPassingMode ;
    outOperand1 = p->mObject.mAttribute_mSelector ;
    outOperand2 = p->mObject.mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureSignature::method_first (GALGAS_procFormalArgumentPassingMode & outOperand0,
                                              GALGAS_string & outOperand1,
                                              GALGAS_unifiedTypeMap_2D_proxy & outOperand2,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_procedureSignature * p = (cCollectionElement_procedureSignature *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_procedureSignature) ;
    outOperand0 = p->mObject.mAttribute_mFormalArgumentPassingMode ;
    outOperand1 = p->mObject.mAttribute_mSelector ;
    outOperand2 = p->mObject.mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureSignature::method_last (GALGAS_procFormalArgumentPassingMode & outOperand0,
                                             GALGAS_string & outOperand1,
                                             GALGAS_unifiedTypeMap_2D_proxy & outOperand2,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_procedureSignature * p = (cCollectionElement_procedureSignature *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_procedureSignature) ;
    outOperand0 = p->mObject.mAttribute_mFormalArgumentPassingMode ;
    outOperand1 = p->mObject.mAttribute_mSelector ;
    outOperand2 = p->mObject.mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature GALGAS_procedureSignature::add_operation (const GALGAS_procedureSignature & inOperand,
                                                                    C_Compiler * /* inCompiler */
                                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_procedureSignature result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature GALGAS_procedureSignature::getter_subListWithRange (const GALGAS_range & inRange,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_procedureSignature result = GALGAS_procedureSignature::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature GALGAS_procedureSignature::getter_subListFromIndex (const GALGAS_uint & inIndex,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_procedureSignature result = GALGAS_procedureSignature::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature GALGAS_procedureSignature::getter_subListToIndex (const GALGAS_uint & inIndex,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_procedureSignature result = GALGAS_procedureSignature::constructor_emptyList (THERE) ;
  subListToIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureSignature::plusAssign_operation (const GALGAS_procedureSignature inOperand,
                                                      C_Compiler * /* inCompiler */
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procFormalArgumentPassingMode GALGAS_procedureSignature::getter_mFormalArgumentPassingModeAtIndex (const GALGAS_uint & inIndex,
                                                                                                          C_Compiler * inCompiler
                                                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_procedureSignature * p = (cCollectionElement_procedureSignature *) attributes.ptr () ;
  GALGAS_procFormalArgumentPassingMode result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_procedureSignature) ;
    result = p->mObject.mAttribute_mFormalArgumentPassingMode ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_procedureSignature::getter_mSelectorAtIndex (const GALGAS_uint & inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_procedureSignature * p = (cCollectionElement_procedureSignature *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_procedureSignature) ;
    result = p->mObject.mAttribute_mSelector ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_procedureSignature::getter_mTypeAtIndex (const GALGAS_uint & inIndex,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_procedureSignature * p = (cCollectionElement_procedureSignature *) attributes.ptr () ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_procedureSignature) ;
    result = p->mObject.mAttribute_mType ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_procedureSignature::cEnumerator_procedureSignature (const GALGAS_procedureSignature & inEnumeratedObject,
                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature_2D_element cEnumerator_procedureSignature::current (LOCATION_ARGS) const {
  const cCollectionElement_procedureSignature * p = (const cCollectionElement_procedureSignature *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_procedureSignature) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procFormalArgumentPassingMode cEnumerator_procedureSignature::current_mFormalArgumentPassingMode (LOCATION_ARGS) const {
  const cCollectionElement_procedureSignature * p = (const cCollectionElement_procedureSignature *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_procedureSignature) ;
  return p->mObject.mAttribute_mFormalArgumentPassingMode ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_procedureSignature::current_mSelector (LOCATION_ARGS) const {
  const cCollectionElement_procedureSignature * p = (const cCollectionElement_procedureSignature *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_procedureSignature) ;
  return p->mObject.mAttribute_mSelector ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_procedureSignature::current_mType (LOCATION_ARGS) const {
  const cCollectionElement_procedureSignature * p = (const cCollectionElement_procedureSignature *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_procedureSignature) ;
  return p->mObject.mAttribute_mType ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @procedureSignature type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_procedureSignature ("procedureSignature",
                                           NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_procedureSignature::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_procedureSignature ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_procedureSignature::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_procedureSignature (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature GALGAS_procedureSignature::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_procedureSignature result ;
  const GALGAS_procedureSignature * p = (const GALGAS_procedureSignature *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_procedureSignature *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("procedureSignature", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_guardMapForContext::cMapElement_guardMapForContext (const GALGAS_lstring & inKey,
                                                                const GALGAS_bool & in_mIsPublic,
                                                                const GALGAS_procedureSignature & in_mSignature
                                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIsPublic (in_mIsPublic),
mAttribute_mSignature (in_mSignature) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_guardMapForContext::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIsPublic.isValid () && mAttribute_mSignature.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_guardMapForContext::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_guardMapForContext (mAttribute_lkey, mAttribute_mIsPublic, mAttribute_mSignature COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_guardMapForContext::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsPublic" ":" ;
  mAttribute_mIsPublic.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSignature" ":" ;
  mAttribute_mSignature.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_guardMapForContext::compare (const cCollectionElement * inOperand) const {
  cMapElement_guardMapForContext * operand = (cMapElement_guardMapForContext *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIsPublic.objectCompare (operand->mAttribute_mIsPublic) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSignature.objectCompare (operand->mAttribute_mSignature) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapForContext::GALGAS_guardMapForContext (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapForContext::GALGAS_guardMapForContext (const GALGAS_guardMapForContext & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapForContext & GALGAS_guardMapForContext::operator = (const GALGAS_guardMapForContext & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapForContext GALGAS_guardMapForContext::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_guardMapForContext result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapForContext GALGAS_guardMapForContext::constructor_mapWithMapToOverride (const GALGAS_guardMapForContext & inMapToOverride
                                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_guardMapForContext result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapForContext GALGAS_guardMapForContext::getter_overriddenMap (C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_guardMapForContext result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapForContext::addAssign_operation (const GALGAS_lstring & inKey,
                                                     const GALGAS_bool & inArgument0,
                                                     const GALGAS_procedureSignature & inArgument1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_guardMapForContext * p = NULL ;
  macroMyNew (p, cMapElement_guardMapForContext (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@guardMapForContext insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapForContext::setter_insertKey (GALGAS_lstring inKey,
                                                  GALGAS_bool inArgument0,
                                                  GALGAS_procedureSignature inArgument1,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cMapElement_guardMapForContext * p = NULL ;
  macroMyNew (p, cMapElement_guardMapForContext (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' guard is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_guardMapForContext_searchKey = "there is no '%K' guard" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapForContext::method_searchKey (GALGAS_lstring inKey,
                                                  GALGAS_bool & outArgument0,
                                                  GALGAS_procedureSignature & outArgument1,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  const cMapElement_guardMapForContext * p = (const cMapElement_guardMapForContext *) performSearch (inKey,
                                                                                                       inCompiler,
                                                                                                       kSearchErrorMessage_guardMapForContext_searchKey
                                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_guardMapForContext) ;
    outArgument0 = p->mAttribute_mIsPublic ;
    outArgument1 = p->mAttribute_mSignature ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapForContext::setter_removeKey (GALGAS_lstring inKey,
                                                  GALGAS_bool & outArgument0,
                                                  GALGAS_procedureSignature & outArgument1,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  const char * kRemoveErrorMessage = "there is no '%K' guard" ;
  capCollectionElement attributes ;
  performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;
  cMapElement_guardMapForContext * p = (cMapElement_guardMapForContext *) attributes.ptr () ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_guardMapForContext) ;
    outArgument0 = p->mAttribute_mIsPublic ;
    outArgument1 = p->mAttribute_mSignature ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_guardMapForContext::getter_mIsPublicForKey (const GALGAS_string & inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_guardMapForContext * p = (const cMapElement_guardMapForContext *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_guardMapForContext) ;
    result = p->mAttribute_mIsPublic ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature GALGAS_guardMapForContext::getter_mSignatureForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_guardMapForContext * p = (const cMapElement_guardMapForContext *) attributes ;
  GALGAS_procedureSignature result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_guardMapForContext) ;
    result = p->mAttribute_mSignature ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapForContext::setter_setMIsPublicForKey (GALGAS_bool inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_guardMapForContext * p = (cMapElement_guardMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_guardMapForContext) ;
    p->mAttribute_mIsPublic = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapForContext::setter_setMSignatureForKey (GALGAS_procedureSignature inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_guardMapForContext * p = (cMapElement_guardMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_guardMapForContext) ;
    p->mAttribute_mSignature = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_guardMapForContext * GALGAS_guardMapForContext::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                               const GALGAS_string & inKey
                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement_guardMapForContext * result = (cMapElement_guardMapForContext *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_guardMapForContext) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_guardMapForContext::cEnumerator_guardMapForContext (const GALGAS_guardMapForContext & inEnumeratedObject,
                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapForContext_2D_element cEnumerator_guardMapForContext::current (LOCATION_ARGS) const {
  const cMapElement_guardMapForContext * p = (const cMapElement_guardMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_guardMapForContext) ;
  return GALGAS_guardMapForContext_2D_element (p->mAttribute_lkey, p->mAttribute_mIsPublic, p->mAttribute_mSignature) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_guardMapForContext::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_guardMapForContext::current_mIsPublic (LOCATION_ARGS) const {
  const cMapElement_guardMapForContext * p = (const cMapElement_guardMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_guardMapForContext) ;
  return p->mAttribute_mIsPublic ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature cEnumerator_guardMapForContext::current_mSignature (LOCATION_ARGS) const {
  const cMapElement_guardMapForContext * p = (const cMapElement_guardMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_guardMapForContext) ;
  return p->mAttribute_mSignature ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @guardMapForContext type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_guardMapForContext ("guardMapForContext",
                                           NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_guardMapForContext::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_guardMapForContext ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_guardMapForContext::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_guardMapForContext (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapForContext GALGAS_guardMapForContext::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_guardMapForContext result ;
  const GALGAS_guardMapForContext * p = (const GALGAS_guardMapForContext *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_guardMapForContext *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("guardMapForContext", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_prefixOperatorMap::cMapElement_prefixOperatorMap (const GALGAS_lstring & inKey
                                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_prefixOperatorMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_prefixOperatorMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_prefixOperatorMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_prefixOperatorMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_prefixOperatorMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_prefixOperatorMap * operand = (cMapElement_prefixOperatorMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperatorMap::GALGAS_prefixOperatorMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperatorMap::GALGAS_prefixOperatorMap (const GALGAS_prefixOperatorMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperatorMap & GALGAS_prefixOperatorMap::operator = (const GALGAS_prefixOperatorMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperatorMap GALGAS_prefixOperatorMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_prefixOperatorMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperatorMap GALGAS_prefixOperatorMap::constructor_mapWithMapToOverride (const GALGAS_prefixOperatorMap & inMapToOverride
                                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_prefixOperatorMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperatorMap GALGAS_prefixOperatorMap::getter_overriddenMap (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_prefixOperatorMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_prefixOperatorMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_prefixOperatorMap * p = NULL ;
  macroMyNew (p, cMapElement_prefixOperatorMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@prefixOperatorMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_prefixOperatorMap::setter_insertKey (GALGAS_lstring inKey,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_prefixOperatorMap * p = NULL ;
  macroMyNew (p, cMapElement_prefixOperatorMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "** internal error **" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_prefixOperatorMap_searchKey = "prefix operation is not defined for $%K type" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_prefixOperatorMap::method_searchKey (GALGAS_lstring inKey,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  const cMapElement_prefixOperatorMap * p = (const cMapElement_prefixOperatorMap *) performSearch (inKey,
                                                                                                     inCompiler,
                                                                                                     kSearchErrorMessage_prefixOperatorMap_searchKey
                                                                                                     COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, cMapElement_prefixOperatorMap) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_prefixOperatorMap * GALGAS_prefixOperatorMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                             const GALGAS_string & inKey
                                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_prefixOperatorMap * result = (cMapElement_prefixOperatorMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_prefixOperatorMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_prefixOperatorMap::cEnumerator_prefixOperatorMap (const GALGAS_prefixOperatorMap & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperatorMap_2D_element cEnumerator_prefixOperatorMap::current (LOCATION_ARGS) const {
  const cMapElement_prefixOperatorMap * p = (const cMapElement_prefixOperatorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_prefixOperatorMap) ;
  return GALGAS_prefixOperatorMap_2D_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_prefixOperatorMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @prefixOperatorMap type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_prefixOperatorMap ("prefixOperatorMap",
                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_prefixOperatorMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_prefixOperatorMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_prefixOperatorMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_prefixOperatorMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperatorMap GALGAS_prefixOperatorMap::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_prefixOperatorMap result ;
  const GALGAS_prefixOperatorMap * p = (const GALGAS_prefixOperatorMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_prefixOperatorMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("prefixOperatorMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_staticStringMap::cMapElement_staticStringMap (const GALGAS_lstring & inKey,
                                                          const GALGAS_uint & in_mIndex
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIndex (in_mIndex) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_staticStringMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIndex.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_staticStringMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_staticStringMap (mAttribute_lkey, mAttribute_mIndex COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_staticStringMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIndex" ":" ;
  mAttribute_mIndex.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_staticStringMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_staticStringMap * operand = (cMapElement_staticStringMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIndex.objectCompare (operand->mAttribute_mIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_staticStringMap::GALGAS_staticStringMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_staticStringMap::GALGAS_staticStringMap (const GALGAS_staticStringMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_staticStringMap & GALGAS_staticStringMap::operator = (const GALGAS_staticStringMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_staticStringMap GALGAS_staticStringMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_staticStringMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_staticStringMap GALGAS_staticStringMap::constructor_mapWithMapToOverride (const GALGAS_staticStringMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_staticStringMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_staticStringMap GALGAS_staticStringMap::getter_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_staticStringMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_staticStringMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                  const GALGAS_uint & inArgument0,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cMapElement_staticStringMap * p = NULL ;
  macroMyNew (p, cMapElement_staticStringMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@staticStringMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_staticStringMap::setter_insertKey (GALGAS_lstring inKey,
                                               GALGAS_uint inArgument0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_staticStringMap * p = NULL ;
  macroMyNew (p, cMapElement_staticStringMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "-- internal error --" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_staticStringMap_searchKey = "-- internal error --" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_staticStringMap::method_searchKey (GALGAS_lstring inKey,
                                               GALGAS_uint & outArgument0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  const cMapElement_staticStringMap * p = (const cMapElement_staticStringMap *) performSearch (inKey,
                                                                                                 inCompiler,
                                                                                                 kSearchErrorMessage_staticStringMap_searchKey
                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_staticStringMap) ;
    outArgument0 = p->mAttribute_mIndex ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_staticStringMap::getter_mIndexForKey (const GALGAS_string & inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_staticStringMap * p = (const cMapElement_staticStringMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_staticStringMap) ;
    result = p->mAttribute_mIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_staticStringMap::setter_setMIndexForKey (GALGAS_uint inAttributeValue,
                                                     GALGAS_string inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_staticStringMap * p = (cMapElement_staticStringMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_staticStringMap) ;
    p->mAttribute_mIndex = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_staticStringMap * GALGAS_staticStringMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                         const GALGAS_string & inKey
                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_staticStringMap * result = (cMapElement_staticStringMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_staticStringMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_staticStringMap::cEnumerator_staticStringMap (const GALGAS_staticStringMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_staticStringMap_2D_element cEnumerator_staticStringMap::current (LOCATION_ARGS) const {
  const cMapElement_staticStringMap * p = (const cMapElement_staticStringMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_staticStringMap) ;
  return GALGAS_staticStringMap_2D_element (p->mAttribute_lkey, p->mAttribute_mIndex) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_staticStringMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_staticStringMap::current_mIndex (LOCATION_ARGS) const {
  const cMapElement_staticStringMap * p = (const cMapElement_staticStringMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_staticStringMap) ;
  return p->mAttribute_mIndex ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @staticStringMap type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_staticStringMap ("staticStringMap",
                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_staticStringMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_staticStringMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_staticStringMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_staticStringMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_staticStringMap GALGAS_staticStringMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_staticStringMap result ;
  const GALGAS_staticStringMap * p = (const GALGAS_staticStringMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_staticStringMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("staticStringMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              Extension method '@staticStringMap findOrAddStaticString'                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_findOrAddStaticString (GALGAS_staticStringMap & ioObject,
                                            GALGAS_string inArgument_inString,
                                            GALGAS_uint & outArgument_outIndex,
                                            C_Compiler * inCompiler
                                            COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outIndex.drop () ; // Release 'out' argument
  const GALGAS_staticStringMap temp_0 = ioObject ;
  const enumGalgasBool test_1 = temp_0.getter_hasKey (inArgument_inString COMMA_SOURCE_FILE ("context.galgas", 47)).boolEnum () ;
  if (kBoolTrue == test_1) {
    const GALGAS_staticStringMap temp_2 = ioObject ;
    temp_2.method_searchKey (inArgument_inString.getter_nowhere (SOURCE_FILE ("context.galgas", 48)), outArgument_outIndex, inCompiler COMMA_SOURCE_FILE ("context.galgas", 48)) ;
  }else if (kBoolFalse == test_1) {
    const GALGAS_staticStringMap temp_3 = ioObject ;
    outArgument_outIndex = temp_3.getter_count (SOURCE_FILE ("context.galgas", 50)) ;
    {
    ioObject.setter_insertKey (inArgument_inString.getter_nowhere (SOURCE_FILE ("context.galgas", 51)), outArgument_outIndex, inCompiler COMMA_SOURCE_FILE ("context.galgas", 51)) ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalConstantMap::cMapElement_globalConstantMap (const GALGAS_lstring & inKey,
                                                              const GALGAS_objectIR & in_mValue
                                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mValue (in_mValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_globalConstantMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mValue.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_globalConstantMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_globalConstantMap (mAttribute_lkey, mAttribute_mValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_globalConstantMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mValue" ":" ;
  mAttribute_mValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_globalConstantMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_globalConstantMap * operand = (cMapElement_globalConstantMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mValue.objectCompare (operand->mAttribute_mValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap::GALGAS_globalConstantMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap::GALGAS_globalConstantMap (const GALGAS_globalConstantMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap & GALGAS_globalConstantMap::operator = (const GALGAS_globalConstantMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap GALGAS_globalConstantMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_globalConstantMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap GALGAS_globalConstantMap::constructor_mapWithMapToOverride (const GALGAS_globalConstantMap & inMapToOverride
                                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_globalConstantMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap GALGAS_globalConstantMap::getter_overriddenMap (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_globalConstantMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                    const GALGAS_objectIR & inArgument0,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_globalConstantMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@globalConstantMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMap::setter_insertKey (GALGAS_lstring inKey,
                                                 GALGAS_objectIR inArgument0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_globalConstantMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' constant is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_globalConstantMap_searchKey = "there is no '%K' constant" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMap::method_searchKey (GALGAS_lstring inKey,
                                                 GALGAS_objectIR & outArgument0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  const cMapElement_globalConstantMap * p = (const cMapElement_globalConstantMap *) performSearch (inKey,
                                                                                                     inCompiler,
                                                                                                     kSearchErrorMessage_globalConstantMap_searchKey
                                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_globalConstantMap) ;
    outArgument0 = p->mAttribute_mValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectIR GALGAS_globalConstantMap::getter_mValueForKey (const GALGAS_string & inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalConstantMap * p = (const cMapElement_globalConstantMap *) attributes ;
  GALGAS_objectIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMap) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMap::setter_setMValueForKey (GALGAS_objectIR inAttributeValue,
                                                       GALGAS_string inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalConstantMap * p = (cMapElement_globalConstantMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMap) ;
    p->mAttribute_mValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalConstantMap * GALGAS_globalConstantMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                             const GALGAS_string & inKey
                                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMap * result = (cMapElement_globalConstantMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_globalConstantMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_globalConstantMap::cEnumerator_globalConstantMap (const GALGAS_globalConstantMap & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap_2D_element cEnumerator_globalConstantMap::current (LOCATION_ARGS) const {
  const cMapElement_globalConstantMap * p = (const cMapElement_globalConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalConstantMap) ;
  return GALGAS_globalConstantMap_2D_element (p->mAttribute_lkey, p->mAttribute_mValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_globalConstantMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectIR cEnumerator_globalConstantMap::current_mValue (LOCATION_ARGS) const {
  const cMapElement_globalConstantMap * p = (const cMapElement_globalConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalConstantMap) ;
  return p->mAttribute_mValue ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @globalConstantMap type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalConstantMap ("globalConstantMap",
                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalConstantMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalConstantMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalConstantMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalConstantMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap GALGAS_globalConstantMap::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_globalConstantMap result ;
  const GALGAS_globalConstantMap * p = (const GALGAS_globalConstantMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalConstantMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalConstantMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_allowedGuardMap::cMapElement_allowedGuardMap (const GALGAS_lstring & inKey
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_allowedGuardMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_allowedGuardMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_allowedGuardMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_allowedGuardMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_allowedGuardMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_allowedGuardMap * operand = (cMapElement_allowedGuardMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap::GALGAS_allowedGuardMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap::GALGAS_allowedGuardMap (const GALGAS_allowedGuardMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap & GALGAS_allowedGuardMap::operator = (const GALGAS_allowedGuardMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap GALGAS_allowedGuardMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_allowedGuardMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap GALGAS_allowedGuardMap::constructor_mapWithMapToOverride (const GALGAS_allowedGuardMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_allowedGuardMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap GALGAS_allowedGuardMap::getter_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_allowedGuardMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_allowedGuardMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cMapElement_allowedGuardMap * p = NULL ;
  macroMyNew (p, cMapElement_allowedGuardMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@allowedGuardMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_allowedGuardMap::setter_insertKey (GALGAS_lstring inKey,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_allowedGuardMap * p = NULL ;
  macroMyNew (p, cMapElement_allowedGuardMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' guard is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_allowedGuardMap_searchKey = "there is no '%K' guard" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_allowedGuardMap::method_searchKey (GALGAS_lstring inKey,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  const cMapElement_allowedGuardMap * p = (const cMapElement_allowedGuardMap *) performSearch (inKey,
                                                                                                 inCompiler,
                                                                                                 kSearchErrorMessage_allowedGuardMap_searchKey
                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, cMapElement_allowedGuardMap) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_allowedGuardMap * GALGAS_allowedGuardMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                         const GALGAS_string & inKey
                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_allowedGuardMap * result = (cMapElement_allowedGuardMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_allowedGuardMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_allowedGuardMap::cEnumerator_allowedGuardMap (const GALGAS_allowedGuardMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap_2D_element cEnumerator_allowedGuardMap::current (LOCATION_ARGS) const {
  const cMapElement_allowedGuardMap * p = (const cMapElement_allowedGuardMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_allowedGuardMap) ;
  return GALGAS_allowedGuardMap_2D_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_allowedGuardMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @allowedGuardMap type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_allowedGuardMap ("allowedGuardMap",
                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_allowedGuardMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_allowedGuardMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_allowedGuardMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_allowedGuardMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap GALGAS_allowedGuardMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_allowedGuardMap result ;
  const GALGAS_allowedGuardMap * p = (const GALGAS_allowedGuardMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_allowedGuardMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("allowedGuardMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalVariableMap::cMapElement_globalVariableMap (const GALGAS_lstring & inKey,
                                                              const GALGAS_unifiedTypeMap_2D_proxy & in_type,
                                                              const GALGAS_stringset & in_executionModeSet,
                                                              const GALGAS_allowedGuardMap & in_allowedGuardMap,
                                                              const GALGAS_objectIR & in_initialValue,
                                                              const GALGAS_bool & in_isConstant,
                                                              const GALGAS_bool & in_allowedAccessToAll
                                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_type (in_type),
mAttribute_executionModeSet (in_executionModeSet),
mAttribute_allowedGuardMap (in_allowedGuardMap),
mAttribute_initialValue (in_initialValue),
mAttribute_isConstant (in_isConstant),
mAttribute_allowedAccessToAll (in_allowedAccessToAll) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_globalVariableMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_type.isValid () && mAttribute_executionModeSet.isValid () && mAttribute_allowedGuardMap.isValid () && mAttribute_initialValue.isValid () && mAttribute_isConstant.isValid () && mAttribute_allowedAccessToAll.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_globalVariableMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_globalVariableMap (mAttribute_lkey, mAttribute_type, mAttribute_executionModeSet, mAttribute_allowedGuardMap, mAttribute_initialValue, mAttribute_isConstant, mAttribute_allowedAccessToAll COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_globalVariableMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "type" ":" ;
  mAttribute_type.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "executionModeSet" ":" ;
  mAttribute_executionModeSet.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "allowedGuardMap" ":" ;
  mAttribute_allowedGuardMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "initialValue" ":" ;
  mAttribute_initialValue.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "isConstant" ":" ;
  mAttribute_isConstant.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "allowedAccessToAll" ":" ;
  mAttribute_allowedAccessToAll.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_globalVariableMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_globalVariableMap * operand = (cMapElement_globalVariableMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_type.objectCompare (operand->mAttribute_type) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_executionModeSet.objectCompare (operand->mAttribute_executionModeSet) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_allowedGuardMap.objectCompare (operand->mAttribute_allowedGuardMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_initialValue.objectCompare (operand->mAttribute_initialValue) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_isConstant.objectCompare (operand->mAttribute_isConstant) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_allowedAccessToAll.objectCompare (operand->mAttribute_allowedAccessToAll) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap::GALGAS_globalVariableMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap::GALGAS_globalVariableMap (const GALGAS_globalVariableMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap & GALGAS_globalVariableMap::operator = (const GALGAS_globalVariableMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap GALGAS_globalVariableMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_globalVariableMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap GALGAS_globalVariableMap::constructor_mapWithMapToOverride (const GALGAS_globalVariableMap & inMapToOverride
                                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_globalVariableMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap GALGAS_globalVariableMap::getter_overriddenMap (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_globalVariableMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                    const GALGAS_unifiedTypeMap_2D_proxy & inArgument0,
                                                    const GALGAS_stringset & inArgument1,
                                                    const GALGAS_allowedGuardMap & inArgument2,
                                                    const GALGAS_objectIR & inArgument3,
                                                    const GALGAS_bool & inArgument4,
                                                    const GALGAS_bool & inArgument5,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMap * p = NULL ;
  macroMyNew (p, cMapElement_globalVariableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@globalVariableMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::setter_insertKey (GALGAS_lstring inKey,
                                                 GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                 GALGAS_stringset inArgument1,
                                                 GALGAS_allowedGuardMap inArgument2,
                                                 GALGAS_objectIR inArgument3,
                                                 GALGAS_bool inArgument4,
                                                 GALGAS_bool inArgument5,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMap * p = NULL ;
  macroMyNew (p, cMapElement_globalVariableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' global variable is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_globalVariableMap_searchKey = "there is no '%K' global variable" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::method_searchKey (GALGAS_lstring inKey,
                                                 GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                 GALGAS_stringset & outArgument1,
                                                 GALGAS_allowedGuardMap & outArgument2,
                                                 GALGAS_objectIR & outArgument3,
                                                 GALGAS_bool & outArgument4,
                                                 GALGAS_bool & outArgument5,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) performSearch (inKey,
                                                                                                     inCompiler,
                                                                                                     kSearchErrorMessage_globalVariableMap_searchKey
                                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    outArgument0 = p->mAttribute_type ;
    outArgument1 = p->mAttribute_executionModeSet ;
    outArgument2 = p->mAttribute_allowedGuardMap ;
    outArgument3 = p->mAttribute_initialValue ;
    outArgument4 = p->mAttribute_isConstant ;
    outArgument5 = p->mAttribute_allowedAccessToAll ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_globalVariableMap::getter_typeForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    result = p->mAttribute_type ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset GALGAS_globalVariableMap::getter_executionModeSetForKey (const GALGAS_string & inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) attributes ;
  GALGAS_stringset result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    result = p->mAttribute_executionModeSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap GALGAS_globalVariableMap::getter_allowedGuardMapForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) attributes ;
  GALGAS_allowedGuardMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    result = p->mAttribute_allowedGuardMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectIR GALGAS_globalVariableMap::getter_initialValueForKey (const GALGAS_string & inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) attributes ;
  GALGAS_objectIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    result = p->mAttribute_initialValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_globalVariableMap::getter_isConstantForKey (const GALGAS_string & inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    result = p->mAttribute_isConstant ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_globalVariableMap::getter_allowedAccessToAllForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    result = p->mAttribute_allowedAccessToAll ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::setter_setTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                                     GALGAS_string inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMap * p = (cMapElement_globalVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    p->mAttribute_type = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::setter_setExecutionModeSetForKey (GALGAS_stringset inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMap * p = (cMapElement_globalVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    p->mAttribute_executionModeSet = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::setter_setAllowedGuardMapForKey (GALGAS_allowedGuardMap inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMap * p = (cMapElement_globalVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    p->mAttribute_allowedGuardMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::setter_setInitialValueForKey (GALGAS_objectIR inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMap * p = (cMapElement_globalVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    p->mAttribute_initialValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::setter_setIsConstantForKey (GALGAS_bool inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMap * p = (cMapElement_globalVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    p->mAttribute_isConstant = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::setter_setAllowedAccessToAllForKey (GALGAS_bool inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMap * p = (cMapElement_globalVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    p->mAttribute_allowedAccessToAll = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalVariableMap * GALGAS_globalVariableMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                             const GALGAS_string & inKey
                                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMap * result = (cMapElement_globalVariableMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_globalVariableMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_globalVariableMap::cEnumerator_globalVariableMap (const GALGAS_globalVariableMap & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap_2D_element cEnumerator_globalVariableMap::current (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return GALGAS_globalVariableMap_2D_element (p->mAttribute_lkey, p->mAttribute_type, p->mAttribute_executionModeSet, p->mAttribute_allowedGuardMap, p->mAttribute_initialValue, p->mAttribute_isConstant, p->mAttribute_allowedAccessToAll) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_globalVariableMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_globalVariableMap::current_type (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return p->mAttribute_type ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset cEnumerator_globalVariableMap::current_executionModeSet (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return p->mAttribute_executionModeSet ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap cEnumerator_globalVariableMap::current_allowedGuardMap (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return p->mAttribute_allowedGuardMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectIR cEnumerator_globalVariableMap::current_initialValue (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return p->mAttribute_initialValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_globalVariableMap::current_isConstant (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return p->mAttribute_isConstant ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_globalVariableMap::current_allowedAccessToAll (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return p->mAttribute_allowedAccessToAll ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @globalVariableMap type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalVariableMap ("globalVariableMap",
                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalVariableMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalVariableMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalVariableMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalVariableMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap GALGAS_globalVariableMap::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_globalVariableMap result ;
  const GALGAS_globalVariableMap * p = (const GALGAS_globalVariableMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalVariableMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalVariableMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_unifiedTypeMap::cMapElement_unifiedTypeMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_string & in_llvmTypeName,
                                                        const GALGAS_typeKind & in_kind,
                                                        const GALGAS_classConstantMap & in_classConstantMap,
                                                        const GALGAS_bool & in_instantiable,
                                                        const GALGAS_bool & in_copyable,
                                                        const GALGAS_bool & in_equatable,
                                                        const GALGAS_bool & in_comparable,
                                                        const GALGAS_unifiedTypeMap_2D_proxy & in_enumerationType
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_llvmTypeName (in_llvmTypeName),
mAttribute_kind (in_kind),
mAttribute_classConstantMap (in_classConstantMap),
mAttribute_instantiable (in_instantiable),
mAttribute_copyable (in_copyable),
mAttribute_equatable (in_equatable),
mAttribute_comparable (in_comparable),
mAttribute_enumerationType (in_enumerationType) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_unifiedTypeMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_llvmTypeName.isValid () && mAttribute_kind.isValid () && mAttribute_classConstantMap.isValid () && mAttribute_instantiable.isValid () && mAttribute_copyable.isValid () && mAttribute_equatable.isValid () && mAttribute_comparable.isValid () && mAttribute_enumerationType.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_unifiedTypeMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_unifiedTypeMap (mAttribute_lkey, mAttribute_llvmTypeName, mAttribute_kind, mAttribute_classConstantMap, mAttribute_instantiable, mAttribute_copyable, mAttribute_equatable, mAttribute_comparable, mAttribute_enumerationType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_unifiedTypeMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "llvmTypeName" ":" ;
  mAttribute_llvmTypeName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "kind" ":" ;
  mAttribute_kind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "classConstantMap" ":" ;
  mAttribute_classConstantMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "instantiable" ":" ;
  mAttribute_instantiable.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "copyable" ":" ;
  mAttribute_copyable.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "equatable" ":" ;
  mAttribute_equatable.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "comparable" ":" ;
  mAttribute_comparable.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "enumerationType" ":" ;
  mAttribute_enumerationType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_unifiedTypeMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_unifiedTypeMap * operand = (cMapElement_unifiedTypeMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_llvmTypeName.objectCompare (operand->mAttribute_llvmTypeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_kind.objectCompare (operand->mAttribute_kind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_classConstantMap.objectCompare (operand->mAttribute_classConstantMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_instantiable.objectCompare (operand->mAttribute_instantiable) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_copyable.objectCompare (operand->mAttribute_copyable) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_equatable.objectCompare (operand->mAttribute_equatable) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_comparable.objectCompare (operand->mAttribute_comparable) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_enumerationType.objectCompare (operand->mAttribute_enumerationType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap::GALGAS_unifiedTypeMap (void) :
AC_GALGAS_uniqueMap (kMapAutomatonNoIssue, "") {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap::GALGAS_unifiedTypeMap (const GALGAS_unifiedTypeMap & inSource) :
AC_GALGAS_uniqueMap (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap & GALGAS_unifiedTypeMap::operator = (const GALGAS_unifiedTypeMap & inSource) {
  * ((AC_GALGAS_uniqueMap *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap GALGAS_unifiedTypeMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_unifiedTypeMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton states                                                                                               *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton state names                                                                                          *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton actions                                                                                              *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton transitions                                                                                          *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton final state issues                                                                                   *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_insertType (GALGAS_lstring inKey,
                                               GALGAS_string inArgument0,
                                               GALGAS_typeKind inArgument1,
                                               GALGAS_classConstantMap inArgument2,
                                               GALGAS_bool inArgument3,
                                               GALGAS_bool inArgument4,
                                               GALGAS_bool inArgument5,
                                               GALGAS_bool inArgument6,
                                               GALGAS_unifiedTypeMap_2D_proxy inArgument7,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_unifiedTypeMap * p = NULL ;
  macroMyNew (p, cMapElement_unifiedTypeMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6, inArgument7 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' type is already declared in %L" ;
  insertInSharedMap (attributes,
                     inCompiler,
                     0,
                     NULL,
                     kInsertErrorMessage
                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_unifiedTypeMap_searchKey = "there is no '%K' type" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_string & outArgument0,
                                              GALGAS_typeKind & outArgument1,
                                              GALGAS_classConstantMap & outArgument2,
                                              GALGAS_bool & outArgument3,
                                              GALGAS_bool & outArgument4,
                                              GALGAS_bool & outArgument5,
                                              GALGAS_bool & outArgument6,
                                              GALGAS_unifiedTypeMap_2D_proxy & outArgument7,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_unifiedTypeMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
    outArgument7.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    outArgument0 = p->mAttribute_llvmTypeName ;
    outArgument1 = p->mAttribute_kind ;
    outArgument2 = p->mAttribute_classConstantMap ;
    outArgument3 = p->mAttribute_instantiable ;
    outArgument4 = p->mAttribute_copyable ;
    outArgument5 = p->mAttribute_equatable ;
    outArgument6 = p->mAttribute_comparable ;
    outArgument7 = p->mAttribute_enumerationType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_unifiedTypeMap::getter_llvmTypeNameForKey (const GALGAS_string & inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_llvmTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_unifiedTypeMap::getter_kindForKey (const GALGAS_string & inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_typeKind result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_kind ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classConstantMap GALGAS_unifiedTypeMap::getter_classConstantMapForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_classConstantMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_classConstantMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_unifiedTypeMap::getter_instantiableForKey (const GALGAS_string & inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_instantiable ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_unifiedTypeMap::getter_copyableForKey (const GALGAS_string & inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_copyable ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_unifiedTypeMap::getter_equatableForKey (const GALGAS_string & inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_equatable ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_unifiedTypeMap::getter_comparableForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_comparable ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_unifiedTypeMap::getter_enumerationTypeForKey (const GALGAS_string & inKey,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_enumerationType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_setLlvmTypeNameForKey (GALGAS_string inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_llvmTypeName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_setKindForKey (GALGAS_typeKind inAttributeValue,
                                                  GALGAS_string inKey,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_kind = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_setClassConstantMapForKey (GALGAS_classConstantMap inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_classConstantMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_setInstantiableForKey (GALGAS_bool inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_instantiable = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_setCopyableForKey (GALGAS_bool inAttributeValue,
                                                      GALGAS_string inKey,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_copyable = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_setEquatableForKey (GALGAS_bool inAttributeValue,
                                                       GALGAS_string inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_equatable = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_setComparableForKey (GALGAS_bool inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_comparable = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_setEnumerationTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_enumerationType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_unifiedTypeMap * GALGAS_unifiedTypeMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                       const GALGAS_string & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_unifiedTypeMap * result = (cMapElement_unifiedTypeMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_unifiedTypeMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_unifiedTypeMap::cEnumerator_unifiedTypeMap (const GALGAS_unifiedTypeMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_unifiedTypeMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_unifiedTypeMap::current_llvmTypeName (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_llvmTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind cEnumerator_unifiedTypeMap::current_kind (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_kind ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classConstantMap cEnumerator_unifiedTypeMap::current_classConstantMap (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_classConstantMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_unifiedTypeMap::current_instantiable (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_instantiable ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_unifiedTypeMap::current_copyable (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_copyable ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_unifiedTypeMap::current_equatable (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_equatable ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_unifiedTypeMap::current_comparable (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_comparable ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_unifiedTypeMap::current_enumerationType (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_enumerationType ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @unifiedTypeMap type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_unifiedTypeMap ("unifiedTypeMap",
                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_unifiedTypeMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_unifiedTypeMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_unifiedTypeMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_unifiedTypeMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap GALGAS_unifiedTypeMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeMap result ;
  const GALGAS_unifiedTypeMap * p = (const GALGAS_unifiedTypeMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_unifiedTypeMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("unifiedTypeMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_classConstantMap::cMapElement_classConstantMap (const GALGAS_lstring & inKey,
                                                            const GALGAS_objectIR & in_mValue
                                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mValue (in_mValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_classConstantMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mValue.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_classConstantMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_classConstantMap (mAttribute_lkey, mAttribute_mValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_classConstantMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mValue" ":" ;
  mAttribute_mValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_classConstantMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_classConstantMap * operand = (cMapElement_classConstantMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mValue.objectCompare (operand->mAttribute_mValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classConstantMap::GALGAS_classConstantMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classConstantMap::GALGAS_classConstantMap (const GALGAS_classConstantMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classConstantMap & GALGAS_classConstantMap::operator = (const GALGAS_classConstantMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classConstantMap GALGAS_classConstantMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_classConstantMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classConstantMap GALGAS_classConstantMap::constructor_mapWithMapToOverride (const GALGAS_classConstantMap & inMapToOverride
                                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_classConstantMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classConstantMap GALGAS_classConstantMap::getter_overriddenMap (C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  GALGAS_classConstantMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_classConstantMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                   const GALGAS_objectIR & inArgument0,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_classConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_classConstantMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@classConstantMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_classConstantMap::setter_insertKey (GALGAS_lstring inKey,
                                                GALGAS_objectIR inArgument0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_classConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_classConstantMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' class constant is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_classConstantMap_searchKey = "there is no '%K' class constant" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_classConstantMap::method_searchKey (GALGAS_lstring inKey,
                                                GALGAS_objectIR & outArgument0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  const cMapElement_classConstantMap * p = (const cMapElement_classConstantMap *) performSearch (inKey,
                                                                                                   inCompiler,
                                                                                                   kSearchErrorMessage_classConstantMap_searchKey
                                                                                                   COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_classConstantMap) ;
    outArgument0 = p->mAttribute_mValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectIR GALGAS_classConstantMap::getter_mValueForKey (const GALGAS_string & inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classConstantMap * p = (const cMapElement_classConstantMap *) attributes ;
  GALGAS_objectIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classConstantMap) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_classConstantMap::setter_setMValueForKey (GALGAS_objectIR inAttributeValue,
                                                      GALGAS_string inKey,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classConstantMap * p = (cMapElement_classConstantMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classConstantMap) ;
    p->mAttribute_mValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_classConstantMap * GALGAS_classConstantMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                           const GALGAS_string & inKey
                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement_classConstantMap * result = (cMapElement_classConstantMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_classConstantMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_classConstantMap::cEnumerator_classConstantMap (const GALGAS_classConstantMap & inEnumeratedObject,
                                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classConstantMap_2D_element cEnumerator_classConstantMap::current (LOCATION_ARGS) const {
  const cMapElement_classConstantMap * p = (const cMapElement_classConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_classConstantMap) ;
  return GALGAS_classConstantMap_2D_element (p->mAttribute_lkey, p->mAttribute_mValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_classConstantMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectIR cEnumerator_classConstantMap::current_mValue (LOCATION_ARGS) const {
  const cMapElement_classConstantMap * p = (const cMapElement_classConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_classConstantMap) ;
  return p->mAttribute_mValue ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @classConstantMap type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_classConstantMap ("classConstantMap",
                                         NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_classConstantMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_classConstantMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_classConstantMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_classConstantMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classConstantMap GALGAS_classConstantMap::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_classConstantMap result ;
  const GALGAS_classConstantMap * p = (const GALGAS_classConstantMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_classConstantMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("classConstantMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Class for element of '@operandList' list                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_operandList : public cCollectionElement {
  public : GALGAS_operandList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_operandList (const GALGAS_objectIR & in_mOperand
                                           COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
  public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_operandList::cCollectionElement_operandList (const GALGAS_objectIR & in_mOperand
                                                                COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mOperand) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_operandList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_operandList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_operandList (mObject.mAttribute_mOperand COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_operandList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOperand" ":" ;
  mObject.mAttribute_mOperand.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_operandList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_operandList * operand = (cCollectionElement_operandList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_operandList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandList::GALGAS_operandList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandList::GALGAS_operandList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandList GALGAS_operandList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_operandList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandList GALGAS_operandList::constructor_listWithValue (const GALGAS_objectIR & inOperand0
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_operandList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_operandList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                    const GALGAS_objectIR & in_mOperand
                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement_operandList * p = NULL ;
  macroMyNew (p, cCollectionElement_operandList (in_mOperand COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandList::addAssign_operation (const GALGAS_objectIR & inOperand0
                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_operandList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandList::setter_insertAtIndex (const GALGAS_objectIR inOperand0,
                                               const GALGAS_uint inInsertionIndex,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_operandList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandList::setter_removeAtIndex (GALGAS_objectIR & outOperand0,
                                               const GALGAS_uint inRemoveIndex,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_operandList * p = (cCollectionElement_operandList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_operandList) ;
      outOperand0 = p->mObject.mAttribute_mOperand ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandList::setter_popFirst (GALGAS_objectIR & outOperand0,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_operandList * p = (cCollectionElement_operandList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_operandList) ;
    outOperand0 = p->mObject.mAttribute_mOperand ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandList::setter_popLast (GALGAS_objectIR & outOperand0,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_operandList * p = (cCollectionElement_operandList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_operandList) ;
    outOperand0 = p->mObject.mAttribute_mOperand ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandList::method_first (GALGAS_objectIR & outOperand0,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_operandList * p = (cCollectionElement_operandList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_operandList) ;
    outOperand0 = p->mObject.mAttribute_mOperand ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandList::method_last (GALGAS_objectIR & outOperand0,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_operandList * p = (cCollectionElement_operandList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_operandList) ;
    outOperand0 = p->mObject.mAttribute_mOperand ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandList GALGAS_operandList::add_operation (const GALGAS_operandList & inOperand,
                                                      C_Compiler * /* inCompiler */
                                                      COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_operandList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandList GALGAS_operandList::getter_subListWithRange (const GALGAS_range & inRange,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_operandList result = GALGAS_operandList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandList GALGAS_operandList::getter_subListFromIndex (const GALGAS_uint & inIndex,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_operandList result = GALGAS_operandList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandList GALGAS_operandList::getter_subListToIndex (const GALGAS_uint & inIndex,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_operandList result = GALGAS_operandList::constructor_emptyList (THERE) ;
  subListToIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandList::plusAssign_operation (const GALGAS_operandList inOperand,
                                               C_Compiler * /* inCompiler */
                                               COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectIR GALGAS_operandList::getter_mOperandAtIndex (const GALGAS_uint & inIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_operandList * p = (cCollectionElement_operandList *) attributes.ptr () ;
  GALGAS_objectIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_operandList) ;
    result = p->mObject.mAttribute_mOperand ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_operandList::cEnumerator_operandList (const GALGAS_operandList & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandList_2D_element cEnumerator_operandList::current (LOCATION_ARGS) const {
  const cCollectionElement_operandList * p = (const cCollectionElement_operandList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_operandList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectIR cEnumerator_operandList::current_mOperand (LOCATION_ARGS) const {
  const cCollectionElement_operandList * p = (const cCollectionElement_operandList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_operandList) ;
  return p->mObject.mAttribute_mOperand ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                  @operandList type                                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_operandList ("operandList",
                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_operandList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_operandList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_operandList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_operandList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandList GALGAS_operandList::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_operandList result ;
  const GALGAS_operandList * p = (const GALGAS_operandList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_operandList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("operandList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_constructorValue_simple::cEnumAssociatedValues_constructorValue_simple (const GALGAS_bigint & inAssociatedValue0
                                                                                              COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_constructorValue_simple::description (C_String & ioString,
                                                                 const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_constructorValue_simple::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_constructorValue_simple * ptr = dynamic_cast<const cEnumAssociatedValues_constructorValue_simple *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_constructorValue_structure::cEnumAssociatedValues_constructorValue_structure (const GALGAS_constructorSignature & inAssociatedValue0,
                                                                                                    const GALGAS_sortedOperandIRList & inAssociatedValue1
                                                                                                    COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0),
mAssociatedValue1 (inAssociatedValue1) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_constructorValue_structure::description (C_String & ioString,
                                                                    const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  mAssociatedValue1.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_constructorValue_structure::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_constructorValue_structure * ptr = dynamic_cast<const cEnumAssociatedValues_constructorValue_structure *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  if (result == kOperandEqual) {
    result = mAssociatedValue1.objectCompare (ptr->mAssociatedValue1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorValue::GALGAS_constructorValue (void) :
mAssociatedValues (),
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorValue GALGAS_constructorValue::constructor_zero (UNUSED_LOCATION_ARGS) {
  GALGAS_constructorValue result ;
  result.mEnum = kEnum_zero ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorValue GALGAS_constructorValue::constructor_simple (const GALGAS_bigint & inAssociatedValue0
                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_constructorValue result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_simple ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_constructorValue_simple (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorValue GALGAS_constructorValue::constructor_structure (const GALGAS_constructorSignature & inAssociatedValue0,
                                                                        const GALGAS_sortedOperandIRList & inAssociatedValue1
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_constructorValue result ;
  if (inAssociatedValue0.isValid () && inAssociatedValue1.isValid ()) {
    result.mEnum = kEnum_structure ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_constructorValue_structure (inAssociatedValue0, inAssociatedValue1 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorValue::method_simple (GALGAS_bigint & outAssociatedValue0,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_simple) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @constructorValue simple invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_constructorValue_simple * ptr = (const cEnumAssociatedValues_constructorValue_simple *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorValue::method_structure (GALGAS_constructorSignature & outAssociatedValue0,
                                                GALGAS_sortedOperandIRList & outAssociatedValue1,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_structure) {
    outAssociatedValue0.drop () ;
    outAssociatedValue1.drop () ;
    C_String s ;
    s << "method @constructorValue structure invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_constructorValue_structure * ptr = (const cEnumAssociatedValues_constructorValue_structure *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
    outAssociatedValue1 = ptr->mAssociatedValue1 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_constructorValue [4] = {
  "(not built)",
  "zero",
  "simple",
  "structure"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_constructorValue::getter_isZero (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_zero == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_constructorValue::getter_isSimple (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_simple == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_constructorValue::getter_isStructure (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_structure == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorValue::description (C_String & ioString,
                                           const int32_t inIndentation) const {
  ioString << "<enum @constructorValue: " << gEnumNameArrayFor_constructorValue [mEnum] ;
  mAssociatedValues.description (ioString, inIndentation) ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_constructorValue::objectCompare (const GALGAS_constructorValue & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mAssociatedValues.objectCompare (inOperand.mAssociatedValues) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @constructorValue type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_constructorValue ("constructorValue",
                                         NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_constructorValue::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_constructorValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_constructorValue::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_constructorValue (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorValue GALGAS_constructorValue::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_constructorValue result ;
  const GALGAS_constructorValue * p = (const GALGAS_constructorValue *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_constructorValue *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("constructorValue", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_constructorMap::cMapElement_constructorMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_constructorValue & in_mInitValue
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mInitValue (in_mInitValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_constructorMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mInitValue.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_constructorMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_constructorMap (mAttribute_lkey, mAttribute_mInitValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_constructorMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInitValue" ":" ;
  mAttribute_mInitValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_constructorMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_constructorMap * operand = (cMapElement_constructorMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mInitValue.objectCompare (operand->mAttribute_mInitValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap::GALGAS_constructorMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap::GALGAS_constructorMap (const GALGAS_constructorMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap & GALGAS_constructorMap::operator = (const GALGAS_constructorMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap GALGAS_constructorMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_constructorMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap GALGAS_constructorMap::constructor_mapWithMapToOverride (const GALGAS_constructorMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_constructorMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap GALGAS_constructorMap::getter_overriddenMap (C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_constructorMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                 const GALGAS_constructorValue & inArgument0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_constructorMap * p = NULL ;
  macroMyNew (p, cMapElement_constructorMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@constructorMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorMap::setter_insertKey (GALGAS_lstring inKey,
                                              GALGAS_constructorValue inArgument0,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  cMapElement_constructorMap * p = NULL ;
  macroMyNew (p, cMapElement_constructorMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "-- internal error --" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_constructorMap_searchKey = "-- internal error --" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_constructorValue & outArgument0,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_constructorMap * p = (const cMapElement_constructorMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_constructorMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_constructorMap) ;
    outArgument0 = p->mAttribute_mInitValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorValue GALGAS_constructorMap::getter_mInitValueForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_constructorMap * p = (const cMapElement_constructorMap *) attributes ;
  GALGAS_constructorValue result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_constructorMap) ;
    result = p->mAttribute_mInitValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorMap::setter_setMInitValueForKey (GALGAS_constructorValue inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_constructorMap * p = (cMapElement_constructorMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_constructorMap) ;
    p->mAttribute_mInitValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_constructorMap * GALGAS_constructorMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                       const GALGAS_string & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_constructorMap * result = (cMapElement_constructorMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_constructorMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_constructorMap::cEnumerator_constructorMap (const GALGAS_constructorMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap_2D_element cEnumerator_constructorMap::current (LOCATION_ARGS) const {
  const cMapElement_constructorMap * p = (const cMapElement_constructorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_constructorMap) ;
  return GALGAS_constructorMap_2D_element (p->mAttribute_lkey, p->mAttribute_mInitValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_constructorMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorValue cEnumerator_constructorMap::current_mInitValue (LOCATION_ARGS) const {
  const cMapElement_constructorMap * p = (const cMapElement_constructorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_constructorMap) ;
  return p->mAttribute_mInitValue ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @constructorMap type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_constructorMap ("constructorMap",
                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_constructorMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_constructorMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_constructorMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_constructorMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap GALGAS_constructorMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_constructorMap result ;
  const GALGAS_constructorMap * p = (const GALGAS_constructorMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_constructorMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("constructorMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_availableInterruptMap::cMapElement_availableInterruptMap (const GALGAS_lstring & inKey,
                                                                      const GALGAS_interruptionPanicCode & in_mInterruptionPanicCode
                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mInterruptionPanicCode (in_mInterruptionPanicCode) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_availableInterruptMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mInterruptionPanicCode.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_availableInterruptMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_availableInterruptMap (mAttribute_lkey, mAttribute_mInterruptionPanicCode COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_availableInterruptMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInterruptionPanicCode" ":" ;
  mAttribute_mInterruptionPanicCode.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_availableInterruptMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_availableInterruptMap * operand = (cMapElement_availableInterruptMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mInterruptionPanicCode.objectCompare (operand->mAttribute_mInterruptionPanicCode) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_availableInterruptMap::GALGAS_availableInterruptMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_availableInterruptMap::GALGAS_availableInterruptMap (const GALGAS_availableInterruptMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_availableInterruptMap & GALGAS_availableInterruptMap::operator = (const GALGAS_availableInterruptMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_availableInterruptMap GALGAS_availableInterruptMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_availableInterruptMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_availableInterruptMap GALGAS_availableInterruptMap::constructor_mapWithMapToOverride (const GALGAS_availableInterruptMap & inMapToOverride
                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_availableInterruptMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_availableInterruptMap GALGAS_availableInterruptMap::getter_overriddenMap (C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_availableInterruptMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_availableInterruptMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                        const GALGAS_interruptionPanicCode & inArgument0,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cMapElement_availableInterruptMap * p = NULL ;
  macroMyNew (p, cMapElement_availableInterruptMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@availableInterruptMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_availableInterruptMap::setter_insertKey (GALGAS_lstring inKey,
                                                     GALGAS_interruptionPanicCode inArgument0,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_availableInterruptMap * p = NULL ;
  macroMyNew (p, cMapElement_availableInterruptMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "interrupt '%K' is already defined" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_availableInterruptMap_searchKey = "interrupt '%K' is not defined" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_availableInterruptMap::method_searchKey (GALGAS_lstring inKey,
                                                     GALGAS_interruptionPanicCode & outArgument0,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  const cMapElement_availableInterruptMap * p = (const cMapElement_availableInterruptMap *) performSearch (inKey,
                                                                                                             inCompiler,
                                                                                                             kSearchErrorMessage_availableInterruptMap_searchKey
                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_availableInterruptMap) ;
    outArgument0 = p->mAttribute_mInterruptionPanicCode ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_interruptionPanicCode GALGAS_availableInterruptMap::getter_mInterruptionPanicCodeForKey (const GALGAS_string & inKey,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_availableInterruptMap * p = (const cMapElement_availableInterruptMap *) attributes ;
  GALGAS_interruptionPanicCode result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_availableInterruptMap) ;
    result = p->mAttribute_mInterruptionPanicCode ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_availableInterruptMap::setter_setMInterruptionPanicCodeForKey (GALGAS_interruptionPanicCode inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_availableInterruptMap * p = (cMapElement_availableInterruptMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_availableInterruptMap) ;
    p->mAttribute_mInterruptionPanicCode = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_availableInterruptMap * GALGAS_availableInterruptMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                     const GALGAS_string & inKey
                                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_availableInterruptMap * result = (cMapElement_availableInterruptMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_availableInterruptMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_availableInterruptMap::cEnumerator_availableInterruptMap (const GALGAS_availableInterruptMap & inEnumeratedObject,
                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_availableInterruptMap_2D_element cEnumerator_availableInterruptMap::current (LOCATION_ARGS) const {
  const cMapElement_availableInterruptMap * p = (const cMapElement_availableInterruptMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_availableInterruptMap) ;
  return GALGAS_availableInterruptMap_2D_element (p->mAttribute_lkey, p->mAttribute_mInterruptionPanicCode) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_availableInterruptMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_interruptionPanicCode cEnumerator_availableInterruptMap::current_mInterruptionPanicCode (LOCATION_ARGS) const {
  const cMapElement_availableInterruptMap * p = (const cMapElement_availableInterruptMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_availableInterruptMap) ;
  return p->mAttribute_mInterruptionPanicCode ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @availableInterruptMap type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_availableInterruptMap ("availableInterruptMap",
                                              NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_availableInterruptMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_availableInterruptMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_availableInterruptMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_availableInterruptMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_availableInterruptMap GALGAS_availableInterruptMap::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_availableInterruptMap result ;
  const GALGAS_availableInterruptMap * p = (const GALGAS_availableInterruptMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_availableInterruptMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("availableInterruptMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 Class for element of '@globalTaskVariableList' list                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_globalTaskVariableList : public cCollectionElement {
  public : GALGAS_globalTaskVariableList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_globalTaskVariableList (const GALGAS_string & in_mTaskName,
                                                      const GALGAS_string & in_mTaskTypeName,
                                                      const GALGAS_objectIR & in_mInitialValue
                                                      COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
  public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_globalTaskVariableList::cCollectionElement_globalTaskVariableList (const GALGAS_string & in_mTaskName,
                                                                                      const GALGAS_string & in_mTaskTypeName,
                                                                                      const GALGAS_objectIR & in_mInitialValue
                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mTaskName, in_mTaskTypeName, in_mInitialValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_globalTaskVariableList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_globalTaskVariableList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_globalTaskVariableList (mObject.mAttribute_mTaskName, mObject.mAttribute_mTaskTypeName, mObject.mAttribute_mInitialValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_globalTaskVariableList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTaskName" ":" ;
  mObject.mAttribute_mTaskName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTaskTypeName" ":" ;
  mObject.mAttribute_mTaskTypeName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInitialValue" ":" ;
  mObject.mAttribute_mInitialValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_globalTaskVariableList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_globalTaskVariableList * operand = (cCollectionElement_globalTaskVariableList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_globalTaskVariableList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList::GALGAS_globalTaskVariableList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList::GALGAS_globalTaskVariableList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList GALGAS_globalTaskVariableList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_globalTaskVariableList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList GALGAS_globalTaskVariableList::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                        const GALGAS_string & inOperand1,
                                                                                        const GALGAS_objectIR & inOperand2
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_globalTaskVariableList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_globalTaskVariableList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                               const GALGAS_string & in_mTaskName,
                                                               const GALGAS_string & in_mTaskTypeName,
                                                               const GALGAS_objectIR & in_mInitialValue
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement_globalTaskVariableList * p = NULL ;
  macroMyNew (p, cCollectionElement_globalTaskVariableList (in_mTaskName,
                                                            in_mTaskTypeName,
                                                            in_mInitialValue COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::addAssign_operation (const GALGAS_string & inOperand0,
                                                         const GALGAS_string & inOperand1,
                                                         const GALGAS_objectIR & inOperand2
                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_globalTaskVariableList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::setter_insertAtIndex (const GALGAS_string inOperand0,
                                                          const GALGAS_string inOperand1,
                                                          const GALGAS_objectIR inOperand2,
                                                          const GALGAS_uint inInsertionIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_globalTaskVariableList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::setter_removeAtIndex (GALGAS_string & outOperand0,
                                                          GALGAS_string & outOperand1,
                                                          GALGAS_objectIR & outOperand2,
                                                          const GALGAS_uint inRemoveIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_globalTaskVariableList * p = (cCollectionElement_globalTaskVariableList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
      outOperand0 = p->mObject.mAttribute_mTaskName ;
      outOperand1 = p->mObject.mAttribute_mTaskTypeName ;
      outOperand2 = p->mObject.mAttribute_mInitialValue ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::setter_popFirst (GALGAS_string & outOperand0,
                                                     GALGAS_string & outOperand1,
                                                     GALGAS_objectIR & outOperand2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_globalTaskVariableList * p = (cCollectionElement_globalTaskVariableList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
    outOperand0 = p->mObject.mAttribute_mTaskName ;
    outOperand1 = p->mObject.mAttribute_mTaskTypeName ;
    outOperand2 = p->mObject.mAttribute_mInitialValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::setter_popLast (GALGAS_string & outOperand0,
                                                    GALGAS_string & outOperand1,
                                                    GALGAS_objectIR & outOperand2,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_globalTaskVariableList * p = (cCollectionElement_globalTaskVariableList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
    outOperand0 = p->mObject.mAttribute_mTaskName ;
    outOperand1 = p->mObject.mAttribute_mTaskTypeName ;
    outOperand2 = p->mObject.mAttribute_mInitialValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::method_first (GALGAS_string & outOperand0,
                                                  GALGAS_string & outOperand1,
                                                  GALGAS_objectIR & outOperand2,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_globalTaskVariableList * p = (cCollectionElement_globalTaskVariableList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
    outOperand0 = p->mObject.mAttribute_mTaskName ;
    outOperand1 = p->mObject.mAttribute_mTaskTypeName ;
    outOperand2 = p->mObject.mAttribute_mInitialValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::method_last (GALGAS_string & outOperand0,
                                                 GALGAS_string & outOperand1,
                                                 GALGAS_objectIR & outOperand2,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_globalTaskVariableList * p = (cCollectionElement_globalTaskVariableList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
    outOperand0 = p->mObject.mAttribute_mTaskName ;
    outOperand1 = p->mObject.mAttribute_mTaskTypeName ;
    outOperand2 = p->mObject.mAttribute_mInitialValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList GALGAS_globalTaskVariableList::add_operation (const GALGAS_globalTaskVariableList & inOperand,
                                                                            C_Compiler * /* inCompiler */
                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_globalTaskVariableList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList GALGAS_globalTaskVariableList::getter_subListWithRange (const GALGAS_range & inRange,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_globalTaskVariableList result = GALGAS_globalTaskVariableList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList GALGAS_globalTaskVariableList::getter_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_globalTaskVariableList result = GALGAS_globalTaskVariableList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList GALGAS_globalTaskVariableList::getter_subListToIndex (const GALGAS_uint & inIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_globalTaskVariableList result = GALGAS_globalTaskVariableList::constructor_emptyList (THERE) ;
  subListToIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::plusAssign_operation (const GALGAS_globalTaskVariableList inOperand,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_globalTaskVariableList::getter_mTaskNameAtIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_globalTaskVariableList * p = (cCollectionElement_globalTaskVariableList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
    result = p->mObject.mAttribute_mTaskName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_globalTaskVariableList::getter_mTaskTypeNameAtIndex (const GALGAS_uint & inIndex,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_globalTaskVariableList * p = (cCollectionElement_globalTaskVariableList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
    result = p->mObject.mAttribute_mTaskTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectIR GALGAS_globalTaskVariableList::getter_mInitialValueAtIndex (const GALGAS_uint & inIndex,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_globalTaskVariableList * p = (cCollectionElement_globalTaskVariableList *) attributes.ptr () ;
  GALGAS_objectIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
    result = p->mObject.mAttribute_mInitialValue ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_globalTaskVariableList::cEnumerator_globalTaskVariableList (const GALGAS_globalTaskVariableList & inEnumeratedObject,
                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList_2D_element cEnumerator_globalTaskVariableList::current (LOCATION_ARGS) const {
  const cCollectionElement_globalTaskVariableList * p = (const cCollectionElement_globalTaskVariableList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_globalTaskVariableList::current_mTaskName (LOCATION_ARGS) const {
  const cCollectionElement_globalTaskVariableList * p = (const cCollectionElement_globalTaskVariableList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
  return p->mObject.mAttribute_mTaskName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_globalTaskVariableList::current_mTaskTypeName (LOCATION_ARGS) const {
  const cCollectionElement_globalTaskVariableList * p = (const cCollectionElement_globalTaskVariableList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
  return p->mObject.mAttribute_mTaskTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectIR cEnumerator_globalTaskVariableList::current_mInitialValue (LOCATION_ARGS) const {
  const cCollectionElement_globalTaskVariableList * p = (const cCollectionElement_globalTaskVariableList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
  return p->mObject.mAttribute_mInitialValue ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @globalTaskVariableList type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalTaskVariableList ("globalTaskVariableList",
                                               NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalTaskVariableList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalTaskVariableList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalTaskVariableList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalTaskVariableList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList GALGAS_globalTaskVariableList::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_globalTaskVariableList result ;
  const GALGAS_globalTaskVariableList * p = (const GALGAS_globalTaskVariableList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalTaskVariableList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalTaskVariableList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           Abstract extension method '@abstractDeclaration enterInContext'                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <extensionMethodSignature_abstractDeclaration_enterInContext> gExtensionMethodTable_abstractDeclaration_enterInContext ;

//---------------------------------------------------------------------------------------------------------------------*

void enterExtensionMethod_enterInContext (const int32_t inClassIndex,
                                          extensionMethodSignature_abstractDeclaration_enterInContext inMethod) {
  gExtensionMethodTable_abstractDeclaration_enterInContext.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeExtensionMethod_abstractDeclaration_enterInContext (void) {
  gExtensionMethodTable_abstractDeclaration_enterInContext.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractDeclaration_enterInContext (NULL,
                                                               freeExtensionMethod_abstractDeclaration_enterInContext) ;

//---------------------------------------------------------------------------------------------------------------------*

void callExtensionMethod_enterInContext (const cPtr_abstractDeclaration * inObject,
                                         const GALGAS_functionDeclarationListAST constin_inProcedureListAST,
                                         GALGAS_semanticContext & io_ioContext,
                                         GALGAS_staticStringMap & io_ioGlobalLiteralStringMap,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractDeclaration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    extensionMethodSignature_abstractDeclaration_enterInContext f = NULL ;
    if (classIndex < gExtensionMethodTable_abstractDeclaration_enterInContext.count ()) {
      f = gExtensionMethodTable_abstractDeclaration_enterInContext (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
      const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
      while ((NULL == f) && (NULL != p)) {
        if (p->mSlotID < gExtensionMethodTable_abstractDeclaration_enterInContext.count ()) {
          f = gExtensionMethodTable_abstractDeclaration_enterInContext (p->mSlotID COMMA_HERE) ;
        }
        p = p->mSuperclassDescriptor ;
      }
      gExtensionMethodTable_abstractDeclaration_enterInContext.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inProcedureListAST, io_ioContext, io_ioGlobalLiteralStringMap, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       Abstract extension method '@abstractDeclaration enterRoutinesInContext'                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <extensionMethodSignature_abstractDeclaration_enterRoutinesInContext> gExtensionMethodTable_abstractDeclaration_enterRoutinesInContext ;

//---------------------------------------------------------------------------------------------------------------------*

void enterExtensionMethod_enterRoutinesInContext (const int32_t inClassIndex,
                                                  extensionMethodSignature_abstractDeclaration_enterRoutinesInContext inMethod) {
  gExtensionMethodTable_abstractDeclaration_enterRoutinesInContext.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeExtensionMethod_abstractDeclaration_enterRoutinesInContext (void) {
  gExtensionMethodTable_abstractDeclaration_enterRoutinesInContext.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractDeclaration_enterRoutinesInContext (NULL,
                                                                       freeExtensionMethod_abstractDeclaration_enterRoutinesInContext) ;

//---------------------------------------------------------------------------------------------------------------------*

void callExtensionMethod_enterRoutinesInContext (const cPtr_abstractDeclaration * inObject,
                                                 const GALGAS_functionDeclarationListAST constin_inProcedureListAST,
                                                 GALGAS_semanticContext & io_ioContext,
                                                 GALGAS_staticStringMap & io_ioGlobalLiteralStringMap,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractDeclaration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    extensionMethodSignature_abstractDeclaration_enterRoutinesInContext f = NULL ;
    if (classIndex < gExtensionMethodTable_abstractDeclaration_enterRoutinesInContext.count ()) {
      f = gExtensionMethodTable_abstractDeclaration_enterRoutinesInContext (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
      const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
      while ((NULL == f) && (NULL != p)) {
        if (p->mSlotID < gExtensionMethodTable_abstractDeclaration_enterRoutinesInContext.count ()) {
          f = gExtensionMethodTable_abstractDeclaration_enterRoutinesInContext (p->mSlotID COMMA_HERE) ;
        }
        p = p->mSuperclassDescriptor ;
      }
      gExtensionMethodTable_abstractDeclaration_enterRoutinesInContext.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inProcedureListAST, io_ioContext, io_ioGlobalLiteralStringMap, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Abstract extension method '@abstractDeclaration semanticAnalysis'                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <extensionMethodSignature_abstractDeclaration_semanticAnalysis> gExtensionMethodTable_abstractDeclaration_semanticAnalysis ;

//---------------------------------------------------------------------------------------------------------------------*

void enterExtensionMethod_semanticAnalysis (const int32_t inClassIndex,
                                            extensionMethodSignature_abstractDeclaration_semanticAnalysis inMethod) {
  gExtensionMethodTable_abstractDeclaration_semanticAnalysis.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeExtensionMethod_abstractDeclaration_semanticAnalysis (void) {
  gExtensionMethodTable_abstractDeclaration_semanticAnalysis.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractDeclaration_semanticAnalysis (NULL,
                                                                 freeExtensionMethod_abstractDeclaration_semanticAnalysis) ;

//---------------------------------------------------------------------------------------------------------------------*

void callExtensionMethod_semanticAnalysis (const cPtr_abstractDeclaration * inObject,
                                           const GALGAS_semanticContext constin_inContext,
                                           GALGAS_semanticTemporariesStruct & io_ioTemporaries,
                                           GALGAS_intermediateCodeStruct & io_ioIntermediateCodeStruct,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractDeclaration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    extensionMethodSignature_abstractDeclaration_semanticAnalysis f = NULL ;
    if (classIndex < gExtensionMethodTable_abstractDeclaration_semanticAnalysis.count ()) {
      f = gExtensionMethodTable_abstractDeclaration_semanticAnalysis (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
      const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
      while ((NULL == f) && (NULL != p)) {
        if (p->mSlotID < gExtensionMethodTable_abstractDeclaration_semanticAnalysis.count ()) {
          f = gExtensionMethodTable_abstractDeclaration_semanticAnalysis (p->mSlotID COMMA_HERE) ;
        }
        p = p->mSuperclassDescriptor ;
      }
      gExtensionMethodTable_abstractDeclaration_semanticAnalysis.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inContext, io_ioTemporaries, io_ioIntermediateCodeStruct, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         '@subprogramInvocationGraph' graph                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_subprogramInvocationGraph::GALGAS_subprogramInvocationGraph (void) :
AC_GALGAS_graph () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_subprogramInvocationGraph GALGAS_subprogramInvocationGraph::constructor_emptyGraph (LOCATION_ARGS) {
  GALGAS_subprogramInvocationGraph result ;
  result.makeNewEmptyGraph (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_subprogramInvocationGraph::setter_addNode (GALGAS_lstring inKey,
                                                       GALGAS_lstring inArgument_0,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  GALGAS_lstringlist::makeAttributesFromObjects (attributes, inArgument_0 COMMA_THERE) ;
  const char * kErrorMessage = "the '%K' subprogram is already declared at %L" ;
  internalAddNode (inKey, kErrorMessage, attributes, inCompiler COMMA_THERE) ;
}


//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_subprogramInvocationGraph::method_topologicalSort (GALGAS_lstringlist & outSortedList,
                                                               GALGAS_lstringlist & outSortedKeyList,
                                                               GALGAS_lstringlist & outUnsortedList,
                                                               GALGAS_lstringlist & outUnsortedKeyList,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  cSharedList * sortedList = NULL ;
  cSharedList * unsortedList = NULL ;
  internalTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_lstringlist (sortedList) ;
  outUnsortedList = GALGAS_lstringlist (unsortedList) ;
  GALGAS_lstringlist::detachSharedList (sortedList) ;
  GALGAS_lstringlist::detachSharedList (unsortedList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_subprogramInvocationGraph::method_depthFirstTopologicalSort (GALGAS_lstringlist & outSortedList,
                                                                         GALGAS_lstringlist & outSortedKeyList,
                                                                         GALGAS_lstringlist & outUnsortedList,
                                                                         GALGAS_lstringlist & outUnsortedKeyList,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  cSharedList * sortedList = NULL ;
  cSharedList * unsortedList = NULL ;
  internalDepthFirstTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_lstringlist (sortedList) ;
  outUnsortedList = GALGAS_lstringlist (unsortedList) ;
  GALGAS_lstringlist::detachSharedList (sortedList) ;
  GALGAS_lstringlist::detachSharedList (unsortedList) ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_subprogramInvocationGraph GALGAS_subprogramInvocationGraph::getter_reversedGraph (LOCATION_ARGS) const {
  GALGAS_subprogramInvocationGraph result ;
  result.reversedGraphFromGraph (*this COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_subprogramInvocationGraph::method_circularities (GALGAS_lstringlist & outInfoList,
                                                             GALGAS_lstringlist & outKeyList
                                                             COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalFindCircularities (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_lstringlist (infoList) ;
  GALGAS_lstringlist::detachSharedList (infoList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_subprogramInvocationGraph::method_nodesWithNoSuccessor (GALGAS_lstringlist & outInfoList,
                                                                    GALGAS_lstringlist & outKeyList
                                                                    COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalNodesWithNoSuccessor (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_lstringlist (infoList) ;
  GALGAS_lstringlist::detachSharedList (infoList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_subprogramInvocationGraph::method_nodesWithNoPredecessor (GALGAS_lstringlist & outInfoList,
                                                                      GALGAS_lstringlist & outKeyList
                                                                      COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalNodesWithNoPredecessor (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_lstringlist (infoList) ;
  GALGAS_lstringlist::detachSharedList (infoList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_subprogramInvocationGraph GALGAS_subprogramInvocationGraph::getter_subgraphFromNodes (const GALGAS_lstringlist & inStartKeyList,
                                                                                             const GALGAS_stringset & inKeysToExclude,
                                                                                             C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_subprogramInvocationGraph result ;
  subGraph (result, inStartKeyList, inKeysToExclude, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_subprogramInvocationGraph::getter_accessibleNodesFrom (const GALGAS_lstringlist & inStartKeyList,
                                                                                 const GALGAS_stringset & inNodesToExclude,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_lstringlist result ;
  GALGAS_subprogramInvocationGraph resultingGraph ;
  subGraph (resultingGraph,
            inStartKeyList,
            inNodesToExclude,
            inCompiler
            COMMA_THERE) ;
  if (resultingGraph.isValid ()) {
    result = resultingGraph.getter_lkeyList (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @subprogramInvocationGraph type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_subprogramInvocationGraph ("subprogramInvocationGraph",
                                                  NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_subprogramInvocationGraph::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_subprogramInvocationGraph ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_subprogramInvocationGraph::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_subprogramInvocationGraph (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_subprogramInvocationGraph GALGAS_subprogramInvocationGraph::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_subprogramInvocationGraph result ;
  const GALGAS_subprogramInvocationGraph * p = (const GALGAS_subprogramInvocationGraph *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_subprogramInvocationGraph *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("subprogramInvocationGraph", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 Extension method '@routineMapIR llvmCodeGeneration'                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionMethod_llvmCodeGeneration (const GALGAS_routineMapIR inObject,
                                         GALGAS_string & ioArgument_ioLLVMcode,
                                         GALGAS_string & ioArgument_ioAssemblerCode,
                                         const GALGAS_generationContext constinArgument_inGenerationContext,
                                         GALGAS_generationAdds & ioArgument_ioGenerationAdds,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  const GALGAS_routineMapIR temp_0 = inObject ;
  cEnumerator_routineMapIR enumerator_8325 (temp_0, kEnumeration_up) ;
  while (enumerator_8325.hasCurrentObject ()) {
    extensionMethod_llvmCodeGeneration (enumerator_8325.current (HERE), ioArgument_ioLLVMcode, ioArgument_ioAssemblerCode, constinArgument_inGenerationContext, ioArgument_ioGenerationAdds, inCompiler COMMA_SOURCE_FILE ("semantic-routines.galgas", 220)) ;
    enumerator_8325.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalVariableMapIR::cMapElement_globalVariableMapIR (const GALGAS_lstring & inKey,
                                                                  const GALGAS_unifiedTypeMap_2D_proxy & in_mType,
                                                                  const GALGAS_bool & in_mGenerateVolatile,
                                                                  const GALGAS_objectIR & in_mInitialValue
                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mType (in_mType),
mAttribute_mGenerateVolatile (in_mGenerateVolatile),
mAttribute_mInitialValue (in_mInitialValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_globalVariableMapIR::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () && mAttribute_mGenerateVolatile.isValid () && mAttribute_mInitialValue.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_globalVariableMapIR::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_globalVariableMapIR (mAttribute_lkey, mAttribute_mType, mAttribute_mGenerateVolatile, mAttribute_mInitialValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_globalVariableMapIR::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGenerateVolatile" ":" ;
  mAttribute_mGenerateVolatile.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInitialValue" ":" ;
  mAttribute_mInitialValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_globalVariableMapIR::compare (const cCollectionElement * inOperand) const {
  cMapElement_globalVariableMapIR * operand = (cMapElement_globalVariableMapIR *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mGenerateVolatile.objectCompare (operand->mAttribute_mGenerateVolatile) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInitialValue.objectCompare (operand->mAttribute_mInitialValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR::GALGAS_globalVariableMapIR (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR::GALGAS_globalVariableMapIR (const GALGAS_globalVariableMapIR & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR & GALGAS_globalVariableMapIR::operator = (const GALGAS_globalVariableMapIR & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR GALGAS_globalVariableMapIR::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_globalVariableMapIR result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR GALGAS_globalVariableMapIR::constructor_mapWithMapToOverride (const GALGAS_globalVariableMapIR & inMapToOverride
                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_globalVariableMapIR result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR GALGAS_globalVariableMapIR::getter_overriddenMap (C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_globalVariableMapIR result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::addAssign_operation (const GALGAS_lstring & inKey,
                                                      const GALGAS_unifiedTypeMap_2D_proxy & inArgument0,
                                                      const GALGAS_bool & inArgument1,
                                                      const GALGAS_objectIR & inArgument2,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMapIR * p = NULL ;
  macroMyNew (p, cMapElement_globalVariableMapIR (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@globalVariableMapIR insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::setter_insertKey (GALGAS_lstring inKey,
                                                   GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                   GALGAS_bool inArgument1,
                                                   GALGAS_objectIR inArgument2,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMapIR * p = NULL ;
  macroMyNew (p, cMapElement_globalVariableMapIR (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "** internal error **" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_globalVariableMapIR_searchKey = "** internal error **" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::method_searchKey (GALGAS_lstring inKey,
                                                   GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                   GALGAS_bool & outArgument1,
                                                   GALGAS_objectIR & outArgument2,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) performSearch (inKey,
                                                                                                         inCompiler,
                                                                                                         kSearchErrorMessage_globalVariableMapIR_searchKey
                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    outArgument0 = p->mAttribute_mType ;
    outArgument1 = p->mAttribute_mGenerateVolatile ;
    outArgument2 = p->mAttribute_mInitialValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_globalVariableMapIR::getter_mTypeForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_globalVariableMapIR::getter_mGenerateVolatileForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    result = p->mAttribute_mGenerateVolatile ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectIR GALGAS_globalVariableMapIR::getter_mInitialValueForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) attributes ;
  GALGAS_objectIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    result = p->mAttribute_mInitialValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::setter_setMTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMapIR * p = (cMapElement_globalVariableMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    p->mAttribute_mType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::setter_setMGenerateVolatileForKey (GALGAS_bool inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMapIR * p = (cMapElement_globalVariableMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    p->mAttribute_mGenerateVolatile = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::setter_setMInitialValueForKey (GALGAS_objectIR inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMapIR * p = (cMapElement_globalVariableMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    p->mAttribute_mInitialValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalVariableMapIR * GALGAS_globalVariableMapIR::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                 const GALGAS_string & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMapIR * result = (cMapElement_globalVariableMapIR *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_globalVariableMapIR) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_globalVariableMapIR::cEnumerator_globalVariableMapIR (const GALGAS_globalVariableMapIR & inEnumeratedObject,
                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR_2D_element cEnumerator_globalVariableMapIR::current (LOCATION_ARGS) const {
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
  return GALGAS_globalVariableMapIR_2D_element (p->mAttribute_lkey, p->mAttribute_mType, p->mAttribute_mGenerateVolatile, p->mAttribute_mInitialValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_globalVariableMapIR::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_globalVariableMapIR::current_mType (LOCATION_ARGS) const {
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
  return p->mAttribute_mType ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_globalVariableMapIR::current_mGenerateVolatile (LOCATION_ARGS) const {
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
  return p->mAttribute_mGenerateVolatile ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectIR cEnumerator_globalVariableMapIR::current_mInitialValue (LOCATION_ARGS) const {
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
  return p->mAttribute_mInitialValue ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @globalVariableMapIR type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalVariableMapIR ("globalVariableMapIR",
                                            NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalVariableMapIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalVariableMapIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalVariableMapIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalVariableMapIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR GALGAS_globalVariableMapIR::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_globalVariableMapIR result ;
  const GALGAS_globalVariableMapIR * p = (const GALGAS_globalVariableMapIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalVariableMapIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalVariableMapIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalConstantMapIR::cMapElement_globalConstantMapIR (const GALGAS_lstring & inKey,
                                                                  const GALGAS_unifiedTypeMap_2D_proxy & in_mType,
                                                                  const GALGAS_objectIR & in_mSourceExpression
                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mType (in_mType),
mAttribute_mSourceExpression (in_mSourceExpression) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_globalConstantMapIR::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () && mAttribute_mSourceExpression.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_globalConstantMapIR::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_globalConstantMapIR (mAttribute_lkey, mAttribute_mType, mAttribute_mSourceExpression COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_globalConstantMapIR::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSourceExpression" ":" ;
  mAttribute_mSourceExpression.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_globalConstantMapIR::compare (const cCollectionElement * inOperand) const {
  cMapElement_globalConstantMapIR * operand = (cMapElement_globalConstantMapIR *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSourceExpression.objectCompare (operand->mAttribute_mSourceExpression) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR::GALGAS_globalConstantMapIR (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR::GALGAS_globalConstantMapIR (const GALGAS_globalConstantMapIR & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR & GALGAS_globalConstantMapIR::operator = (const GALGAS_globalConstantMapIR & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR GALGAS_globalConstantMapIR::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_globalConstantMapIR result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR GALGAS_globalConstantMapIR::constructor_mapWithMapToOverride (const GALGAS_globalConstantMapIR & inMapToOverride
                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_globalConstantMapIR result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR GALGAS_globalConstantMapIR::getter_overriddenMap (C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_globalConstantMapIR result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMapIR::addAssign_operation (const GALGAS_lstring & inKey,
                                                      const GALGAS_unifiedTypeMap_2D_proxy & inArgument0,
                                                      const GALGAS_objectIR & inArgument1,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMapIR * p = NULL ;
  macroMyNew (p, cMapElement_globalConstantMapIR (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@globalConstantMapIR insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMapIR::setter_insertKey (GALGAS_lstring inKey,
                                                   GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                   GALGAS_objectIR inArgument1,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMapIR * p = NULL ;
  macroMyNew (p, cMapElement_globalConstantMapIR (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "** internal error **" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_globalConstantMapIR_searchKey = "** internal error **" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMapIR::method_searchKey (GALGAS_lstring inKey,
                                                   GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                   GALGAS_objectIR & outArgument1,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_globalConstantMapIR * p = (const cMapElement_globalConstantMapIR *) performSearch (inKey,
                                                                                                         inCompiler,
                                                                                                         kSearchErrorMessage_globalConstantMapIR_searchKey
                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
    outArgument0 = p->mAttribute_mType ;
    outArgument1 = p->mAttribute_mSourceExpression ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_globalConstantMapIR::getter_mTypeForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalConstantMapIR * p = (const cMapElement_globalConstantMapIR *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectIR GALGAS_globalConstantMapIR::getter_mSourceExpressionForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalConstantMapIR * p = (const cMapElement_globalConstantMapIR *) attributes ;
  GALGAS_objectIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
    result = p->mAttribute_mSourceExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMapIR::setter_setMTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalConstantMapIR * p = (cMapElement_globalConstantMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
    p->mAttribute_mType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMapIR::setter_setMSourceExpressionForKey (GALGAS_objectIR inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalConstantMapIR * p = (cMapElement_globalConstantMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
    p->mAttribute_mSourceExpression = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalConstantMapIR * GALGAS_globalConstantMapIR::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                 const GALGAS_string & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMapIR * result = (cMapElement_globalConstantMapIR *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_globalConstantMapIR) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_globalConstantMapIR::cEnumerator_globalConstantMapIR (const GALGAS_globalConstantMapIR & inEnumeratedObject,
                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR_2D_element cEnumerator_globalConstantMapIR::current (LOCATION_ARGS) const {
  const cMapElement_globalConstantMapIR * p = (const cMapElement_globalConstantMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
  return GALGAS_globalConstantMapIR_2D_element (p->mAttribute_lkey, p->mAttribute_mType, p->mAttribute_mSourceExpression) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_globalConstantMapIR::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_globalConstantMapIR::current_mType (LOCATION_ARGS) const {
  const cMapElement_globalConstantMapIR * p = (const cMapElement_globalConstantMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
  return p->mAttribute_mType ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectIR cEnumerator_globalConstantMapIR::current_mSourceExpression (LOCATION_ARGS) const {
  const cMapElement_globalConstantMapIR * p = (const cMapElement_globalConstantMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
  return p->mAttribute_mSourceExpression ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @globalConstantMapIR type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalConstantMapIR ("globalConstantMapIR",
                                            NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalConstantMapIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalConstantMapIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalConstantMapIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalConstantMapIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR GALGAS_globalConstantMapIR::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_globalConstantMapIR result ;
  const GALGAS_globalConstantMapIR * p = (const GALGAS_globalConstantMapIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalConstantMapIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalConstantMapIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 Extension method '@instructionListIR appendExtend'                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendExtend (GALGAS_instructionListIR & ioObject,
                                   const GALGAS_objectIR constinArgument_inResult,
                                   const GALGAS_objectIR constinArgument_inSource,
                                   C_Compiler * /* inCompiler */
                                   COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_extendIR::constructor_new (constinArgument_inResult, constinArgument_inSource  COMMA_SOURCE_FILE ("intermediate-extend.galgas", 6))  COMMA_SOURCE_FILE ("intermediate-extend.galgas", 6)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  Extension method '@instructionListIR appendTrunc'                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendTrunc (GALGAS_instructionListIR & ioObject,
                                  const GALGAS_objectIR constinArgument_inResult,
                                  const GALGAS_objectIR constinArgument_inSource,
                                  C_Compiler * /* inCompiler */
                                  COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_truncIR::constructor_new (constinArgument_inResult, constinArgument_inSource  COMMA_SOURCE_FILE ("intermediate-trunc.galgas", 6))  COMMA_SOURCE_FILE ("intermediate-trunc.galgas", 6)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                Extension method '@instructionListIR appendShiftLeft'                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendShiftLeft (GALGAS_instructionListIR & ioObject,
                                      const GALGAS_objectIR constinArgument_inResult,
                                      const GALGAS_objectIR constinArgument_inSource,
                                      const GALGAS_uint constinArgument_inShiftAmount,
                                      C_Compiler * /* inCompiler */
                                      COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_leftShiftIR::constructor_new (constinArgument_inResult, constinArgument_inSource, constinArgument_inShiftAmount  COMMA_SOURCE_FILE ("intermediate-shift-left.galgas", 7))  COMMA_SOURCE_FILE ("intermediate-shift-left.galgas", 7)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                             Extension method '@instructionListIR appendBinaryOperation'                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendBinaryOperation (GALGAS_instructionListIR & ioObject,
                                            const GALGAS_objectIR constinArgument_inTarget,
                                            const GALGAS_unifiedTypeMap_2D_proxy constinArgument_inOperandType,
                                            const GALGAS_location constinArgument_inLocation,
                                            const GALGAS_objectIR constinArgument_inLeft,
                                            const GALGAS_llvmBinaryOperation constinArgument_inOperation,
                                            const GALGAS_objectIR constinArgument_inRight,
                                            C_Compiler * /* inCompiler */
                                            COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_binaryOperationIR::constructor_new (constinArgument_inTarget, constinArgument_inOperandType, constinArgument_inLeft, constinArgument_inOperation, constinArgument_inRight, constinArgument_inLocation  COMMA_SOURCE_FILE ("intermediate-binary-operation.galgas", 51))  COMMA_SOURCE_FILE ("intermediate-binary-operation.galgas", 51)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                        Extension method '@instructionListIR appendShortCircuitAndOperation'                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendShortCircuitAndOperation (GALGAS_instructionListIR & ioObject,
                                                     const GALGAS_objectIR constinArgument_inTargetOperand,
                                                     const GALGAS_objectIR constinArgument_inLeftOperand,
                                                     const GALGAS_instructionListIR constinArgument_inLeftInstructionList,
                                                     const GALGAS_objectIR constinArgument_inRightOperand,
                                                     const GALGAS_instructionListIR constinArgument_inRightInstructionList,
                                                     const GALGAS_location constinArgument_inLocation,
                                                     C_Compiler * /* inCompiler */
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_shortCircuitAndOperationIR::constructor_new (constinArgument_inTargetOperand, constinArgument_inLeftOperand, constinArgument_inLeftInstructionList, constinArgument_inRightOperand, constinArgument_inRightInstructionList, constinArgument_inLocation  COMMA_SOURCE_FILE ("intermediate-short-circuit-and.galgas", 11))  COMMA_SOURCE_FILE ("intermediate-short-circuit-and.galgas", 11)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//               Extension method '@instructionListIR appendComputeVolatileRegisterAddressWithSubscript'               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendComputeVolatileRegisterAddressWithSubscript (GALGAS_instructionListIR & ioObject,
                                                                        const GALGAS_objectIR constinArgument_inTarget,
                                                                        const GALGAS_objectIR constinArgument_inIndexResult,
                                                                        const GALGAS_bigint constinArgument_inAddress,
                                                                        const GALGAS_bigint constinArgument_inElementArraySize,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_ComputeRegisterAddressWithSubscriptIR::constructor_new (constinArgument_inTarget, constinArgument_inIndexResult, constinArgument_inAddress, constinArgument_inElementArraySize  COMMA_SOURCE_FILE ("intermediate-load-control-register-with-subscript.galgas", 8))  COMMA_SOURCE_FILE ("intermediate-load-control-register-with-subscript.galgas", 8)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Extension method '@instructionListIR appendLoadVolatileRegister'                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendLoadVolatileRegister (GALGAS_instructionListIR & ioObject,
                                                 const GALGAS_objectIR constinArgument_inTargetValue,
                                                 const GALGAS_bigint constinArgument_inAddress,
                                                 C_Compiler * /* inCompiler */
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_loadRegisterIR::constructor_new (constinArgument_inTargetValue, constinArgument_inAddress  COMMA_SOURCE_FILE ("intermediate-load-volatile-register.galgas", 6))  COMMA_SOURCE_FILE ("intermediate-load-volatile-register.galgas", 6)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           Extension method '@instructionListIR appendLoadGlobalVariable'                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendLoadGlobalVariable (GALGAS_instructionListIR & ioObject,
                                               const GALGAS_objectIR constinArgument_inTargetValue,
                                               const GALGAS_string constinArgument_inRegisterName,
                                               GALGAS_bool inArgument_inIsVolatile,
                                               C_Compiler * /* inCompiler */
                                               COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_loadGlobalVariableIR::constructor_new (constinArgument_inTargetValue, constinArgument_inRegisterName, inArgument_inIsVolatile  COMMA_SOURCE_FILE ("intermediate-load-global-variable.galgas", 7))  COMMA_SOURCE_FILE ("intermediate-load-global-variable.galgas", 7)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            Extension method '@instructionListIR appendLoadLocalVariable'                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendLoadLocalVariable (GALGAS_instructionListIR & ioObject,
                                              const GALGAS_objectIR constinArgument_inTargetValue,
                                              const GALGAS_string constinArgument_inVariableName,
                                              const GALGAS_bool constinArgument_inVolatile,
                                              C_Compiler * /* inCompiler */
                                              COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_loadLocalVariableIR::constructor_new (constinArgument_inTargetValue, constinArgument_inVariableName, constinArgument_inVolatile  COMMA_SOURCE_FILE ("intermediate-load-local-variable.galgas", 7))  COMMA_SOURCE_FILE ("intermediate-load-local-variable.galgas", 7)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       Extension method '@instructionListIR appendLoadFromTemporaryReference'                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendLoadFromTemporaryReference (GALGAS_instructionListIR & ioObject,
                                                       const GALGAS_objectIR constinArgument_inTargetValue,
                                                       const GALGAS_string constinArgument_inLLVMName,
                                                       const GALGAS_bool constinArgument_inVolatile,
                                                       C_Compiler * /* inCompiler */
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_loadFromTemporaryReferenceIR::constructor_new (constinArgument_inTargetValue, constinArgument_inLLVMName, constinArgument_inVolatile  COMMA_SOURCE_FILE ("intermediate-load-from-temporary-reference.galgas", 7))  COMMA_SOURCE_FILE ("intermediate-load-from-temporary-reference.galgas", 7)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Extension method '@instructionListIR appendStoreVolatileRegister'                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendStoreVolatileRegister (GALGAS_instructionListIR & ioObject,
                                                  const GALGAS_unifiedTypeMap_2D_proxy constinArgument_inTargetVarType,
                                                  const GALGAS_bigint constinArgument_inAddress,
                                                  const GALGAS_objectIR constinArgument_inSourceValue,
                                                  C_Compiler * /* inCompiler */
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_storeVolatileIR::constructor_new (constinArgument_inTargetVarType, constinArgument_inAddress, constinArgument_inSourceValue  COMMA_SOURCE_FILE ("intermediate-store-volatile-register.galgas", 7))  COMMA_SOURCE_FILE ("intermediate-store-volatile-register.galgas", 7)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           Extension method '@instructionListIR appendStoreGlobalVariable'                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendStoreGlobalVariable (GALGAS_instructionListIR & ioObject,
                                                const GALGAS_string constinArgument_inGlobalVarName,
                                                const GALGAS_unifiedTypeMap_2D_proxy constinArgument_inTargetVarType,
                                                const GALGAS_objectIR constinArgument_inSourceValue,
                                                const GALGAS_bool constinArgument_inIsVolatile,
                                                C_Compiler * /* inCompiler */
                                                COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_storeGlobalVariableIR::constructor_new (constinArgument_inGlobalVarName, constinArgument_inTargetVarType, constinArgument_inSourceValue, constinArgument_inIsVolatile  COMMA_SOURCE_FILE ("intermediate-store-global-variable.galgas", 8))  COMMA_SOURCE_FILE ("intermediate-store-global-variable.galgas", 8)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           Extension method '@instructionListIR appendStoreLocalVariable'                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendStoreLocalVariable (GALGAS_instructionListIR & ioObject,
                                               const GALGAS_string constinArgument_inLocalVarName,
                                               const GALGAS_unifiedTypeMap_2D_proxy constinArgument_inTargetVarType,
                                               const GALGAS_objectIR constinArgument_inSourceValue,
                                               C_Compiler * /* inCompiler */
                                               COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_storeLocalVariableIR::constructor_new (constinArgument_inLocalVarName, constinArgument_inTargetVarType, constinArgument_inSourceValue  COMMA_SOURCE_FILE ("intermediate-store-local-variable.galgas", 7))  COMMA_SOURCE_FILE ("intermediate-store-local-variable.galgas", 7)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                         Extension method '@instructionListIR appendStoreTemporaryReference'                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendStoreTemporaryReference (GALGAS_instructionListIR & ioObject,
                                                    const GALGAS_unifiedTypeMap_2D_proxy constinArgument_inTargetVarType,
                                                    const GALGAS_string constinArgument_inLLVMName,
                                                    const GALGAS_objectIR constinArgument_inSourceValue,
                                                    const GALGAS_bool constinArgument_inVolatile,
                                                    C_Compiler * /* inCompiler */
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_storeFromTemporaryReferenceIR::constructor_new (constinArgument_inTargetVarType, constinArgument_inLLVMName, constinArgument_inSourceValue, constinArgument_inVolatile  COMMA_SOURCE_FILE ("intermediate-store-to-temporary-reference.galgas", 9))  COMMA_SOURCE_FILE ("intermediate-store-to-temporary-reference.galgas", 9)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           Extension method '@instructionListIR appendStoreFromReference'                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendStoreFromReference (GALGAS_instructionListIR & ioObject,
                                               const GALGAS_objectIR constinArgument_inTargetReference,
                                               const GALGAS_location constinArgument_inErrorLocation,
                                               const GALGAS_objectIR constinArgument_inValue,
                                               C_Compiler * inCompiler
                                               COMMA_UNUSED_LOCATION_ARGS) {
  switch (constinArgument_inTargetReference.enumValue ()) {
  case GALGAS_objectIR::kNotBuilt:
    break ;
  case GALGAS_objectIR::kEnum_selfObject:
    {
      TC_Array <C_FixItDescription> fixItArray0 ;
      inCompiler->emitSemanticError (extensionGetter_location (constinArgument_inTargetReference, inCompiler COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 11)), GALGAS_string ("<<@instructionListIR appendStoreFromReference selfObject>>"), fixItArray0  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 11)) ;
    }
    break ;
  case GALGAS_objectIR::kEnum_globalVariableReference:
    {
      const cEnumAssociatedValues_objectIR_globalVariableReference * extractPtr_610 = (const cEnumAssociatedValues_objectIR_globalVariableReference *) (constinArgument_inTargetReference.unsafePointer ()) ;
      const GALGAS_unifiedTypeMap_2D_proxy extractedValue_type = extractPtr_610->mAssociatedValue0 ;
      const GALGAS_lstring extractedValue_plmName = extractPtr_610->mAssociatedValue1 ;
      {
      extensionSetter_appendStoreGlobalVariable (ioObject, extractedValue_plmName.getter_string (SOURCE_FILE ("intermediate-load-store.galgas", 14)), extractedValue_type, constinArgument_inValue, GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 14)) ;
      }
    }
    break ;
  case GALGAS_objectIR::kEnum_localVariableReference:
    {
      const cEnumAssociatedValues_objectIR_localVariableReference * extractPtr_741 = (const cEnumAssociatedValues_objectIR_localVariableReference *) (constinArgument_inTargetReference.unsafePointer ()) ;
      const GALGAS_unifiedTypeMap_2D_proxy extractedValue_type = extractPtr_741->mAssociatedValue0 ;
      const GALGAS_lstring extractedValue_plmName = extractPtr_741->mAssociatedValue1 ;
      {
      extensionSetter_appendStoreLocalVariable (ioObject, extractedValue_plmName.getter_string (SOURCE_FILE ("intermediate-load-store.galgas", 16)), extractedValue_type, constinArgument_inValue, inCompiler COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 16)) ;
      }
    }
    break ;
  case GALGAS_objectIR::kEnum_temporaryReference:
    {
      const cEnumAssociatedValues_objectIR_temporaryReference * extractPtr_911 = (const cEnumAssociatedValues_objectIR_temporaryReference *) (constinArgument_inTargetReference.unsafePointer ()) ;
      const GALGAS_unifiedTypeMap_2D_proxy extractedValue_type = extractPtr_911->mAssociatedValue0 ;
      const GALGAS_lstring extractedValue_llvmName = extractPtr_911->mAssociatedValue1 ;
      const GALGAS_bool extractedValue_volatile = extractPtr_911->mAssociatedValue3 ;
      {
      extensionSetter_appendStoreTemporaryReference (ioObject, extractedValue_type, extractedValue_llvmName.getter_string (SOURCE_FILE ("intermediate-load-store.galgas", 18)), constinArgument_inValue, extractedValue_volatile, inCompiler COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 18)) ;
      }
    }
    break ;
  case GALGAS_objectIR::kEnum_registerReference:
    {
      const cEnumAssociatedValues_objectIR_registerReference * extractPtr_1141 = (const cEnumAssociatedValues_objectIR_registerReference *) (constinArgument_inTargetReference.unsafePointer ()) ;
      const GALGAS_unifiedTypeMap_2D_proxy extractedValue_type = extractPtr_1141->mAssociatedValue0 ;
      const GALGAS_bigint extractedValue_address = extractPtr_1141->mAssociatedValue4 ;
      const GALGAS_uint extractedValue_arraySize = extractPtr_1141->mAssociatedValue6 ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, extractedValue_arraySize.objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_1) {
        TC_Array <C_FixItDescription> fixItArray2 ;
        inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("register array requires subscripting"), fixItArray2  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 21)) ;
      }
      {
      extensionSetter_appendStoreVolatileRegister (ioObject, extractedValue_type, extractedValue_address, constinArgument_inValue, inCompiler COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 23)) ;
      }
    }
    break ;
  case GALGAS_objectIR::kEnum_property:
    {
      TC_Array <C_FixItDescription> fixItArray3 ;
      inCompiler->emitSemanticError (extensionGetter_location (constinArgument_inTargetReference, inCompiler COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 26)), GALGAS_string ("<<@instructionListIR llvmGlobalObjectValue property>>"), fixItArray3  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 26)) ;
    }
    break ;
  case GALGAS_objectIR::kEnum_llvmTemporaryValue:
    {
      const cEnumAssociatedValues_objectIR_llvmTemporaryValue * extractPtr_1430 = (const cEnumAssociatedValues_objectIR_llvmTemporaryValue *) (constinArgument_inTargetReference.unsafePointer ()) ;
      const GALGAS_lstring extractedValue_llvmName = extractPtr_1430->mAssociatedValue1 ;
      TC_Array <C_FixItDescription> fixItArray4 ;
      inCompiler->emitSemanticError (extractedValue_llvmName.getter_location (SOURCE_FILE ("intermediate-load-store.galgas", 29)), GALGAS_string ("<<@instructionListIR llvmGlobalObjectValue llvmTemporaryValue>>"), fixItArray4  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 29)) ;
    }
    break ;
  case GALGAS_objectIR::kEnum_literalInteger:
    {
      TC_Array <C_FixItDescription> fixItArray5 ;
      inCompiler->emitSemanticError (extensionGetter_location (constinArgument_inTargetReference, inCompiler COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 31)), GALGAS_string ("<<@instructionListIR llvmGlobalObjectValue literalInteger>>"), fixItArray5  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 31)) ;
    }
    break ;
  case GALGAS_objectIR::kEnum_llvmStructureConstant:
    {
      TC_Array <C_FixItDescription> fixItArray6 ;
      inCompiler->emitSemanticError (extensionGetter_location (constinArgument_inTargetReference, inCompiler COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 33)), GALGAS_string ("<<@instructionListIR llvmGlobalObjectValue llvmStructureConstant>>"), fixItArray6  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 33)) ;
    }
    break ;
  case GALGAS_objectIR::kEnum_literalString:
    {
      TC_Array <C_FixItDescription> fixItArray7 ;
      inCompiler->emitSemanticError (extensionGetter_location (constinArgument_inTargetReference, inCompiler COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 35)), GALGAS_string ("<<@instructionListIR llvmGlobalObjectValue literalString>>"), fixItArray7  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 35)) ;
    }
    break ;
  case GALGAS_objectIR::kEnum_zero:
    {
      TC_Array <C_FixItDescription> fixItArray8 ;
      inCompiler->emitSemanticError (extensionGetter_location (constinArgument_inTargetReference, inCompiler COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 37)), GALGAS_string ("<<@instructionListIR llvmGlobalObjectValue zero>>"), fixItArray8  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 37)) ;
    }
    break ;
  case GALGAS_objectIR::kEnum_possibleFunction:
    {
      TC_Array <C_FixItDescription> fixItArray9 ;
      inCompiler->emitSemanticError (extensionGetter_location (constinArgument_inTargetReference, inCompiler COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 39)), GALGAS_string ("<<@instructionListIR llvmGlobalObjectValue possibleFunction>>"), fixItArray9  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 39)) ;
    }
    break ;
  case GALGAS_objectIR::kEnum_null:
    {
      TC_Array <C_FixItDescription> fixItArray10 ;
      inCompiler->emitSemanticError (extensionGetter_location (constinArgument_inTargetReference, inCompiler COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 41)), GALGAS_string ("<<@instructionListIR llvmGlobalObjectValue null>>"), fixItArray10  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 41)) ;
    }
    break ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            Extension method '@instructionListIR appendLoadFromReference'                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendLoadFromReference (GALGAS_instructionListIR & ioObject,
                                              GALGAS_semanticTemporariesStruct & ioArgument_ioTemporaries,
                                              const GALGAS_objectIR constinArgument_inSource,
                                              const GALGAS_location constinArgument_inErrorLocation,
                                              GALGAS_objectIR & outArgument_outResultingValue,
                                              C_Compiler * inCompiler
                                              COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outResultingValue.drop () ; // Release 'out' argument
  switch (constinArgument_inSource.enumValue ()) {
  case GALGAS_objectIR::kNotBuilt:
    break ;
  case GALGAS_objectIR::kEnum_null:
    {
      TC_Array <C_FixItDescription> fixItArray0 ;
      inCompiler->emitSemanticError (GALGAS_location::constructor_nowhere (SOURCE_FILE ("intermediate-load-store.galgas", 55)), GALGAS_string ("<<@instructionListIR appendLoadFromReference null>>"), fixItArray0  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 55)) ;
      outArgument_outResultingValue.drop () ; // Release error dropped variable
    }
    break ;
  case GALGAS_objectIR::kEnum_possibleFunction:
    {
      const cEnumAssociatedValues_objectIR_possibleFunction * extractPtr_2799 = (const cEnumAssociatedValues_objectIR_possibleFunction *) (constinArgument_inSource.unsafePointer ()) ;
      const GALGAS_lstring extractedValue_functionName = extractPtr_2799->mAssociatedValue1 ;
      TC_Array <C_FixItDescription> fixItArray1 ;
      inCompiler->emitSemanticError (extractedValue_functionName.getter_location (SOURCE_FILE ("intermediate-load-store.galgas", 57)), GALGAS_string ("<<@instructionListIR appendLoadFromReference possibleFunction>>"), fixItArray1  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 57)) ;
      outArgument_outResultingValue.drop () ; // Release error dropped variable
    }
    break ;
  case GALGAS_objectIR::kEnum_selfObject:
    {
      outArgument_outResultingValue = constinArgument_inSource ;
    }
    break ;
  case GALGAS_objectIR::kEnum_globalVariableReference:
    {
      const cEnumAssociatedValues_objectIR_globalVariableReference * extractPtr_3122 = (const cEnumAssociatedValues_objectIR_globalVariableReference *) (constinArgument_inSource.unsafePointer ()) ;
      const GALGAS_unifiedTypeMap_2D_proxy extractedValue_type = extractPtr_3122->mAssociatedValue0 ;
      const GALGAS_lstring extractedValue_name = extractPtr_3122->mAssociatedValue1 ;
      {
      routine_getNewTempVariable (extractedValue_type, extractedValue_name.getter_location (SOURCE_FILE ("intermediate-load-store.galgas", 62)), ioArgument_ioTemporaries, outArgument_outResultingValue, inCompiler  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 62)) ;
      }
      {
      extensionSetter_appendLoadGlobalVariable (ioObject, outArgument_outResultingValue, extractedValue_name.getter_string (SOURCE_FILE ("intermediate-load-store.galgas", 65)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 63)) ;
      }
    }
    break ;
  case GALGAS_objectIR::kEnum_localVariableReference:
    {
      const cEnumAssociatedValues_objectIR_localVariableReference * extractPtr_3352 = (const cEnumAssociatedValues_objectIR_localVariableReference *) (constinArgument_inSource.unsafePointer ()) ;
      const GALGAS_unifiedTypeMap_2D_proxy extractedValue_type = extractPtr_3352->mAssociatedValue0 ;
      const GALGAS_lstring extractedValue_name = extractPtr_3352->mAssociatedValue1 ;
      {
      routine_getNewTempVariable (extractedValue_type, extractedValue_name.getter_location (SOURCE_FILE ("intermediate-load-store.galgas", 69)), ioArgument_ioTemporaries, outArgument_outResultingValue, inCompiler  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 69)) ;
      }
      {
      extensionSetter_appendLoadLocalVariable (ioObject, outArgument_outResultingValue, extractedValue_name.getter_string (SOURCE_FILE ("intermediate-load-store.galgas", 72)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 70)) ;
      }
    }
    break ;
  case GALGAS_objectIR::kEnum_temporaryReference:
    {
      const cEnumAssociatedValues_objectIR_temporaryReference * extractPtr_3613 = (const cEnumAssociatedValues_objectIR_temporaryReference *) (constinArgument_inSource.unsafePointer ()) ;
      const GALGAS_unifiedTypeMap_2D_proxy extractedValue_type = extractPtr_3613->mAssociatedValue0 ;
      const GALGAS_lstring extractedValue_llvmName = extractPtr_3613->mAssociatedValue1 ;
      const GALGAS_bool extractedValue_volatile = extractPtr_3613->mAssociatedValue3 ;
      {
      routine_getNewTempVariable (extractedValue_type, extractedValue_llvmName.getter_location (SOURCE_FILE ("intermediate-load-store.galgas", 76)), ioArgument_ioTemporaries, outArgument_outResultingValue, inCompiler  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 76)) ;
      }
      {
      extensionSetter_appendLoadFromTemporaryReference (ioObject, outArgument_outResultingValue, extractedValue_llvmName.getter_string (SOURCE_FILE ("intermediate-load-store.galgas", 79)), extractedValue_volatile, inCompiler COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 77)) ;
      }
    }
    break ;
  case GALGAS_objectIR::kEnum_registerReference:
    {
      const cEnumAssociatedValues_objectIR_registerReference * extractPtr_3993 = (const cEnumAssociatedValues_objectIR_registerReference *) (constinArgument_inSource.unsafePointer ()) ;
      const GALGAS_unifiedTypeMap_2D_proxy extractedValue_type = extractPtr_3993->mAssociatedValue0 ;
      const GALGAS_lstring extractedValue_registerName = extractPtr_3993->mAssociatedValue1 ;
      const GALGAS_bigint extractedValue_address = extractPtr_3993->mAssociatedValue4 ;
      const GALGAS_uint extractedValue_arraySize = extractPtr_3993->mAssociatedValue6 ;
      const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, extractedValue_arraySize.objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_2) {
        TC_Array <C_FixItDescription> fixItArray3 ;
        inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("register array requires subscripting"), fixItArray3  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 84)) ;
        outArgument_outResultingValue.drop () ; // Release error dropped variable
      }else if (kBoolFalse == test_2) {
        {
        routine_getNewTempVariable (extractedValue_type, extractedValue_registerName.getter_location (SOURCE_FILE ("intermediate-load-store.galgas", 86)), ioArgument_ioTemporaries, outArgument_outResultingValue, inCompiler  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 86)) ;
        }
        {
        extensionSetter_appendLoadVolatileRegister (ioObject, outArgument_outResultingValue, extractedValue_address, inCompiler COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 87)) ;
        }
      }
    }
    break ;
  case GALGAS_objectIR::kEnum_property:
    {
      const cEnumAssociatedValues_objectIR_property * extractPtr_4245 = (const cEnumAssociatedValues_objectIR_property *) (constinArgument_inSource.unsafePointer ()) ;
      const GALGAS_unifiedTypeMap_2D_proxy extractedValue_type = extractPtr_4245->mAssociatedValue0 ;
      const GALGAS_lstring extractedValue_plmName = extractPtr_4245->mAssociatedValue1 ;
      const GALGAS_uint extractedValue_index = extractPtr_4245->mAssociatedValue2 ;
      {
      routine_getNewTempVariable (extractedValue_type, extractedValue_plmName.getter_location (SOURCE_FILE ("intermediate-load-store.galgas", 94)), ioArgument_ioTemporaries, outArgument_outResultingValue, inCompiler  COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 94)) ;
      }
      {
      extensionSetter_appendGetPropertyReference (ioObject, outArgument_outResultingValue, constinArgument_inSource, extractedValue_plmName.getter_string (SOURCE_FILE ("intermediate-load-store.galgas", 98)), extractedValue_index.getter_string (SOURCE_FILE ("intermediate-load-store.galgas", 99)), inCompiler COMMA_SOURCE_FILE ("intermediate-load-store.galgas", 95)) ;
      }
    }
    break ;
  case GALGAS_objectIR::kEnum_literalInteger:
    {
      outArgument_outResultingValue = constinArgument_inSource ;
    }
    break ;
  case GALGAS_objectIR::kEnum_llvmTemporaryValue:
    {
      outArgument_outResultingValue = constinArgument_inSource ;
    }
    break ;
  case GALGAS_objectIR::kEnum_llvmStructureConstant:
    {
      outArgument_outResultingValue = constinArgument_inSource ;
    }
    break ;
  case GALGAS_objectIR::kEnum_literalString:
    {
      outArgument_outResultingValue = constinArgument_inSource ;
    }
    break ;
  case GALGAS_objectIR::kEnum_zero:
    {
      outArgument_outResultingValue = constinArgument_inSource ;
    }
    break ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Extension method '@instructionListIR appendGetPropertyReference'                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendGetPropertyReference (GALGAS_instructionListIR & ioObject,
                                                 const GALGAS_objectIR constinArgument_inTarget,
                                                 const GALGAS_objectIR constinArgument_inSource,
                                                 const GALGAS_string constinArgument_inPLMname,
                                                 const GALGAS_string constinArgument_inPropertyIndex,
                                                 C_Compiler * /* inCompiler */
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_getPropertyReferenceIR::constructor_new (constinArgument_inTarget, constinArgument_inSource, constinArgument_inPLMname, constinArgument_inPropertyIndex  COMMA_SOURCE_FILE ("intermediate-get-property-reference.galgas", 8))  COMMA_SOURCE_FILE ("intermediate-get-property-reference.galgas", 8)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                        Extension method '@instructionListIR appendPropertyReferenceFromSelf'                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendPropertyReferenceFromSelf (GALGAS_instructionListIR & ioObject,
                                                      const GALGAS_objectIR constinArgument_inTarget,
                                                      const GALGAS_unifiedTypeMap_2D_proxy constinArgument_inSelfType,
                                                      const GALGAS_string constinArgument_inPropertyName,
                                                      const GALGAS_uint constinArgument_inPropertyIndex,
                                                      C_Compiler * inCompiler
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, constinArgument_inSelfType.objectCompare (GALGAS_unifiedTypeMap_2D_proxy::constructor_null (SOURCE_FILE ("intermediate-get-element-ptr-from-self.galgas", 9)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    TC_Array <C_FixItDescription> fixItArray1 ;
    inCompiler->emitSemanticError (GALGAS_location::constructor_nowhere (SOURCE_FILE ("intermediate-get-element-ptr-from-self.galgas", 10)), GALGAS_string ("<<INTERNAL ERROR>>"), fixItArray1  COMMA_SOURCE_FILE ("intermediate-get-element-ptr-from-self.galgas", 10)) ;
  }
  ioObject.addAssign_operation (GALGAS_getPropertyReferenceFromSelfIR::constructor_new (constinArgument_inTarget, constinArgument_inSelfType, constinArgument_inPropertyName, constinArgument_inPropertyIndex  COMMA_SOURCE_FILE ("intermediate-get-element-ptr-from-self.galgas", 12))  COMMA_SOURCE_FILE ("intermediate-get-element-ptr-from-self.galgas", 12)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                             Extension method '@instructionListIR appendSelectOperation'                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendSelectOperation (GALGAS_instructionListIR & ioObject,
                                            const GALGAS_objectIR constinArgument_inTargetValue,
                                            const GALGAS_objectIR constinArgument_in_5F_if_5F_variable,
                                            const GALGAS_objectIR constinArgument_in_5F_then_5F_variable,
                                            const GALGAS_objectIR constinArgument_in_5F_else_5F_variable,
                                            C_Compiler * /* inCompiler */
                                            COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_selectInstructionIR::constructor_new (constinArgument_inTargetValue, constinArgument_in_5F_if_5F_variable, constinArgument_in_5F_then_5F_variable, constinArgument_in_5F_else_5F_variable  COMMA_SOURCE_FILE ("intermediate-select-instruction.galgas", 8))  COMMA_SOURCE_FILE ("intermediate-select-instruction.galgas", 8)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                Extension method '@instructionListIR testArrayIndex'                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_testArrayIndex (GALGAS_instructionListIR & ioObject,
                                     const GALGAS_objectIR constinArgument_inIndex,
                                     const GALGAS_location constinArgument_inErrorLocation,
                                     const GALGAS_bigint constinArgument_inSize,
                                     GALGAS_bool & outArgument_outGeneratePanicInstruction,
                                     C_Compiler * inCompiler
                                     COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outGeneratePanicInstruction.drop () ; // Release 'out' argument
  GALGAS_bigint var_max_205 ;
  GALGAS_bool var_isUnsigned_230 ;
  GALGAS_bigint joker_191 ; // Joker input parameter
  GALGAS_uint joker_232_1 ; // Joker input parameter
  extensionGetter_kind (constinArgument_inIndex, inCompiler COMMA_SOURCE_FILE ("intermediate-test-array-index.galgas", 8)).method_integer (joker_191, var_max_205, var_isUnsigned_230, joker_232_1, inCompiler COMMA_SOURCE_FILE ("intermediate-test-array-index.galgas", 8)) ;
  GALGAS_bool test_0 = var_isUnsigned_230.operator_not (SOURCE_FILE ("intermediate-test-array-index.galgas", 9)) ;
  if (kBoolTrue != test_0.boolEnum ()) {
    test_0 = GALGAS_bool (kIsSupOrEqual, var_max_205.objectCompare (constinArgument_inSize)) ;
  }
  outArgument_outGeneratePanicInstruction = test_0 ;
  ioObject.addAssign_operation (GALGAS_testArrayIndexIR::constructor_new (constinArgument_inIndex, constinArgument_inErrorLocation, constinArgument_inSize  COMMA_SOURCE_FILE ("intermediate-test-array-index.galgas", 10))  COMMA_SOURCE_FILE ("intermediate-test-array-index.galgas", 10)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                             Extension method '@instructionListIR appendUpperBoundCheck'                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendUpperBoundCheck (GALGAS_instructionListIR & ioObject,
                                            const GALGAS_objectIR constinArgument_inSource,
                                            const GALGAS_bigint constinArgument_inUpperBoundPlusOne,
                                            const GALGAS_uint constinArgument_inPanicCode,
                                            const GALGAS_location constinArgument_inLocation,
                                            C_Compiler * /* inCompiler */
                                            COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_upperBoundCheckIR::constructor_new (constinArgument_inSource, constinArgument_inUpperBoundPlusOne, constinArgument_inPanicCode, constinArgument_inLocation  COMMA_SOURCE_FILE ("intermediate-upper-bound-check.galgas", 8))  COMMA_SOURCE_FILE ("intermediate-upper-bound-check.galgas", 8)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            Extension method '@instructionListIR appendSourceLineComment'                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionSetter_appendSourceLineComment (GALGAS_instructionListIR & ioObject,
                                              const GALGAS_location constinArgument_inSourceLocation,
                                              C_Compiler * /* inCompiler */
                                              COMMA_UNUSED_LOCATION_ARGS) {
  ioObject.addAssign_operation (GALGAS_sourceLocationIR::constructor_new (constinArgument_inSourceLocation  COMMA_SOURCE_FILE ("intermediate-comment-source-line.galgas", 3))  COMMA_SOURCE_FILE ("intermediate-comment-source-line.galgas", 3)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_sourceLocationIR::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_sourceLocationIR * p = (const cPtr_sourceLocationIR *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_sourceLocationIR) ;
  if (kOperandEqual == result) {
    result = mAttribute_mSourceLocation.objectCompare (p->mAttribute_mSourceLocation) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_sourceLocationIR::objectCompare (const GALGAS_sourceLocationIR & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sourceLocationIR::GALGAS_sourceLocationIR (void) :
GALGAS_abstractInstructionIR () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sourceLocationIR GALGAS_sourceLocationIR::constructor_default (LOCATION_ARGS) {
  return GALGAS_sourceLocationIR::constructor_new (GALGAS_location::constructor_nowhere (HERE)
                                                   COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sourceLocationIR::GALGAS_sourceLocationIR (const cPtr_sourceLocationIR * inSourcePtr) :
GALGAS_abstractInstructionIR (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_sourceLocationIR) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sourceLocationIR GALGAS_sourceLocationIR::constructor_new (const GALGAS_location & inAttribute_mSourceLocation
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_sourceLocationIR result ;
  if (inAttribute_mSourceLocation.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_sourceLocationIR (inAttribute_mSourceLocation COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_sourceLocationIR::getter_mSourceLocation (UNUSED_LOCATION_ARGS) const {
  GALGAS_location result ;
  if (NULL != mObjectPtr) {
    const cPtr_sourceLocationIR * p = (const cPtr_sourceLocationIR *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_sourceLocationIR) ;
    result = p->mAttribute_mSourceLocation ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cPtr_sourceLocationIR::getter_mSourceLocation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSourceLocation ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                      Pointer class for @sourceLocationIR class                                      *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_sourceLocationIR::cPtr_sourceLocationIR (const GALGAS_location & in_mSourceLocation
                                              COMMA_LOCATION_ARGS) :
cPtr_abstractInstructionIR (THERE),
mAttribute_mSourceLocation (in_mSourceLocation) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_sourceLocationIR::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_sourceLocationIR ;
}

void cPtr_sourceLocationIR::description (C_String & ioString,
                                         const int32_t inIndentation) const {
  ioString << "[@sourceLocationIR:" ;
  mAttribute_mSourceLocation.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_sourceLocationIR::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_sourceLocationIR (mAttribute_mSourceLocation COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @sourceLocationIR type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_sourceLocationIR ("sourceLocationIR",
                                         & kTypeDescriptor_GALGAS_abstractInstructionIR) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_sourceLocationIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_sourceLocationIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_sourceLocationIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_sourceLocationIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sourceLocationIR GALGAS_sourceLocationIR::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_sourceLocationIR result ;
  const GALGAS_sourceLocationIR * p = (const GALGAS_sourceLocationIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_sourceLocationIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("sourceLocationIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessibleEntities::GALGAS_accessibleEntities (void) :
mAttribute_mRoutineSet (),
mAttribute_mGuardSet (),
mAttribute_mSectionSet (),
mAttribute_mGlobalVariableSet (),
mAttribute_mTaskVariableSet () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessibleEntities::~ GALGAS_accessibleEntities (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessibleEntities::GALGAS_accessibleEntities (const GALGAS_stringset & inOperand0,
                                                      const GALGAS_stringset & inOperand1,
                                                      const GALGAS_stringset & inOperand2,
                                                      const GALGAS_stringset & inOperand3,
                                                      const GALGAS_stringset & inOperand4) :
mAttribute_mRoutineSet (inOperand0),
mAttribute_mGuardSet (inOperand1),
mAttribute_mSectionSet (inOperand2),
mAttribute_mGlobalVariableSet (inOperand3),
mAttribute_mTaskVariableSet (inOperand4) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessibleEntities GALGAS_accessibleEntities::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_accessibleEntities (GALGAS_stringset::constructor_emptySet (HERE),
                                    GALGAS_stringset::constructor_emptySet (HERE),
                                    GALGAS_stringset::constructor_emptySet (HERE),
                                    GALGAS_stringset::constructor_emptySet (HERE),
                                    GALGAS_stringset::constructor_emptySet (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessibleEntities GALGAS_accessibleEntities::constructor_new (const GALGAS_stringset & inOperand0,
                                                                      const GALGAS_stringset & inOperand1,
                                                                      const GALGAS_stringset & inOperand2,
                                                                      const GALGAS_stringset & inOperand3,
                                                                      const GALGAS_stringset & inOperand4 
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_accessibleEntities result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_accessibleEntities (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_accessibleEntities::objectCompare (const GALGAS_accessibleEntities & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mRoutineSet.objectCompare (inOperand.mAttribute_mRoutineSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mGuardSet.objectCompare (inOperand.mAttribute_mGuardSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSectionSet.objectCompare (inOperand.mAttribute_mSectionSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mGlobalVariableSet.objectCompare (inOperand.mAttribute_mGlobalVariableSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTaskVariableSet.objectCompare (inOperand.mAttribute_mTaskVariableSet) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_accessibleEntities::isValid (void) const {
  return mAttribute_mRoutineSet.isValid () && mAttribute_mGuardSet.isValid () && mAttribute_mSectionSet.isValid () && mAttribute_mGlobalVariableSet.isValid () && mAttribute_mTaskVariableSet.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_accessibleEntities::drop (void) {
  mAttribute_mRoutineSet.drop () ;
  mAttribute_mGuardSet.drop () ;
  mAttribute_mSectionSet.drop () ;
  mAttribute_mGlobalVariableSet.drop () ;
  mAttribute_mTaskVariableSet.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_accessibleEntities::description (C_String & ioString,
                                             const int32_t inIndentation) const {
  ioString << "<struct @accessibleEntities:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mRoutineSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mGuardSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSectionSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mGlobalVariableSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTaskVariableSet.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset GALGAS_accessibleEntities::getter_mRoutineSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRoutineSet ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset GALGAS_accessibleEntities::getter_mGuardSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGuardSet ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset GALGAS_accessibleEntities::getter_mSectionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSectionSet ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset GALGAS_accessibleEntities::getter_mGlobalVariableSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGlobalVariableSet ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset GALGAS_accessibleEntities::getter_mTaskVariableSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTaskVariableSet ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @accessibleEntities type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_accessibleEntities ("accessibleEntities",
                                           NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_accessibleEntities::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_accessibleEntities ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_accessibleEntities::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_accessibleEntities (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessibleEntities GALGAS_accessibleEntities::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_accessibleEntities result ;
  const GALGAS_accessibleEntities * p = (const GALGAS_accessibleEntities *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_accessibleEntities *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("accessibleEntities", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                     Abstract extension method '@abstractInstructionIR enterAccessibleEntities'                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <extensionMethodSignature_abstractInstructionIR_enterAccessibleEntities> gExtensionMethodTable_abstractInstructionIR_enterAccessibleEntities ;

//---------------------------------------------------------------------------------------------------------------------*

void enterExtensionMethod_enterAccessibleEntities (const int32_t inClassIndex,
                                                   extensionMethodSignature_abstractInstructionIR_enterAccessibleEntities inMethod) {
  gExtensionMethodTable_abstractInstructionIR_enterAccessibleEntities.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeExtensionMethod_abstractInstructionIR_enterAccessibleEntities (void) {
  gExtensionMethodTable_abstractInstructionIR_enterAccessibleEntities.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractInstructionIR_enterAccessibleEntities (NULL,
                                                                          freeExtensionMethod_abstractInstructionIR_enterAccessibleEntities) ;

//---------------------------------------------------------------------------------------------------------------------*

void callExtensionMethod_enterAccessibleEntities (const cPtr_abstractInstructionIR * inObject,
                                                  GALGAS_accessibleEntities & io_ioAccessibleEntities,
                                                  GALGAS_uint & io_ioMaxBranchOfOnInstructions,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractInstructionIR) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    extensionMethodSignature_abstractInstructionIR_enterAccessibleEntities f = NULL ;
    if (classIndex < gExtensionMethodTable_abstractInstructionIR_enterAccessibleEntities.count ()) {
      f = gExtensionMethodTable_abstractInstructionIR_enterAccessibleEntities (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
      const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
      while ((NULL == f) && (NULL != p)) {
        if (p->mSlotID < gExtensionMethodTable_abstractInstructionIR_enterAccessibleEntities.count ()) {
          f = gExtensionMethodTable_abstractInstructionIR_enterAccessibleEntities (p->mSlotID COMMA_HERE) ;
        }
        p = p->mSuperclassDescriptor ;
      }
      gExtensionMethodTable_abstractInstructionIR_enterAccessibleEntities.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, io_ioAccessibleEntities, io_ioMaxBranchOfOnInstructions, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            Extension method '@instructionListIR enterAccessibleEntities'                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void extensionMethod_enterAccessibleEntities (const GALGAS_instructionListIR inObject,
                                              GALGAS_accessibleEntities & ioArgument_ioAccessibleEntities,
                                              GALGAS_uint & ioArgument_ioMaxBranchOfOnInstructions,
                                              C_Compiler * inCompiler
                                              COMMA_UNUSED_LOCATION_ARGS) {
  const GALGAS_instructionListIR temp_0 = inObject ;
  cEnumerator_instructionListIR enumerator_1321 (temp_0, kEnumeration_up) ;
  while (enumerator_1321.hasCurrentObject ()) {
    callExtensionMethod_enterAccessibleEntities ((const cPtr_abstractInstructionIR *) enumerator_1321.current_mInstructionGeneration (HERE).ptr (), ioArgument_ioAccessibleEntities, ioArgument_ioMaxBranchOfOnInstructions, inCompiler COMMA_SOURCE_FILE ("code-optimisation.galgas", 25)) ;
    enumerator_1321.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_generationAdds::GALGAS_generationAdds (void) :
mAttribute_mUniqueIndex (),
mAttribute_mExternFunctionDeclarationSet (),
mAttribute_mStaticStringMap (),
mAttribute_mUsesGuards () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_generationAdds::~ GALGAS_generationAdds (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_generationAdds::GALGAS_generationAdds (const GALGAS_uint & inOperand0,
                                              const GALGAS_stringset & inOperand1,
                                              const GALGAS_staticStringMap & inOperand2,
                                              const GALGAS_bool & inOperand3) :
mAttribute_mUniqueIndex (inOperand0),
mAttribute_mExternFunctionDeclarationSet (inOperand1),
mAttribute_mStaticStringMap (inOperand2),
mAttribute_mUsesGuards (inOperand3) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_generationAdds GALGAS_generationAdds::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_generationAdds (GALGAS_uint::constructor_default (HERE),
                                GALGAS_stringset::constructor_emptySet (HERE),
                                GALGAS_staticStringMap::constructor_emptyMap (HERE),
                                GALGAS_bool::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_generationAdds GALGAS_generationAdds::constructor_new (const GALGAS_uint & inOperand0,
                                                              const GALGAS_stringset & inOperand1,
                                                              const GALGAS_staticStringMap & inOperand2,
                                                              const GALGAS_bool & inOperand3 
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_generationAdds result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_generationAdds (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_generationAdds::objectCompare (const GALGAS_generationAdds & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mUniqueIndex.objectCompare (inOperand.mAttribute_mUniqueIndex) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mExternFunctionDeclarationSet.objectCompare (inOperand.mAttribute_mExternFunctionDeclarationSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mStaticStringMap.objectCompare (inOperand.mAttribute_mStaticStringMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mUsesGuards.objectCompare (inOperand.mAttribute_mUsesGuards) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_generationAdds::isValid (void) const {
  return mAttribute_mUniqueIndex.isValid () && mAttribute_mExternFunctionDeclarationSet.isValid () && mAttribute_mStaticStringMap.isValid () && mAttribute_mUsesGuards.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_generationAdds::drop (void) {
  mAttribute_mUniqueIndex.drop () ;
  mAttribute_mExternFunctionDeclarationSet.drop () ;
  mAttribute_mStaticStringMap.drop () ;
  mAttribute_mUsesGuards.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_generationAdds::description (C_String & ioString,
                                         const int32_t inIndentation) const {
  ioString << "<struct @generationAdds:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mUniqueIndex.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mExternFunctionDeclarationSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mStaticStringMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mUsesGuards.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_generationAdds::getter_mUniqueIndex (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mUniqueIndex ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset GALGAS_generationAdds::getter_mExternFunctionDeclarationSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mExternFunctionDeclarationSet ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_staticStringMap GALGAS_generationAdds::getter_mStaticStringMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mStaticStringMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_generationAdds::getter_mUsesGuards (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mUsesGuards ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @generationAdds type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_generationAdds ("generationAdds",
                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_generationAdds::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_generationAdds ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_generationAdds::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_generationAdds (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_generationAdds GALGAS_generationAdds::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_generationAdds result ;
  const GALGAS_generationAdds * p = (const GALGAS_generationAdds *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_generationAdds *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("generationAdds", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       Abstract extension method '@abstractInstructionIR llvmInstructionCode'                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <extensionMethodSignature_abstractInstructionIR_llvmInstructionCode> gExtensionMethodTable_abstractInstructionIR_llvmInstructionCode ;

//---------------------------------------------------------------------------------------------------------------------*

void enterExtensionMethod_llvmInstructionCode (const int32_t inClassIndex,
                                               extensionMethodSignature_abstractInstructionIR_llvmInstructionCode inMethod) {
  gExtensionMethodTable_abstractInstructionIR_llvmInstructionCode.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeExtensionMethod_abstractInstructionIR_llvmInstructionCode (void) {
  gExtensionMethodTable_abstractInstructionIR_llvmInstructionCode.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractInstructionIR_llvmInstructionCode (NULL,
                                                                      freeExtensionMethod_abstractInstructionIR_llvmInstructionCode) ;

//---------------------------------------------------------------------------------------------------------------------*

void callExtensionMethod_llvmInstructionCode (const cPtr_abstractInstructionIR * inObject,
                                              GALGAS_string & io_ioLLVMcode,
                                              const GALGAS_generationContext constin_inGenerationContext,
                                              GALGAS_generationAdds & io_ioGenerationAdds,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractInstructionIR) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    extensionMethodSignature_abstractInstructionIR_llvmInstructionCode f = NULL ;
    if (classIndex < gExtensionMethodTable_abstractInstructionIR_llvmInstructionCode.count ()) {
      f = gExtensionMethodTable_abstractInstructionIR_llvmInstructionCode (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
      const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
      while ((NULL == f) && (NULL != p)) {
        if (p->mSlotID < gExtensionMethodTable_abstractInstructionIR_llvmInstructionCode.count ()) {
          f = gExtensionMethodTable_abstractInstructionIR_llvmInstructionCode (p->mSlotID COMMA_HERE) ;
        }
        p = p->mSuperclassDescriptor ;
      }
      gExtensionMethodTable_abstractInstructionIR_llvmInstructionCode.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, io_ioLLVMcode, constin_inGenerationContext, io_ioGenerationAdds, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_generationContext::GALGAS_generationContext (void) :
mAttribute_mPanicCodeLLVMType (),
mAttribute_mPanicLineLLVMType (),
mAttribute_mGlobalTaskVariableList (),
mAttribute_mAvailableInterruptMap () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_generationContext::~ GALGAS_generationContext (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_generationContext::GALGAS_generationContext (const GALGAS_string & inOperand0,
                                                    const GALGAS_string & inOperand1,
                                                    const GALGAS_globalTaskVariableList & inOperand2,
                                                    const GALGAS_availableInterruptMap & inOperand3) :
mAttribute_mPanicCodeLLVMType (inOperand0),
mAttribute_mPanicLineLLVMType (inOperand1),
mAttribute_mGlobalTaskVariableList (inOperand2),
mAttribute_mAvailableInterruptMap (inOperand3) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_generationContext GALGAS_generationContext::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_generationContext (GALGAS_string::constructor_default (HERE),
                                   GALGAS_string::constructor_default (HERE),
                                   GALGAS_globalTaskVariableList::constructor_emptyList (HERE),
                                   GALGAS_availableInterruptMap::constructor_emptyMap (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_generationContext GALGAS_generationContext::constructor_new (const GALGAS_string & inOperand0,
                                                                    const GALGAS_string & inOperand1,
                                                                    const GALGAS_globalTaskVariableList & inOperand2,
                                                                    const GALGAS_availableInterruptMap & inOperand3 
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_generationContext result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_generationContext (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_generationContext::objectCompare (const GALGAS_generationContext & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mPanicCodeLLVMType.objectCompare (inOperand.mAttribute_mPanicCodeLLVMType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPanicLineLLVMType.objectCompare (inOperand.mAttribute_mPanicLineLLVMType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mGlobalTaskVariableList.objectCompare (inOperand.mAttribute_mGlobalTaskVariableList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAvailableInterruptMap.objectCompare (inOperand.mAttribute_mAvailableInterruptMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_generationContext::isValid (void) const {
  return mAttribute_mPanicCodeLLVMType.isValid () && mAttribute_mPanicLineLLVMType.isValid () && mAttribute_mGlobalTaskVariableList.isValid () && mAttribute_mAvailableInterruptMap.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_generationContext::drop (void) {
  mAttribute_mPanicCodeLLVMType.drop () ;
  mAttribute_mPanicLineLLVMType.drop () ;
  mAttribute_mGlobalTaskVariableList.drop () ;
  mAttribute_mAvailableInterruptMap.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_generationContext::description (C_String & ioString,
                                            const int32_t inIndentation) const {
  ioString << "<struct @generationContext:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mPanicCodeLLVMType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPanicLineLLVMType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mGlobalTaskVariableList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAvailableInterruptMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_generationContext::getter_mPanicCodeLLVMType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPanicCodeLLVMType ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_generationContext::getter_mPanicLineLLVMType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPanicLineLLVMType ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList GALGAS_generationContext::getter_mGlobalTaskVariableList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGlobalTaskVariableList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_availableInterruptMap GALGAS_generationContext::getter_mAvailableInterruptMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAvailableInterruptMap ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @generationContext type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_generationContext ("generationContext",
                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_generationContext::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_generationContext ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_generationContext::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_generationContext (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_generationContext GALGAS_generationContext::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_generationContext result ;
  const GALGAS_generationContext * p = (const GALGAS_generationContext *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_generationContext *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("generationContext", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationListAST_2D_element::GALGAS_declarationListAST_2D_element (void) :
mAttribute_mDeclaration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationListAST_2D_element::~ GALGAS_declarationListAST_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationListAST_2D_element::GALGAS_declarationListAST_2D_element (const GALGAS_abstractDeclaration & inOperand0) :
mAttribute_mDeclaration (inOperand0) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationListAST_2D_element GALGAS_declarationListAST_2D_element::constructor_new (const GALGAS_abstractDeclaration & inOperand0 
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_declarationListAST_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_declarationListAST_2D_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_declarationListAST_2D_element::objectCompare (const GALGAS_declarationListAST_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mDeclaration.objectCompare (inOperand.mAttribute_mDeclaration) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_declarationListAST_2D_element::isValid (void) const {
  return mAttribute_mDeclaration.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declarationListAST_2D_element::drop (void) {
  mAttribute_mDeclaration.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declarationListAST_2D_element::description (C_String & ioString,
                                                        const int32_t inIndentation) const {
  ioString << "<struct @declarationListAST-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mDeclaration.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractDeclaration GALGAS_declarationListAST_2D_element::getter_mDeclaration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDeclaration ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @declarationListAST-element type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_declarationListAST_2D_element ("declarationListAST-element",
                                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_declarationListAST_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_declarationListAST_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_declarationListAST_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_declarationListAST_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationListAST_2D_element GALGAS_declarationListAST_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_declarationListAST_2D_element result ;
  const GALGAS_declarationListAST_2D_element * p = (const GALGAS_declarationListAST_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_declarationListAST_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("declarationListAST-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterFieldList_2D_element::GALGAS_controlRegisterFieldList_2D_element (void) :
mAttribute_mFieldBitCount (),
mAttribute_mFieldName () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterFieldList_2D_element::~ GALGAS_controlRegisterFieldList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterFieldList_2D_element::GALGAS_controlRegisterFieldList_2D_element (const GALGAS_uint & inOperand0,
                                                                                        const GALGAS_string & inOperand1) :
mAttribute_mFieldBitCount (inOperand0),
mAttribute_mFieldName (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterFieldList_2D_element GALGAS_controlRegisterFieldList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_controlRegisterFieldList_2D_element (GALGAS_uint::constructor_default (HERE),
                                                     GALGAS_string::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterFieldList_2D_element GALGAS_controlRegisterFieldList_2D_element::constructor_new (const GALGAS_uint & inOperand0,
                                                                                                        const GALGAS_string & inOperand1 
                                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_controlRegisterFieldList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_controlRegisterFieldList_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_controlRegisterFieldList_2D_element::objectCompare (const GALGAS_controlRegisterFieldList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mFieldBitCount.objectCompare (inOperand.mAttribute_mFieldBitCount) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFieldName.objectCompare (inOperand.mAttribute_mFieldName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_controlRegisterFieldList_2D_element::isValid (void) const {
  return mAttribute_mFieldBitCount.isValid () && mAttribute_mFieldName.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controlRegisterFieldList_2D_element::drop (void) {
  mAttribute_mFieldBitCount.drop () ;
  mAttribute_mFieldName.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controlRegisterFieldList_2D_element::description (C_String & ioString,
                                                              const int32_t inIndentation) const {
  ioString << "<struct @controlRegisterFieldList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mFieldBitCount.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFieldName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_controlRegisterFieldList_2D_element::getter_mFieldBitCount (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFieldBitCount ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_controlRegisterFieldList_2D_element::getter_mFieldName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFieldName ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       @controlRegisterFieldList-element type                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controlRegisterFieldList_2D_element ("controlRegisterFieldList-element",
                                                            NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controlRegisterFieldList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controlRegisterFieldList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controlRegisterFieldList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controlRegisterFieldList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterFieldList_2D_element GALGAS_controlRegisterFieldList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_controlRegisterFieldList_2D_element result ;
  const GALGAS_controlRegisterFieldList_2D_element * p = (const GALGAS_controlRegisterFieldList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controlRegisterFieldList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("controlRegisterFieldList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_taskSortedListIR_2D_element::GALGAS_taskSortedListIR_2D_element (void) :
mAttribute_mTaskName (),
mAttribute_mPriority (),
mAttribute_mStackSize (),
mAttribute_mAllocaList (),
mAttribute_mInitInstructionListIR () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_taskSortedListIR_2D_element::~ GALGAS_taskSortedListIR_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_taskSortedListIR_2D_element::GALGAS_taskSortedListIR_2D_element (const GALGAS_string & inOperand0,
                                                                        const GALGAS_bigint & inOperand1,
                                                                        const GALGAS_bigint & inOperand2,
                                                                        const GALGAS_allocaList & inOperand3,
                                                                        const GALGAS_instructionListIR & inOperand4) :
mAttribute_mTaskName (inOperand0),
mAttribute_mPriority (inOperand1),
mAttribute_mStackSize (inOperand2),
mAttribute_mAllocaList (inOperand3),
mAttribute_mInitInstructionListIR (inOperand4) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_taskSortedListIR_2D_element GALGAS_taskSortedListIR_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_taskSortedListIR_2D_element (GALGAS_string::constructor_default (HERE),
                                             GALGAS_bigint::constructor_zero (HERE),
                                             GALGAS_bigint::constructor_zero (HERE),
                                             GALGAS_allocaList::constructor_emptyList (HERE),
                                             GALGAS_instructionListIR::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_taskSortedListIR_2D_element GALGAS_taskSortedListIR_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                        const GALGAS_bigint & inOperand1,
                                                                                        const GALGAS_bigint & inOperand2,
                                                                                        const GALGAS_allocaList & inOperand3,
                                                                                        const GALGAS_instructionListIR & inOperand4 
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_taskSortedListIR_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_taskSortedListIR_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_taskSortedListIR_2D_element::objectCompare (const GALGAS_taskSortedListIR_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mTaskName.objectCompare (inOperand.mAttribute_mTaskName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPriority.objectCompare (inOperand.mAttribute_mPriority) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mStackSize.objectCompare (inOperand.mAttribute_mStackSize) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllocaList.objectCompare (inOperand.mAttribute_mAllocaList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInitInstructionListIR.objectCompare (inOperand.mAttribute_mInitInstructionListIR) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_taskSortedListIR_2D_element::isValid (void) const {
  return mAttribute_mTaskName.isValid () && mAttribute_mPriority.isValid () && mAttribute_mStackSize.isValid () && mAttribute_mAllocaList.isValid () && mAttribute_mInitInstructionListIR.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_taskSortedListIR_2D_element::drop (void) {
  mAttribute_mTaskName.drop () ;
  mAttribute_mPriority.drop () ;
  mAttribute_mStackSize.drop () ;
  mAttribute_mAllocaList.drop () ;
  mAttribute_mInitInstructionListIR.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_taskSortedListIR_2D_element::description (C_String & ioString,
                                                      const int32_t inIndentation) const {
  ioString << "<struct @taskSortedListIR-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mTaskName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPriority.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mStackSize.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllocaList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInitInstructionListIR.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_taskSortedListIR_2D_element::getter_mTaskName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTaskName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bigint GALGAS_taskSortedListIR_2D_element::getter_mPriority (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPriority ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bigint GALGAS_taskSortedListIR_2D_element::getter_mStackSize (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mStackSize ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allocaList GALGAS_taskSortedListIR_2D_element::getter_mAllocaList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllocaList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR GALGAS_taskSortedListIR_2D_element::getter_mInitInstructionListIR (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInitInstructionListIR ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @taskSortedListIR-element type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_taskSortedListIR_2D_element ("taskSortedListIR-element",
                                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_taskSortedListIR_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_taskSortedListIR_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_taskSortedListIR_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_taskSortedListIR_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_taskSortedListIR_2D_element GALGAS_taskSortedListIR_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_taskSortedListIR_2D_element result ;
  const GALGAS_taskSortedListIR_2D_element * p = (const GALGAS_taskSortedListIR_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_taskSortedListIR_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("taskSortedListIR-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bootListIR_2D_element::GALGAS_bootListIR_2D_element (void) :
mAttribute_mBootIndex (),
mAttribute_mInitLocation (),
mAttribute_mAllocaList (),
mAttribute_mInstructionListIR (),
mAttribute_mEndOfInitLocation () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bootListIR_2D_element::~ GALGAS_bootListIR_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bootListIR_2D_element::GALGAS_bootListIR_2D_element (const GALGAS_bigint & inOperand0,
                                                            const GALGAS_location & inOperand1,
                                                            const GALGAS_allocaList & inOperand2,
                                                            const GALGAS_instructionListIR & inOperand3,
                                                            const GALGAS_location & inOperand4) :
mAttribute_mBootIndex (inOperand0),
mAttribute_mInitLocation (inOperand1),
mAttribute_mAllocaList (inOperand2),
mAttribute_mInstructionListIR (inOperand3),
mAttribute_mEndOfInitLocation (inOperand4) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bootListIR_2D_element GALGAS_bootListIR_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_bootListIR_2D_element (GALGAS_bigint::constructor_zero (HERE),
                                       GALGAS_location::constructor_nowhere (HERE),
                                       GALGAS_allocaList::constructor_emptyList (HERE),
                                       GALGAS_instructionListIR::constructor_emptyList (HERE),
                                       GALGAS_location::constructor_nowhere (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bootListIR_2D_element GALGAS_bootListIR_2D_element::constructor_new (const GALGAS_bigint & inOperand0,
                                                                            const GALGAS_location & inOperand1,
                                                                            const GALGAS_allocaList & inOperand2,
                                                                            const GALGAS_instructionListIR & inOperand3,
                                                                            const GALGAS_location & inOperand4 
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bootListIR_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_bootListIR_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_bootListIR_2D_element::objectCompare (const GALGAS_bootListIR_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mBootIndex.objectCompare (inOperand.mAttribute_mBootIndex) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInitLocation.objectCompare (inOperand.mAttribute_mInitLocation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllocaList.objectCompare (inOperand.mAttribute_mAllocaList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInstructionListIR.objectCompare (inOperand.mAttribute_mInstructionListIR) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEndOfInitLocation.objectCompare (inOperand.mAttribute_mEndOfInitLocation) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_bootListIR_2D_element::isValid (void) const {
  return mAttribute_mBootIndex.isValid () && mAttribute_mInitLocation.isValid () && mAttribute_mAllocaList.isValid () && mAttribute_mInstructionListIR.isValid () && mAttribute_mEndOfInitLocation.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_bootListIR_2D_element::drop (void) {
  mAttribute_mBootIndex.drop () ;
  mAttribute_mInitLocation.drop () ;
  mAttribute_mAllocaList.drop () ;
  mAttribute_mInstructionListIR.drop () ;
  mAttribute_mEndOfInitLocation.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_bootListIR_2D_element::description (C_String & ioString,
                                                const int32_t inIndentation) const {
  ioString << "<struct @bootListIR-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mBootIndex.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInitLocation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllocaList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInstructionListIR.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEndOfInitLocation.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bigint GALGAS_bootListIR_2D_element::getter_mBootIndex (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBootIndex ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_bootListIR_2D_element::getter_mInitLocation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInitLocation ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allocaList GALGAS_bootListIR_2D_element::getter_mAllocaList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllocaList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR GALGAS_bootListIR_2D_element::getter_mInstructionListIR (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInstructionListIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_bootListIR_2D_element::getter_mEndOfInitLocation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEndOfInitLocation ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @bootListIR-element type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_bootListIR_2D_element ("bootListIR-element",
                                              NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_bootListIR_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_bootListIR_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_bootListIR_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_bootListIR_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bootListIR_2D_element GALGAS_bootListIR_2D_element::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_bootListIR_2D_element result ;
  const GALGAS_bootListIR_2D_element * p = (const GALGAS_bootListIR_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_bootListIR_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("bootListIR-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListAST_2D_element::GALGAS_instructionListAST_2D_element (void) :
mAttribute_mInstructionLocation (),
mAttribute_mInstruction () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListAST_2D_element::~ GALGAS_instructionListAST_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListAST_2D_element::GALGAS_instructionListAST_2D_element (const GALGAS_location & inOperand0,
                                                                            const GALGAS_instructionAST & inOperand1) :
mAttribute_mInstructionLocation (inOperand0),
mAttribute_mInstruction (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListAST_2D_element GALGAS_instructionListAST_2D_element::constructor_new (const GALGAS_location & inOperand0,
                                                                                            const GALGAS_instructionAST & inOperand1 
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_instructionListAST_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_instructionListAST_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_instructionListAST_2D_element::objectCompare (const GALGAS_instructionListAST_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mInstructionLocation.objectCompare (inOperand.mAttribute_mInstructionLocation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInstruction.objectCompare (inOperand.mAttribute_mInstruction) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_instructionListAST_2D_element::isValid (void) const {
  return mAttribute_mInstructionLocation.isValid () && mAttribute_mInstruction.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_instructionListAST_2D_element::drop (void) {
  mAttribute_mInstructionLocation.drop () ;
  mAttribute_mInstruction.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_instructionListAST_2D_element::description (C_String & ioString,
                                                        const int32_t inIndentation) const {
  ioString << "<struct @instructionListAST-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mInstructionLocation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInstruction.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_instructionListAST_2D_element::getter_mInstructionLocation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInstructionLocation ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionAST GALGAS_instructionListAST_2D_element::getter_mInstruction (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInstruction ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @instructionListAST-element type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_instructionListAST_2D_element ("instructionListAST-element",
                                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_instructionListAST_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_instructionListAST_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_instructionListAST_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_instructionListAST_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListAST_2D_element GALGAS_instructionListAST_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_instructionListAST_2D_element result ;
  const GALGAS_instructionListAST_2D_element * p = (const GALGAS_instructionListAST_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_instructionListAST_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("instructionListAST-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_switchCaseList_2D_element::GALGAS_switchCaseList_2D_element (void) :
mAttribute_mCaseIdentifiers (),
mAttribute_mCaseInstructionList () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_switchCaseList_2D_element::~ GALGAS_switchCaseList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_switchCaseList_2D_element::GALGAS_switchCaseList_2D_element (const GALGAS_lstringlist & inOperand0,
                                                                    const GALGAS_instructionListAST & inOperand1) :
mAttribute_mCaseIdentifiers (inOperand0),
mAttribute_mCaseInstructionList (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_switchCaseList_2D_element GALGAS_switchCaseList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_switchCaseList_2D_element (GALGAS_lstringlist::constructor_emptyList (HERE),
                                           GALGAS_instructionListAST::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_switchCaseList_2D_element GALGAS_switchCaseList_2D_element::constructor_new (const GALGAS_lstringlist & inOperand0,
                                                                                    const GALGAS_instructionListAST & inOperand1 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_switchCaseList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_switchCaseList_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_switchCaseList_2D_element::objectCompare (const GALGAS_switchCaseList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mCaseIdentifiers.objectCompare (inOperand.mAttribute_mCaseIdentifiers) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCaseInstructionList.objectCompare (inOperand.mAttribute_mCaseInstructionList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_switchCaseList_2D_element::isValid (void) const {
  return mAttribute_mCaseIdentifiers.isValid () && mAttribute_mCaseInstructionList.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_switchCaseList_2D_element::drop (void) {
  mAttribute_mCaseIdentifiers.drop () ;
  mAttribute_mCaseInstructionList.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_switchCaseList_2D_element::description (C_String & ioString,
                                                    const int32_t inIndentation) const {
  ioString << "<struct @switchCaseList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mCaseIdentifiers.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCaseInstructionList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_switchCaseList_2D_element::getter_mCaseIdentifiers (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCaseIdentifiers ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListAST GALGAS_switchCaseList_2D_element::getter_mCaseInstructionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCaseInstructionList ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @switchCaseList-element type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_switchCaseList_2D_element ("switchCaseList-element",
                                                  NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_switchCaseList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_switchCaseList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_switchCaseList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_switchCaseList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_switchCaseList_2D_element GALGAS_switchCaseList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_switchCaseList_2D_element result ;
  const GALGAS_switchCaseList_2D_element * p = (const GALGAS_switchCaseList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_switchCaseList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("switchCaseList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_switchCaseListIR_2D_element::GALGAS_switchCaseListIR_2D_element (void) :
mAttribute_mCaseIdentifierIndexes (),
mAttribute_mCaseInstructionList () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_switchCaseListIR_2D_element::~ GALGAS_switchCaseListIR_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_switchCaseListIR_2D_element::GALGAS_switchCaseListIR_2D_element (const GALGAS_uintlist & inOperand0,
                                                                        const GALGAS_instructionListIR & inOperand1) :
mAttribute_mCaseIdentifierIndexes (inOperand0),
mAttribute_mCaseInstructionList (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_switchCaseListIR_2D_element GALGAS_switchCaseListIR_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_switchCaseListIR_2D_element (GALGAS_uintlist::constructor_emptyList (HERE),
                                             GALGAS_instructionListIR::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_switchCaseListIR_2D_element GALGAS_switchCaseListIR_2D_element::constructor_new (const GALGAS_uintlist & inOperand0,
                                                                                        const GALGAS_instructionListIR & inOperand1 
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_switchCaseListIR_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_switchCaseListIR_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_switchCaseListIR_2D_element::objectCompare (const GALGAS_switchCaseListIR_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mCaseIdentifierIndexes.objectCompare (inOperand.mAttribute_mCaseIdentifierIndexes) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCaseInstructionList.objectCompare (inOperand.mAttribute_mCaseInstructionList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_switchCaseListIR_2D_element::isValid (void) const {
  return mAttribute_mCaseIdentifierIndexes.isValid () && mAttribute_mCaseInstructionList.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_switchCaseListIR_2D_element::drop (void) {
  mAttribute_mCaseIdentifierIndexes.drop () ;
  mAttribute_mCaseInstructionList.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_switchCaseListIR_2D_element::description (C_String & ioString,
                                                      const int32_t inIndentation) const {
  ioString << "<struct @switchCaseListIR-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mCaseIdentifierIndexes.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCaseInstructionList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uintlist GALGAS_switchCaseListIR_2D_element::getter_mCaseIdentifierIndexes (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCaseIdentifierIndexes ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR GALGAS_switchCaseListIR_2D_element::getter_mCaseInstructionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCaseInstructionList ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @switchCaseListIR-element type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_switchCaseListIR_2D_element ("switchCaseListIR-element",
                                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_switchCaseListIR_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_switchCaseListIR_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_switchCaseListIR_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_switchCaseListIR_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_switchCaseListIR_2D_element GALGAS_switchCaseListIR_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_switchCaseListIR_2D_element result ;
  const GALGAS_switchCaseListIR_2D_element * p = (const GALGAS_switchCaseListIR_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_switchCaseListIR_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("switchCaseListIR-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR_2D_element::GALGAS_instructionListIR_2D_element (void) :
mAttribute_mInstructionGeneration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR_2D_element::~ GALGAS_instructionListIR_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR_2D_element::GALGAS_instructionListIR_2D_element (const GALGAS_abstractInstructionIR & inOperand0) :
mAttribute_mInstructionGeneration (inOperand0) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR_2D_element GALGAS_instructionListIR_2D_element::constructor_new (const GALGAS_abstractInstructionIR & inOperand0 
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_instructionListIR_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_instructionListIR_2D_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_instructionListIR_2D_element::objectCompare (const GALGAS_instructionListIR_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mInstructionGeneration.objectCompare (inOperand.mAttribute_mInstructionGeneration) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_instructionListIR_2D_element::isValid (void) const {
  return mAttribute_mInstructionGeneration.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_instructionListIR_2D_element::drop (void) {
  mAttribute_mInstructionGeneration.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_instructionListIR_2D_element::description (C_String & ioString,
                                                       const int32_t inIndentation) const {
  ioString << "<struct @instructionListIR-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mInstructionGeneration.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractInstructionIR GALGAS_instructionListIR_2D_element::getter_mInstructionGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInstructionGeneration ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @instructionListIR-element type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_instructionListIR_2D_element ("instructionListIR-element",
                                                     NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_instructionListIR_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_instructionListIR_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_instructionListIR_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_instructionListIR_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR_2D_element GALGAS_instructionListIR_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_instructionListIR_2D_element result ;
  const GALGAS_instructionListIR_2D_element * p = (const GALGAS_instructionListIR_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_instructionListIR_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("instructionListIR-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ast::GALGAS_ast (void) :
mAttribute_mGlobalVarDeclarationList (),
mAttribute_mDeclarationList (),
mAttribute_mExtensionDeclarationListAST (),
mAttribute_mControlRegisterDeclarationListAST (),
mAttribute_mProcedureListAST (),
mAttribute_mRequiredProcList (),
mAttribute_mExternProcList (),
mAttribute_mISRDeclarationListAST (),
mAttribute_mStandAloneSVCListAST (),
mAttribute_mServiceListAST (),
mAttribute_mPrimitiveListAST (),
mAttribute_mGuardListAST (),
mAttribute_mTargetList (),
mAttribute_mBootList (),
mAttribute_mInitList (),
mAttribute_mPanicClauses (),
mAttribute_mTaskList (),
mAttribute_mCheckTargetList () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ast::~ GALGAS_ast (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ast::GALGAS_ast (const GALGAS_globalVarDeclarationList & inOperand0,
                        const GALGAS_declarationListAST & inOperand1,
                        const GALGAS_extensionDeclarationListAST & inOperand2,
                        const GALGAS_controlRegisterDeclarationListAST & inOperand3,
                        const GALGAS_functionDeclarationListAST & inOperand4,
                        const GALGAS_requiredProcedureDeclarationListAST & inOperand5,
                        const GALGAS_externProcedureDeclarationListAST & inOperand6,
                        const GALGAS_isrDeclarationListAST & inOperand7,
                        const GALGAS_svcDeclarationListAST & inOperand8,
                        const GALGAS_serviceDeclarationListAST & inOperand9,
                        const GALGAS_primitiveDeclarationListAST & inOperand10,
                        const GALGAS_guardDeclarationListAST & inOperand11,
                        const GALGAS_lstringlist & inOperand12,
                        const GALGAS_bootList & inOperand13,
                        const GALGAS_initList & inOperand14,
                        const GALGAS_panicClauseListAST & inOperand15,
                        const GALGAS_taskList & inOperand16,
                        const GALGAS_lstringlist & inOperand17) :
mAttribute_mGlobalVarDeclarationList (inOperand0),
mAttribute_mDeclarationList (inOperand1),
mAttribute_mExtensionDeclarationListAST (inOperand2),
mAttribute_mControlRegisterDeclarationListAST (inOperand3),
mAttribute_mProcedureListAST (inOperand4),
mAttribute_mRequiredProcList (inOperand5),
mAttribute_mExternProcList (inOperand6),
mAttribute_mISRDeclarationListAST (inOperand7),
mAttribute_mStandAloneSVCListAST (inOperand8),
mAttribute_mServiceListAST (inOperand9),
mAttribute_mPrimitiveListAST (inOperand10),
mAttribute_mGuardListAST (inOperand11),
mAttribute_mTargetList (inOperand12),
mAttribute_mBootList (inOperand13),
mAttribute_mInitList (inOperand14),
mAttribute_mPanicClauses (inOperand15),
mAttribute_mTaskList (inOperand16),
mAttribute_mCheckTargetList (inOperand17) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ast GALGAS_ast::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_ast (GALGAS_globalVarDeclarationList::constructor_emptyList (HERE),
                     GALGAS_declarationListAST::constructor_emptyList (HERE),
                     GALGAS_extensionDeclarationListAST::constructor_emptyList (HERE),
                     GALGAS_controlRegisterDeclarationListAST::constructor_emptyList (HERE),
                     GALGAS_functionDeclarationListAST::constructor_emptyList (HERE),
                     GALGAS_requiredProcedureDeclarationListAST::constructor_emptyList (HERE),
                     GALGAS_externProcedureDeclarationListAST::constructor_emptyList (HERE),
                     GALGAS_isrDeclarationListAST::constructor_emptyList (HERE),
                     GALGAS_svcDeclarationListAST::constructor_emptyList (HERE),
                     GALGAS_serviceDeclarationListAST::constructor_emptyList (HERE),
                     GALGAS_primitiveDeclarationListAST::constructor_emptyList (HERE),
                     GALGAS_guardDeclarationListAST::constructor_emptyList (HERE),
                     GALGAS_lstringlist::constructor_emptyList (HERE),
                     GALGAS_bootList::constructor_emptySortedList (HERE),
                     GALGAS_initList::constructor_emptySortedList (HERE),
                     GALGAS_panicClauseListAST::constructor_emptySortedList (HERE),
                     GALGAS_taskList::constructor_emptyList (HERE),
                     GALGAS_lstringlist::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ast GALGAS_ast::constructor_new (const GALGAS_globalVarDeclarationList & inOperand0,
                                        const GALGAS_declarationListAST & inOperand1,
                                        const GALGAS_extensionDeclarationListAST & inOperand2,
                                        const GALGAS_controlRegisterDeclarationListAST & inOperand3,
                                        const GALGAS_functionDeclarationListAST & inOperand4,
                                        const GALGAS_requiredProcedureDeclarationListAST & inOperand5,
                                        const GALGAS_externProcedureDeclarationListAST & inOperand6,
                                        const GALGAS_isrDeclarationListAST & inOperand7,
                                        const GALGAS_svcDeclarationListAST & inOperand8,
                                        const GALGAS_serviceDeclarationListAST & inOperand9,
                                        const GALGAS_primitiveDeclarationListAST & inOperand10,
                                        const GALGAS_guardDeclarationListAST & inOperand11,
                                        const GALGAS_lstringlist & inOperand12,
                                        const GALGAS_bootList & inOperand13,
                                        const GALGAS_initList & inOperand14,
                                        const GALGAS_panicClauseListAST & inOperand15,
                                        const GALGAS_taskList & inOperand16,
                                        const GALGAS_lstringlist & inOperand17 
                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_ast result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid () && inOperand10.isValid () && inOperand11.isValid () && inOperand12.isValid () && inOperand13.isValid () && inOperand14.isValid () && inOperand15.isValid () && inOperand16.isValid () && inOperand17.isValid ()) {
    result = GALGAS_ast (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9, inOperand10, inOperand11, inOperand12, inOperand13, inOperand14, inOperand15, inOperand16, inOperand17) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_ast::objectCompare (const GALGAS_ast & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mGlobalVarDeclarationList.objectCompare (inOperand.mAttribute_mGlobalVarDeclarationList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDeclarationList.objectCompare (inOperand.mAttribute_mDeclarationList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mExtensionDeclarationListAST.objectCompare (inOperand.mAttribute_mExtensionDeclarationListAST) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControlRegisterDeclarationListAST.objectCompare (inOperand.mAttribute_mControlRegisterDeclarationListAST) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mProcedureListAST.objectCompare (inOperand.mAttribute_mProcedureListAST) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRequiredProcList.objectCompare (inOperand.mAttribute_mRequiredProcList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mExternProcList.objectCompare (inOperand.mAttribute_mExternProcList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mISRDeclarationListAST.objectCompare (inOperand.mAttribute_mISRDeclarationListAST) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mStandAloneSVCListAST.objectCompare (inOperand.mAttribute_mStandAloneSVCListAST) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mServiceListAST.objectCompare (inOperand.mAttribute_mServiceListAST) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPrimitiveListAST.objectCompare (inOperand.mAttribute_mPrimitiveListAST) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mGuardListAST.objectCompare (inOperand.mAttribute_mGuardListAST) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTargetList.objectCompare (inOperand.mAttribute_mTargetList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBootList.objectCompare (inOperand.mAttribute_mBootList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInitList.objectCompare (inOperand.mAttribute_mInitList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPanicClauses.objectCompare (inOperand.mAttribute_mPanicClauses) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTaskList.objectCompare (inOperand.mAttribute_mTaskList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCheckTargetList.objectCompare (inOperand.mAttribute_mCheckTargetList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_ast::isValid (void) const {
  return mAttribute_mGlobalVarDeclarationList.isValid () && mAttribute_mDeclarationList.isValid () && mAttribute_mExtensionDeclarationListAST.isValid () && mAttribute_mControlRegisterDeclarationListAST.isValid () && mAttribute_mProcedureListAST.isValid () && mAttribute_mRequiredProcList.isValid () && mAttribute_mExternProcList.isValid () && mAttribute_mISRDeclarationListAST.isValid () && mAttribute_mStandAloneSVCListAST.isValid () && mAttribute_mServiceListAST.isValid () && mAttribute_mPrimitiveListAST.isValid () && mAttribute_mGuardListAST.isValid () && mAttribute_mTargetList.isValid () && mAttribute_mBootList.isValid () && mAttribute_mInitList.isValid () && mAttribute_mPanicClauses.isValid () && mAttribute_mTaskList.isValid () && mAttribute_mCheckTargetList.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ast::drop (void) {
  mAttribute_mGlobalVarDeclarationList.drop () ;
  mAttribute_mDeclarationList.drop () ;
  mAttribute_mExtensionDeclarationListAST.drop () ;
  mAttribute_mControlRegisterDeclarationListAST.drop () ;
  mAttribute_mProcedureListAST.drop () ;
  mAttribute_mRequiredProcList.drop () ;
  mAttribute_mExternProcList.drop () ;
  mAttribute_mISRDeclarationListAST.drop () ;
  mAttribute_mStandAloneSVCListAST.drop () ;
  mAttribute_mServiceListAST.drop () ;
  mAttribute_mPrimitiveListAST.drop () ;
  mAttribute_mGuardListAST.drop () ;
  mAttribute_mTargetList.drop () ;
  mAttribute_mBootList.drop () ;
  mAttribute_mInitList.drop () ;
  mAttribute_mPanicClauses.drop () ;
  mAttribute_mTaskList.drop () ;
  mAttribute_mCheckTargetList.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ast::description (C_String & ioString,
                              const int32_t inIndentation) const {
  ioString << "<struct @ast:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mGlobalVarDeclarationList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDeclarationList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mExtensionDeclarationListAST.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControlRegisterDeclarationListAST.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mProcedureListAST.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRequiredProcList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mExternProcList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mISRDeclarationListAST.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mStandAloneSVCListAST.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mServiceListAST.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPrimitiveListAST.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mGuardListAST.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTargetList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBootList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInitList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPanicClauses.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTaskList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCheckTargetList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVarDeclarationList GALGAS_ast::getter_mGlobalVarDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGlobalVarDeclarationList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationListAST GALGAS_ast::getter_mDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDeclarationList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_extensionDeclarationListAST GALGAS_ast::getter_mExtensionDeclarationListAST (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mExtensionDeclarationListAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterDeclarationListAST GALGAS_ast::getter_mControlRegisterDeclarationListAST (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControlRegisterDeclarationListAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionDeclarationListAST GALGAS_ast::getter_mProcedureListAST (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mProcedureListAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_requiredProcedureDeclarationListAST GALGAS_ast::getter_mRequiredProcList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRequiredProcList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_externProcedureDeclarationListAST GALGAS_ast::getter_mExternProcList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mExternProcList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_isrDeclarationListAST GALGAS_ast::getter_mISRDeclarationListAST (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mISRDeclarationListAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_svcDeclarationListAST GALGAS_ast::getter_mStandAloneSVCListAST (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mStandAloneSVCListAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_serviceDeclarationListAST GALGAS_ast::getter_mServiceListAST (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mServiceListAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_primitiveDeclarationListAST GALGAS_ast::getter_mPrimitiveListAST (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPrimitiveListAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardDeclarationListAST GALGAS_ast::getter_mGuardListAST (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGuardListAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_ast::getter_mTargetList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTargetList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bootList GALGAS_ast::getter_mBootList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBootList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_initList GALGAS_ast::getter_mInitList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInitList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_panicClauseListAST GALGAS_ast::getter_mPanicClauses (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPanicClauses ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_taskList GALGAS_ast::getter_mTaskList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTaskList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_ast::getter_mCheckTargetList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCheckTargetList ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                      @ast type                                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ast ("ast",
                            NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ast::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ast ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ast::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ast (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ast GALGAS_ast::extractObject (const GALGAS_object & inObject,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) {
  GALGAS_ast result ;
  const GALGAS_ast * p = (const GALGAS_ast *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ast *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("ast", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

#include "utilities/MF_MemoryControl.h"
#include "galgas2/C_galgas_CLI_Options.h"

#include "files/C_FileManager.h"

//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                       N O N    T E R M I N A L    N A M E S                                          
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

static const char * gNonTerminalNames_plm_grammar [118] = {
  "<function>",// Index 0
  "<section>",// Index 1
  "<service>",// Index 2
  "<primitive>",// Index 3
  "<isr>",// Index 4
  "<import_file>",// Index 5
  "<start_symbol>",// Index 6
  "<declaration>",// Index 7
  "<declaration_type>",// Index 8
  "<declaration_struct_var>",// Index 9
  "<property_in_extension>",// Index 10
  "<module_variable>",// Index 11
  "<svc_declaration>",// Index 12
  "<declaration_init>",// Index 13
  "<mode>",// Index 14
  "<function_header>",// Index 15
  "<procedure_formal_arguments>",// Index 16
  "<guard>",// Index 17
  "<expression>",// Index 18
  "<expression_12>",// Index 19
  "<expression_11>",// Index 20
  "<expression_10>",// Index 21
  "<expression_9>",// Index 22
  "<expression_8>",// Index 23
  "<expression_7>",// Index 24
  "<expression_6>",// Index 25
  "<expression_5>",// Index 26
  "<expression_4>",// Index 27
  "<expression_3>",// Index 28
  "<expression_2>",// Index 29
  "<expression_1>",// Index 30
  "<primary>",// Index 31
  "<effective_parameters>",// Index 32
  "<instructionList>",// Index 33
  "<instruction>",// Index 34
  "<assignment_operator>",// Index 35
  "<if_instruction>",// Index 36
  "<guarded_command>",// Index 37
  "<procedure_call>",// Index 38
  "<assignment_target>",// Index 39
  "<select_plm_5F_syntax_0>",// Index 40
  "<select_plm_5F_syntax_1>",// Index 41
  "<select_plm_5F_syntax_2>",// Index 42
  "<select_plm_5F_syntax_3>",// Index 43
  "<select_plm_5F_syntax_4>",// Index 44
  "<select_plm_5F_syntax_5>",// Index 45
  "<select_plm_5F_syntax_6>",// Index 46
  "<select_plm_5F_syntax_7>",// Index 47
  "<select_plm_5F_syntax_8>",// Index 48
  "<select_plm_5F_syntax_9>",// Index 49
  "<select_plm_5F_syntax_10>",// Index 50
  "<select_plm_5F_syntax_11>",// Index 51
  "<select_plm_5F_syntax_12>",// Index 52
  "<select_plm_5F_syntax_13>",// Index 53
  "<select_plm_5F_syntax_14>",// Index 54
  "<select_plm_5F_syntax_15>",// Index 55
  "<select_plm_5F_syntax_16>",// Index 56
  "<select_plm_5F_syntax_17>",// Index 57
  "<select_plm_5F_syntax_18>",// Index 58
  "<select_plm_5F_syntax_19>",// Index 59
  "<select_plm_5F_syntax_20>",// Index 60
  "<select_plm_5F_syntax_21>",// Index 61
  "<select_plm_5F_syntax_22>",// Index 62
  "<select_plm_5F_syntax_23>",// Index 63
  "<select_plm_5F_syntax_24>",// Index 64
  "<select_plm_5F_syntax_25>",// Index 65
  "<select_plm_5F_syntax_26>",// Index 66
  "<select_plm_5F_syntax_27>",// Index 67
  "<select_plm_5F_syntax_28>",// Index 68
  "<select_plm_5F_syntax_29>",// Index 69
  "<select_plm_5F_syntax_30>",// Index 70
  "<select_plm_5F_syntax_31>",// Index 71
  "<select_plm_5F_syntax_32>",// Index 72
  "<select_plm_5F_syntax_33>",// Index 73
  "<select_plm_5F_syntax_34>",// Index 74
  "<select_plm_5F_syntax_35>",// Index 75
  "<select_plm_5F_syntax_36>",// Index 76
  "<select_plm_5F_syntax_37>",// Index 77
  "<select_plm_5F_syntax_38>",// Index 78
  "<select_plm_5F_syntax_39>",// Index 79
  "<select_plm_5F_syntax_40>",// Index 80
  "<select_plm_5F_syntax_41>",// Index 81
  "<select_plm_5F_syntax_42>",// Index 82
  "<select_plm_5F_syntax_43>",// Index 83
  "<select_plm_5F_syntax_44>",// Index 84
  "<select_plm_5F_syntax_45>",// Index 85
  "<select_plm_5F_syntax_46>",// Index 86
  "<select_plm_5F_syntax_47>",// Index 87
  "<select_plm_5F_syntax_48>",// Index 88
  "<select_plm_5F_syntax_49>",// Index 89
  "<select_plm_5F_syntax_50>",// Index 90
  "<select_plm_5F_syntax_51>",// Index 91
  "<select_plm_5F_syntax_52>",// Index 92
  "<select_plm_5F_syntax_53>",// Index 93
  "<select_plm_5F_syntax_54>",// Index 94
  "<select_plm_5F_syntax_55>",// Index 95
  "<select_plm_5F_syntax_56>",// Index 96
  "<select_plm_5F_syntax_57>",// Index 97
  "<select_plm_5F_syntax_58>",// Index 98
  "<select_plm_5F_syntax_59>",// Index 99
  "<select_plm_5F_syntax_60>",// Index 100
  "<select_plm_5F_syntax_61>",// Index 101
  "<select_plm_5F_syntax_62>",// Index 102
  "<select_plm_5F_syntax_63>",// Index 103
  "<select_plm_5F_syntax_64>",// Index 104
  "<select_plm_5F_syntax_65>",// Index 105
  "<select_plm_5F_syntax_66>",// Index 106
  "<select_plm_5F_syntax_67>",// Index 107
  "<select_plm_5F_syntax_68>",// Index 108
  "<select_plm_5F_syntax_69>",// Index 109
  "<select_plm_5F_syntax_70>",// Index 110
  "<select_plm_5F_syntax_71>",// Index 111
  "<select_plm_5F_syntax_72>",// Index 112
  "<select_plm_5F_syntax_73>",// Index 113
  "<select_plm_5F_syntax_74>",// Index 114
  "<select_plm_5F_syntax_75>",// Index 115
  "<select_plm_5F_syntax_76>",// Index 116
  "<>"// Index 117
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                S L R    A N A L Y Z E R    A C T I O N    T A B L E                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

// Action tables handle shift and reduce actions ;
//  - a shift action is (terminal_symbol, SHIFT (n)) : if shifts to state n ;
//  - the accept action is (terminal_symbol, ACCEPT) ;
//  - a reduce action is (terminal_symbol, REDUCE (n)) ; if reduces to state n.

#define SHIFT(a) ((a) + 2)
#define REDUCE(a) (-(a) - 1)
#define ACCEPT (1)
#define END (-1)

static const int16_t gActionTable_plm_grammar [] = {
// State S0 (index = 0)
  C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_type, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_struct, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_extension, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_module, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_task, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_boot, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_extern, SHIFT (16)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (18)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (19)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (89)
, END
// State S1 (index = 47)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (35)
, END
// State S2 (index = 50)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (36)
, END
// State S3 (index = 53)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (37)
, END
// State S4 (index = 56)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (169)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (167)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (207)
, END
// State S5 (index = 63)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (38)
, END
// State S6 (index = 66)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (39)
, END
// State S7 (index = 69)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (40)
, END
// State S8 (index = 72)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (41)
, END
// State S9 (index = 75)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (42)
, END
// State S10 (index = 78)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (43)
, END
// State S11 (index = 81)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (44)
, END
// State S12 (index = 84)
, C_Lexique_plm_5F_lexique::kToken_setup, SHIFT (45)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (46)
, END
// State S13 (index = 89)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (47)
, END
// State S14 (index = 92)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (48)
, END
// State S15 (index = 95)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (49)
, END
// State S16 (index = 98)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (49)
, END
// State S17 (index = 101)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (52)
, END
// State S18 (index = 104)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (53)
, END
// State S19 (index = 107)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (54)
, END
// State S20 (index = 110)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_type, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_struct, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_extension, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_module, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_task, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_boot, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_extern, SHIFT (16)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (18)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (19)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (89)
, END
// State S21 (index = 157)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_type, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_struct, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_extension, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_module, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_task, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_boot, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_extern, SHIFT (16)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (18)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (19)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (89)
, END
// State S22 (index = 204)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_type, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_struct, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_extension, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_module, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_task, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_boot, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_extern, SHIFT (16)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (18)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (19)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (89)
, END
// State S23 (index = 251)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_type, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_struct, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_extension, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_module, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_task, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_boot, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_extern, SHIFT (16)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (18)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (19)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (89)
, END
// State S24 (index = 298)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_type, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_struct, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_extension, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_module, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_task, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_boot, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_extern, SHIFT (16)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (18)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (19)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (89)
, END
// State S25 (index = 345)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_type, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_struct, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_extension, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_module, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_task, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_boot, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_extern, SHIFT (16)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (18)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (19)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (89)
, END
// State S26 (index = 392)
, C_Lexique_plm_5F_lexique::kToken_, ACCEPT
, END
// State S27 (index = 395)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_type, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_struct, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_extension, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_module, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_task, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_boot, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_extern, SHIFT (16)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (18)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (19)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (89)
, END
// State S28 (index = 442)
, C_Lexique_plm_5F_lexique::kToken_section, SHIFT (62)
, C_Lexique_plm_5F_lexique::kToken_service, SHIFT (63)
, C_Lexique_plm_5F_lexique::kToken_primitive, SHIFT (64)
, C_Lexique_plm_5F_lexique::kToken_safe, SHIFT (65)
, END
// State S29 (index = 451)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (21)
, END
// State S30 (index = 498)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (34)
, END
// State S31 (index = 545)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (1)
, END
// State S32 (index = 548)
, C_Lexique_plm_5F_lexique::kToken_svc, SHIFT (67)
, END
// State S33 (index = 551)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (49)
, END
// State S34 (index = 554)
, C_Lexique_plm_5F_lexique::kToken_guard, SHIFT (69)
, END
// State S35 (index = 557)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (0)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (0)
, END
// State S36 (index = 604)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (70)
, END
// State S37 (index = 607)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (71)
, END
// State S38 (index = 610)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (72)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (143)
, END
// State S39 (index = 615)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (74)
, END
// State S40 (index = 620)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (76)
, END
// State S41 (index = 623)
, C_Lexique_plm_5F_lexique::kToken__5B_, REDUCE (129)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (77)
, C_Lexique_plm_5F_lexique::kToken_at, REDUCE (129)
, END
// State S42 (index = 630)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (79)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (141)
, END
// State S43 (index = 635)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (81)
, END
// State S44 (index = 638)
, C_Lexique_plm_5F_lexique::kToken_priority, SHIFT (82)
, END
// State S45 (index = 641)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (83)
, END
// State S46 (index = 644)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (84)
, END
// State S47 (index = 647)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (85)
, END
// State S48 (index = 650)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (86)
, END
// State S49 (index = 653)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (172)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken_boot, SHIFT (88)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (89)
, C_Lexique_plm_5F_lexique::kToken_user, SHIFT (90)
, C_Lexique_plm_5F_lexique::kToken_section, SHIFT (91)
, C_Lexique_plm_5F_lexique::kToken_service, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_primitive, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken_guard, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_safe, SHIFT (95)
, END
// State S50 (index = 674)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (27)
, END
// State S51 (index = 721)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken__2D__3E_, SHIFT (98)
, END
// State S52 (index = 726)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (100)
, END
// State S53 (index = 731)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (102)
, END
// State S54 (index = 734)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (87)
, END
// State S55 (index = 781)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (91)
, END
// State S56 (index = 784)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (92)
, END
// State S57 (index = 787)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (93)
, END
// State S58 (index = 790)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (94)
, END
// State S59 (index = 793)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (95)
, END
// State S60 (index = 796)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (96)
, END
// State S61 (index = 799)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (90)
, END
// State S62 (index = 802)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (192)
, END
// State S63 (index = 805)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (103)
, END
// State S64 (index = 808)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (104)
, END
// State S65 (index = 811)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (193)
, END
// State S66 (index = 814)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (105)
, END
// State S67 (index = 817)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_primitive, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_safe, REDUCE (19)
, END
// State S68 (index = 826)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (170)
, C_Lexique_plm_5F_lexique::kToken__2D__3E_, SHIFT (106)
, END
// State S69 (index = 831)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (108)
, END
// State S70 (index = 834)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (109)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (110)
, END
// State S71 (index = 839)
, C_Lexique_plm_5F_lexique::kToken_case, SHIFT (112)
, END
// State S72 (index = 842)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (144)
, END
// State S73 (index = 845)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (113)
, END
// State S74 (index = 848)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (74)
, END
// State S75 (index = 853)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (115)
, END
// State S76 (index = 856)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (123)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, END
// State S77 (index = 871)
, C_Lexique_plm_5F_lexique::kToken__5B_, REDUCE (129)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (77)
, C_Lexique_plm_5F_lexique::kToken_at, REDUCE (129)
, END
// State S78 (index = 878)
, C_Lexique_plm_5F_lexique::kToken__5B_, SHIFT (127)
, C_Lexique_plm_5F_lexique::kToken_at, SHIFT (128)
, END
// State S79 (index = 883)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (142)
, END
// State S80 (index = 886)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (130)
, END
// State S81 (index = 889)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (147)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, END
// State S82 (index = 908)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (142)
, END
// State S83 (index = 911)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (143)
, END
// State S84 (index = 914)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (144)
, END
// State S85 (index = 917)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S86 (index = 954)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S87 (index = 991)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (174)
, END
// State S88 (index = 994)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (175)
, END
// State S89 (index = 997)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (176)
, END
// State S90 (index = 1000)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (173)
, END
// State S91 (index = 1003)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (177)
, END
// State S92 (index = 1006)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (178)
, END
// State S93 (index = 1009)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (179)
, END
// State S94 (index = 1012)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (180)
, END
// State S95 (index = 1015)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (181)
, END
// State S96 (index = 1018)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (165)
, END
// State S97 (index = 1021)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (24)
, END
// State S98 (index = 1024)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (166)
, END
// State S99 (index = 1027)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (167)
, END
// State S100 (index = 1030)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (100)
, END
// State S101 (index = 1035)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (169)
, END
// State S102 (index = 1038)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (88)
, END
// State S103 (index = 1085)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (170)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (198)
, END
// State S104 (index = 1090)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (172)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (202)
, END
// State S105 (index = 1095)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (174)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (194)
, END
// State S106 (index = 1100)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (176)
, END
// State S107 (index = 1103)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (177)
, END
// State S108 (index = 1106)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (178)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (208)
, END
// State S109 (index = 1111)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken__5B_, SHIFT (180)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (7)
, END
// State S110 (index = 1160)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (181)
, END
// State S111 (index = 1163)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (2)
, END
// State S112 (index = 1210)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (182)
, END
// State S113 (index = 1213)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S114 (index = 1248)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (106)
, END
// State S115 (index = 1251)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (214)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (215)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, END
// State S116 (index = 1266)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (124)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (169)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (167)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (207)
, END
// State S117 (index = 1275)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (123)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, END
// State S118 (index = 1290)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (123)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, END
// State S119 (index = 1305)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (123)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, END
// State S120 (index = 1320)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (123)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, END
// State S121 (index = 1335)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (123)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, END
// State S122 (index = 1350)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (123)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, END
// State S123 (index = 1365)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (123)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, END
// State S124 (index = 1380)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (231)
, END
// State S125 (index = 1383)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (232)
, END
// State S126 (index = 1386)
, C_Lexique_plm_5F_lexique::kToken__5B_, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_at, REDUCE (130)
, END
// State S127 (index = 1391)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S128 (index = 1426)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S129 (index = 1461)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (127)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (235)
, END
// State S130 (index = 1466)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S131 (index = 1501)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (238)
, END
// State S132 (index = 1504)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (147)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, END
// State S133 (index = 1523)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (147)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, END
// State S134 (index = 1542)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (147)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, END
// State S135 (index = 1561)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (147)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, END
// State S136 (index = 1580)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (147)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, END
// State S137 (index = 1599)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (147)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, END
// State S138 (index = 1618)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (147)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, END
// State S139 (index = 1637)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (147)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, END
// State S140 (index = 1656)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (147)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_isr, SHIFT (17)
, END
// State S141 (index = 1675)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (248)
, END
// State S142 (index = 1678)
, C_Lexique_plm_5F_lexique::kToken_stackSize, SHIFT (249)
, END
// State S143 (index = 1681)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S144 (index = 1718)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S145 (index = 1755)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (252)
, END
// State S146 (index = 1758)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S147 (index = 1795)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (254)
, END
// State S148 (index = 1798)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S149 (index = 1833)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (256)
, END
// State S150 (index = 1836)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S151 (index = 1871)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (258)
, END
// State S152 (index = 1874)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S153 (index = 1909)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S154 (index = 1944)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (261)
, END
// State S155 (index = 1947)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (262)
, END
// State S156 (index = 1950)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S157 (index = 1985)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (264)
, END
// State S158 (index = 1988)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S159 (index = 2025)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (76)
, END
// State S160 (index = 2062)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (83)
, END
// State S161 (index = 2099)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (266)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (267)
, C_Lexique_plm_5F_lexique::kToken__7C__3D_, SHIFT (268)
, C_Lexique_plm_5F_lexique::kToken__26__3D_, SHIFT (269)
, C_Lexique_plm_5F_lexique::kToken__5E__3D_, SHIFT (270)
, C_Lexique_plm_5F_lexique::kToken__2B__3D_, SHIFT (271)
, C_Lexique_plm_5F_lexique::kToken__2B__25__3D_, SHIFT (272)
, C_Lexique_plm_5F_lexique::kToken__2D__3D_, SHIFT (273)
, C_Lexique_plm_5F_lexique::kToken__2D__25__3D_, SHIFT (274)
, C_Lexique_plm_5F_lexique::kToken__2A__3D_, SHIFT (275)
, C_Lexique_plm_5F_lexique::kToken__2A__25__3D_, SHIFT (276)
, END
// State S162 (index = 2122)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (66)
, END
// State S163 (index = 2133)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (280)
, END
// State S164 (index = 2136)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (281)
, END
// State S165 (index = 2139)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (282)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (182)
, END
// State S166 (index = 2144)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (189)
, END
// State S167 (index = 2147)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (284)
, END
// State S168 (index = 2150)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (191)
, END
// State S169 (index = 2153)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S170 (index = 2190)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (170)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (198)
, END
// State S171 (index = 2195)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (287)
, END
// State S172 (index = 2198)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (172)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (202)
, END
// State S173 (index = 2203)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (287)
, END
// State S174 (index = 2206)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (174)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (194)
, END
// State S175 (index = 2211)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (287)
, END
// State S176 (index = 2214)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (171)
, END
// State S177 (index = 2217)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S178 (index = 2254)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (178)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (208)
, END
// State S179 (index = 2259)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (287)
, END
// State S180 (index = 2262)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S181 (index = 2297)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S182 (index = 2332)
, C_Lexique_plm_5F_lexique::kToken_case, SHIFT (298)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (97)
, END
// State S183 (index = 2337)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (60)
, END
// State S184 (index = 2482)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (300)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (301)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (250)
, END
// State S185 (index = 2489)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S186 (index = 2524)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (59)
, END
// State S187 (index = 2669)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S188 (index = 2704)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S189 (index = 2739)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S190 (index = 2774)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S191 (index = 2809)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S192 (index = 2844)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S193 (index = 2879)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S194 (index = 2914)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S195 (index = 2949)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (61)
, END
// State S196 (index = 3094)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (62)
, END
// State S197 (index = 3239)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (311)
, END
// State S198 (index = 3242)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (13)
, END
// State S199 (index = 3289)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (35)
, END
// State S200 (index = 3386)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_or, SHIFT (312)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (212)
, END
// State S201 (index = 3485)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_xor, SHIFT (314)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (214)
, END
// State S202 (index = 3586)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_and, SHIFT (316)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (216)
, END
// State S203 (index = 3689)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (318)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (218)
, END
// State S204 (index = 3794)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (320)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (220)
, END
// State S205 (index = 3901)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (322)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (222)
, END
// State S206 (index = 4010)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, SHIFT (324)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, SHIFT (325)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (224)
, END
// State S207 (index = 4123)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, SHIFT (327)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, SHIFT (328)
, C_Lexique_plm_5F_lexique::kToken__3C_, SHIFT (329)
, C_Lexique_plm_5F_lexique::kToken__3E_, SHIFT (330)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (227)
, END
// State S208 (index = 4244)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (332)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (333)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (232)
, END
// State S209 (index = 4369)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (335)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, SHIFT (336)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (337)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (338)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (235)
, END
// State S210 (index = 4502)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (340)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, SHIFT (341)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (342)
, C_Lexique_plm_5F_lexique::kToken__21__25_, SHIFT (343)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (344)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, SHIFT (345)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (240)
, END
// State S211 (index = 4647)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (47)
, END
// State S212 (index = 4792)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (347)
, END
// State S213 (index = 4795)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (348)
, END
// State S214 (index = 4798)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (169)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (167)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (207)
, END
// State S215 (index = 4807)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (214)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (215)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, END
// State S216 (index = 4822)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (214)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (215)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, END
// State S217 (index = 4837)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (214)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (215)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, END
// State S218 (index = 4852)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (214)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (215)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, END
// State S219 (index = 4867)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (214)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (215)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, END
// State S220 (index = 4882)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (214)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (215)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, END
// State S221 (index = 4897)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_public, SHIFT (214)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (215)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (168)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, END
// State S222 (index = 4912)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (356)
, END
// State S223 (index = 4915)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (357)
, END
// State S224 (index = 4918)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (122)
, END
// State S225 (index = 4921)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (117)
, END
// State S226 (index = 4924)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (118)
, END
// State S227 (index = 4927)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (119)
, END
// State S228 (index = 4930)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (121)
, END
// State S229 (index = 4933)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (116)
, END
// State S230 (index = 4936)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (120)
, END
// State S231 (index = 4939)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (8)
, END
// State S232 (index = 4986)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (358)
, END
// State S233 (index = 4989)
, C_Lexique_plm_5F_lexique::kToken__5D_, SHIFT (359)
, END
// State S234 (index = 4992)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (131)
, END
// State S235 (index = 4997)
, C_Lexique_plm_5F_lexique::kToken__5B_, REDUCE (129)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (77)
, C_Lexique_plm_5F_lexique::kToken_at, REDUCE (129)
, END
// State S236 (index = 5004)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (361)
, END
// State S237 (index = 5007)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (12)
, END
// State S238 (index = 5054)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (362)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (146)
, END
// State S239 (index = 5059)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (156)
, END
// State S240 (index = 5062)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (151)
, END
// State S241 (index = 5065)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (153)
, END
// State S242 (index = 5068)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (152)
, END
// State S243 (index = 5071)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (155)
, END
// State S244 (index = 5074)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (149)
, END
// State S245 (index = 5077)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (150)
, END
// State S246 (index = 5080)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (148)
, END
// State S247 (index = 5083)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (154)
, END
// State S248 (index = 5086)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (15)
, END
// State S249 (index = 5133)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (364)
, END
// State S250 (index = 5136)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (365)
, END
// State S251 (index = 5139)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (366)
, END
// State S252 (index = 5142)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (367)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (283)
, END
// State S253 (index = 5147)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (273)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (273)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (273)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (273)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (273)
, END
// State S254 (index = 5158)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (369)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (285)
, END
// State S255 (index = 5163)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (75)
, END
// State S256 (index = 5200)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S257 (index = 5235)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (372)
, END
// State S258 (index = 5238)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (307)
, END
// State S259 (index = 5241)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (67)
, END
// State S260 (index = 5278)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (74)
, END
// State S261 (index = 5315)
, C_Lexique_plm_5F_lexique::kToken_when, SHIFT (373)
, C_Lexique_plm_5F_lexique::kToken_until, SHIFT (374)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (375)
, END
// State S262 (index = 5322)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (379)
, C_Lexique_plm_5F_lexique::kToken_in, SHIFT (380)
, END
// State S263 (index = 5327)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (381)
, END
// State S264 (index = 5330)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (20)
, END
// State S265 (index = 5377)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (272)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (272)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (272)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (272)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (272)
, END
// State S266 (index = 5388)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S267 (index = 5423)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (261)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (383)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (384)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (385)
, END
// State S268 (index = 5432)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, REDUCE (274)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (274)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (274)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (274)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (274)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (274)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (274)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (274)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (274)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (274)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (274)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (274)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (274)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (274)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (274)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (274)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (274)
, END
// State S269 (index = 5467)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, REDUCE (275)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (275)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (275)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (275)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (275)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (275)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (275)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (275)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (275)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (275)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (275)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (275)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (275)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (275)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (275)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (275)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (275)
, END
// State S270 (index = 5502)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, REDUCE (276)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (276)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (276)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (276)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (276)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (276)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (276)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (276)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (276)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (276)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (276)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (276)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (276)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (276)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (276)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (276)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (276)
, END
// State S271 (index = 5537)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, REDUCE (277)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (277)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (277)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (277)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (277)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (277)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (277)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (277)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (277)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (277)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (277)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (277)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (277)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (277)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (277)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (277)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (277)
, END
// State S272 (index = 5572)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, REDUCE (278)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (278)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (278)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (278)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (278)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (278)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (278)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (278)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (278)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (278)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (278)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (278)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (278)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (278)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (278)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (278)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (278)
, END
// State S273 (index = 5607)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, REDUCE (279)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (279)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (279)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (279)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (279)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (279)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (279)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (279)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (279)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (279)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (279)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (279)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (279)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (279)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (279)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (279)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (279)
, END
// State S274 (index = 5642)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, REDUCE (280)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (280)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (280)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (280)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (280)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (280)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (280)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (280)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (280)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (280)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (280)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (280)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (280)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (280)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (280)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (280)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (280)
, END
// State S275 (index = 5677)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, REDUCE (281)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (281)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (281)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (281)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (281)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (281)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (281)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (281)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (281)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (281)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (281)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (281)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (281)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (281)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (281)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (281)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (281)
, END
// State S276 (index = 5712)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, REDUCE (282)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (282)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (282)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (282)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (282)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (282)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (282)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (282)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (282)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (282)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (282)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (282)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (282)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (282)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (282)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (282)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (282)
, END
// State S277 (index = 5747)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (84)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (84)
, END
// State S278 (index = 5786)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S279 (index = 5821)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (69)
, END
// State S280 (index = 5856)
, C_Lexique_plm_5F_lexique::kToken__5B_, SHIFT (388)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (389)
, C_Lexique_plm_5F_lexique::kToken__7C__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__26__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__5E__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2B__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2B__25__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2D__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2D__25__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2A__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2A__25__3D_, REDUCE (308)
, END
// State S281 (index = 5883)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (22)
, END
// State S282 (index = 5934)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (282)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (182)
, END
// State S283 (index = 5939)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (287)
, END
// State S284 (index = 5942)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (28)
, END
// State S285 (index = 5989)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (393)
, END
// State S286 (index = 5992)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (199)
, END
// State S287 (index = 5995)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (394)
, C_Lexique_plm_5F_lexique::kToken__3F__21_, SHIFT (395)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (396)
, END
// State S288 (index = 6004)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__2D__3E_, SHIFT (398)
, END
// State S289 (index = 6009)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (203)
, END
// State S290 (index = 6012)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2D__3E_, SHIFT (400)
, END
// State S291 (index = 6017)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (195)
, END
// State S292 (index = 6020)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__2D__3E_, SHIFT (402)
, END
// State S293 (index = 6025)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (404)
, END
// State S294 (index = 6028)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (209)
, END
// State S295 (index = 6031)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (405)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (210)
, END
// State S296 (index = 6036)
, C_Lexique_plm_5F_lexique::kToken__5D_, SHIFT (407)
, END
// State S297 (index = 6039)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (408)
, END
// State S298 (index = 6042)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (409)
, END
// State S299 (index = 6045)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (410)
, END
// State S300 (index = 6048)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (411)
, END
// State S301 (index = 6051)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (247)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (412)
, END
// State S302 (index = 6056)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (414)
, END
// State S303 (index = 6059)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (50)
, END
// State S304 (index = 6204)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (51)
, END
// State S305 (index = 6349)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (48)
, END
// State S306 (index = 6494)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (49)
, END
// State S307 (index = 6639)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (415)
, END
// State S308 (index = 6642)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (416)
, END
// State S309 (index = 6645)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (417)
, END
// State S310 (index = 6648)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (418)
, END
// State S311 (index = 6651)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (256)
, END
// State S312 (index = 6654)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S313 (index = 6689)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (36)
, END
// State S314 (index = 6786)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S315 (index = 6821)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (37)
, END
// State S316 (index = 6920)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S317 (index = 6955)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (38)
, END
// State S318 (index = 7056)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S319 (index = 7091)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (39)
, END
// State S320 (index = 7194)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S321 (index = 7229)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (40)
, END
// State S322 (index = 7334)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S323 (index = 7369)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (41)
, END
// State S324 (index = 7476)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S325 (index = 7511)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S326 (index = 7546)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (42)
, END
// State S327 (index = 7655)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S328 (index = 7690)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S329 (index = 7725)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S330 (index = 7760)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S331 (index = 7795)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (43)
, END
// State S332 (index = 7908)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S333 (index = 7943)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S334 (index = 7978)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (44)
, END
// State S335 (index = 8099)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S336 (index = 8134)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S337 (index = 8169)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S338 (index = 8204)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S339 (index = 8239)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (45)
, END
// State S340 (index = 8364)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S341 (index = 8399)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S342 (index = 8434)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S343 (index = 8469)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S344 (index = 8504)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S345 (index = 8539)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S346 (index = 8574)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (46)
, END
// State S347 (index = 8707)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (443)
, END
// State S348 (index = 8710)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__5B_, SHIFT (444)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (267)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (445)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (257)
, END
// State S349 (index = 8861)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (114)
, END
// State S350 (index = 8864)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (109)
, END
// State S351 (index = 8867)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (110)
, END
// State S352 (index = 8870)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (111)
, END
// State S353 (index = 8873)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (113)
, END
// State S354 (index = 8876)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (108)
, END
// State S355 (index = 8879)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (112)
, END
// State S356 (index = 8882)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (448)
, END
// State S357 (index = 8885)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (6)
, END
// State S358 (index = 8932)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (449)
, END
// State S359 (index = 8935)
, C_Lexique_plm_5F_lexique::kToken_at, SHIFT (450)
, END
// State S360 (index = 8938)
, C_Lexique_plm_5F_lexique::kToken__5B_, SHIFT (127)
, C_Lexique_plm_5F_lexique::kToken_at, SHIFT (128)
, END
// State S361 (index = 8943)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (452)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (133)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (133)
, END
// State S362 (index = 8992)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (145)
, END
// State S363 (index = 8995)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (454)
, END
// State S364 (index = 8998)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (455)
, END
// State S365 (index = 9001)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (17)
, END
// State S366 (index = 9048)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (18)
, END
// State S367 (index = 9095)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (284)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (72)
, END
// State S368 (index = 9134)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (456)
, END
// State S369 (index = 9137)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (286)
, END
// State S370 (index = 9140)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (457)
, END
// State S371 (index = 9143)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (458)
, END
// State S372 (index = 9146)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S373 (index = 9183)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S374 (index = 9218)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (296)
, END
// State S375 (index = 9221)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (297)
, END
// State S376 (index = 9224)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (461)
, END
// State S377 (index = 9227)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (78)
, END
// State S378 (index = 9232)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (462)
, END
// State S379 (index = 9235)
, C_Lexique_plm_5F_lexique::kToken_in, SHIFT (463)
, END
// State S380 (index = 9238)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S381 (index = 9273)
, C_Lexique_plm_5F_lexique::kToken_case, SHIFT (465)
, END
// State S382 (index = 9276)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (68)
, END
// State S383 (index = 9313)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S384 (index = 9348)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (467)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (468)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (469)
, END
// State S385 (index = 9355)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (471)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (472)
, END
// State S386 (index = 9360)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (473)
, END
// State S387 (index = 9363)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (70)
, END
// State S388 (index = 9400)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S389 (index = 9435)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (475)
, END
// State S390 (index = 9438)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (86)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (86)
, C_Lexique_plm_5F_lexique::kToken__7C__3D_, REDUCE (86)
, C_Lexique_plm_5F_lexique::kToken__26__3D_, REDUCE (86)
, C_Lexique_plm_5F_lexique::kToken__5E__3D_, REDUCE (86)
, C_Lexique_plm_5F_lexique::kToken__2B__3D_, REDUCE (86)
, C_Lexique_plm_5F_lexique::kToken__2B__25__3D_, REDUCE (86)
, C_Lexique_plm_5F_lexique::kToken__2D__3D_, REDUCE (86)
, C_Lexique_plm_5F_lexique::kToken__2D__25__3D_, REDUCE (86)
, C_Lexique_plm_5F_lexique::kToken__2A__3D_, REDUCE (86)
, C_Lexique_plm_5F_lexique::kToken__2A__25__3D_, REDUCE (86)
, END
// State S391 (index = 9461)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (183)
, END
// State S392 (index = 9464)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken__2D__3E_, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (25)
, END
// State S393 (index = 9517)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (29)
, END
// State S394 (index = 9568)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (476)
, END
// State S395 (index = 9571)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (477)
, END
// State S396 (index = 9574)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (478)
, END
// State S397 (index = 9577)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (479)
, END
// State S398 (index = 9580)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (480)
, END
// State S399 (index = 9583)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (481)
, END
// State S400 (index = 9586)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (482)
, END
// State S401 (index = 9589)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (483)
, END
// State S402 (index = 9592)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (484)
, END
// State S403 (index = 9595)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (485)
, END
// State S404 (index = 9598)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (23)
, END
// State S405 (index = 9649)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, END
// State S406 (index = 9654)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (488)
, END
// State S407 (index = 9657)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (3)
, END
// State S408 (index = 9704)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (489)
, END
// State S409 (index = 9707)
, C_Lexique_plm_5F_lexique::kToken_case, SHIFT (298)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (97)
, END
// State S410 (index = 9712)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (4)
, END
// State S411 (index = 9759)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (491)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (253)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (253)
, END
// State S412 (index = 9766)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S413 (index = 9801)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (494)
, END
// State S414 (index = 9804)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (52)
, END
// State S415 (index = 9949)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (495)
, END
// State S416 (index = 9952)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (496)
, END
// State S417 (index = 9955)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (497)
, END
// State S418 (index = 9958)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S419 (index = 9993)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_or, SHIFT (312)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (212)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (212)
, END
// State S420 (index = 10092)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_xor, SHIFT (314)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (214)
, END
// State S421 (index = 10193)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_and, SHIFT (316)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (216)
, END
// State S422 (index = 10296)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (318)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (218)
, END
// State S423 (index = 10401)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (320)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (220)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (220)
, END
// State S424 (index = 10508)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (322)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (222)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (222)
, END
// State S425 (index = 10617)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (225)
, END
// State S426 (index = 10726)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (226)
, END
// State S427 (index = 10835)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (228)
, END
// State S428 (index = 10948)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (229)
, END
// State S429 (index = 11061)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (230)
, END
// State S430 (index = 11174)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (231)
, END
// State S431 (index = 11287)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (332)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (333)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (232)
, END
// State S432 (index = 11412)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (332)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (333)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (232)
, END
// State S433 (index = 11537)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (335)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, SHIFT (336)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (337)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (338)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (235)
, END
// State S434 (index = 11670)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (335)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, SHIFT (336)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (337)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (338)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (235)
, END
// State S435 (index = 11803)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (335)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, SHIFT (336)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (337)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (338)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (235)
, END
// State S436 (index = 11936)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (335)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, SHIFT (336)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (337)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (338)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (235)
, END
// State S437 (index = 12069)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (340)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, SHIFT (341)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (342)
, C_Lexique_plm_5F_lexique::kToken__21__25_, SHIFT (343)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (344)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, SHIFT (345)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (240)
, END
// State S438 (index = 12214)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (340)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, SHIFT (341)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (342)
, C_Lexique_plm_5F_lexique::kToken__21__25_, SHIFT (343)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (344)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, SHIFT (345)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (240)
, END
// State S439 (index = 12359)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (340)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, SHIFT (341)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (342)
, C_Lexique_plm_5F_lexique::kToken__21__25_, SHIFT (343)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (344)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, SHIFT (345)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (240)
, END
// State S440 (index = 12504)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (340)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, SHIFT (341)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (342)
, C_Lexique_plm_5F_lexique::kToken__21__25_, SHIFT (343)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (344)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, SHIFT (345)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (240)
, END
// State S441 (index = 12649)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (340)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, SHIFT (341)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (342)
, C_Lexique_plm_5F_lexique::kToken__21__25_, SHIFT (343)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (344)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, SHIFT (345)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (240)
, END
// State S442 (index = 12794)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (340)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, SHIFT (341)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (342)
, C_Lexique_plm_5F_lexique::kToken__21__25_, SHIFT (343)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (344)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, SHIFT (345)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (240)
, END
// State S443 (index = 12939)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (57)
, END
// State S444 (index = 13084)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S445 (index = 13119)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (518)
, END
// State S446 (index = 13122)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__5B_, SHIFT (444)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (267)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (445)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (257)
, END
// State S447 (index = 13273)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (64)
, END
// State S448 (index = 13418)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (520)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (521)
, END
// State S449 (index = 13423)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (523)
, END
// State S450 (index = 13426)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S451 (index = 13461)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (127)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (235)
, END
// State S452 (index = 13466)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (526)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (527)
, END
// State S453 (index = 13471)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (11)
, END
// State S454 (index = 13518)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S455 (index = 13553)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (157)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (530)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (531)
, C_Lexique_plm_5F_lexique::kToken_setup, SHIFT (532)
, C_Lexique_plm_5F_lexique::kToken_when, SHIFT (373)
, C_Lexique_plm_5F_lexique::kToken_until, SHIFT (374)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (375)
, END
// State S456 (index = 13568)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S457 (index = 13603)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S458 (index = 13638)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S459 (index = 13675)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (538)
, END
// State S460 (index = 13678)
, C_Lexique_plm_5F_lexique::kToken_until, SHIFT (539)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (540)
, END
// State S461 (index = 13683)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S462 (index = 13720)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (267)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (543)
, END
// State S463 (index = 13725)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S464 (index = 13760)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (547)
, END
// State S465 (index = 13763)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (548)
, END
// State S466 (index = 13766)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (261)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (383)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (384)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (385)
, END
// State S467 (index = 13775)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (261)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (383)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (384)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (385)
, END
// State S468 (index = 13784)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (267)
, END
// State S469 (index = 13787)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (268)
, END
// State S470 (index = 13790)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (551)
, END
// State S471 (index = 13793)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (261)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (383)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (384)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (385)
, END
// State S472 (index = 13802)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (553)
, END
// State S473 (index = 13805)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__5B_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (65)
, END
// State S474 (index = 13956)
, C_Lexique_plm_5F_lexique::kToken__5D_, SHIFT (554)
, END
// State S475 (index = 13959)
, C_Lexique_plm_5F_lexique::kToken__5B_, SHIFT (388)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (389)
, C_Lexique_plm_5F_lexique::kToken__7C__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__26__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__5E__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2B__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2B__25__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2D__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2D__25__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2A__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2A__25__3D_, REDUCE (308)
, END
// State S476 (index = 13986)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (556)
, END
// State S477 (index = 13989)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (557)
, END
// State S478 (index = 13992)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (558)
, END
// State S479 (index = 13995)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken__2D__3E_, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (26)
, END
// State S480 (index = 14048)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (201)
, END
// State S481 (index = 14051)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S482 (index = 14088)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (205)
, END
// State S483 (index = 14091)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S484 (index = 14128)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (197)
, END
// State S485 (index = 14131)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S486 (index = 14168)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (211)
, END
// State S487 (index = 14171)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (267)
, END
// State S488 (index = 14174)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S489 (index = 14211)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (563)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (125)
, END
// State S490 (index = 14260)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (98)
, END
// State S491 (index = 14263)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S492 (index = 14298)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (251)
, C_Lexique_plm_5F_lexique::kToken__2C_, SHIFT (566)
, END
// State S493 (index = 14303)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (247)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (412)
, END
// State S494 (index = 14308)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (56)
, END
// State S495 (index = 14453)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (53)
, END
// State S496 (index = 14598)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (54)
, END
// State S497 (index = 14743)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (55)
, END
// State S498 (index = 14888)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (569)
, END
// State S499 (index = 14891)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (213)
, END
// State S500 (index = 14988)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (215)
, END
// State S501 (index = 15087)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (217)
, END
// State S502 (index = 15188)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (219)
, END
// State S503 (index = 15291)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (221)
, END
// State S504 (index = 15396)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (223)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (223)
, END
// State S505 (index = 15503)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (233)
, END
// State S506 (index = 15624)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (234)
, END
// State S507 (index = 15745)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (236)
, END
// State S508 (index = 15870)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (237)
, END
// State S509 (index = 15995)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (238)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (238)
, END
// State S510 (index = 16120)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (239)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (239)
, END
// State S511 (index = 16245)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (241)
, END
// State S512 (index = 16378)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (242)
, END
// State S513 (index = 16511)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (243)
, END
// State S514 (index = 16644)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (244)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (244)
, END
// State S515 (index = 16777)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (245)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (245)
, END
// State S516 (index = 16910)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (246)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (246)
, END
// State S517 (index = 17043)
, C_Lexique_plm_5F_lexique::kToken__5D_, SHIFT (570)
, END
// State S518 (index = 17046)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__5B_, SHIFT (444)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (267)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (445)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (257)
, END
// State S519 (index = 17197)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (260)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (260)
, END
// State S520 (index = 17342)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (572)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (103)
, END
// State S521 (index = 17359)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S522 (index = 17394)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (5)
, END
// State S523 (index = 17409)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S524 (index = 17444)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (576)
, END
// State S525 (index = 17447)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (128)
, END
// State S526 (index = 17450)
, C_Lexique_plm_5F_lexique::kToken__5B_, SHIFT (577)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (139)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (139)
, END
// State S527 (index = 17457)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (137)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (137)
, END
// State S528 (index = 17462)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (135)
, C_Lexique_plm_5F_lexique::kToken__2C_, SHIFT (579)
, END
// State S529 (index = 17467)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (14)
, END
// State S530 (index = 17486)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (581)
, END
// State S531 (index = 17489)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (582)
, END
// State S532 (index = 17492)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (583)
, END
// State S533 (index = 17495)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (584)
, END
// State S534 (index = 17498)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (585)
, END
// State S535 (index = 17501)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (71)
, END
// State S536 (index = 17538)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (73)
, END
// State S537 (index = 17575)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (586)
, END
// State S538 (index = 17578)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (287)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (287)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (287)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (287)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (287)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (287)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (287)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (287)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (287)
, C_Lexique_plm_5F_lexique::kToken_else, SHIFT (587)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (287)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (287)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (287)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (287)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (287)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (287)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (287)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (287)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (287)
, END
// State S539 (index = 17617)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (292)
, END
// State S540 (index = 17620)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (293)
, END
// State S541 (index = 17623)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (589)
, END
// State S542 (index = 17626)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (300)
, C_Lexique_plm_5F_lexique::kToken_when, SHIFT (373)
, C_Lexique_plm_5F_lexique::kToken_until, SHIFT (374)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (375)
, END
// State S543 (index = 17635)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (592)
, END
// State S544 (index = 17638)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (298)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (298)
, END
// State S545 (index = 17643)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (291)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (291)
, END
// State S546 (index = 17648)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, SHIFT (593)
, END
// State S547 (index = 17651)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S548 (index = 17688)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (304)
, C_Lexique_plm_5F_lexique::kToken__2C_, SHIFT (595)
, END
// State S549 (index = 17693)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (262)
, END
// State S550 (index = 17696)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (265)
, END
// State S551 (index = 17699)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (597)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (269)
, END
// State S552 (index = 17710)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (263)
, END
// State S553 (index = 17713)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (599)
, END
// State S554 (index = 17716)
, C_Lexique_plm_5F_lexique::kToken__5B_, SHIFT (388)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (389)
, C_Lexique_plm_5F_lexique::kToken__7C__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__26__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__5E__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2B__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2B__25__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2D__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2D__25__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2A__3D_, REDUCE (308)
, C_Lexique_plm_5F_lexique::kToken__2A__25__3D_, REDUCE (308)
, END
// State S555 (index = 17743)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (309)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (309)
, C_Lexique_plm_5F_lexique::kToken__7C__3D_, REDUCE (309)
, C_Lexique_plm_5F_lexique::kToken__26__3D_, REDUCE (309)
, C_Lexique_plm_5F_lexique::kToken__5E__3D_, REDUCE (309)
, C_Lexique_plm_5F_lexique::kToken__2B__3D_, REDUCE (309)
, C_Lexique_plm_5F_lexique::kToken__2B__25__3D_, REDUCE (309)
, C_Lexique_plm_5F_lexique::kToken__2D__3D_, REDUCE (309)
, C_Lexique_plm_5F_lexique::kToken__2D__25__3D_, REDUCE (309)
, C_Lexique_plm_5F_lexique::kToken__2A__3D_, REDUCE (309)
, C_Lexique_plm_5F_lexique::kToken__2A__25__3D_, REDUCE (309)
, END
// State S556 (index = 17766)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (394)
, C_Lexique_plm_5F_lexique::kToken__3F__21_, SHIFT (395)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (396)
, END
// State S557 (index = 17775)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (394)
, C_Lexique_plm_5F_lexique::kToken__3F__21_, SHIFT (395)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (396)
, END
// State S558 (index = 17784)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (394)
, C_Lexique_plm_5F_lexique::kToken__3F__21_, SHIFT (395)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (396)
, END
// State S559 (index = 17793)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (604)
, END
// State S560 (index = 17796)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (605)
, END
// State S561 (index = 17799)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (606)
, END
// State S562 (index = 17802)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (607)
, END
// State S563 (index = 17805)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken__40_attribute, SHIFT (563)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (125)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (125)
, END
// State S564 (index = 17854)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (10)
, END
// State S565 (index = 17901)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (254)
, END
// State S566 (index = 17906)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (609)
, END
// State S567 (index = 17909)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (610)
, END
// State S568 (index = 17912)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (248)
, END
// State S569 (index = 17915)
, C_Lexique_plm_5F_lexique::kToken_else, SHIFT (611)
, END
// State S570 (index = 17918)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__5B_, SHIFT (444)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (267)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (445)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (257)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (257)
, END
// State S571 (index = 18069)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (258)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (258)
, END
// State S572 (index = 18214)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S573 (index = 18249)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (101)
, END
// State S574 (index = 18264)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (102)
, END
// State S575 (index = 18279)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (9)
, END
// State S576 (index = 18294)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S577 (index = 18329)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (615)
, END
// State S578 (index = 18332)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (138)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (138)
, END
// State S579 (index = 18337)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (526)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (527)
, END
// State S580 (index = 18342)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (617)
, END
// State S581 (index = 18345)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (618)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (162)
, END
// State S582 (index = 18350)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (287)
, END
// State S583 (index = 18353)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (621)
, END
// State S584 (index = 18356)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S585 (index = 18393)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (16)
, END
// State S586 (index = 18440)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (80)
, END
// State S587 (index = 18477)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (623)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, END
// State S588 (index = 18482)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (77)
, END
// State S589 (index = 18519)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (267)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (625)
, END
// State S590 (index = 18524)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (628)
, END
// State S591 (index = 18527)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (629)
, END
// State S592 (index = 18530)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (267)
, END
// State S593 (index = 18533)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S594 (index = 18568)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (632)
, END
// State S595 (index = 18571)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (633)
, END
// State S596 (index = 18574)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (634)
, END
// State S597 (index = 18577)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (270)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (270)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (270)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (270)
, END
// State S598 (index = 18586)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (261)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (383)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (384)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (385)
, END
// State S599 (index = 18595)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (261)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (383)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (384)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (385)
, END
// State S600 (index = 18604)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (310)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (310)
, C_Lexique_plm_5F_lexique::kToken__7C__3D_, REDUCE (310)
, C_Lexique_plm_5F_lexique::kToken__26__3D_, REDUCE (310)
, C_Lexique_plm_5F_lexique::kToken__5E__3D_, REDUCE (310)
, C_Lexique_plm_5F_lexique::kToken__2B__3D_, REDUCE (310)
, C_Lexique_plm_5F_lexique::kToken__2B__25__3D_, REDUCE (310)
, C_Lexique_plm_5F_lexique::kToken__2D__3D_, REDUCE (310)
, C_Lexique_plm_5F_lexique::kToken__2D__25__3D_, REDUCE (310)
, C_Lexique_plm_5F_lexique::kToken__2A__3D_, REDUCE (310)
, C_Lexique_plm_5F_lexique::kToken__2A__25__3D_, REDUCE (310)
, END
// State S601 (index = 18627)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (185)
, END
// State S602 (index = 18630)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (186)
, END
// State S603 (index = 18633)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (187)
, END
// State S604 (index = 18636)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (31)
, END
// State S605 (index = 18687)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (32)
, END
// State S606 (index = 18738)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (30)
, END
// State S607 (index = 18789)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (33)
, END
// State S608 (index = 18840)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (126)
, END
// State S609 (index = 18887)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (491)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (253)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (253)
, END
// State S610 (index = 18894)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (63)
, END
// State S611 (index = 19039)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (638)
, END
// State S612 (index = 19042)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (259)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (259)
, END
// State S613 (index = 19187)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (104)
, END
// State S614 (index = 19202)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (132)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (132)
, END
// State S615 (index = 19207)
, C_Lexique_plm_5F_lexique::kToken__5D_, SHIFT (639)
, END
// State S616 (index = 19210)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (135)
, C_Lexique_plm_5F_lexique::kToken__2C_, SHIFT (579)
, END
// State S617 (index = 19215)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (134)
, END
// State S618 (index = 19262)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (163)
, END
// State S619 (index = 19265)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (641)
, END
// State S620 (index = 19268)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (164)
, C_Lexique_plm_5F_lexique::kToken__2D__3E_, SHIFT (642)
, END
// State S621 (index = 19273)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S622 (index = 19310)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (645)
, END
// State S623 (index = 19313)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S624 (index = 19350)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (289)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (289)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (289)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (289)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (289)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (289)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (289)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (289)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (289)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (289)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (289)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (289)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (289)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (289)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (289)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (289)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (289)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (289)
, END
// State S625 (index = 19387)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (647)
, END
// State S626 (index = 19390)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (294)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (294)
, END
// State S627 (index = 19395)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (290)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (290)
, END
// State S628 (index = 19400)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S629 (index = 19437)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (79)
, END
// State S630 (index = 19474)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (299)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (299)
, END
// State S631 (index = 19479)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (649)
, END
// State S632 (index = 19482)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (81)
, END
// State S633 (index = 19519)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (304)
, C_Lexique_plm_5F_lexique::kToken__2C_, SHIFT (595)
, END
// State S634 (index = 19524)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S635 (index = 19561)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (266)
, END
// State S636 (index = 19564)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (264)
, END
// State S637 (index = 19567)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (251)
, C_Lexique_plm_5F_lexique::kToken__2C_, SHIFT (566)
, END
// State S638 (index = 19572)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S639 (index = 19607)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (140)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (140)
, END
// State S640 (index = 19612)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (136)
, END
// State S641 (index = 19615)
, C_Lexique_plm_5F_lexique::kToken__22_string_22_, SHIFT (183)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (185)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (186)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (187)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (188)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (189)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (190)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (249)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (197)
, END
// State S642 (index = 19650)
, C_Lexique_plm_5F_lexique::kToken__24_type, SHIFT (655)
, END
// State S643 (index = 19653)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (656)
, END
// State S644 (index = 19656)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (657)
, END
// State S645 (index = 19659)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (157)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (530)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (531)
, C_Lexique_plm_5F_lexique::kToken_setup, SHIFT (532)
, C_Lexique_plm_5F_lexique::kToken_when, SHIFT (373)
, C_Lexique_plm_5F_lexique::kToken_until, SHIFT (374)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (375)
, END
// State S646 (index = 19674)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (659)
, END
// State S647 (index = 19677)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (267)
, END
// State S648 (index = 19680)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (300)
, C_Lexique_plm_5F_lexique::kToken_when, SHIFT (373)
, C_Lexique_plm_5F_lexique::kToken_until, SHIFT (374)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (375)
, END
// State S649 (index = 19689)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S650 (index = 19726)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (305)
, END
// State S651 (index = 19729)
, C_Lexique_plm_5F_lexique::kToken_case, SHIFT (663)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (302)
, END
// State S652 (index = 19734)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (252)
, END
// State S653 (index = 19737)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (665)
, END
// State S654 (index = 19740)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (157)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (530)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (531)
, C_Lexique_plm_5F_lexique::kToken_setup, SHIFT (532)
, C_Lexique_plm_5F_lexique::kToken_when, SHIFT (373)
, C_Lexique_plm_5F_lexique::kToken_until, SHIFT (374)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (375)
, END
// State S655 (index = 19755)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (165)
, END
// State S656 (index = 19758)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S657 (index = 19795)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (157)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (530)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (531)
, C_Lexique_plm_5F_lexique::kToken_setup, SHIFT (532)
, C_Lexique_plm_5F_lexique::kToken_when, SHIFT (373)
, C_Lexique_plm_5F_lexique::kToken_until, SHIFT (374)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (375)
, END
// State S658 (index = 19810)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (161)
, END
// State S659 (index = 19813)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (288)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (288)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (288)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (288)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (288)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (288)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (288)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (288)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (288)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (288)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (288)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (288)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (288)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (288)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (288)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (288)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (288)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (288)
, END
// State S660 (index = 19850)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (295)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (295)
, END
// State S661 (index = 19855)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (301)
, END
// State S662 (index = 19858)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (669)
, END
// State S663 (index = 19861)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (670)
, END
// State S664 (index = 19864)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (671)
, END
// State S665 (index = 19867)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_type, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__24_type, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__5D_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_public, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_module, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_setup, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_svc, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_isr, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__2E__2E__3C_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (58)
, END
// State S666 (index = 20012)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (158)
, END
// State S667 (index = 20015)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (672)
, END
// State S668 (index = 20018)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (160)
, END
// State S669 (index = 20021)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (82)
, END
// State S670 (index = 20058)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (304)
, C_Lexique_plm_5F_lexique::kToken__2C_, SHIFT (595)
, END
// State S671 (index = 20063)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (85)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (85)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (85)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (85)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (85)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (85)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (85)
, C_Lexique_plm_5F_lexique::kToken_loop, REDUCE (85)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (85)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (85)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (85)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (85)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (85)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (85)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (85)
, C_Lexique_plm_5F_lexique::kToken_sync, REDUCE (85)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (85)
, C_Lexique_plm_5F_lexique::kToken_switch, REDUCE (85)
, END
// State S672 (index = 20100)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (157)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (530)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (531)
, C_Lexique_plm_5F_lexique::kToken_setup, SHIFT (532)
, C_Lexique_plm_5F_lexique::kToken_when, SHIFT (373)
, C_Lexique_plm_5F_lexique::kToken_until, SHIFT (374)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (375)
, END
// State S673 (index = 20115)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (675)
, END
// State S674 (index = 20118)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (159)
, END
// State S675 (index = 20121)
, C_Lexique_plm_5F_lexique::kToken_case, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (306)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_loop, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_until, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (271)
, C_Lexique_plm_5F_lexique::kToken_sync, SHIFT (154)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken_switch, SHIFT (156)
, END
// State S676 (index = 20158)
, C_Lexique_plm_5F_lexique::kToken_case, SHIFT (663)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (302)
, END
// State S677 (index = 20163)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (303)
, END} ;

static const uint32_t gActionTableIndex_plm_grammar [678] = {
  0  // S0
, 47  // S1
, 50  // S2
, 53  // S3
, 56  // S4
, 63  // S5
, 66  // S6
, 69  // S7
, 72  // S8
, 75  // S9
, 78  // S10
, 81  // S11
, 84  // S12
, 89  // S13
, 92  // S14
, 95  // S15
, 98  // S16
, 101  // S17
, 104  // S18
, 107  // S19
, 110  // S20
, 157  // S21
, 204  // S22
, 251  // S23
, 298  // S24
, 345  // S25
, 392  // S26
, 395  // S27
, 442  // S28
, 451  // S29
, 498  // S30
, 545  // S31
, 548  // S32
, 551  // S33
, 554  // S34
, 557  // S35
, 604  // S36
, 607  // S37
, 610  // S38
, 615  // S39
, 620  // S40
, 623  // S41
, 630  // S42
, 635  // S43
, 638  // S44
, 641  // S45
, 644  // S46
, 647  // S47
, 650  // S48
, 653  // S49
, 674  // S50
, 721  // S51
, 726  // S52
, 731  // S53
, 734  // S54
, 781  // S55
, 784  // S56
, 787  // S57
, 790  // S58
, 793  // S59
, 796  // S60
, 799  // S61
, 802  // S62
, 805  // S63
, 808  // S64
, 811  // S65
, 814  // S66
, 817  // S67
, 826  // S68
, 831  // S69
, 834  // S70
, 839  // S71
, 842  // S72
, 845  // S73
, 848  // S74
, 853  // S75
, 856  // S76
, 871  // S77
, 878  // S78
, 883  // S79
, 886  // S80
, 889  // S81
, 908  // S82
, 911  // S83
, 914  // S84
, 917  // S85
, 954  // S86
, 991  // S87
, 994  // S88
, 997  // S89
, 1000  // S90
, 1003  // S91
, 1006  // S92
, 1009  // S93
, 1012  // S94
, 1015  // S95
, 1018  // S96
, 1021  // S97
, 1024  // S98
, 1027  // S99
, 1030  // S100
, 1035  // S101
, 1038  // S102
, 1085  // S103
, 1090  // S104
, 1095  // S105
, 1100  // S106
, 1103  // S107
, 1106  // S108
, 1111  // S109
, 1160  // S110
, 1163  // S111
, 1210  // S112
, 1213  // S113
, 1248  // S114
, 1251  // S115
, 1266  // S116
, 1275  // S117
, 1290  // S118
, 1305  // S119
, 1320  // S120
, 1335  // S121
, 1350  // S122
, 1365  // S123
, 1380  // S124
, 1383  // S125
, 1386  // S126
, 1391  // S127
, 1426  // S128
, 1461  // S129
, 1466  // S130
, 1501  // S131
, 1504  // S132
, 1523  // S133
, 1542  // S134
, 1561  // S135
, 1580  // S136
, 1599  // S137
, 1618  // S138
, 1637  // S139
, 1656  // S140
, 1675  // S141
, 1678  // S142
, 1681  // S143
, 1718  // S144
, 1755  // S145
, 1758  // S146
, 1795  // S147
, 1798  // S148
, 1833  // S149
, 1836  // S150
, 1871  // S151
, 1874  // S152
, 1909  // S153
, 1944  // S154
, 1947  // S155
, 1950  // S156
, 1985  // S157
, 1988  // S158
, 2025  // S159
, 2062  // S160
, 2099  // S161
, 2122  // S162
, 2133  // S163
, 2136  // S164
, 2139  // S165
, 2144  // S166
, 2147  // S167
, 2150  // S168
, 2153  // S169
, 2190  // S170
, 2195  // S171
, 2198  // S172
, 2203  // S173
, 2206  // S174
, 2211  // S175
, 2214  // S176
, 2217  // S177
, 2254  // S178
, 2259  // S179
, 2262  // S180
, 2297  // S181
, 2332  // S182
, 2337  // S183
, 2482  // S184
, 2489  // S185
, 2524  // S186
, 2669  // S187
, 2704  // S188
, 2739  // S189
, 2774  // S190
, 2809  // S191
, 2844  // S192
, 2879  // S193
, 2914  // S194
, 2949  // S195
, 3094  // S196
, 3239  // S197
, 3242  // S198
, 3289  // S199
, 3386  // S200
, 3485  // S201
, 3586  // S202
, 3689  // S203
, 3794  // S204
, 3901  // S205
, 4010  // S206
, 4123  // S207
, 4244  // S208
, 4369  // S209
, 4502  // S210
, 4647  // S211
, 4792  // S212
, 4795  // S213
, 4798  // S214
, 4807  // S215
, 4822  // S216
, 4837  // S217
, 4852  // S218
, 4867  // S219
, 4882  // S220
, 4897  // S221
, 4912  // S222
, 4915  // S223
, 4918  // S224
, 4921  // S225
, 4924  // S226
, 4927  // S227
, 4930  // S228
, 4933  // S229
, 4936  // S230
, 4939  // S231
, 4986  // S232
, 4989  // S233
, 4992  // S234
, 4997  // S235
, 5004  // S236
, 5007  // S237
, 5054  // S238
, 5059  // S239
, 5062  // S240
, 5065  // S241
, 5068  // S242
, 5071  // S243
, 5074  // S244
, 5077  // S245
, 5080  // S246
, 5083  // S247
, 5086  // S248
, 5133  // S249
, 5136  // S250
, 5139  // S251
, 5142  // S252
, 5147  // S253
, 5158  // S254
, 5163  // S255
, 5200  // S256
, 5235  // S257
, 5238  // S258
, 5241  // S259
, 5278  // S260
, 5315  // S261
, 5322  // S262
, 5327  // S263
, 5330  // S264
, 5377  // S265
, 5388  // S266
, 5423  // S267
, 5432  // S268
, 5467  // S269
, 5502  // S270
, 5537  // S271
, 5572  // S272
, 5607  // S273
, 5642  // S274
, 5677  // S275
, 5712  // S276
, 5747  // S277
, 5786  // S278
, 5821  // S279
, 5856  // S280
, 5883  // S281
, 5934  // S282
, 5939  // S283
, 5942  // S284
, 5989  // S285
, 5992  // S286
, 5995  // S287
, 6004  // S288
, 6009  // S289
, 6012  // S290
, 6017  // S291
, 6020  // S292
, 6025  // S293
, 6028  // S294
, 6031  // S295
, 6036  // S296
, 6039  // S297
, 6042  // S298
, 6045  // S299
, 6048  // S300
, 6051  // S301
, 6056  // S302
, 6059  // S303
, 6204  // S304
, 6349  // S305
, 6494  // S306
, 6639  // S307
, 6642  // S308
, 6645  // S309
, 6648  // S310
, 6651  // S311
, 6654  // S312
, 6689  // S313
, 6786  // S314
, 6821  // S315
, 6920  // S316
, 6955  // S317
, 7056  // S318
, 7091  // S319
, 7194  // S320
, 7229  // S321
, 7334  // S322
, 7369  // S323
, 7476  // S324
, 7511  // S325
, 7546  // S326
, 7655  // S327
, 7690  // S328
, 7725  // S329
, 7760  // S330
, 7795  // S331
, 7908  // S332
, 7943  // S333
, 7978  // S334
, 8099  // S335
, 8134  // S336
, 8169  // S337
, 8204  // S338
, 8239  // S339
, 8364  // S340
, 8399  // S341
, 8434  // S342
, 8469  // S343
, 8504  // S344
, 8539  // S345
, 8574  // S346
, 8707  // S347
, 8710  // S348
, 8861  // S349
, 8864  // S350
, 8867  // S351
, 8870  // S352
, 8873  // S353
, 8876  // S354
, 8879  // S355
, 8882  // S356
, 8885  // S357
, 8932  // S358
, 8935  // S359
, 8938  // S360
, 8943  // S361
, 8992  // S362
, 8995  // S363
, 8998  // S364
, 9001  // S365
, 9048  // S366
, 9095  // S367
, 9134  // S368
, 9137  // S369
, 9140  // S370
, 9143  // S371
, 9146  // S372
, 9183  // S373
, 9218  // S374
, 9221  // S375
, 9224  // S376
, 9227  // S377
, 9232  // S378
, 9235  // S379
, 9238  // S380
, 9273  // S381
, 9276  // S382
, 9313  // S383
, 9348  // S384
, 9355  // S385
, 9360  // S386
, 9363  // S387
, 9400  // S388
, 9435  // S389
, 9438  // S390
, 9461  // S391
, 9464  // S392
, 9517  // S393
, 9568  // S394
, 9571  // S395
, 9574  // S396
, 9577  // S397
, 9580  // S398
, 9583  // S399
, 9586  // S400
, 9589  // S401
, 9592  // S402
, 9595  // S403
, 9598  // S404
, 9649  // S405
, 9654  // S406
, 9657  // S407
, 9704  // S408
, 9707  // S409
, 9712  // S410
, 9759  // S411
, 9766  // S412
, 9801  // S413
, 9804  // S414
, 9949  // S415
, 9952  // S416
, 9955  // S417
, 9958  // S418
, 9993  // S419
, 10092  // S420
, 10193  // S421
, 10296  // S422
, 10401  // S423
, 10508  // S424
, 10617  // S425
, 10726  // S426
, 10835  // S427
, 10948  // S428
, 11061  // S429
, 11174  // S430
, 11287  // S431
, 11412  // S432
, 11537  // S433
, 11670  // S434
, 11803  // S435
, 11936  // S436
, 12069  // S437
, 12214  // S438
, 12359  // S439
, 12504  // S440
, 12649  // S441
, 12794  // S442
, 12939  // S443
, 13084  // S444
, 13119  // S445
, 13122  // S446
, 13273  // S447
, 13418  // S448
, 13423  // S449
, 13426  // S450
, 13461  // S451
, 13466  // S452
, 13471  // S453
, 13518  // S454
, 13553  // S455
, 13568  // S456
, 13603  // S457
, 13638  // S458
, 13675  // S459
, 13678  // S460
, 13683  // S461
, 13720  // S462
, 13725  // S463
, 13760  // S464
, 13763  // S465
, 13766  // S466
, 13775  // S467
, 13784  // S468
, 13787  // S469
, 13790  // S470
, 13793  // S471
, 13802  // S472
, 13805  // S473
, 13956  // S474
, 13959  // S475
, 13986  // S476
, 13989  // S477
, 13992  // S478
, 13995  // S479
, 14048  // S480
, 14051  // S481
, 14088  // S482
, 14091  // S483
, 14128  // S484
, 14131  // S485
, 14168  // S486
, 14171  // S487
, 14174  // S488
, 14211  // S489
, 14260  // S490
, 14263  // S491
, 14298  // S492
, 14303  // S493
, 14308  // S494
, 14453  // S495
, 14598  // S496
, 14743  // S497
, 14888  // S498
, 14891  // S499
, 14988  // S500
, 15087  // S501
, 15188  // S502
, 15291  // S503
, 15396  // S504
, 15503  // S505
, 15624  // S506
, 15745  // S507
, 15870  // S508
, 15995  // S509
, 16120  // S510
, 16245  // S511
, 16378  // S512
, 16511  // S513
, 16644  // S514
, 16777  // S515
, 16910  // S516
, 17043  // S517
, 17046  // S518
, 17197  // S519
, 17342  // S520
, 17359  // S521
, 17394  // S522
, 17409  // S523
, 17444  // S524
, 17447  // S525
, 17450  // S526
, 17457  // S527
, 17462  // S528
, 17467  // S529
, 17486  // S530
, 17489  // S531
, 17492  // S532
, 17495  // S533
, 17498  // S534
, 17501  // S535
, 17538  // S536
, 17575  // S537
, 17578  // S538
, 17617  // S539
, 17620  // S540
, 17623  // S541
, 17626  // S542
, 17635  // S543
, 17638  // S544
, 17643  // S545
, 17648  // S546
, 17651  // S547
, 17688  // S548
, 17693  // S549
, 17696  // S550
, 17699  // S551
, 17710  // S552
, 17713  // S553
, 17716  // S554
, 17743  // S555
, 17766  // S556
, 17775  // S557
, 17784  // S558
, 17793  // S559
, 17796  // S560
, 17799  // S561
, 17802  // S562
, 17805  // S563
, 17854  // S564
, 17901  // S565
, 17906  // S566
, 17909  // S567
, 17912  // S568
, 17915  // S569
, 17918  // S570
, 18069  // S571
, 18214  // S572
, 18249  // S573
, 18264  // S574
, 18279  // S575
, 18294  // S576
, 18329  // S577
, 18332  // S578
, 18337  // S579
, 18342  // S580
, 18345  // S581
, 18350  // S582
, 18353  // S583
, 18356  // S584
, 18393  // S585
, 18440  // S586
, 18477  // S587
, 18482  // S588
, 18519  // S589
, 18524  // S590
, 18527  // S591
, 18530  // S592
, 18533  // S593
, 18568  // S594
, 18571  // S595
, 18574  // S596
, 18577  // S597
, 18586  // S598
, 18595  // S599
, 18604  // S600
, 18627  // S601
, 18630  // S602
, 18633  // S603
, 18636  // S604
, 18687  // S605
, 18738  // S606
, 18789  // S607
, 18840  // S608
, 18887  // S609
, 18894  // S610
, 19039  // S611
, 19042  // S612
, 19187  // S613
, 19202  // S614
, 19207  // S615
, 19210  // S616
, 19215  // S617
, 19262  // S618
, 19265  // S619
, 19268  // S620
, 19273  // S621
, 19310  // S622
, 19313  // S623
, 19350  // S624
, 19387  // S625
, 19390  // S626
, 19395  // S627
, 19400  // S628
, 19437  // S629
, 19474  // S630
, 19479  // S631
, 19482  // S632
, 19519  // S633
, 19524  // S634
, 19561  // S635
, 19564  // S636
, 19567  // S637
, 19572  // S638
, 19607  // S639
, 19612  // S640
, 19615  // S641
, 19650  // S642
, 19653  // S643
, 19656  // S644
, 19659  // S645
, 19674  // S646
, 19677  // S647
, 19680  // S648
, 19689  // S649
, 19726  // S650
, 19729  // S651
, 19734  // S652
, 19737  // S653
, 19740  // S654
, 19755  // S655
, 19758  // S656
, 19795  // S657
, 19810  // S658
, 19813  // S659
, 19850  // S660
, 19855  // S661
, 19858  // S662
, 19861  // S663
, 19864  // S664
, 19867  // S665
, 20012  // S666
, 20015  // S667
, 20018  // S668
, 20021  // S669
, 20058  // S670
, 20063  // S671
, 20100  // S672
, 20115  // S673
, 20118  // S674
, 20121  // S675
, 20158  // S676
, 20163  // S677
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                            SLR states successors table                                               
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

// Successor tables handle non terminal successors ;
// an entry is (non_terminal_symbol, n) ; successor is state n.

static const int16_t gSuccessorTable_plm_grammar_0 [31] = {0, 20,
  1, 21,
  2, 22,
  3, 23,
  4, 24,
  5, 25,
  6, 26,
  7, 27,
  12, 28,
  13, 29,
  17, 30,
  40, 31,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_15 [3] = {15, 50, -1} ;

static const int16_t gSuccessorTable_plm_grammar_16 [3] = {15, 51, -1} ;

static const int16_t gSuccessorTable_plm_grammar_20 [29] = {0, 20,
  1, 21,
  2, 22,
  3, 23,
  4, 24,
  5, 25,
  7, 27,
  12, 28,
  13, 29,
  17, 30,
  40, 55,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_21 [29] = {0, 20,
  1, 21,
  2, 22,
  3, 23,
  4, 24,
  5, 25,
  7, 27,
  12, 28,
  13, 29,
  17, 30,
  40, 56,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_22 [29] = {0, 20,
  1, 21,
  2, 22,
  3, 23,
  4, 24,
  5, 25,
  7, 27,
  12, 28,
  13, 29,
  17, 30,
  40, 57,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_23 [29] = {0, 20,
  1, 21,
  2, 22,
  3, 23,
  4, 24,
  5, 25,
  7, 27,
  12, 28,
  13, 29,
  17, 30,
  40, 58,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_24 [29] = {0, 20,
  1, 21,
  2, 22,
  3, 23,
  4, 24,
  5, 25,
  7, 27,
  12, 28,
  13, 29,
  17, 30,
  40, 59,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_25 [29] = {0, 20,
  1, 21,
  2, 22,
  3, 23,
  4, 24,
  5, 25,
  7, 27,
  12, 28,
  13, 29,
  17, 30,
  40, 60,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_27 [29] = {0, 20,
  1, 21,
  2, 22,
  3, 23,
  4, 24,
  5, 25,
  7, 27,
  12, 28,
  13, 29,
  17, 30,
  40, 61,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_28 [3] = {72, 66, -1} ;

static const int16_t gSuccessorTable_plm_grammar_33 [3] = {15, 68, -1} ;

static const int16_t gSuccessorTable_plm_grammar_38 [3] = {58, 73, -1} ;

static const int16_t gSuccessorTable_plm_grammar_39 [3] = {45, 75, -1} ;

static const int16_t gSuccessorTable_plm_grammar_41 [3] = {51, 78, -1} ;

static const int16_t gSuccessorTable_plm_grammar_42 [3] = {57, 80, -1} ;

static const int16_t gSuccessorTable_plm_grammar_49 [5] = {14, 96,
  67, 97, -1} ;

static const int16_t gSuccessorTable_plm_grammar_51 [3] = {70, 99, -1} ;

static const int16_t gSuccessorTable_plm_grammar_52 [3] = {71, 101, -1} ;

static const int16_t gSuccessorTable_plm_grammar_68 [3] = {66, 107, -1} ;

static const int16_t gSuccessorTable_plm_grammar_70 [3] = {8, 111, -1} ;

static const int16_t gSuccessorTable_plm_grammar_74 [3] = {45, 114, -1} ;

static const int16_t gSuccessorTable_plm_grammar_76 [25] = {0, 118,
  1, 119,
  2, 120,
  3, 121,
  10, 122,
  12, 28,
  17, 123,
  47, 124,
  48, 125,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_77 [3] = {51, 126, -1} ;

static const int16_t gSuccessorTable_plm_grammar_78 [3] = {52, 129, -1} ;

static const int16_t gSuccessorTable_plm_grammar_81 [27] = {0, 133,
  1, 134,
  2, 135,
  3, 136,
  4, 137,
  11, 138,
  12, 28,
  13, 139,
  17, 140,
  60, 141,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_85 [15] = {33, 157,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_86 [15] = {33, 164,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_100 [3] = {71, 168, -1} ;

static const int16_t gSuccessorTable_plm_grammar_103 [3] = {75, 171, -1} ;

static const int16_t gSuccessorTable_plm_grammar_104 [3] = {77, 173, -1} ;

static const int16_t gSuccessorTable_plm_grammar_105 [3] = {73, 175, -1} ;

static const int16_t gSuccessorTable_plm_grammar_108 [3] = {80, 179, -1} ;

static const int16_t gSuccessorTable_plm_grammar_113 [33] = {18, 198,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_115 [25] = {0, 216,
  1, 217,
  2, 218,
  3, 219,
  9, 220,
  12, 28,
  17, 221,
  42, 222,
  46, 223,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_117 [25] = {0, 118,
  1, 119,
  2, 120,
  3, 121,
  10, 122,
  12, 28,
  17, 123,
  47, 224,
  48, 125,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_118 [25] = {0, 118,
  1, 119,
  2, 120,
  3, 121,
  10, 122,
  12, 28,
  17, 123,
  47, 225,
  48, 125,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_119 [25] = {0, 118,
  1, 119,
  2, 120,
  3, 121,
  10, 122,
  12, 28,
  17, 123,
  47, 226,
  48, 125,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_120 [25] = {0, 118,
  1, 119,
  2, 120,
  3, 121,
  10, 122,
  12, 28,
  17, 123,
  47, 227,
  48, 125,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_121 [25] = {0, 118,
  1, 119,
  2, 120,
  3, 121,
  10, 122,
  12, 28,
  17, 123,
  47, 228,
  48, 125,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_122 [25] = {0, 118,
  1, 119,
  2, 120,
  3, 121,
  10, 122,
  12, 28,
  17, 123,
  47, 229,
  48, 125,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_123 [25] = {0, 118,
  1, 119,
  2, 120,
  3, 121,
  10, 122,
  12, 28,
  17, 123,
  47, 230,
  48, 125,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_127 [33] = {18, 233,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_128 [33] = {18, 234,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_129 [3] = {50, 236, -1} ;

static const int16_t gSuccessorTable_plm_grammar_130 [33] = {18, 237,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_132 [27] = {0, 133,
  1, 134,
  2, 135,
  3, 136,
  4, 137,
  11, 138,
  12, 28,
  13, 139,
  17, 140,
  60, 239,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_133 [27] = {0, 133,
  1, 134,
  2, 135,
  3, 136,
  4, 137,
  11, 138,
  12, 28,
  13, 139,
  17, 140,
  60, 240,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_134 [27] = {0, 133,
  1, 134,
  2, 135,
  3, 136,
  4, 137,
  11, 138,
  12, 28,
  13, 139,
  17, 140,
  60, 241,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_135 [27] = {0, 133,
  1, 134,
  2, 135,
  3, 136,
  4, 137,
  11, 138,
  12, 28,
  13, 139,
  17, 140,
  60, 242,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_136 [27] = {0, 133,
  1, 134,
  2, 135,
  3, 136,
  4, 137,
  11, 138,
  12, 28,
  13, 139,
  17, 140,
  60, 243,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_137 [27] = {0, 133,
  1, 134,
  2, 135,
  3, 136,
  4, 137,
  11, 138,
  12, 28,
  13, 139,
  17, 140,
  60, 244,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_138 [27] = {0, 133,
  1, 134,
  2, 135,
  3, 136,
  4, 137,
  11, 138,
  12, 28,
  13, 139,
  17, 140,
  60, 245,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_139 [27] = {0, 133,
  1, 134,
  2, 135,
  3, 136,
  4, 137,
  11, 138,
  12, 28,
  13, 139,
  17, 140,
  60, 246,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_140 [27] = {0, 133,
  1, 134,
  2, 135,
  3, 136,
  4, 137,
  11, 138,
  12, 28,
  13, 139,
  17, 140,
  60, 247,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_143 [15] = {33, 250,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_144 [15] = {33, 251,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_146 [13] = {34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 253,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_148 [33] = {18, 255,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_150 [33] = {18, 257,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_152 [33] = {18, 259,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_153 [33] = {18, 260,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_156 [33] = {18, 263,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_158 [13] = {34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 265,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_161 [7] = {32, 277,
  35, 278,
  103, 279, -1} ;

static const int16_t gSuccessorTable_plm_grammar_165 [3] = {68, 283, -1} ;

static const int16_t gSuccessorTable_plm_grammar_169 [15] = {33, 285,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_170 [3] = {75, 286, -1} ;

static const int16_t gSuccessorTable_plm_grammar_171 [3] = {16, 288, -1} ;

static const int16_t gSuccessorTable_plm_grammar_172 [3] = {77, 289, -1} ;

static const int16_t gSuccessorTable_plm_grammar_173 [3] = {16, 290, -1} ;

static const int16_t gSuccessorTable_plm_grammar_174 [3] = {73, 291, -1} ;

static const int16_t gSuccessorTable_plm_grammar_175 [3] = {16, 292, -1} ;

static const int16_t gSuccessorTable_plm_grammar_177 [15] = {33, 293,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_178 [3] = {80, 294, -1} ;

static const int16_t gSuccessorTable_plm_grammar_179 [3] = {16, 295, -1} ;

static const int16_t gSuccessorTable_plm_grammar_180 [33] = {18, 296,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_181 [33] = {18, 297,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_182 [3] = {41, 299, -1} ;

static const int16_t gSuccessorTable_plm_grammar_185 [33] = {18, 302,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_187 [7] = {31, 303,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_188 [7] = {31, 304,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_189 [7] = {31, 305,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_190 [7] = {31, 306,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_191 [33] = {18, 307,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_192 [33] = {18, 308,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_193 [33] = {18, 309,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_194 [33] = {18, 310,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_200 [3] = {82, 313, -1} ;

static const int16_t gSuccessorTable_plm_grammar_201 [3] = {83, 315, -1} ;

static const int16_t gSuccessorTable_plm_grammar_202 [3] = {84, 317, -1} ;

static const int16_t gSuccessorTable_plm_grammar_203 [3] = {85, 319, -1} ;

static const int16_t gSuccessorTable_plm_grammar_204 [3] = {86, 321, -1} ;

static const int16_t gSuccessorTable_plm_grammar_205 [3] = {87, 323, -1} ;

static const int16_t gSuccessorTable_plm_grammar_206 [3] = {88, 326, -1} ;

static const int16_t gSuccessorTable_plm_grammar_207 [3] = {89, 331, -1} ;

static const int16_t gSuccessorTable_plm_grammar_208 [3] = {90, 334, -1} ;

static const int16_t gSuccessorTable_plm_grammar_209 [3] = {91, 339, -1} ;

static const int16_t gSuccessorTable_plm_grammar_210 [3] = {92, 346, -1} ;

static const int16_t gSuccessorTable_plm_grammar_215 [25] = {0, 216,
  1, 217,
  2, 218,
  3, 219,
  9, 220,
  12, 28,
  17, 221,
  42, 222,
  46, 349,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_216 [25] = {0, 216,
  1, 217,
  2, 218,
  3, 219,
  9, 220,
  12, 28,
  17, 221,
  42, 222,
  46, 350,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_217 [25] = {0, 216,
  1, 217,
  2, 218,
  3, 219,
  9, 220,
  12, 28,
  17, 221,
  42, 222,
  46, 351,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_218 [25] = {0, 216,
  1, 217,
  2, 218,
  3, 219,
  9, 220,
  12, 28,
  17, 221,
  42, 222,
  46, 352,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_219 [25] = {0, 216,
  1, 217,
  2, 218,
  3, 219,
  9, 220,
  12, 28,
  17, 221,
  42, 222,
  46, 353,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_220 [25] = {0, 216,
  1, 217,
  2, 218,
  3, 219,
  9, 220,
  12, 28,
  17, 221,
  42, 222,
  46, 354,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_221 [25] = {0, 216,
  1, 217,
  2, 218,
  3, 219,
  9, 220,
  12, 28,
  17, 221,
  42, 222,
  46, 355,
  64, 32,
  65, 33,
  79, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_235 [3] = {51, 360, -1} ;

static const int16_t gSuccessorTable_plm_grammar_238 [3] = {59, 363, -1} ;

static const int16_t gSuccessorTable_plm_grammar_252 [3] = {104, 368, -1} ;

static const int16_t gSuccessorTable_plm_grammar_254 [3] = {105, 370, -1} ;

static const int16_t gSuccessorTable_plm_grammar_256 [33] = {18, 371,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_261 [7] = {37, 376,
  107, 377,
  110, 378, -1} ;

static const int16_t gSuccessorTable_plm_grammar_266 [33] = {18, 382,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_267 [3] = {99, 386, -1} ;

static const int16_t gSuccessorTable_plm_grammar_278 [33] = {18, 387,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_280 [3] = {116, 390, -1} ;

static const int16_t gSuccessorTable_plm_grammar_282 [3] = {68, 391, -1} ;

static const int16_t gSuccessorTable_plm_grammar_283 [3] = {16, 392, -1} ;

static const int16_t gSuccessorTable_plm_grammar_287 [3] = {69, 397, -1} ;

static const int16_t gSuccessorTable_plm_grammar_288 [3] = {76, 399, -1} ;

static const int16_t gSuccessorTable_plm_grammar_290 [3] = {78, 401, -1} ;

static const int16_t gSuccessorTable_plm_grammar_292 [3] = {74, 403, -1} ;

static const int16_t gSuccessorTable_plm_grammar_295 [3] = {81, 406, -1} ;

static const int16_t gSuccessorTable_plm_grammar_301 [3] = {93, 413, -1} ;

static const int16_t gSuccessorTable_plm_grammar_312 [29] = {20, 419,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_314 [27] = {21, 420,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_316 [25] = {22, 421,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_318 [23] = {23, 422,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_320 [21] = {24, 423,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_322 [19] = {25, 424,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_324 [17] = {26, 425,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_325 [17] = {26, 426,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_327 [15] = {27, 427,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_328 [15] = {27, 428,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_329 [15] = {27, 429,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_330 [15] = {27, 430,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_332 [13] = {28, 431,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_333 [13] = {28, 432,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_335 [11] = {29, 433,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_336 [11] = {29, 434,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_337 [11] = {29, 435,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_338 [11] = {29, 436,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_340 [9] = {30, 437,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_341 [9] = {30, 438,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_342 [9] = {30, 439,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_343 [9] = {30, 440,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_344 [9] = {30, 441,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_345 [9] = {30, 442,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_348 [5] = {32, 446,
  98, 447, -1} ;

static const int16_t gSuccessorTable_plm_grammar_360 [3] = {52, 451, -1} ;

static const int16_t gSuccessorTable_plm_grammar_361 [3] = {53, 453, -1} ;

static const int16_t gSuccessorTable_plm_grammar_372 [15] = {33, 459,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_373 [33] = {18, 460,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_380 [33] = {18, 464,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_383 [33] = {18, 466,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_384 [3] = {100, 470, -1} ;

static const int16_t gSuccessorTable_plm_grammar_388 [33] = {18, 474,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_405 [7] = {38, 486,
  39, 487,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_409 [3] = {41, 490, -1} ;

static const int16_t gSuccessorTable_plm_grammar_411 [3] = {96, 492, -1} ;

static const int16_t gSuccessorTable_plm_grammar_412 [33] = {18, 493,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_418 [33] = {18, 498,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_419 [3] = {82, 499, -1} ;

static const int16_t gSuccessorTable_plm_grammar_420 [3] = {83, 500, -1} ;

static const int16_t gSuccessorTable_plm_grammar_421 [3] = {84, 501, -1} ;

static const int16_t gSuccessorTable_plm_grammar_422 [3] = {85, 502, -1} ;

static const int16_t gSuccessorTable_plm_grammar_423 [3] = {86, 503, -1} ;

static const int16_t gSuccessorTable_plm_grammar_424 [3] = {87, 504, -1} ;

static const int16_t gSuccessorTable_plm_grammar_431 [3] = {90, 505, -1} ;

static const int16_t gSuccessorTable_plm_grammar_432 [3] = {90, 506, -1} ;

static const int16_t gSuccessorTable_plm_grammar_433 [3] = {91, 507, -1} ;

static const int16_t gSuccessorTable_plm_grammar_434 [3] = {91, 508, -1} ;

static const int16_t gSuccessorTable_plm_grammar_435 [3] = {91, 509, -1} ;

static const int16_t gSuccessorTable_plm_grammar_436 [3] = {91, 510, -1} ;

static const int16_t gSuccessorTable_plm_grammar_437 [3] = {92, 511, -1} ;

static const int16_t gSuccessorTable_plm_grammar_438 [3] = {92, 512, -1} ;

static const int16_t gSuccessorTable_plm_grammar_439 [3] = {92, 513, -1} ;

static const int16_t gSuccessorTable_plm_grammar_440 [3] = {92, 514, -1} ;

static const int16_t gSuccessorTable_plm_grammar_441 [3] = {92, 515, -1} ;

static const int16_t gSuccessorTable_plm_grammar_442 [3] = {92, 516, -1} ;

static const int16_t gSuccessorTable_plm_grammar_444 [33] = {18, 517,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_446 [5] = {32, 446,
  98, 519, -1} ;

static const int16_t gSuccessorTable_plm_grammar_448 [3] = {43, 522, -1} ;

static const int16_t gSuccessorTable_plm_grammar_450 [33] = {18, 524,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_451 [3] = {50, 525, -1} ;

static const int16_t gSuccessorTable_plm_grammar_452 [3] = {55, 528, -1} ;

static const int16_t gSuccessorTable_plm_grammar_454 [33] = {18, 529,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_455 [9] = {37, 533,
  61, 534,
  107, 377,
  110, 378, -1} ;

static const int16_t gSuccessorTable_plm_grammar_456 [33] = {18, 535,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_457 [33] = {18, 536,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_458 [15] = {33, 537,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_460 [3] = {108, 541, -1} ;

static const int16_t gSuccessorTable_plm_grammar_461 [15] = {33, 542,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_462 [5] = {32, 544,
  111, 545, -1} ;

static const int16_t gSuccessorTable_plm_grammar_463 [33] = {18, 546,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_466 [3] = {99, 549, -1} ;

static const int16_t gSuccessorTable_plm_grammar_467 [3] = {99, 550, -1} ;

static const int16_t gSuccessorTable_plm_grammar_471 [3] = {99, 552, -1} ;

static const int16_t gSuccessorTable_plm_grammar_475 [3] = {116, 555, -1} ;

static const int16_t gSuccessorTable_plm_grammar_481 [15] = {33, 559,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_483 [15] = {33, 560,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_485 [15] = {33, 561,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_487 [3] = {32, 277, -1} ;

static const int16_t gSuccessorTable_plm_grammar_488 [15] = {33, 562,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_489 [3] = {49, 564, -1} ;

static const int16_t gSuccessorTable_plm_grammar_491 [33] = {18, 565,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_492 [3] = {95, 567, -1} ;

static const int16_t gSuccessorTable_plm_grammar_493 [3] = {93, 568, -1} ;

static const int16_t gSuccessorTable_plm_grammar_518 [5] = {32, 446,
  98, 571, -1} ;

static const int16_t gSuccessorTable_plm_grammar_520 [3] = {44, 573, -1} ;

static const int16_t gSuccessorTable_plm_grammar_521 [33] = {18, 574,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_523 [33] = {18, 575,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_526 [3] = {56, 578, -1} ;

static const int16_t gSuccessorTable_plm_grammar_528 [3] = {54, 580, -1} ;

static const int16_t gSuccessorTable_plm_grammar_538 [3] = {106, 588, -1} ;

static const int16_t gSuccessorTable_plm_grammar_542 [9] = {37, 590,
  107, 377,
  110, 378,
  112, 591, -1} ;

static const int16_t gSuccessorTable_plm_grammar_547 [15] = {33, 594,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_548 [3] = {114, 596, -1} ;

static const int16_t gSuccessorTable_plm_grammar_551 [3] = {101, 598, -1} ;

static const int16_t gSuccessorTable_plm_grammar_554 [3] = {116, 600, -1} ;

static const int16_t gSuccessorTable_plm_grammar_556 [3] = {69, 601, -1} ;

static const int16_t gSuccessorTable_plm_grammar_557 [3] = {69, 602, -1} ;

static const int16_t gSuccessorTable_plm_grammar_558 [3] = {69, 603, -1} ;

static const int16_t gSuccessorTable_plm_grammar_563 [3] = {49, 608, -1} ;

static const int16_t gSuccessorTable_plm_grammar_570 [5] = {32, 446,
  98, 612, -1} ;

static const int16_t gSuccessorTable_plm_grammar_572 [33] = {18, 613,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_576 [33] = {18, 614,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_579 [3] = {55, 616, -1} ;

static const int16_t gSuccessorTable_plm_grammar_581 [3] = {62, 619, -1} ;

static const int16_t gSuccessorTable_plm_grammar_582 [3] = {16, 620, -1} ;

static const int16_t gSuccessorTable_plm_grammar_584 [15] = {33, 622,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_587 [3] = {36, 624, -1} ;

static const int16_t gSuccessorTable_plm_grammar_589 [5] = {32, 626,
  109, 627, -1} ;

static const int16_t gSuccessorTable_plm_grammar_592 [3] = {32, 630, -1} ;

static const int16_t gSuccessorTable_plm_grammar_593 [33] = {18, 631,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_598 [3] = {99, 635, -1} ;

static const int16_t gSuccessorTable_plm_grammar_599 [3] = {99, 636, -1} ;

static const int16_t gSuccessorTable_plm_grammar_609 [3] = {96, 637, -1} ;

static const int16_t gSuccessorTable_plm_grammar_616 [3] = {54, 640, -1} ;

static const int16_t gSuccessorTable_plm_grammar_620 [3] = {63, 643, -1} ;

static const int16_t gSuccessorTable_plm_grammar_621 [15] = {33, 644,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_623 [15] = {33, 646,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_628 [15] = {33, 648,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_633 [3] = {114, 650, -1} ;

static const int16_t gSuccessorTable_plm_grammar_634 [15] = {33, 651,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_637 [3] = {95, 652, -1} ;

static const int16_t gSuccessorTable_plm_grammar_638 [33] = {18, 653,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_641 [33] = {18, 654,
  19, 199,
  20, 200,
  21, 201,
  22, 202,
  23, 203,
  24, 204,
  25, 205,
  26, 206,
  27, 207,
  28, 208,
  29, 209,
  30, 210,
  31, 211,
  94, 212,
  97, 213, -1} ;

static const int16_t gSuccessorTable_plm_grammar_645 [9] = {37, 533,
  61, 658,
  107, 377,
  110, 378, -1} ;

static const int16_t gSuccessorTable_plm_grammar_647 [3] = {32, 660, -1} ;

static const int16_t gSuccessorTable_plm_grammar_648 [9] = {37, 590,
  107, 377,
  110, 378,
  112, 661, -1} ;

static const int16_t gSuccessorTable_plm_grammar_649 [15] = {33, 662,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_651 [3] = {113, 664, -1} ;

static const int16_t gSuccessorTable_plm_grammar_654 [9] = {37, 533,
  61, 666,
  107, 377,
  110, 378, -1} ;

static const int16_t gSuccessorTable_plm_grammar_656 [15] = {33, 667,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_657 [9] = {37, 533,
  61, 668,
  107, 377,
  110, 378, -1} ;

static const int16_t gSuccessorTable_plm_grammar_670 [3] = {114, 673, -1} ;

static const int16_t gSuccessorTable_plm_grammar_672 [9] = {37, 533,
  61, 674,
  107, 377,
  110, 378, -1} ;

static const int16_t gSuccessorTable_plm_grammar_675 [15] = {33, 676,
  34, 158,
  36, 159,
  38, 160,
  39, 161,
  102, 162,
  115, 163, -1} ;

static const int16_t gSuccessorTable_plm_grammar_676 [3] = {113, 677, -1} ;

static const int16_t * gSuccessorTable_plm_grammar [678] = {
gSuccessorTable_plm_grammar_0, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_15, 
  gSuccessorTable_plm_grammar_16, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_20, gSuccessorTable_plm_grammar_21, gSuccessorTable_plm_grammar_22, gSuccessorTable_plm_grammar_23, 
  gSuccessorTable_plm_grammar_24, gSuccessorTable_plm_grammar_25, NULL, gSuccessorTable_plm_grammar_27, 
  gSuccessorTable_plm_grammar_28, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_33, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_38, gSuccessorTable_plm_grammar_39, 
  NULL, gSuccessorTable_plm_grammar_41, gSuccessorTable_plm_grammar_42, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_49, NULL, gSuccessorTable_plm_grammar_51, 
  gSuccessorTable_plm_grammar_52, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_68, NULL, gSuccessorTable_plm_grammar_70, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_74, NULL, 
  gSuccessorTable_plm_grammar_76, gSuccessorTable_plm_grammar_77, gSuccessorTable_plm_grammar_78, NULL, 
  NULL, gSuccessorTable_plm_grammar_81, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_85, gSuccessorTable_plm_grammar_86, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_100, NULL, NULL, gSuccessorTable_plm_grammar_103, 
  gSuccessorTable_plm_grammar_104, gSuccessorTable_plm_grammar_105, NULL, NULL, 
  gSuccessorTable_plm_grammar_108, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_113, NULL, gSuccessorTable_plm_grammar_115, 
  NULL, gSuccessorTable_plm_grammar_117, gSuccessorTable_plm_grammar_118, gSuccessorTable_plm_grammar_119, 
  gSuccessorTable_plm_grammar_120, gSuccessorTable_plm_grammar_121, gSuccessorTable_plm_grammar_122, gSuccessorTable_plm_grammar_123, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_127, 
  gSuccessorTable_plm_grammar_128, gSuccessorTable_plm_grammar_129, gSuccessorTable_plm_grammar_130, NULL, 
  gSuccessorTable_plm_grammar_132, gSuccessorTable_plm_grammar_133, gSuccessorTable_plm_grammar_134, gSuccessorTable_plm_grammar_135, 
  gSuccessorTable_plm_grammar_136, gSuccessorTable_plm_grammar_137, gSuccessorTable_plm_grammar_138, gSuccessorTable_plm_grammar_139, 
  gSuccessorTable_plm_grammar_140, NULL, NULL, gSuccessorTable_plm_grammar_143, 
  gSuccessorTable_plm_grammar_144, NULL, gSuccessorTable_plm_grammar_146, NULL, 
  gSuccessorTable_plm_grammar_148, NULL, gSuccessorTable_plm_grammar_150, NULL, 
  gSuccessorTable_plm_grammar_152, gSuccessorTable_plm_grammar_153, NULL, NULL, 
  gSuccessorTable_plm_grammar_156, NULL, gSuccessorTable_plm_grammar_158, NULL, 
  NULL, gSuccessorTable_plm_grammar_161, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_165, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_169, gSuccessorTable_plm_grammar_170, gSuccessorTable_plm_grammar_171, 
  gSuccessorTable_plm_grammar_172, gSuccessorTable_plm_grammar_173, gSuccessorTable_plm_grammar_174, gSuccessorTable_plm_grammar_175, 
  NULL, gSuccessorTable_plm_grammar_177, gSuccessorTable_plm_grammar_178, gSuccessorTable_plm_grammar_179, 
  gSuccessorTable_plm_grammar_180, gSuccessorTable_plm_grammar_181, gSuccessorTable_plm_grammar_182, NULL, 
  NULL, gSuccessorTable_plm_grammar_185, NULL, gSuccessorTable_plm_grammar_187, 
  gSuccessorTable_plm_grammar_188, gSuccessorTable_plm_grammar_189, gSuccessorTable_plm_grammar_190, gSuccessorTable_plm_grammar_191, 
  gSuccessorTable_plm_grammar_192, gSuccessorTable_plm_grammar_193, gSuccessorTable_plm_grammar_194, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_200, gSuccessorTable_plm_grammar_201, gSuccessorTable_plm_grammar_202, gSuccessorTable_plm_grammar_203, 
  gSuccessorTable_plm_grammar_204, gSuccessorTable_plm_grammar_205, gSuccessorTable_plm_grammar_206, gSuccessorTable_plm_grammar_207, 
  gSuccessorTable_plm_grammar_208, gSuccessorTable_plm_grammar_209, gSuccessorTable_plm_grammar_210, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_215, 
  gSuccessorTable_plm_grammar_216, gSuccessorTable_plm_grammar_217, gSuccessorTable_plm_grammar_218, gSuccessorTable_plm_grammar_219, 
  gSuccessorTable_plm_grammar_220, gSuccessorTable_plm_grammar_221, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_235, 
  NULL, NULL, gSuccessorTable_plm_grammar_238, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_252, NULL, gSuccessorTable_plm_grammar_254, NULL, 
  gSuccessorTable_plm_grammar_256, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_261, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_266, gSuccessorTable_plm_grammar_267, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_278, NULL, 
  gSuccessorTable_plm_grammar_280, NULL, gSuccessorTable_plm_grammar_282, gSuccessorTable_plm_grammar_283, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_287, 
  gSuccessorTable_plm_grammar_288, NULL, gSuccessorTable_plm_grammar_290, NULL, 
  gSuccessorTable_plm_grammar_292, NULL, NULL, gSuccessorTable_plm_grammar_295, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_301, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_312, NULL, gSuccessorTable_plm_grammar_314, NULL, 
  gSuccessorTable_plm_grammar_316, NULL, gSuccessorTable_plm_grammar_318, NULL, 
  gSuccessorTable_plm_grammar_320, NULL, gSuccessorTable_plm_grammar_322, NULL, 
  gSuccessorTable_plm_grammar_324, gSuccessorTable_plm_grammar_325, NULL, gSuccessorTable_plm_grammar_327, 
  gSuccessorTable_plm_grammar_328, gSuccessorTable_plm_grammar_329, gSuccessorTable_plm_grammar_330, NULL, 
  gSuccessorTable_plm_grammar_332, gSuccessorTable_plm_grammar_333, NULL, gSuccessorTable_plm_grammar_335, 
  gSuccessorTable_plm_grammar_336, gSuccessorTable_plm_grammar_337, gSuccessorTable_plm_grammar_338, NULL, 
  gSuccessorTable_plm_grammar_340, gSuccessorTable_plm_grammar_341, gSuccessorTable_plm_grammar_342, gSuccessorTable_plm_grammar_343, 
  gSuccessorTable_plm_grammar_344, gSuccessorTable_plm_grammar_345, NULL, NULL, 
  gSuccessorTable_plm_grammar_348, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_360, gSuccessorTable_plm_grammar_361, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_372, gSuccessorTable_plm_grammar_373, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_380, NULL, NULL, gSuccessorTable_plm_grammar_383, 
  gSuccessorTable_plm_grammar_384, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_388, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_405, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_409, NULL, gSuccessorTable_plm_grammar_411, 
  gSuccessorTable_plm_grammar_412, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_418, gSuccessorTable_plm_grammar_419, 
  gSuccessorTable_plm_grammar_420, gSuccessorTable_plm_grammar_421, gSuccessorTable_plm_grammar_422, gSuccessorTable_plm_grammar_423, 
  gSuccessorTable_plm_grammar_424, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_431, 
  gSuccessorTable_plm_grammar_432, gSuccessorTable_plm_grammar_433, gSuccessorTable_plm_grammar_434, gSuccessorTable_plm_grammar_435, 
  gSuccessorTable_plm_grammar_436, gSuccessorTable_plm_grammar_437, gSuccessorTable_plm_grammar_438, gSuccessorTable_plm_grammar_439, 
  gSuccessorTable_plm_grammar_440, gSuccessorTable_plm_grammar_441, gSuccessorTable_plm_grammar_442, NULL, 
  gSuccessorTable_plm_grammar_444, NULL, gSuccessorTable_plm_grammar_446, NULL, 
  gSuccessorTable_plm_grammar_448, NULL, gSuccessorTable_plm_grammar_450, gSuccessorTable_plm_grammar_451, 
  gSuccessorTable_plm_grammar_452, NULL, gSuccessorTable_plm_grammar_454, gSuccessorTable_plm_grammar_455, 
  gSuccessorTable_plm_grammar_456, gSuccessorTable_plm_grammar_457, gSuccessorTable_plm_grammar_458, NULL, 
  gSuccessorTable_plm_grammar_460, gSuccessorTable_plm_grammar_461, gSuccessorTable_plm_grammar_462, gSuccessorTable_plm_grammar_463, 
  NULL, NULL, gSuccessorTable_plm_grammar_466, gSuccessorTable_plm_grammar_467, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_471, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_475, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_481, NULL, gSuccessorTable_plm_grammar_483, 
  NULL, gSuccessorTable_plm_grammar_485, NULL, gSuccessorTable_plm_grammar_487, 
  gSuccessorTable_plm_grammar_488, gSuccessorTable_plm_grammar_489, NULL, gSuccessorTable_plm_grammar_491, 
  gSuccessorTable_plm_grammar_492, gSuccessorTable_plm_grammar_493, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_518, NULL, 
  gSuccessorTable_plm_grammar_520, gSuccessorTable_plm_grammar_521, NULL, gSuccessorTable_plm_grammar_523, 
  NULL, NULL, gSuccessorTable_plm_grammar_526, NULL, 
  gSuccessorTable_plm_grammar_528, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_538, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_542, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_547, 
  gSuccessorTable_plm_grammar_548, NULL, NULL, gSuccessorTable_plm_grammar_551, 
  NULL, NULL, gSuccessorTable_plm_grammar_554, NULL, 
  gSuccessorTable_plm_grammar_556, gSuccessorTable_plm_grammar_557, gSuccessorTable_plm_grammar_558, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_563, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_570, NULL, 
  gSuccessorTable_plm_grammar_572, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_576, NULL, NULL, gSuccessorTable_plm_grammar_579, 
  NULL, gSuccessorTable_plm_grammar_581, gSuccessorTable_plm_grammar_582, NULL, 
  gSuccessorTable_plm_grammar_584, NULL, NULL, gSuccessorTable_plm_grammar_587, 
  NULL, gSuccessorTable_plm_grammar_589, NULL, NULL, 
  gSuccessorTable_plm_grammar_592, gSuccessorTable_plm_grammar_593, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_598, gSuccessorTable_plm_grammar_599, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_609, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_616, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_620, gSuccessorTable_plm_grammar_621, NULL, gSuccessorTable_plm_grammar_623, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_628, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_633, gSuccessorTable_plm_grammar_634, NULL, 
  NULL, gSuccessorTable_plm_grammar_637, gSuccessorTable_plm_grammar_638, NULL, 
  NULL, gSuccessorTable_plm_grammar_641, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_645, NULL, gSuccessorTable_plm_grammar_647, 
  gSuccessorTable_plm_grammar_648, gSuccessorTable_plm_grammar_649, NULL, gSuccessorTable_plm_grammar_651, 
  NULL, NULL, gSuccessorTable_plm_grammar_654, NULL, 
  gSuccessorTable_plm_grammar_656, gSuccessorTable_plm_grammar_657, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_670, NULL, 
  gSuccessorTable_plm_grammar_672, NULL, NULL, gSuccessorTable_plm_grammar_675, 
  gSuccessorTable_plm_grammar_676, NULL} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                          Production rules infos (left non terminal, size of right string)                            
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

static const int16_t gProductionsTable_plm_grammar [312 * 2] = {
  5, 2,
  6, 1,
  7, 4,
  8, 4,
  7, 7,
  9, 4,
  7, 6,
  8, 1,
  7, 5,
  10, 6,
  8, 6,
  7, 7,
  7, 5,
  7, 5,
  11, 5,
  7, 5,
  7, 9,
  7, 6,
  7, 6,
  12, 2,
  7, 5,
  7, 1,
  13, 5,
  0, 6,
  14, 1,
  15, 5,
  16, 3,
  7, 2,
  7, 5,
  4, 6,
  1, 9,
  2, 9,
  3, 9,
  17, 9,
  7, 1,
  18, 1,
  19, 2,
  20, 2,
  21, 2,
  22, 2,
  23, 2,
  24, 2,
  25, 2,
  26, 2,
  27, 2,
  28, 2,
  29, 2,
  30, 1,
  31, 2,
  31, 2,
  31, 2,
  31, 2,
  31, 3,
  31, 4,
  31, 4,
  31, 4,
  31, 4,
  31, 3,
  31, 9,
  31, 1,
  31, 1,
  31, 1,
  31, 1,
  31, 6,
  31, 3,
  32, 3,
  33, 1,
  34, 2,
  34, 3,
  35, 1,
  34, 3,
  34, 5,
  34, 3,
  34, 5,
  34, 2,
  34, 2,
  34, 1,
  36, 6,
  37, 1,
  34, 7,
  34, 6,
  34, 7,
  34, 10,
  34, 1,
  38, 2,
  34, 10,
  39, 3,
  7, 2,
  7, 3,
  40, 0,
  40, 2,
  40, 2,
  40, 2,
  40, 2,
  40, 2,
  40, 2,
  40, 2,
  41, 0,
  41, 3,
  42, 0,
  42, 1,
  43, 2,
  43, 2,
  44, 0,
  44, 2,
  45, 0,
  45, 2,
  46, 0,
  46, 2,
  46, 2,
  46, 2,
  46, 2,
  46, 2,
  46, 2,
  46, 2,
  47, 0,
  47, 2,
  47, 2,
  47, 2,
  47, 2,
  47, 2,
  47, 2,
  47, 2,
  48, 0,
  48, 1,
  49, 0,
  49, 2,
  50, 0,
  50, 4,
  51, 0,
  51, 2,
  52, 2,
  52, 7,
  53, 0,
  53, 4,
  54, 0,
  54, 3,
  55, 1,
  55, 2,
  56, 0,
  56, 3,
  57, 0,
  57, 1,
  58, 0,
  58, 1,
  59, 1,
  59, 0,
  60, 0,
  60, 2,
  60, 2,
  60, 2,
  60, 2,
  60, 2,
  60, 2,
  60, 2,
  60, 2,
  60, 2,
  61, 0,
  61, 6,
  61, 8,
  61, 6,
  61, 5,
  62, 0,
  62, 1,
  63, 0,
  63, 2,
  64, 0,
  64, 1,
  65, 0,
  65, 1,
  66, 0,
  66, 2,
  67, 0,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  68, 0,
  68, 2,
  69, 0,
  69, 4,
  69, 4,
  69, 4,
  70, 0,
  70, 2,
  71, 0,
  71, 2,
  72, 1,
  72, 1,
  73, 0,
  73, 2,
  74, 0,
  74, 2,
  75, 0,
  75, 2,
  76, 0,
  76, 2,
  77, 0,
  77, 2,
  78, 0,
  78, 2,
  79, 0,
  79, 1,
  80, 0,
  80, 2,
  81, 0,
  81, 2,
  82, 0,
  82, 3,
  83, 0,
  83, 3,
  84, 0,
  84, 3,
  85, 0,
  85, 3,
  86, 0,
  86, 3,
  87, 0,
  87, 3,
  88, 0,
  88, 2,
  88, 2,
  89, 0,
  89, 2,
  89, 2,
  89, 2,
  89, 2,
  90, 0,
  90, 3,
  90, 3,
  91, 0,
  91, 3,
  91, 3,
  91, 3,
  91, 3,
  92, 0,
  92, 3,
  92, 3,
  92, 3,
  92, 3,
  92, 3,
  92, 3,
  93, 0,
  93, 3,
  94, 0,
  94, 1,
  95, 0,
  95, 4,
  96, 0,
  96, 2,
  97, 0,
  97, 2,
  98, 0,
  98, 3,
  98, 4,
  98, 2,
  99, 0,
  99, 3,
  99, 3,
  99, 5,
  99, 3,
  99, 5,
  100, 1,
  100, 1,
  101, 0,
  101, 1,
  102, 0,
  102, 2,
  102, 2,
  103, 1,
  103, 1,
  103, 1,
  103, 1,
  103, 1,
  103, 1,
  103, 1,
  103, 1,
  103, 1,
  104, 0,
  104, 1,
  105, 0,
  105, 1,
  106, 0,
  106, 4,
  106, 2,
  107, 5,
  107, 3,
  108, 1,
  108, 1,
  109, 1,
  109, 3,
  110, 1,
  110, 1,
  111, 1,
  111, 3,
  112, 0,
  112, 4,
  113, 0,
  113, 6,
  114, 0,
  114, 3,
  115, 0,
  115, 2,
  116, 0,
  116, 3,
  116, 4,
  117, 1
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                       'function' non terminal implementation                                         
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_function_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 23 :
      rule_plm_5F_syntax_function_i23_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_function_ (GALGAS_functionDeclarationListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 23 :
      rule_plm_5F_syntax_function_i23_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                       'section' non terminal implementation                                          
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_section_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 30 :
      rule_plm_5F_syntax_section_i30_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_section_ (GALGAS_svcDeclarationListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 30 :
      rule_plm_5F_syntax_section_i30_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                       'service' non terminal implementation                                          
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_service_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 31 :
      rule_plm_5F_syntax_service_i31_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_service_ (GALGAS_serviceDeclarationListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 31 :
      rule_plm_5F_syntax_service_i31_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                      'primitive' non terminal implementation                                         
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_primitive_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 32 :
      rule_plm_5F_syntax_primitive_i32_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_primitive_ (GALGAS_primitiveDeclarationListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 32 :
      rule_plm_5F_syntax_primitive_i32_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                         'isr' non terminal implementation                                            
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_isr_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 29 :
      rule_plm_5F_syntax_isr_i29_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_isr_ (GALGAS_isrDeclarationListAST &  parameter_1,
                                const GALGAS_lstring  parameter_2,
                                const GALGAS_string  parameter_3,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 29 :
      rule_plm_5F_syntax_isr_i29_(parameter_1, parameter_2, parameter_3, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                     'import_file' non terminal implementation                                        
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_import_5F_file_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 0 :
      rule_plm_5F_syntax_import_5F_file_i0_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_import_5F_file_ (GALGAS_lstringlist &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 0 :
      rule_plm_5F_syntax_import_5F_file_i0_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                     'start_symbol' non terminal implementation                                       
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_start_5F_symbol_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 1 :
      rule_plm_5F_syntax_start_5F_symbol_i1_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_start_5F_symbol_ (GALGAS_ast &  parameter_1,
                                GALGAS_lstringlist &  parameter_2,
                                GALGAS_location &  parameter_3,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 1 :
      rule_plm_5F_syntax_start_5F_symbol_i1_(parameter_1, parameter_2, parameter_3, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

void cGrammar_plm_5F_grammar::performIndexing (C_Compiler * /* inCompiler */,
             const C_String & /* inSourceFilePath */) {
}

void cGrammar_plm_5F_grammar::performOnlyLexicalAnalysis (C_Compiler * inCompiler,
             const C_String & inSourceFilePath) {
  C_Lexique_plm_5F_lexique * scanner = NULL ;
  macroMyNew (scanner, C_Lexique_plm_5F_lexique (inCompiler, inSourceFilePath COMMA_HERE)) ;
  if (scanner->sourceText ().isValid ()) {
    scanner->performLexicalAnalysis () ;
  }
  macroDetachSharedObject (scanner) ;
}

void cGrammar_plm_5F_grammar::performOnlySyntaxAnalysis (C_Compiler * inCompiler,
             const C_String & inSourceFilePath) {
  C_Lexique_plm_5F_lexique * scanner = NULL ;
  macroMyNew (scanner, C_Lexique_plm_5F_lexique (inCompiler, inSourceFilePath COMMA_HERE)) ;
  if (scanner->sourceText ().isValid ()) {
    scanner->performBottomUpParsing (gActionTable_plm_grammar, gNonTerminalNames_plm_grammar,
                                     gActionTableIndex_plm_grammar, gSuccessorTable_plm_grammar,
                                     gProductionsTable_plm_grammar) ;
  }
  macroDetachSharedObject (scanner) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                        Grammar start symbol implementation                                           
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::_performSourceFileParsing_ (C_Compiler * inCompiler,
                                GALGAS_lstring inFilePath,
                                GALGAS_ast &  parameter_1,
                                GALGAS_lstringlist &  parameter_2,
                                GALGAS_location &  parameter_3
                                COMMA_LOCATION_ARGS) {
  if (inFilePath.isValid ()) {
    const GALGAS_string filePathAsString = inFilePath.getter_string (HERE) ;
    C_String filePath = filePathAsString.stringValue () ;
    if (! C_FileManager::isAbsolutePath (filePath)) {
      filePath = inCompiler->sourceFilePath ().stringByDeletingLastPathComponent ().stringByAppendingPathComponent (filePath) ;
    }
    if (C_FileManager::fileExistsAtPath (filePath)) {
      C_Lexique_plm_5F_lexique * scanner = NULL ;
      macroMyNew (scanner, C_Lexique_plm_5F_lexique (inCompiler, filePath COMMA_HERE)) ;
      if (scanner->sourceText ().isValid ()) {
        const bool ok = scanner->performBottomUpParsing (gActionTable_plm_grammar, gNonTerminalNames_plm_grammar,
                                                         gActionTableIndex_plm_grammar, gSuccessorTable_plm_grammar,
                                                         gProductionsTable_plm_grammar) ;
        if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
          cGrammar_plm_5F_grammar grammar ;
          grammar.nt_start_5F_symbol_ (parameter_1, parameter_2, parameter_3, scanner) ;
        }
      }else{
        C_String message ;
        message << "the '" << filePath << "' file exists, but cannot be read" ;
        const GALGAS_location errorLocation (inFilePath.getter_location (THERE)) ;
        inCompiler->semanticErrorAtLocation (errorLocation, message, TC_Array <C_FixItDescription> () COMMA_THERE) ;
      }
      macroDetachSharedObject (scanner) ;
    }else{
      C_String message ;
      message << "the '" << filePath << "' file does not exist" ;
      const GALGAS_location errorLocation (inFilePath.getter_location (THERE)) ;
      inCompiler->semanticErrorAtLocation (errorLocation, message, TC_Array <C_FixItDescription> () COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::_performSourceStringParsing_ (C_Compiler * inCompiler,
                                GALGAS_string inSourceString,
                                GALGAS_string inNameString,
                                GALGAS_ast &  parameter_1,
                                GALGAS_lstringlist &  parameter_2,
                                GALGAS_location &  parameter_3
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (inSourceString.isValid () && inNameString.isValid ()) {
    const C_String sourceString = inSourceString.stringValue () ;
    const C_String nameString = inNameString.stringValue () ;
    C_Lexique_plm_5F_lexique * scanner = NULL ;
    macroMyNew (scanner, C_Lexique_plm_5F_lexique (inCompiler, sourceString, nameString COMMA_HERE)) ;
    if (scanner->sourceText ().isValid ()) {
      const bool ok = scanner->performBottomUpParsing (gActionTable_plm_grammar, gNonTerminalNames_plm_grammar,
                                                       gActionTableIndex_plm_grammar, gSuccessorTable_plm_grammar,
                                                       gProductionsTable_plm_grammar) ;
      if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
        cGrammar_plm_5F_grammar grammar ;
        grammar.nt_start_5F_symbol_ (parameter_1, parameter_2, parameter_3, scanner) ;
      }
    }
    macroDetachSharedObject (scanner) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                     'declaration' non terminal implementation                                        
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_declaration_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 2 :
      rule_plm_5F_syntax_declaration_i2_parse(inLexique) ;
    break ;
  case 4 :
      rule_plm_5F_syntax_declaration_i4_parse(inLexique) ;
    break ;
  case 6 :
      rule_plm_5F_syntax_declaration_i6_parse(inLexique) ;
    break ;
  case 8 :
      rule_plm_5F_syntax_declaration_i8_parse(inLexique) ;
    break ;
  case 11 :
      rule_plm_5F_syntax_declaration_i11_parse(inLexique) ;
    break ;
  case 12 :
      rule_plm_5F_syntax_declaration_i12_parse(inLexique) ;
    break ;
  case 13 :
      rule_plm_5F_syntax_declaration_i13_parse(inLexique) ;
    break ;
  case 15 :
      rule_plm_5F_syntax_declaration_i15_parse(inLexique) ;
    break ;
  case 16 :
      rule_plm_5F_syntax_declaration_i16_parse(inLexique) ;
    break ;
  case 17 :
      rule_plm_5F_syntax_declaration_i17_parse(inLexique) ;
    break ;
  case 18 :
      rule_plm_5F_syntax_declaration_i18_parse(inLexique) ;
    break ;
  case 20 :
      rule_plm_5F_syntax_declaration_i20_parse(inLexique) ;
    break ;
  case 21 :
      rule_plm_5F_syntax_declaration_i21_parse(inLexique) ;
    break ;
  case 27 :
      rule_plm_5F_syntax_declaration_i27_parse(inLexique) ;
    break ;
  case 28 :
      rule_plm_5F_syntax_declaration_i28_parse(inLexique) ;
    break ;
  case 34 :
      rule_plm_5F_syntax_declaration_i34_parse(inLexique) ;
    break ;
  case 87 :
      rule_plm_5F_syntax_declaration_i87_parse(inLexique) ;
    break ;
  case 88 :
      rule_plm_5F_syntax_declaration_i88_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_declaration_ (GALGAS_ast &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 2 :
      rule_plm_5F_syntax_declaration_i2_(parameter_1, inLexique) ;
    break ;
  case 4 :
      rule_plm_5F_syntax_declaration_i4_(parameter_1, inLexique) ;
    break ;
  case 6 :
      rule_plm_5F_syntax_declaration_i6_(parameter_1, inLexique) ;
    break ;
  case 8 :
      rule_plm_5F_syntax_declaration_i8_(parameter_1, inLexique) ;
    break ;
  case 11 :
      rule_plm_5F_syntax_declaration_i11_(parameter_1, inLexique) ;
    break ;
  case 12 :
      rule_plm_5F_syntax_declaration_i12_(parameter_1, inLexique) ;
    break ;
  case 13 :
      rule_plm_5F_syntax_declaration_i13_(parameter_1, inLexique) ;
    break ;
  case 15 :
      rule_plm_5F_syntax_declaration_i15_(parameter_1, inLexique) ;
    break ;
  case 16 :
      rule_plm_5F_syntax_declaration_i16_(parameter_1, inLexique) ;
    break ;
  case 17 :
      rule_plm_5F_syntax_declaration_i17_(parameter_1, inLexique) ;
    break ;
  case 18 :
      rule_plm_5F_syntax_declaration_i18_(parameter_1, inLexique) ;
    break ;
  case 20 :
      rule_plm_5F_syntax_declaration_i20_(parameter_1, inLexique) ;
    break ;
  case 21 :
      rule_plm_5F_syntax_declaration_i21_(parameter_1, inLexique) ;
    break ;
  case 27 :
      rule_plm_5F_syntax_declaration_i27_(parameter_1, inLexique) ;
    break ;
  case 28 :
      rule_plm_5F_syntax_declaration_i28_(parameter_1, inLexique) ;
    break ;
  case 34 :
      rule_plm_5F_syntax_declaration_i34_(parameter_1, inLexique) ;
    break ;
  case 87 :
      rule_plm_5F_syntax_declaration_i87_(parameter_1, inLexique) ;
    break ;
  case 88 :
      rule_plm_5F_syntax_declaration_i88_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                   'declaration_type' non terminal implementation                                     
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_declaration_5F_type_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 3 :
      rule_plm_5F_syntax_declaration_5F_type_i3_parse(inLexique) ;
    break ;
  case 7 :
      rule_plm_5F_syntax_declaration_5F_type_i7_parse(inLexique) ;
    break ;
  case 10 :
      rule_plm_5F_syntax_declaration_5F_type_i10_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_declaration_5F_type_ (const GALGAS_lstring  parameter_1,
                                GALGAS_abstractDeclaration &  parameter_2,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 3 :
      rule_plm_5F_syntax_declaration_5F_type_i3_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 7 :
      rule_plm_5F_syntax_declaration_5F_type_i7_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 10 :
      rule_plm_5F_syntax_declaration_5F_type_i10_(parameter_1, parameter_2, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                'declaration_struct_var' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_declaration_5F_struct_5F_var_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 5 :
      rule_plm_5F_syntax_declaration_5F_struct_5F_var_i5_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_declaration_5F_struct_5F_var_ (GALGAS_structurePropertyListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 5 :
      rule_plm_5F_syntax_declaration_5F_struct_5F_var_i5_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                'property_in_extension' non terminal implementation                                   
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_property_5F_in_5F_extension_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 9 :
      rule_plm_5F_syntax_property_5F_in_5F_extension_i9_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_property_5F_in_5F_extension_ (GALGAS_structurePropertyListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 9 :
      rule_plm_5F_syntax_property_5F_in_5F_extension_i9_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                   'module_variable' non terminal implementation                                      
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_module_5F_variable_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 14 :
      rule_plm_5F_syntax_module_5F_variable_i14_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_module_5F_variable_ (GALGAS_structurePropertyListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 14 :
      rule_plm_5F_syntax_module_5F_variable_i14_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                   'svc_declaration' non terminal implementation                                      
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_svc_5F_declaration_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 19 :
      rule_plm_5F_syntax_svc_5F_declaration_i19_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_svc_5F_declaration_ (GALGAS_bool &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 19 :
      rule_plm_5F_syntax_svc_5F_declaration_i19_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                   'declaration_init' non terminal implementation                                     
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_declaration_5F_init_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 22 :
      rule_plm_5F_syntax_declaration_5F_init_i22_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_declaration_5F_init_ (GALGAS_initList &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 22 :
      rule_plm_5F_syntax_declaration_5F_init_i22_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                         'mode' non terminal implementation                                           
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_mode_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 24 :
      rule_plm_5F_syntax_mode_i24_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_mode_ (GALGAS_mode &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 24 :
      rule_plm_5F_syntax_mode_i24_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                   'function_header' non terminal implementation                                      
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_function_5F_header_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 25 :
      rule_plm_5F_syntax_function_5F_header_i25_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_function_5F_header_ (GALGAS_mode &  parameter_1,
                                GALGAS_lstring &  parameter_2,
                                GALGAS_lstringlist &  parameter_3,
                                GALGAS_procFormalArgumentList &  parameter_4,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 25 :
      rule_plm_5F_syntax_function_5F_header_i25_(parameter_1, parameter_2, parameter_3, parameter_4, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                              'procedure_formal_arguments' non terminal implementation                                
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_procedure_5F_formal_5F_arguments_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 26 :
      rule_plm_5F_syntax_procedure_5F_formal_5F_arguments_i26_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_procedure_5F_formal_5F_arguments_ (GALGAS_procFormalArgumentList &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 26 :
      rule_plm_5F_syntax_procedure_5F_formal_5F_arguments_i26_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                        'guard' non terminal implementation                                           
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_guard_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 33 :
      rule_plm_5F_syntax_guard_i33_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_guard_ (GALGAS_guardDeclarationListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 33 :
      rule_plm_5F_syntax_guard_i33_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                      'expression' non terminal implementation                                        
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 35 :
      rule_plm_5F_syntax_expression_i35_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 35 :
      rule_plm_5F_syntax_expression_i35_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                    'expression_12' non terminal implementation                                       
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__31__32__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 36 :
      rule_plm_5F_syntax_expression_5F__31__32__i36_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__31__32__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 36 :
      rule_plm_5F_syntax_expression_5F__31__32__i36_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                    'expression_11' non terminal implementation                                       
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__31__31__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 37 :
      rule_plm_5F_syntax_expression_5F__31__31__i37_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__31__31__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 37 :
      rule_plm_5F_syntax_expression_5F__31__31__i37_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                    'expression_10' non terminal implementation                                       
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__31__30__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 38 :
      rule_plm_5F_syntax_expression_5F__31__30__i38_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__31__30__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 38 :
      rule_plm_5F_syntax_expression_5F__31__30__i38_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                     'expression_9' non terminal implementation                                       
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__39__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 39 :
      rule_plm_5F_syntax_expression_5F__39__i39_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__39__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 39 :
      rule_plm_5F_syntax_expression_5F__39__i39_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                     'expression_8' non terminal implementation                                       
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__38__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 40 :
      rule_plm_5F_syntax_expression_5F__38__i40_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__38__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 40 :
      rule_plm_5F_syntax_expression_5F__38__i40_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                     'expression_7' non terminal implementation                                       
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__37__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 41 :
      rule_plm_5F_syntax_expression_5F__37__i41_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__37__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 41 :
      rule_plm_5F_syntax_expression_5F__37__i41_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                     'expression_6' non terminal implementation                                       
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__36__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 42 :
      rule_plm_5F_syntax_expression_5F__36__i42_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__36__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 42 :
      rule_plm_5F_syntax_expression_5F__36__i42_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                     'expression_5' non terminal implementation                                       
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__35__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 43 :
      rule_plm_5F_syntax_expression_5F__35__i43_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__35__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 43 :
      rule_plm_5F_syntax_expression_5F__35__i43_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                     'expression_4' non terminal implementation                                       
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__34__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 44 :
      rule_plm_5F_syntax_expression_5F__34__i44_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__34__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 44 :
      rule_plm_5F_syntax_expression_5F__34__i44_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                     'expression_3' non terminal implementation                                       
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__33__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 45 :
      rule_plm_5F_syntax_expression_5F__33__i45_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__33__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 45 :
      rule_plm_5F_syntax_expression_5F__33__i45_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                     'expression_2' non terminal implementation                                       
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__32__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 46 :
      rule_plm_5F_syntax_expression_5F__32__i46_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__32__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 46 :
      rule_plm_5F_syntax_expression_5F__32__i46_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                     'expression_1' non terminal implementation                                       
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__31__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 47 :
      rule_plm_5F_syntax_expression_5F__31__i47_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__31__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 47 :
      rule_plm_5F_syntax_expression_5F__31__i47_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                       'primary' non terminal implementation                                          
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_primary_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 48 :
      rule_plm_5F_syntax_primary_i48_parse(inLexique) ;
    break ;
  case 49 :
      rule_plm_5F_syntax_primary_i49_parse(inLexique) ;
    break ;
  case 50 :
      rule_plm_5F_syntax_primary_i50_parse(inLexique) ;
    break ;
  case 51 :
      rule_plm_5F_syntax_primary_i51_parse(inLexique) ;
    break ;
  case 52 :
      rule_plm_5F_syntax_primary_i52_parse(inLexique) ;
    break ;
  case 53 :
      rule_plm_5F_syntax_primary_i53_parse(inLexique) ;
    break ;
  case 54 :
      rule_plm_5F_syntax_primary_i54_parse(inLexique) ;
    break ;
  case 55 :
      rule_plm_5F_syntax_primary_i55_parse(inLexique) ;
    break ;
  case 56 :
      rule_plm_5F_syntax_primary_i56_parse(inLexique) ;
    break ;
  case 57 :
      rule_plm_5F_syntax_primary_i57_parse(inLexique) ;
    break ;
  case 58 :
      rule_plm_5F_syntax_primary_i58_parse(inLexique) ;
    break ;
  case 59 :
      rule_plm_5F_syntax_primary_i59_parse(inLexique) ;
    break ;
  case 60 :
      rule_plm_5F_syntax_primary_i60_parse(inLexique) ;
    break ;
  case 61 :
      rule_plm_5F_syntax_primary_i61_parse(inLexique) ;
    break ;
  case 62 :
      rule_plm_5F_syntax_primary_i62_parse(inLexique) ;
    break ;
  case 63 :
      rule_plm_5F_syntax_primary_i63_parse(inLexique) ;
    break ;
  case 64 :
      rule_plm_5F_syntax_primary_i64_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_primary_ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 48 :
      rule_plm_5F_syntax_primary_i48_(parameter_1, inLexique) ;
    break ;
  case 49 :
      rule_plm_5F_syntax_primary_i49_(parameter_1, inLexique) ;
    break ;
  case 50 :
      rule_plm_5F_syntax_primary_i50_(parameter_1, inLexique) ;
    break ;
  case 51 :
      rule_plm_5F_syntax_primary_i51_(parameter_1, inLexique) ;
    break ;
  case 52 :
      rule_plm_5F_syntax_primary_i52_(parameter_1, inLexique) ;
    break ;
  case 53 :
      rule_plm_5F_syntax_primary_i53_(parameter_1, inLexique) ;
    break ;
  case 54 :
      rule_plm_5F_syntax_primary_i54_(parameter_1, inLexique) ;
    break ;
  case 55 :
      rule_plm_5F_syntax_primary_i55_(parameter_1, inLexique) ;
    break ;
  case 56 :
      rule_plm_5F_syntax_primary_i56_(parameter_1, inLexique) ;
    break ;
  case 57 :
      rule_plm_5F_syntax_primary_i57_(parameter_1, inLexique) ;
    break ;
  case 58 :
      rule_plm_5F_syntax_primary_i58_(parameter_1, inLexique) ;
    break ;
  case 59 :
      rule_plm_5F_syntax_primary_i59_(parameter_1, inLexique) ;
    break ;
  case 60 :
      rule_plm_5F_syntax_primary_i60_(parameter_1, inLexique) ;
    break ;
  case 61 :
      rule_plm_5F_syntax_primary_i61_(parameter_1, inLexique) ;
    break ;
  case 62 :
      rule_plm_5F_syntax_primary_i62_(parameter_1, inLexique) ;
    break ;
  case 63 :
      rule_plm_5F_syntax_primary_i63_(parameter_1, inLexique) ;
    break ;
  case 64 :
      rule_plm_5F_syntax_primary_i64_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                 'effective_parameters' non terminal implementation                                   
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_effective_5F_parameters_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 65 :
      rule_plm_5F_syntax_effective_5F_parameters_i65_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_effective_5F_parameters_ (GALGAS_effectiveParameterListAST &  parameter_1,
                                GALGAS_location &  parameter_2,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 65 :
      rule_plm_5F_syntax_effective_5F_parameters_i65_(parameter_1, parameter_2, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                   'instructionList' non terminal implementation                                      
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_instructionList_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 66 :
      rule_plm_5F_syntax_instructionList_i66_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_instructionList_ (GALGAS_instructionListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 66 :
      rule_plm_5F_syntax_instructionList_i66_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                     'instruction' non terminal implementation                                        
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_instruction_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 67 :
      rule_plm_5F_syntax_instruction_i67_parse(inLexique) ;
    break ;
  case 68 :
      rule_plm_5F_syntax_instruction_i68_parse(inLexique) ;
    break ;
  case 70 :
      rule_plm_5F_syntax_instruction_i70_parse(inLexique) ;
    break ;
  case 71 :
      rule_plm_5F_syntax_instruction_i71_parse(inLexique) ;
    break ;
  case 72 :
      rule_plm_5F_syntax_instruction_i72_parse(inLexique) ;
    break ;
  case 73 :
      rule_plm_5F_syntax_instruction_i73_parse(inLexique) ;
    break ;
  case 74 :
      rule_plm_5F_syntax_instruction_i74_parse(inLexique) ;
    break ;
  case 75 :
      rule_plm_5F_syntax_instruction_i75_parse(inLexique) ;
    break ;
  case 76 :
      rule_plm_5F_syntax_instruction_i76_parse(inLexique) ;
    break ;
  case 79 :
      rule_plm_5F_syntax_instruction_i79_parse(inLexique) ;
    break ;
  case 80 :
      rule_plm_5F_syntax_instruction_i80_parse(inLexique) ;
    break ;
  case 81 :
      rule_plm_5F_syntax_instruction_i81_parse(inLexique) ;
    break ;
  case 82 :
      rule_plm_5F_syntax_instruction_i82_parse(inLexique) ;
    break ;
  case 83 :
      rule_plm_5F_syntax_instruction_i83_parse(inLexique) ;
    break ;
  case 85 :
      rule_plm_5F_syntax_instruction_i85_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_instruction_ (GALGAS_instructionListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 67 :
      rule_plm_5F_syntax_instruction_i67_(parameter_1, inLexique) ;
    break ;
  case 68 :
      rule_plm_5F_syntax_instruction_i68_(parameter_1, inLexique) ;
    break ;
  case 70 :
      rule_plm_5F_syntax_instruction_i70_(parameter_1, inLexique) ;
    break ;
  case 71 :
      rule_plm_5F_syntax_instruction_i71_(parameter_1, inLexique) ;
    break ;
  case 72 :
      rule_plm_5F_syntax_instruction_i72_(parameter_1, inLexique) ;
    break ;
  case 73 :
      rule_plm_5F_syntax_instruction_i73_(parameter_1, inLexique) ;
    break ;
  case 74 :
      rule_plm_5F_syntax_instruction_i74_(parameter_1, inLexique) ;
    break ;
  case 75 :
      rule_plm_5F_syntax_instruction_i75_(parameter_1, inLexique) ;
    break ;
  case 76 :
      rule_plm_5F_syntax_instruction_i76_(parameter_1, inLexique) ;
    break ;
  case 79 :
      rule_plm_5F_syntax_instruction_i79_(parameter_1, inLexique) ;
    break ;
  case 80 :
      rule_plm_5F_syntax_instruction_i80_(parameter_1, inLexique) ;
    break ;
  case 81 :
      rule_plm_5F_syntax_instruction_i81_(parameter_1, inLexique) ;
    break ;
  case 82 :
      rule_plm_5F_syntax_instruction_i82_(parameter_1, inLexique) ;
    break ;
  case 83 :
      rule_plm_5F_syntax_instruction_i83_(parameter_1, inLexique) ;
    break ;
  case 85 :
      rule_plm_5F_syntax_instruction_i85_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                 'assignment_operator' non terminal implementation                                    
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_assignment_5F_operator_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 69 :
      rule_plm_5F_syntax_assignment_5F_operator_i69_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_assignment_5F_operator_ (GALGAS_operatorAssignmentKind &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 69 :
      rule_plm_5F_syntax_assignment_5F_operator_i69_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                    'if_instruction' non terminal implementation                                      
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_if_5F_instruction_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 77 :
      rule_plm_5F_syntax_if_5F_instruction_i77_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_if_5F_instruction_ (GALGAS_ifInstructionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 77 :
      rule_plm_5F_syntax_if_5F_instruction_i77_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                   'guarded_command' non terminal implementation                                      
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_guarded_5F_command_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 78 :
      rule_plm_5F_syntax_guarded_5F_command_i78_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_guarded_5F_command_ (GALGAS_guardedCommand &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 78 :
      rule_plm_5F_syntax_guarded_5F_command_i78_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                    'procedure_call' non terminal implementation                                      
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_procedure_5F_call_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 84 :
      rule_plm_5F_syntax_procedure_5F_call_i84_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_procedure_5F_call_ (GALGAS_callInstructionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 84 :
      rule_plm_5F_syntax_procedure_5F_call_i84_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                  'assignment_target' non terminal implementation                                     
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_assignment_5F_target_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 86 :
      rule_plm_5F_syntax_assignment_5F_target_i86_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_assignment_5F_target_ (GALGAS_assignmentTargetAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 86 :
      rule_plm_5F_syntax_assignment_5F_target_i86_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                'select_plm_5F_syntax_0' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_0 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 89 90 91 92 93 94 95 96
  return inLexique->nextProductionIndex () - 88 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                'select_plm_5F_syntax_1' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_1 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 97 98
  return inLexique->nextProductionIndex () - 96 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                'select_plm_5F_syntax_2' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_2 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 99 100
  return inLexique->nextProductionIndex () - 98 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                'select_plm_5F_syntax_3' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_3 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 101 102
  return inLexique->nextProductionIndex () - 100 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                'select_plm_5F_syntax_4' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_4 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 103 104
  return inLexique->nextProductionIndex () - 102 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                'select_plm_5F_syntax_5' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_5 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 105 106
  return inLexique->nextProductionIndex () - 104 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                'select_plm_5F_syntax_6' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_6 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 107 108 109 110 111 112 113 114
  return inLexique->nextProductionIndex () - 106 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                'select_plm_5F_syntax_7' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_7 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 115 116 117 118 119 120 121 122
  return inLexique->nextProductionIndex () - 114 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                'select_plm_5F_syntax_8' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_8 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 123 124
  return inLexique->nextProductionIndex () - 122 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                                'select_plm_5F_syntax_9' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_9 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 125 126
  return inLexique->nextProductionIndex () - 124 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_10' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_10 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 127 128
  return inLexique->nextProductionIndex () - 126 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_11' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_11 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 129 130
  return inLexique->nextProductionIndex () - 128 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_12' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_12 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 131 132
  return inLexique->nextProductionIndex () - 130 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_13' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_13 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 133 134
  return inLexique->nextProductionIndex () - 132 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_14' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_14 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 135 136
  return inLexique->nextProductionIndex () - 134 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_15' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_15 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 137 138
  return inLexique->nextProductionIndex () - 136 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_16' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_16 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 139 140
  return inLexique->nextProductionIndex () - 138 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_17' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_17 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 141 142
  return inLexique->nextProductionIndex () - 140 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_18' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_18 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 143 144
  return inLexique->nextProductionIndex () - 142 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_19' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_19 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 145 146
  return inLexique->nextProductionIndex () - 144 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_20' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_20 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 147 148 149 150 151 152 153 154 155 156
  return inLexique->nextProductionIndex () - 146 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_21' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_21 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 157 158 159 160 161
  return inLexique->nextProductionIndex () - 156 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_22' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_22 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 162 163
  return inLexique->nextProductionIndex () - 161 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_23' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_23 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 164 165
  return inLexique->nextProductionIndex () - 163 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_24' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_24 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 166 167
  return inLexique->nextProductionIndex () - 165 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_25' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_25 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 168 169
  return inLexique->nextProductionIndex () - 167 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_26' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_26 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 170 171
  return inLexique->nextProductionIndex () - 169 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_27' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_27 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 172 173 174 175 176 177 178 179 180 181
  return inLexique->nextProductionIndex () - 171 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_28' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_28 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 182 183
  return inLexique->nextProductionIndex () - 181 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_29' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_29 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 184 185 186 187
  return inLexique->nextProductionIndex () - 183 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_30' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_30 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 188 189
  return inLexique->nextProductionIndex () - 187 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_31' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_31 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 190 191
  return inLexique->nextProductionIndex () - 189 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_32' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_32 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 192 193
  return inLexique->nextProductionIndex () - 191 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_33' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_33 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 194 195
  return inLexique->nextProductionIndex () - 193 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_34' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_34 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 196 197
  return inLexique->nextProductionIndex () - 195 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_35' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_35 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 198 199
  return inLexique->nextProductionIndex () - 197 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_36' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_36 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 200 201
  return inLexique->nextProductionIndex () - 199 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_37' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_37 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 202 203
  return inLexique->nextProductionIndex () - 201 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_38' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_38 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 204 205
  return inLexique->nextProductionIndex () - 203 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_39' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_39 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 206 207
  return inLexique->nextProductionIndex () - 205 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_40' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_40 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 208 209
  return inLexique->nextProductionIndex () - 207 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_41' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_41 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 210 211
  return inLexique->nextProductionIndex () - 209 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_42' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_42 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 212 213
  return inLexique->nextProductionIndex () - 211 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_43' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_43 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 214 215
  return inLexique->nextProductionIndex () - 213 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_44' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_44 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 216 217
  return inLexique->nextProductionIndex () - 215 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_45' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_45 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 218 219
  return inLexique->nextProductionIndex () - 217 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_46' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_46 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 220 221
  return inLexique->nextProductionIndex () - 219 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_47' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_47 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 222 223
  return inLexique->nextProductionIndex () - 221 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_48' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_48 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 224 225 226
  return inLexique->nextProductionIndex () - 223 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_49' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_49 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 227 228 229 230 231
  return inLexique->nextProductionIndex () - 226 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_50' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_50 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 232 233 234
  return inLexique->nextProductionIndex () - 231 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_51' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_51 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 235 236 237 238 239
  return inLexique->nextProductionIndex () - 234 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_52' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_52 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 240 241 242 243 244 245 246
  return inLexique->nextProductionIndex () - 239 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_53' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_53 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 247 248
  return inLexique->nextProductionIndex () - 246 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_54' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_54 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 249 250
  return inLexique->nextProductionIndex () - 248 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_55' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_55 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 251 252
  return inLexique->nextProductionIndex () - 250 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_56' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_56 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 253 254
  return inLexique->nextProductionIndex () - 252 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_57' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_57 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 255 256
  return inLexique->nextProductionIndex () - 254 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_58' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_58 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 257 258 259 260
  return inLexique->nextProductionIndex () - 256 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_59' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_59 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 261 262 263 264 265 266
  return inLexique->nextProductionIndex () - 260 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_60' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_60 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 267 268
  return inLexique->nextProductionIndex () - 266 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_61' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_61 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 269 270
  return inLexique->nextProductionIndex () - 268 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_62' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_62 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 271 272 273
  return inLexique->nextProductionIndex () - 270 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_63' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_63 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 274 275 276 277 278 279 280 281 282
  return inLexique->nextProductionIndex () - 273 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_64' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_64 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 283 284
  return inLexique->nextProductionIndex () - 282 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_65' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_65 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 285 286
  return inLexique->nextProductionIndex () - 284 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_66' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_66 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 287 288 289
  return inLexique->nextProductionIndex () - 286 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_67' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_67 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 290 291
  return inLexique->nextProductionIndex () - 289 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_68' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_68 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 292 293
  return inLexique->nextProductionIndex () - 291 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_69' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_69 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 294 295
  return inLexique->nextProductionIndex () - 293 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_70' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_70 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 296 297
  return inLexique->nextProductionIndex () - 295 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_71' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_71 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 298 299
  return inLexique->nextProductionIndex () - 297 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_72' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_72 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 300 301
  return inLexique->nextProductionIndex () - 299 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_73' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_73 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 302 303
  return inLexique->nextProductionIndex () - 301 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_74' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_74 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 304 305
  return inLexique->nextProductionIndex () - 303 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_75' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_75 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 306 307
  return inLexique->nextProductionIndex () - 305 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                      
//                               'select_plm_5F_syntax_76' non terminal implementation                                  
//                                                                                                                      
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_plm_5F_syntax_76 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 308 309 310
  return inLexique->nextProductionIndex () - 307 ;
}

//---------------------------------------------------------------------------------------------------------------------*

