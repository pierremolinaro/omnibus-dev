#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "all-declarations-1.h"


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Class for element of '@propertyList' list                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_propertyList : public cCollectionElement {
  public : GALGAS_propertyList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_propertyList (const GALGAS_unifiedTypeMap_2D_proxy & in_mTypeProxy,
                                            const GALGAS_lstring & in_mPropertyName
                                            COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_propertyList::cCollectionElement_propertyList (const GALGAS_unifiedTypeMap_2D_proxy & in_mTypeProxy,
                                                                  const GALGAS_lstring & in_mPropertyName
                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mTypeProxy, in_mPropertyName) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_propertyList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_propertyList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_propertyList (mObject.mAttribute_mTypeProxy, mObject.mAttribute_mPropertyName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_propertyList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTypeProxy" ":" ;
  mObject.mAttribute_mTypeProxy.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertyName" ":" ;
  mObject.mAttribute_mPropertyName.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_propertyList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_propertyList * operand = (cCollectionElement_propertyList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_propertyList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_propertyList::GALGAS_propertyList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_propertyList::GALGAS_propertyList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_propertyList GALGAS_propertyList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_propertyList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_propertyList GALGAS_propertyList::constructor_listWithValue (const GALGAS_unifiedTypeMap_2D_proxy & inOperand0,
                                                                    const GALGAS_lstring & inOperand1
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_propertyList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_propertyList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_propertyList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                     const GALGAS_unifiedTypeMap_2D_proxy & in_mTypeProxy,
                                                     const GALGAS_lstring & in_mPropertyName
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement_propertyList * p = NULL ;
  macroMyNew (p, cCollectionElement_propertyList (in_mTypeProxy,
                                                  in_mPropertyName COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_propertyList::addAssign_operation (const GALGAS_unifiedTypeMap_2D_proxy & inOperand0,
                                               const GALGAS_lstring & inOperand1
                                               COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_propertyList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_propertyList::modifier_insertAtIndex (const GALGAS_unifiedTypeMap_2D_proxy inOperand0,
                                                  const GALGAS_lstring inOperand1,
                                                  const GALGAS_uint inInsertionIndex,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_propertyList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_propertyList::modifier_removeAtIndex (GALGAS_unifiedTypeMap_2D_proxy & outOperand0,
                                                  GALGAS_lstring & outOperand1,
                                                  const GALGAS_uint inRemoveIndex,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_propertyList * p = (cCollectionElement_propertyList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_propertyList) ;
      outOperand0 = p->mObject.mAttribute_mTypeProxy ;
      outOperand1 = p->mObject.mAttribute_mPropertyName ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_propertyList::modifier_popFirst (GALGAS_unifiedTypeMap_2D_proxy & outOperand0,
                                             GALGAS_lstring & outOperand1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_propertyList * p = (cCollectionElement_propertyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_propertyList) ;
    outOperand0 = p->mObject.mAttribute_mTypeProxy ;
    outOperand1 = p->mObject.mAttribute_mPropertyName ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_propertyList::modifier_popLast (GALGAS_unifiedTypeMap_2D_proxy & outOperand0,
                                            GALGAS_lstring & outOperand1,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_propertyList * p = (cCollectionElement_propertyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_propertyList) ;
    outOperand0 = p->mObject.mAttribute_mTypeProxy ;
    outOperand1 = p->mObject.mAttribute_mPropertyName ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_propertyList::method_first (GALGAS_unifiedTypeMap_2D_proxy & outOperand0,
                                        GALGAS_lstring & outOperand1,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_propertyList * p = (cCollectionElement_propertyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_propertyList) ;
    outOperand0 = p->mObject.mAttribute_mTypeProxy ;
    outOperand1 = p->mObject.mAttribute_mPropertyName ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_propertyList::method_last (GALGAS_unifiedTypeMap_2D_proxy & outOperand0,
                                       GALGAS_lstring & outOperand1,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_propertyList * p = (cCollectionElement_propertyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_propertyList) ;
    outOperand0 = p->mObject.mAttribute_mTypeProxy ;
    outOperand1 = p->mObject.mAttribute_mPropertyName ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_propertyList GALGAS_propertyList::operator_concat (const GALGAS_propertyList & inOperand
                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_propertyList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_propertyList GALGAS_propertyList::add_operation (const GALGAS_propertyList & inOperand,
                                                        C_Compiler * /* inCompiler */
                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_propertyList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_propertyList GALGAS_propertyList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_propertyList result = GALGAS_propertyList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_propertyList GALGAS_propertyList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_propertyList result = GALGAS_propertyList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_propertyList::dotAssign_operation (const GALGAS_propertyList inOperand
                                               COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_propertyList::reader_mTypeProxyAtIndex (const GALGAS_uint & inIndex,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_propertyList * p = (cCollectionElement_propertyList *) attributes.ptr () ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_propertyList) ;
    result = p->mObject.mAttribute_mTypeProxy ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_propertyList::reader_mPropertyNameAtIndex (const GALGAS_uint & inIndex,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_propertyList * p = (cCollectionElement_propertyList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_propertyList) ;
    result = p->mObject.mAttribute_mPropertyName ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_propertyList::cEnumerator_propertyList (const GALGAS_propertyList & inEnumeratedObject,
                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_propertyList_2D_element cEnumerator_propertyList::current (LOCATION_ARGS) const {
  const cCollectionElement_propertyList * p = (const cCollectionElement_propertyList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_propertyList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_propertyList::current_mTypeProxy (LOCATION_ARGS) const {
  const cCollectionElement_propertyList * p = (const cCollectionElement_propertyList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_propertyList) ;
  return p->mObject.mAttribute_mTypeProxy ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_propertyList::current_mPropertyName (LOCATION_ARGS) const {
  const cCollectionElement_propertyList * p = (const cCollectionElement_propertyList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_propertyList) ;
  return p->mObject.mAttribute_mPropertyName ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 @propertyList type                                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_propertyList ("propertyList",
                                     NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_propertyList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_propertyList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_propertyList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_propertyList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_propertyList GALGAS_propertyList::extractObject (const GALGAS_object & inObject,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  GALGAS_propertyList result ;
  const GALGAS_propertyList * p = (const GALGAS_propertyList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_propertyList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("propertyList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_constructorMap::cMapElement_constructorMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_string & in_mInlineGeneratedCode
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mInlineGeneratedCode (in_mInlineGeneratedCode) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_constructorMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mInlineGeneratedCode.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_constructorMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_constructorMap (mAttribute_lkey, mAttribute_mInlineGeneratedCode COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_constructorMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInlineGeneratedCode" ":" ;
  mAttribute_mInlineGeneratedCode.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_constructorMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_constructorMap * operand = (cMapElement_constructorMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mInlineGeneratedCode.objectCompare (operand->mAttribute_mInlineGeneratedCode) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap::GALGAS_constructorMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap::GALGAS_constructorMap (const GALGAS_constructorMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap & GALGAS_constructorMap::operator = (const GALGAS_constructorMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap GALGAS_constructorMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_constructorMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap GALGAS_constructorMap::constructor_mapWithMapToOverride (const GALGAS_constructorMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_constructorMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap GALGAS_constructorMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_constructorMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                 const GALGAS_string & inArgument0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_constructorMap * p = NULL ;
  macroMyNew (p, cMapElement_constructorMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@constructorMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_string inArgument0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_constructorMap * p = NULL ;
  macroMyNew (p, cMapElement_constructorMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' constructor is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_constructorMap_searchKey = "there is no '%K' constructor" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_string & outArgument0,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_constructorMap * p = (const cMapElement_constructorMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_constructorMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_constructorMap) ;
    outArgument0 = p->mAttribute_mInlineGeneratedCode ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_constructorMap::reader_mInlineGeneratedCodeForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_constructorMap * p = (const cMapElement_constructorMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_constructorMap) ;
    result = p->mAttribute_mInlineGeneratedCode ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorMap::modifier_setMInlineGeneratedCodeForKey (GALGAS_string inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_constructorMap * p = (cMapElement_constructorMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_constructorMap) ;
    p->mAttribute_mInlineGeneratedCode = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_constructorMap * GALGAS_constructorMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                       const GALGAS_string & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_constructorMap * result = (cMapElement_constructorMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_constructorMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_constructorMap::cEnumerator_constructorMap (const GALGAS_constructorMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap_2D_element cEnumerator_constructorMap::current (LOCATION_ARGS) const {
  const cMapElement_constructorMap * p = (const cMapElement_constructorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_constructorMap) ;
  return GALGAS_constructorMap_2D_element (p->mAttribute_lkey, p->mAttribute_mInlineGeneratedCode) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_constructorMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_constructorMap::current_mInlineGeneratedCode (LOCATION_ARGS) const {
  const cMapElement_constructorMap * p = (const cMapElement_constructorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_constructorMap) ;
  return p->mAttribute_mInlineGeneratedCode ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @constructorMap type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_constructorMap ("constructorMap",
                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_constructorMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_constructorMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_constructorMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_constructorMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap GALGAS_constructorMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_constructorMap result ;
  const GALGAS_constructorMap * p = (const GALGAS_constructorMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_constructorMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("constructorMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_registerMap::cMapElement_registerMap (const GALGAS_lstring & inKey,
                                                  const GALGAS_unifiedTypeMap_2D_proxy & in_mType,
                                                  const GALGAS_bool & in_mIsReadOnly
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mType (in_mType),
mAttribute_mIsReadOnly (in_mIsReadOnly) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_registerMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () && mAttribute_mIsReadOnly.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_registerMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_registerMap (mAttribute_lkey, mAttribute_mType, mAttribute_mIsReadOnly COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_registerMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsReadOnly" ":" ;
  mAttribute_mIsReadOnly.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_registerMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_registerMap * operand = (cMapElement_registerMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIsReadOnly.objectCompare (operand->mAttribute_mIsReadOnly) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_registerMap::GALGAS_registerMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_registerMap::GALGAS_registerMap (const GALGAS_registerMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_registerMap & GALGAS_registerMap::operator = (const GALGAS_registerMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_registerMap GALGAS_registerMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_registerMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_registerMap GALGAS_registerMap::constructor_mapWithMapToOverride (const GALGAS_registerMap & inMapToOverride
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_registerMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_registerMap GALGAS_registerMap::reader_overriddenMap (C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_registerMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_registerMap::addAssign_operation (const GALGAS_lstring & inKey,
                                              const GALGAS_unifiedTypeMap_2D_proxy & inArgument0,
                                              const GALGAS_bool & inArgument1,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  cMapElement_registerMap * p = NULL ;
  macroMyNew (p, cMapElement_registerMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@registerMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_registerMap::modifier_insertKey (GALGAS_lstring inKey,
                                             GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                             GALGAS_bool inArgument1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_registerMap * p = NULL ;
  macroMyNew (p, cMapElement_registerMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' register has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_registerMap_searchKey = "** internal error **" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_registerMap::method_searchKey (GALGAS_lstring inKey,
                                           GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                           GALGAS_bool & outArgument1,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_registerMap * p = (const cMapElement_registerMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kSearchErrorMessage_registerMap_searchKey
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_registerMap) ;
    outArgument0 = p->mAttribute_mType ;
    outArgument1 = p->mAttribute_mIsReadOnly ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_registerMap::reader_mTypeForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_registerMap * p = (const cMapElement_registerMap *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_registerMap) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_registerMap::reader_mIsReadOnlyForKey (const GALGAS_string & inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_registerMap * p = (const cMapElement_registerMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_registerMap) ;
    result = p->mAttribute_mIsReadOnly ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_registerMap::modifier_setMTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                                  GALGAS_string inKey,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_registerMap * p = (cMapElement_registerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_registerMap) ;
    p->mAttribute_mType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_registerMap::modifier_setMIsReadOnlyForKey (GALGAS_bool inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_registerMap * p = (cMapElement_registerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_registerMap) ;
    p->mAttribute_mIsReadOnly = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_registerMap * GALGAS_registerMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                 const GALGAS_string & inKey
                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_registerMap * result = (cMapElement_registerMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_registerMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_registerMap::cEnumerator_registerMap (const GALGAS_registerMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_registerMap_2D_element cEnumerator_registerMap::current (LOCATION_ARGS) const {
  const cMapElement_registerMap * p = (const cMapElement_registerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_registerMap) ;
  return GALGAS_registerMap_2D_element (p->mAttribute_lkey, p->mAttribute_mType, p->mAttribute_mIsReadOnly) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_registerMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_registerMap::current_mType (LOCATION_ARGS) const {
  const cMapElement_registerMap * p = (const cMapElement_registerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_registerMap) ;
  return p->mAttribute_mType ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_registerMap::current_mIsReadOnly (LOCATION_ARGS) const {
  const cMapElement_registerMap * p = (const cMapElement_registerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_registerMap) ;
  return p->mAttribute_mIsReadOnly ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                  @registerMap type                                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_registerMap ("registerMap",
                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_registerMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_registerMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_registerMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_registerMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_registerMap GALGAS_registerMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_registerMap result ;
  const GALGAS_registerMap * p = (const GALGAS_registerMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_registerMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("registerMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalLiteralStringMap::cMapElement_globalLiteralStringMap (const GALGAS_lstring & inKey,
                                                                        const GALGAS_string & in_mLiteralStringCname
                                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mLiteralStringCname (in_mLiteralStringCname) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_globalLiteralStringMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mLiteralStringCname.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_globalLiteralStringMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_globalLiteralStringMap (mAttribute_lkey, mAttribute_mLiteralStringCname COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_globalLiteralStringMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mLiteralStringCname" ":" ;
  mAttribute_mLiteralStringCname.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_globalLiteralStringMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_globalLiteralStringMap * operand = (cMapElement_globalLiteralStringMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mLiteralStringCname.objectCompare (operand->mAttribute_mLiteralStringCname) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalLiteralStringMap::GALGAS_globalLiteralStringMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalLiteralStringMap::GALGAS_globalLiteralStringMap (const GALGAS_globalLiteralStringMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalLiteralStringMap & GALGAS_globalLiteralStringMap::operator = (const GALGAS_globalLiteralStringMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalLiteralStringMap GALGAS_globalLiteralStringMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_globalLiteralStringMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalLiteralStringMap GALGAS_globalLiteralStringMap::constructor_mapWithMapToOverride (const GALGAS_globalLiteralStringMap & inMapToOverride
                                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_globalLiteralStringMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalLiteralStringMap GALGAS_globalLiteralStringMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_globalLiteralStringMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalLiteralStringMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                         const GALGAS_string & inArgument0,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cMapElement_globalLiteralStringMap * p = NULL ;
  macroMyNew (p, cMapElement_globalLiteralStringMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@globalLiteralStringMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalLiteralStringMap::modifier_insertKey (GALGAS_lstring inKey,
                                                        GALGAS_string inArgument0,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cMapElement_globalLiteralStringMap * p = NULL ;
  macroMyNew (p, cMapElement_globalLiteralStringMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "** internal error **" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_globalLiteralStringMap_searchKey = "** internal error **" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalLiteralStringMap::method_searchKey (GALGAS_lstring inKey,
                                                      GALGAS_string & outArgument0,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  const cMapElement_globalLiteralStringMap * p = (const cMapElement_globalLiteralStringMap *) performSearch (inKey,
                                                                                                               inCompiler,
                                                                                                               kSearchErrorMessage_globalLiteralStringMap_searchKey
                                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_globalLiteralStringMap) ;
    outArgument0 = p->mAttribute_mLiteralStringCname ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_globalLiteralStringMap::reader_mLiteralStringCnameForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalLiteralStringMap * p = (const cMapElement_globalLiteralStringMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalLiteralStringMap) ;
    result = p->mAttribute_mLiteralStringCname ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalLiteralStringMap::modifier_setMLiteralStringCnameForKey (GALGAS_string inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalLiteralStringMap * p = (cMapElement_globalLiteralStringMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalLiteralStringMap) ;
    p->mAttribute_mLiteralStringCname = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalLiteralStringMap * GALGAS_globalLiteralStringMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                       const GALGAS_string & inKey
                                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_globalLiteralStringMap * result = (cMapElement_globalLiteralStringMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_globalLiteralStringMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_globalLiteralStringMap::cEnumerator_globalLiteralStringMap (const GALGAS_globalLiteralStringMap & inEnumeratedObject,
                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalLiteralStringMap_2D_element cEnumerator_globalLiteralStringMap::current (LOCATION_ARGS) const {
  const cMapElement_globalLiteralStringMap * p = (const cMapElement_globalLiteralStringMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalLiteralStringMap) ;
  return GALGAS_globalLiteralStringMap_2D_element (p->mAttribute_lkey, p->mAttribute_mLiteralStringCname) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_globalLiteralStringMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_globalLiteralStringMap::current_mLiteralStringCname (LOCATION_ARGS) const {
  const cMapElement_globalLiteralStringMap * p = (const cMapElement_globalLiteralStringMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalLiteralStringMap) ;
  return p->mAttribute_mLiteralStringCname ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @globalLiteralStringMap type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalLiteralStringMap ("globalLiteralStringMap",
                                               NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalLiteralStringMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalLiteralStringMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalLiteralStringMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalLiteralStringMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalLiteralStringMap GALGAS_globalLiteralStringMap::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_globalLiteralStringMap result ;
  const GALGAS_globalLiteralStringMap * p = (const GALGAS_globalLiteralStringMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalLiteralStringMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalLiteralStringMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalConstantMap::cMapElement_globalConstantMap (const GALGAS_lstring & inKey,
                                                              const GALGAS_unifiedTypeMap_2D_proxy & in_mConstantType,
                                                              const GALGAS_variableKindIR & in_mExpressionCode
                                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mConstantType (in_mConstantType),
mAttribute_mExpressionCode (in_mExpressionCode) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_globalConstantMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mConstantType.isValid () && mAttribute_mExpressionCode.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_globalConstantMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_globalConstantMap (mAttribute_lkey, mAttribute_mConstantType, mAttribute_mExpressionCode COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_globalConstantMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mConstantType" ":" ;
  mAttribute_mConstantType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mExpressionCode" ":" ;
  mAttribute_mExpressionCode.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_globalConstantMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_globalConstantMap * operand = (cMapElement_globalConstantMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mConstantType.objectCompare (operand->mAttribute_mConstantType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mExpressionCode.objectCompare (operand->mAttribute_mExpressionCode) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap::GALGAS_globalConstantMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap::GALGAS_globalConstantMap (const GALGAS_globalConstantMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap & GALGAS_globalConstantMap::operator = (const GALGAS_globalConstantMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap GALGAS_globalConstantMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_globalConstantMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap GALGAS_globalConstantMap::constructor_mapWithMapToOverride (const GALGAS_globalConstantMap & inMapToOverride
                                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_globalConstantMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap GALGAS_globalConstantMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_globalConstantMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                    const GALGAS_unifiedTypeMap_2D_proxy & inArgument0,
                                                    const GALGAS_variableKindIR & inArgument1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_globalConstantMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@globalConstantMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMap::modifier_insertKey (GALGAS_lstring inKey,
                                                   GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                   GALGAS_variableKindIR inArgument1,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_globalConstantMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' constant is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_globalConstantMap_searchKey = "there is no '%K' constant" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMap::method_searchKey (GALGAS_lstring inKey,
                                                 GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                 GALGAS_variableKindIR & outArgument1,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  const cMapElement_globalConstantMap * p = (const cMapElement_globalConstantMap *) performSearch (inKey,
                                                                                                     inCompiler,
                                                                                                     kSearchErrorMessage_globalConstantMap_searchKey
                                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_globalConstantMap) ;
    outArgument0 = p->mAttribute_mConstantType ;
    outArgument1 = p->mAttribute_mExpressionCode ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_globalConstantMap::reader_mConstantTypeForKey (const GALGAS_string & inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalConstantMap * p = (const cMapElement_globalConstantMap *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMap) ;
    result = p->mAttribute_mConstantType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_globalConstantMap::reader_mExpressionCodeForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalConstantMap * p = (const cMapElement_globalConstantMap *) attributes ;
  GALGAS_variableKindIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMap) ;
    result = p->mAttribute_mExpressionCode ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMap::modifier_setMConstantTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalConstantMap * p = (cMapElement_globalConstantMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMap) ;
    p->mAttribute_mConstantType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMap::modifier_setMExpressionCodeForKey (GALGAS_variableKindIR inAttributeValue,
                                                                  GALGAS_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalConstantMap * p = (cMapElement_globalConstantMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMap) ;
    p->mAttribute_mExpressionCode = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalConstantMap * GALGAS_globalConstantMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                             const GALGAS_string & inKey
                                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMap * result = (cMapElement_globalConstantMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_globalConstantMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_globalConstantMap::cEnumerator_globalConstantMap (const GALGAS_globalConstantMap & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap_2D_element cEnumerator_globalConstantMap::current (LOCATION_ARGS) const {
  const cMapElement_globalConstantMap * p = (const cMapElement_globalConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalConstantMap) ;
  return GALGAS_globalConstantMap_2D_element (p->mAttribute_lkey, p->mAttribute_mConstantType, p->mAttribute_mExpressionCode) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_globalConstantMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_globalConstantMap::current_mConstantType (LOCATION_ARGS) const {
  const cMapElement_globalConstantMap * p = (const cMapElement_globalConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalConstantMap) ;
  return p->mAttribute_mConstantType ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR cEnumerator_globalConstantMap::current_mExpressionCode (LOCATION_ARGS) const {
  const cMapElement_globalConstantMap * p = (const cMapElement_globalConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalConstantMap) ;
  return p->mAttribute_mExpressionCode ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @globalConstantMap type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalConstantMap ("globalConstantMap",
                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalConstantMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalConstantMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalConstantMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalConstantMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap GALGAS_globalConstantMap::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_globalConstantMap result ;
  const GALGAS_globalConstantMap * p = (const GALGAS_globalConstantMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalConstantMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalConstantMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_targetBaseTypeMap::cMapElement_targetBaseTypeMap (const GALGAS_lstring & inKey,
                                                              const GALGAS_string & in_mCType,
                                                              const GALGAS_uint & in_mSize,
                                                              const GALGAS_bool & in_mIsSigned
                                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mCType (in_mCType),
mAttribute_mSize (in_mSize),
mAttribute_mIsSigned (in_mIsSigned) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_targetBaseTypeMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mCType.isValid () && mAttribute_mSize.isValid () && mAttribute_mIsSigned.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_targetBaseTypeMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_targetBaseTypeMap (mAttribute_lkey, mAttribute_mCType, mAttribute_mSize, mAttribute_mIsSigned COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_targetBaseTypeMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCType" ":" ;
  mAttribute_mCType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSize" ":" ;
  mAttribute_mSize.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsSigned" ":" ;
  mAttribute_mIsSigned.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_targetBaseTypeMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_targetBaseTypeMap * operand = (cMapElement_targetBaseTypeMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mCType.objectCompare (operand->mAttribute_mCType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSize.objectCompare (operand->mAttribute_mSize) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIsSigned.objectCompare (operand->mAttribute_mIsSigned) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetBaseTypeMap::GALGAS_targetBaseTypeMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetBaseTypeMap::GALGAS_targetBaseTypeMap (const GALGAS_targetBaseTypeMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetBaseTypeMap & GALGAS_targetBaseTypeMap::operator = (const GALGAS_targetBaseTypeMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetBaseTypeMap GALGAS_targetBaseTypeMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_targetBaseTypeMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetBaseTypeMap GALGAS_targetBaseTypeMap::constructor_mapWithMapToOverride (const GALGAS_targetBaseTypeMap & inMapToOverride
                                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_targetBaseTypeMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetBaseTypeMap GALGAS_targetBaseTypeMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_targetBaseTypeMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_targetBaseTypeMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                    const GALGAS_string & inArgument0,
                                                    const GALGAS_uint & inArgument1,
                                                    const GALGAS_bool & inArgument2,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_targetBaseTypeMap * p = NULL ;
  macroMyNew (p, cMapElement_targetBaseTypeMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@targetBaseTypeMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_targetBaseTypeMap::modifier_insertKey (GALGAS_lstring inKey,
                                                   GALGAS_string inArgument0,
                                                   GALGAS_uint inArgument1,
                                                   GALGAS_bool inArgument2,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_targetBaseTypeMap * p = NULL ;
  macroMyNew (p, cMapElement_targetBaseTypeMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' base type is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_targetBaseTypeMap_searchKey = "there is no '%K' base type" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_targetBaseTypeMap::method_searchKey (GALGAS_lstring inKey,
                                                 GALGAS_string & outArgument0,
                                                 GALGAS_uint & outArgument1,
                                                 GALGAS_bool & outArgument2,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  const cMapElement_targetBaseTypeMap * p = (const cMapElement_targetBaseTypeMap *) performSearch (inKey,
                                                                                                     inCompiler,
                                                                                                     kSearchErrorMessage_targetBaseTypeMap_searchKey
                                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_targetBaseTypeMap) ;
    outArgument0 = p->mAttribute_mCType ;
    outArgument1 = p->mAttribute_mSize ;
    outArgument2 = p->mAttribute_mIsSigned ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_targetBaseTypeMap::reader_mCTypeForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_targetBaseTypeMap * p = (const cMapElement_targetBaseTypeMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_targetBaseTypeMap) ;
    result = p->mAttribute_mCType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_targetBaseTypeMap::reader_mSizeForKey (const GALGAS_string & inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_targetBaseTypeMap * p = (const cMapElement_targetBaseTypeMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_targetBaseTypeMap) ;
    result = p->mAttribute_mSize ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_targetBaseTypeMap::reader_mIsSignedForKey (const GALGAS_string & inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_targetBaseTypeMap * p = (const cMapElement_targetBaseTypeMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_targetBaseTypeMap) ;
    result = p->mAttribute_mIsSigned ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_targetBaseTypeMap::modifier_setMCTypeForKey (GALGAS_string inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_targetBaseTypeMap * p = (cMapElement_targetBaseTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_targetBaseTypeMap) ;
    p->mAttribute_mCType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_targetBaseTypeMap::modifier_setMSizeForKey (GALGAS_uint inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_targetBaseTypeMap * p = (cMapElement_targetBaseTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_targetBaseTypeMap) ;
    p->mAttribute_mSize = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_targetBaseTypeMap::modifier_setMIsSignedForKey (GALGAS_bool inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_targetBaseTypeMap * p = (cMapElement_targetBaseTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_targetBaseTypeMap) ;
    p->mAttribute_mIsSigned = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_targetBaseTypeMap * GALGAS_targetBaseTypeMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                             const GALGAS_string & inKey
                                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_targetBaseTypeMap * result = (cMapElement_targetBaseTypeMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_targetBaseTypeMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_targetBaseTypeMap::cEnumerator_targetBaseTypeMap (const GALGAS_targetBaseTypeMap & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetBaseTypeMap_2D_element cEnumerator_targetBaseTypeMap::current (LOCATION_ARGS) const {
  const cMapElement_targetBaseTypeMap * p = (const cMapElement_targetBaseTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_targetBaseTypeMap) ;
  return GALGAS_targetBaseTypeMap_2D_element (p->mAttribute_lkey, p->mAttribute_mCType, p->mAttribute_mSize, p->mAttribute_mIsSigned) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_targetBaseTypeMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_targetBaseTypeMap::current_mCType (LOCATION_ARGS) const {
  const cMapElement_targetBaseTypeMap * p = (const cMapElement_targetBaseTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_targetBaseTypeMap) ;
  return p->mAttribute_mCType ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_targetBaseTypeMap::current_mSize (LOCATION_ARGS) const {
  const cMapElement_targetBaseTypeMap * p = (const cMapElement_targetBaseTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_targetBaseTypeMap) ;
  return p->mAttribute_mSize ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_targetBaseTypeMap::current_mIsSigned (LOCATION_ARGS) const {
  const cMapElement_targetBaseTypeMap * p = (const cMapElement_targetBaseTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_targetBaseTypeMap) ;
  return p->mAttribute_mIsSigned ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @targetBaseTypeMap type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_targetBaseTypeMap ("targetBaseTypeMap",
                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_targetBaseTypeMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_targetBaseTypeMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_targetBaseTypeMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_targetBaseTypeMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetBaseTypeMap GALGAS_targetBaseTypeMap::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_targetBaseTypeMap result ;
  const GALGAS_targetBaseTypeMap * p = (const GALGAS_targetBaseTypeMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_targetBaseTypeMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("targetBaseTypeMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalVariableMap::cMapElement_globalVariableMap (const GALGAS_lstring & inKey,
                                                              const GALGAS_unifiedTypeMap_2D_proxy & in_mVariableType,
                                                              const GALGAS_stringset & in_mExecutionModeSet,
                                                              const GALGAS_variableKindIR & in_mInitialValue
                                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mVariableType (in_mVariableType),
mAttribute_mExecutionModeSet (in_mExecutionModeSet),
mAttribute_mInitialValue (in_mInitialValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_globalVariableMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mVariableType.isValid () && mAttribute_mExecutionModeSet.isValid () && mAttribute_mInitialValue.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_globalVariableMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_globalVariableMap (mAttribute_lkey, mAttribute_mVariableType, mAttribute_mExecutionModeSet, mAttribute_mInitialValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_globalVariableMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mVariableType" ":" ;
  mAttribute_mVariableType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mExecutionModeSet" ":" ;
  mAttribute_mExecutionModeSet.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInitialValue" ":" ;
  mAttribute_mInitialValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_globalVariableMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_globalVariableMap * operand = (cMapElement_globalVariableMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mVariableType.objectCompare (operand->mAttribute_mVariableType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mExecutionModeSet.objectCompare (operand->mAttribute_mExecutionModeSet) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInitialValue.objectCompare (operand->mAttribute_mInitialValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap::GALGAS_globalVariableMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap::GALGAS_globalVariableMap (const GALGAS_globalVariableMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap & GALGAS_globalVariableMap::operator = (const GALGAS_globalVariableMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap GALGAS_globalVariableMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_globalVariableMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap GALGAS_globalVariableMap::constructor_mapWithMapToOverride (const GALGAS_globalVariableMap & inMapToOverride
                                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_globalVariableMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap GALGAS_globalVariableMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_globalVariableMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                    const GALGAS_unifiedTypeMap_2D_proxy & inArgument0,
                                                    const GALGAS_stringset & inArgument1,
                                                    const GALGAS_variableKindIR & inArgument2,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMap * p = NULL ;
  macroMyNew (p, cMapElement_globalVariableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@globalVariableMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::modifier_insertKey (GALGAS_lstring inKey,
                                                   GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                   GALGAS_stringset inArgument1,
                                                   GALGAS_variableKindIR inArgument2,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMap * p = NULL ;
  macroMyNew (p, cMapElement_globalVariableMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' global variable is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_globalVariableMap_searchKey = "there is no '%K' global variable" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::method_searchKey (GALGAS_lstring inKey,
                                                 GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                 GALGAS_stringset & outArgument1,
                                                 GALGAS_variableKindIR & outArgument2,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) performSearch (inKey,
                                                                                                     inCompiler,
                                                                                                     kSearchErrorMessage_globalVariableMap_searchKey
                                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    outArgument0 = p->mAttribute_mVariableType ;
    outArgument1 = p->mAttribute_mExecutionModeSet ;
    outArgument2 = p->mAttribute_mInitialValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_globalVariableMap::reader_mVariableTypeForKey (const GALGAS_string & inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    result = p->mAttribute_mVariableType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset GALGAS_globalVariableMap::reader_mExecutionModeSetForKey (const GALGAS_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) attributes ;
  GALGAS_stringset result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    result = p->mAttribute_mExecutionModeSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_globalVariableMap::reader_mInitialValueForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) attributes ;
  GALGAS_variableKindIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    result = p->mAttribute_mInitialValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::modifier_setMVariableTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMap * p = (cMapElement_globalVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    p->mAttribute_mVariableType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::modifier_setMExecutionModeSetForKey (GALGAS_stringset inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMap * p = (cMapElement_globalVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    p->mAttribute_mExecutionModeSet = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::modifier_setMInitialValueForKey (GALGAS_variableKindIR inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMap * p = (cMapElement_globalVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    p->mAttribute_mInitialValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalVariableMap * GALGAS_globalVariableMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                             const GALGAS_string & inKey
                                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMap * result = (cMapElement_globalVariableMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_globalVariableMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_globalVariableMap::cEnumerator_globalVariableMap (const GALGAS_globalVariableMap & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap_2D_element cEnumerator_globalVariableMap::current (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return GALGAS_globalVariableMap_2D_element (p->mAttribute_lkey, p->mAttribute_mVariableType, p->mAttribute_mExecutionModeSet, p->mAttribute_mInitialValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_globalVariableMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_globalVariableMap::current_mVariableType (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return p->mAttribute_mVariableType ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset cEnumerator_globalVariableMap::current_mExecutionModeSet (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return p->mAttribute_mExecutionModeSet ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR cEnumerator_globalVariableMap::current_mInitialValue (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return p->mAttribute_mInitialValue ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @globalVariableMap type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalVariableMap ("globalVariableMap",
                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalVariableMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalVariableMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalVariableMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalVariableMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap GALGAS_globalVariableMap::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_globalVariableMap result ;
  const GALGAS_globalVariableMap * p = (const GALGAS_globalVariableMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalVariableMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalVariableMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_unifiedTypeMap::cMapElement_unifiedTypeMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_typeKind & in_kind,
                                                        const GALGAS_constructorMap & in_constructorMap,
                                                        const GALGAS_procedureMap & in_procedureMap,
                                                        const GALGAS_bool & in_copiable,
                                                        const GALGAS_bool & in_equatable,
                                                        const GALGAS_bool & in_comparable
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_kind (in_kind),
mAttribute_constructorMap (in_constructorMap),
mAttribute_procedureMap (in_procedureMap),
mAttribute_copiable (in_copiable),
mAttribute_equatable (in_equatable),
mAttribute_comparable (in_comparable) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_unifiedTypeMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_kind.isValid () && mAttribute_constructorMap.isValid () && mAttribute_procedureMap.isValid () && mAttribute_copiable.isValid () && mAttribute_equatable.isValid () && mAttribute_comparable.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_unifiedTypeMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_unifiedTypeMap (mAttribute_lkey, mAttribute_kind, mAttribute_constructorMap, mAttribute_procedureMap, mAttribute_copiable, mAttribute_equatable, mAttribute_comparable COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_unifiedTypeMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "kind" ":" ;
  mAttribute_kind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "constructorMap" ":" ;
  mAttribute_constructorMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "procedureMap" ":" ;
  mAttribute_procedureMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "copiable" ":" ;
  mAttribute_copiable.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "equatable" ":" ;
  mAttribute_equatable.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "comparable" ":" ;
  mAttribute_comparable.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_unifiedTypeMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_unifiedTypeMap * operand = (cMapElement_unifiedTypeMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_kind.objectCompare (operand->mAttribute_kind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_constructorMap.objectCompare (operand->mAttribute_constructorMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_procedureMap.objectCompare (operand->mAttribute_procedureMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_copiable.objectCompare (operand->mAttribute_copiable) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_equatable.objectCompare (operand->mAttribute_equatable) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_comparable.objectCompare (operand->mAttribute_comparable) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap::GALGAS_unifiedTypeMap (void) :
AC_GALGAS_uniqueMap () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap::GALGAS_unifiedTypeMap (const GALGAS_unifiedTypeMap & inSource) :
AC_GALGAS_uniqueMap (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap & GALGAS_unifiedTypeMap::operator = (const GALGAS_unifiedTypeMap & inSource) {
  * ((AC_GALGAS_uniqueMap *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap GALGAS_unifiedTypeMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_unifiedTypeMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton states                                                       *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton state names                                                  *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton actions                                                    *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton action names                                                 *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton transitions                                                  *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton final state issues                                           *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_typeKind inArgument0,
                                                GALGAS_constructorMap inArgument1,
                                                GALGAS_procedureMap inArgument2,
                                                GALGAS_bool inArgument3,
                                                GALGAS_bool inArgument4,
                                                GALGAS_bool inArgument5,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_unifiedTypeMap * p = NULL ;
  macroMyNew (p, cMapElement_unifiedTypeMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' type is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        0,
                        NULL,
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_unifiedTypeMap_searchKey = "there is no '%K' type" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_typeKind & outArgument0,
                                              GALGAS_constructorMap & outArgument1,
                                              GALGAS_procedureMap & outArgument2,
                                              GALGAS_bool & outArgument3,
                                              GALGAS_bool & outArgument4,
                                              GALGAS_bool & outArgument5,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_unifiedTypeMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    outArgument0 = p->mAttribute_kind ;
    outArgument1 = p->mAttribute_constructorMap ;
    outArgument2 = p->mAttribute_procedureMap ;
    outArgument3 = p->mAttribute_copiable ;
    outArgument4 = p->mAttribute_equatable ;
    outArgument5 = p->mAttribute_comparable ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_unifiedTypeMap::reader_kindForKey (const GALGAS_string & inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_typeKind result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_kind ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap GALGAS_unifiedTypeMap::reader_constructorMapForKey (const GALGAS_string & inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_constructorMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_constructorMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureMap GALGAS_unifiedTypeMap::reader_procedureMapForKey (const GALGAS_string & inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_procedureMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_procedureMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_unifiedTypeMap::reader_copiableForKey (const GALGAS_string & inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_copiable ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_unifiedTypeMap::reader_equatableForKey (const GALGAS_string & inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_equatable ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_unifiedTypeMap::reader_comparableForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_comparable ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::modifier_setKindForKey (GALGAS_typeKind inAttributeValue,
                                                    GALGAS_string inKey,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_kind = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::modifier_setConstructorMapForKey (GALGAS_constructorMap inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_constructorMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::modifier_setProcedureMapForKey (GALGAS_procedureMap inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_procedureMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::modifier_setCopiableForKey (GALGAS_bool inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_copiable = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::modifier_setEquatableForKey (GALGAS_bool inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_equatable = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::modifier_setComparableForKey (GALGAS_bool inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_comparable = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_unifiedTypeMap * GALGAS_unifiedTypeMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                       const GALGAS_string & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_unifiedTypeMap * result = (cMapElement_unifiedTypeMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_unifiedTypeMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_unifiedTypeMap::cEnumerator_unifiedTypeMap (const GALGAS_unifiedTypeMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_unifiedTypeMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind cEnumerator_unifiedTypeMap::current_kind (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_kind ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap cEnumerator_unifiedTypeMap::current_constructorMap (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_constructorMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureMap cEnumerator_unifiedTypeMap::current_procedureMap (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_procedureMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_unifiedTypeMap::current_copiable (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_copiable ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_unifiedTypeMap::current_equatable (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_equatable ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_unifiedTypeMap::current_comparable (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_comparable ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @unifiedTypeMap type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_unifiedTypeMap ("unifiedTypeMap",
                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_unifiedTypeMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_unifiedTypeMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_unifiedTypeMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_unifiedTypeMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap GALGAS_unifiedTypeMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeMap result ;
  const GALGAS_unifiedTypeMap * p = (const GALGAS_unifiedTypeMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_unifiedTypeMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("unifiedTypeMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Class for element of '@typeList' list                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_typeList : public cCollectionElement {
  public : GALGAS_typeList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_typeList (const GALGAS_unifiedTypeMap_2D_proxy & in_mActualType
                                        COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_typeList::cCollectionElement_typeList (const GALGAS_unifiedTypeMap_2D_proxy & in_mActualType
                                                          COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mActualType) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_typeList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_typeList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_typeList (mObject.mAttribute_mActualType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_typeList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActualType" ":" ;
  mObject.mAttribute_mActualType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_typeList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_typeList * operand = (cCollectionElement_typeList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_typeList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList::GALGAS_typeList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList::GALGAS_typeList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList GALGAS_typeList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_typeList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList GALGAS_typeList::constructor_listWithValue (const GALGAS_unifiedTypeMap_2D_proxy & inOperand0
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_typeList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_typeList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                 const GALGAS_unifiedTypeMap_2D_proxy & in_mActualType
                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement_typeList * p = NULL ;
  macroMyNew (p, cCollectionElement_typeList (in_mActualType COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::addAssign_operation (const GALGAS_unifiedTypeMap_2D_proxy & inOperand0
                                           COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_typeList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::modifier_insertAtIndex (const GALGAS_unifiedTypeMap_2D_proxy inOperand0,
                                              const GALGAS_uint inInsertionIndex,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_typeList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::modifier_removeAtIndex (GALGAS_unifiedTypeMap_2D_proxy & outOperand0,
                                              const GALGAS_uint inRemoveIndex,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_typeList * p = (cCollectionElement_typeList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_typeList) ;
      outOperand0 = p->mObject.mAttribute_mActualType ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::modifier_popFirst (GALGAS_unifiedTypeMap_2D_proxy & outOperand0,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_typeList * p = (cCollectionElement_typeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_typeList) ;
    outOperand0 = p->mObject.mAttribute_mActualType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::modifier_popLast (GALGAS_unifiedTypeMap_2D_proxy & outOperand0,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_typeList * p = (cCollectionElement_typeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_typeList) ;
    outOperand0 = p->mObject.mAttribute_mActualType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::method_first (GALGAS_unifiedTypeMap_2D_proxy & outOperand0,
                                    C_Compiler * inCompiler
                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_typeList * p = (cCollectionElement_typeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_typeList) ;
    outOperand0 = p->mObject.mAttribute_mActualType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::method_last (GALGAS_unifiedTypeMap_2D_proxy & outOperand0,
                                   C_Compiler * inCompiler
                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_typeList * p = (cCollectionElement_typeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_typeList) ;
    outOperand0 = p->mObject.mAttribute_mActualType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList GALGAS_typeList::operator_concat (const GALGAS_typeList & inOperand
                                                  COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_typeList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList GALGAS_typeList::add_operation (const GALGAS_typeList & inOperand,
                                                C_Compiler * /* inCompiler */
                                                COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_typeList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList GALGAS_typeList::reader_subListWithRange (const GALGAS_range & inRange,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_typeList result = GALGAS_typeList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList GALGAS_typeList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_typeList result = GALGAS_typeList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::dotAssign_operation (const GALGAS_typeList inOperand
                                           COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_typeList::reader_mActualTypeAtIndex (const GALGAS_uint & inIndex,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_typeList * p = (cCollectionElement_typeList *) attributes.ptr () ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_typeList) ;
    result = p->mObject.mAttribute_mActualType ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_typeList::cEnumerator_typeList (const GALGAS_typeList & inEnumeratedObject,
                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList_2D_element cEnumerator_typeList::current (LOCATION_ARGS) const {
  const cCollectionElement_typeList * p = (const cCollectionElement_typeList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_typeList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_typeList::current_mActualType (LOCATION_ARGS) const {
  const cCollectionElement_typeList * p = (const cCollectionElement_typeList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_typeList) ;
  return p->mObject.mAttribute_mActualType ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                   @typeList type                                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_typeList ("typeList",
                                 NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_typeList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_typeList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_typeList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList GALGAS_typeList::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  GALGAS_typeList result ;
  const GALGAS_typeList * p = (const GALGAS_typeList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_typeList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("typeList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_registerMapIR::cMapElement_registerMapIR (const GALGAS_lstring & inKey,
                                                      const GALGAS_string & in_mRegisterTypeName,
                                                      const GALGAS_uint_36__34_ & in_mRegisterAddress
                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRegisterTypeName (in_mRegisterTypeName),
mAttribute_mRegisterAddress (in_mRegisterAddress) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_registerMapIR::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRegisterTypeName.isValid () && mAttribute_mRegisterAddress.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_registerMapIR::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_registerMapIR (mAttribute_lkey, mAttribute_mRegisterTypeName, mAttribute_mRegisterAddress COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_registerMapIR::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRegisterTypeName" ":" ;
  mAttribute_mRegisterTypeName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRegisterAddress" ":" ;
  mAttribute_mRegisterAddress.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_registerMapIR::compare (const cCollectionElement * inOperand) const {
  cMapElement_registerMapIR * operand = (cMapElement_registerMapIR *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRegisterTypeName.objectCompare (operand->mAttribute_mRegisterTypeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRegisterAddress.objectCompare (operand->mAttribute_mRegisterAddress) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_registerMapIR::GALGAS_registerMapIR (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_registerMapIR::GALGAS_registerMapIR (const GALGAS_registerMapIR & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_registerMapIR & GALGAS_registerMapIR::operator = (const GALGAS_registerMapIR & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_registerMapIR GALGAS_registerMapIR::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_registerMapIR result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_registerMapIR GALGAS_registerMapIR::constructor_mapWithMapToOverride (const GALGAS_registerMapIR & inMapToOverride
                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_registerMapIR result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_registerMapIR GALGAS_registerMapIR::reader_overriddenMap (C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_registerMapIR result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_registerMapIR::addAssign_operation (const GALGAS_lstring & inKey,
                                                const GALGAS_string & inArgument0,
                                                const GALGAS_uint_36__34_ & inArgument1,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_registerMapIR * p = NULL ;
  macroMyNew (p, cMapElement_registerMapIR (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@registerMapIR insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_registerMapIR::modifier_insertKey (GALGAS_lstring inKey,
                                               GALGAS_string inArgument0,
                                               GALGAS_uint_36__34_ inArgument1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_registerMapIR * p = NULL ;
  macroMyNew (p, cMapElement_registerMapIR (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "** internal error **" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_registerMapIR_searchKey = "** internal error **" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_registerMapIR::method_searchKey (GALGAS_lstring inKey,
                                             GALGAS_string & outArgument0,
                                             GALGAS_uint_36__34_ & outArgument1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  const cMapElement_registerMapIR * p = (const cMapElement_registerMapIR *) performSearch (inKey,
                                                                                             inCompiler,
                                                                                             kSearchErrorMessage_registerMapIR_searchKey
                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_registerMapIR) ;
    outArgument0 = p->mAttribute_mRegisterTypeName ;
    outArgument1 = p->mAttribute_mRegisterAddress ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_registerMapIR::reader_mRegisterTypeNameForKey (const GALGAS_string & inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_registerMapIR * p = (const cMapElement_registerMapIR *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_registerMapIR) ;
    result = p->mAttribute_mRegisterTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint_36__34_ GALGAS_registerMapIR::reader_mRegisterAddressForKey (const GALGAS_string & inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_registerMapIR * p = (const cMapElement_registerMapIR *) attributes ;
  GALGAS_uint_36__34_ result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_registerMapIR) ;
    result = p->mAttribute_mRegisterAddress ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_registerMapIR::modifier_setMRegisterTypeNameForKey (GALGAS_string inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_registerMapIR * p = (cMapElement_registerMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_registerMapIR) ;
    p->mAttribute_mRegisterTypeName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_registerMapIR::modifier_setMRegisterAddressForKey (GALGAS_uint_36__34_ inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_registerMapIR * p = (cMapElement_registerMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_registerMapIR) ;
    p->mAttribute_mRegisterAddress = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_registerMapIR * GALGAS_registerMapIR::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                     const GALGAS_string & inKey
                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_registerMapIR * result = (cMapElement_registerMapIR *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_registerMapIR) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_registerMapIR::cEnumerator_registerMapIR (const GALGAS_registerMapIR & inEnumeratedObject,
                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_registerMapIR_2D_element cEnumerator_registerMapIR::current (LOCATION_ARGS) const {
  const cMapElement_registerMapIR * p = (const cMapElement_registerMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_registerMapIR) ;
  return GALGAS_registerMapIR_2D_element (p->mAttribute_lkey, p->mAttribute_mRegisterTypeName, p->mAttribute_mRegisterAddress) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_registerMapIR::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_registerMapIR::current_mRegisterTypeName (LOCATION_ARGS) const {
  const cMapElement_registerMapIR * p = (const cMapElement_registerMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_registerMapIR) ;
  return p->mAttribute_mRegisterTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint_36__34_ cEnumerator_registerMapIR::current_mRegisterAddress (LOCATION_ARGS) const {
  const cMapElement_registerMapIR * p = (const cMapElement_registerMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_registerMapIR) ;
  return p->mAttribute_mRegisterAddress ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 @registerMapIR type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_registerMapIR ("registerMapIR",
                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_registerMapIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_registerMapIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_registerMapIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_registerMapIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_registerMapIR GALGAS_registerMapIR::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_registerMapIR result ;
  const GALGAS_registerMapIR * p = (const GALGAS_registerMapIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_registerMapIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("registerMapIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalVariableMapIR::cMapElement_globalVariableMapIR (const GALGAS_lstring & inKey,
                                                                  const GALGAS_string & in_mActualTypeName,
                                                                  const GALGAS_bool & in_mGenerateVolatile,
                                                                  const GALGAS_variableKindIR & in_mInitialValue
                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mActualTypeName (in_mActualTypeName),
mAttribute_mGenerateVolatile (in_mGenerateVolatile),
mAttribute_mInitialValue (in_mInitialValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_globalVariableMapIR::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mActualTypeName.isValid () && mAttribute_mGenerateVolatile.isValid () && mAttribute_mInitialValue.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_globalVariableMapIR::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_globalVariableMapIR (mAttribute_lkey, mAttribute_mActualTypeName, mAttribute_mGenerateVolatile, mAttribute_mInitialValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_globalVariableMapIR::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActualTypeName" ":" ;
  mAttribute_mActualTypeName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGenerateVolatile" ":" ;
  mAttribute_mGenerateVolatile.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInitialValue" ":" ;
  mAttribute_mInitialValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_globalVariableMapIR::compare (const cCollectionElement * inOperand) const {
  cMapElement_globalVariableMapIR * operand = (cMapElement_globalVariableMapIR *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mActualTypeName.objectCompare (operand->mAttribute_mActualTypeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mGenerateVolatile.objectCompare (operand->mAttribute_mGenerateVolatile) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInitialValue.objectCompare (operand->mAttribute_mInitialValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR::GALGAS_globalVariableMapIR (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR::GALGAS_globalVariableMapIR (const GALGAS_globalVariableMapIR & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR & GALGAS_globalVariableMapIR::operator = (const GALGAS_globalVariableMapIR & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR GALGAS_globalVariableMapIR::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_globalVariableMapIR result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR GALGAS_globalVariableMapIR::constructor_mapWithMapToOverride (const GALGAS_globalVariableMapIR & inMapToOverride
                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_globalVariableMapIR result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR GALGAS_globalVariableMapIR::reader_overriddenMap (C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_globalVariableMapIR result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::addAssign_operation (const GALGAS_lstring & inKey,
                                                      const GALGAS_string & inArgument0,
                                                      const GALGAS_bool & inArgument1,
                                                      const GALGAS_variableKindIR & inArgument2,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMapIR * p = NULL ;
  macroMyNew (p, cMapElement_globalVariableMapIR (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@globalVariableMapIR insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::modifier_insertKey (GALGAS_lstring inKey,
                                                     GALGAS_string inArgument0,
                                                     GALGAS_bool inArgument1,
                                                     GALGAS_variableKindIR inArgument2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMapIR * p = NULL ;
  macroMyNew (p, cMapElement_globalVariableMapIR (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "** internal error **" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_globalVariableMapIR_searchKey = "** internal error **" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::method_searchKey (GALGAS_lstring inKey,
                                                   GALGAS_string & outArgument0,
                                                   GALGAS_bool & outArgument1,
                                                   GALGAS_variableKindIR & outArgument2,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) performSearch (inKey,
                                                                                                         inCompiler,
                                                                                                         kSearchErrorMessage_globalVariableMapIR_searchKey
                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    outArgument0 = p->mAttribute_mActualTypeName ;
    outArgument1 = p->mAttribute_mGenerateVolatile ;
    outArgument2 = p->mAttribute_mInitialValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_globalVariableMapIR::reader_mActualTypeNameForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    result = p->mAttribute_mActualTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_globalVariableMapIR::reader_mGenerateVolatileForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    result = p->mAttribute_mGenerateVolatile ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_globalVariableMapIR::reader_mInitialValueForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) attributes ;
  GALGAS_variableKindIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    result = p->mAttribute_mInitialValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::modifier_setMActualTypeNameForKey (GALGAS_string inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMapIR * p = (cMapElement_globalVariableMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    p->mAttribute_mActualTypeName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::modifier_setMGenerateVolatileForKey (GALGAS_bool inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMapIR * p = (cMapElement_globalVariableMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    p->mAttribute_mGenerateVolatile = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::modifier_setMInitialValueForKey (GALGAS_variableKindIR inAttributeValue,
                                                                  GALGAS_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMapIR * p = (cMapElement_globalVariableMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    p->mAttribute_mInitialValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalVariableMapIR * GALGAS_globalVariableMapIR::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                 const GALGAS_string & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMapIR * result = (cMapElement_globalVariableMapIR *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_globalVariableMapIR) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_globalVariableMapIR::cEnumerator_globalVariableMapIR (const GALGAS_globalVariableMapIR & inEnumeratedObject,
                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR_2D_element cEnumerator_globalVariableMapIR::current (LOCATION_ARGS) const {
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
  return GALGAS_globalVariableMapIR_2D_element (p->mAttribute_lkey, p->mAttribute_mActualTypeName, p->mAttribute_mGenerateVolatile, p->mAttribute_mInitialValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_globalVariableMapIR::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_globalVariableMapIR::current_mActualTypeName (LOCATION_ARGS) const {
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
  return p->mAttribute_mActualTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_globalVariableMapIR::current_mGenerateVolatile (LOCATION_ARGS) const {
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
  return p->mAttribute_mGenerateVolatile ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR cEnumerator_globalVariableMapIR::current_mInitialValue (LOCATION_ARGS) const {
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
  return p->mAttribute_mInitialValue ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @globalVariableMapIR type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalVariableMapIR ("globalVariableMapIR",
                                            NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalVariableMapIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalVariableMapIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalVariableMapIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalVariableMapIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR GALGAS_globalVariableMapIR::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_globalVariableMapIR result ;
  const GALGAS_globalVariableMapIR * p = (const GALGAS_globalVariableMapIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalVariableMapIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalVariableMapIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalConstantMapIR::cMapElement_globalConstantMapIR (const GALGAS_lstring & inKey,
                                                                  const GALGAS_variableKindIR & in_mValueExpressionGeneration
                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mValueExpressionGeneration (in_mValueExpressionGeneration) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_globalConstantMapIR::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mValueExpressionGeneration.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_globalConstantMapIR::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_globalConstantMapIR (mAttribute_lkey, mAttribute_mValueExpressionGeneration COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_globalConstantMapIR::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mValueExpressionGeneration" ":" ;
  mAttribute_mValueExpressionGeneration.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_globalConstantMapIR::compare (const cCollectionElement * inOperand) const {
  cMapElement_globalConstantMapIR * operand = (cMapElement_globalConstantMapIR *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mValueExpressionGeneration.objectCompare (operand->mAttribute_mValueExpressionGeneration) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR::GALGAS_globalConstantMapIR (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR::GALGAS_globalConstantMapIR (const GALGAS_globalConstantMapIR & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR & GALGAS_globalConstantMapIR::operator = (const GALGAS_globalConstantMapIR & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR GALGAS_globalConstantMapIR::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_globalConstantMapIR result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR GALGAS_globalConstantMapIR::constructor_mapWithMapToOverride (const GALGAS_globalConstantMapIR & inMapToOverride
                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_globalConstantMapIR result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR GALGAS_globalConstantMapIR::reader_overriddenMap (C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_globalConstantMapIR result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMapIR::addAssign_operation (const GALGAS_lstring & inKey,
                                                      const GALGAS_variableKindIR & inArgument0,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMapIR * p = NULL ;
  macroMyNew (p, cMapElement_globalConstantMapIR (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@globalConstantMapIR insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMapIR::modifier_insertKey (GALGAS_lstring inKey,
                                                     GALGAS_variableKindIR inArgument0,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMapIR * p = NULL ;
  macroMyNew (p, cMapElement_globalConstantMapIR (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "** internal error **" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_globalConstantMapIR_searchKey = "** internal error **" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMapIR::method_searchKey (GALGAS_lstring inKey,
                                                   GALGAS_variableKindIR & outArgument0,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_globalConstantMapIR * p = (const cMapElement_globalConstantMapIR *) performSearch (inKey,
                                                                                                         inCompiler,
                                                                                                         kSearchErrorMessage_globalConstantMapIR_searchKey
                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
    outArgument0 = p->mAttribute_mValueExpressionGeneration ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_globalConstantMapIR::reader_mValueExpressionGenerationForKey (const GALGAS_string & inKey,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalConstantMapIR * p = (const cMapElement_globalConstantMapIR *) attributes ;
  GALGAS_variableKindIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
    result = p->mAttribute_mValueExpressionGeneration ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMapIR::modifier_setMValueExpressionGenerationForKey (GALGAS_variableKindIR inAttributeValue,
                                                                               GALGAS_string inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalConstantMapIR * p = (cMapElement_globalConstantMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
    p->mAttribute_mValueExpressionGeneration = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalConstantMapIR * GALGAS_globalConstantMapIR::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                 const GALGAS_string & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMapIR * result = (cMapElement_globalConstantMapIR *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_globalConstantMapIR) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_globalConstantMapIR::cEnumerator_globalConstantMapIR (const GALGAS_globalConstantMapIR & inEnumeratedObject,
                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR_2D_element cEnumerator_globalConstantMapIR::current (LOCATION_ARGS) const {
  const cMapElement_globalConstantMapIR * p = (const cMapElement_globalConstantMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
  return GALGAS_globalConstantMapIR_2D_element (p->mAttribute_lkey, p->mAttribute_mValueExpressionGeneration) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_globalConstantMapIR::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR cEnumerator_globalConstantMapIR::current_mValueExpressionGeneration (LOCATION_ARGS) const {
  const cMapElement_globalConstantMapIR * p = (const cMapElement_globalConstantMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
  return p->mAttribute_mValueExpressionGeneration ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @globalConstantMapIR type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalConstantMapIR ("globalConstantMapIR",
                                            NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalConstantMapIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalConstantMapIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalConstantMapIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalConstantMapIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR GALGAS_globalConstantMapIR::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_globalConstantMapIR result ;
  const GALGAS_globalConstantMapIR * p = (const GALGAS_globalConstantMapIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalConstantMapIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalConstantMapIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_typeMapIR::cMapElement_typeMapIR (const GALGAS_lstring & inKey,
                                              const GALGAS_abstractTypeIR & in_mType
                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mType (in_mType) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_typeMapIR::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_typeMapIR::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_typeMapIR (mAttribute_lkey, mAttribute_mType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_typeMapIR::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_typeMapIR::compare (const cCollectionElement * inOperand) const {
  cMapElement_typeMapIR * operand = (cMapElement_typeMapIR *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeMapIR::GALGAS_typeMapIR (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeMapIR::GALGAS_typeMapIR (const GALGAS_typeMapIR & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeMapIR & GALGAS_typeMapIR::operator = (const GALGAS_typeMapIR & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeMapIR GALGAS_typeMapIR::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_typeMapIR result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeMapIR GALGAS_typeMapIR::constructor_mapWithMapToOverride (const GALGAS_typeMapIR & inMapToOverride
                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_typeMapIR result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeMapIR GALGAS_typeMapIR::reader_overriddenMap (C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_typeMapIR result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeMapIR::addAssign_operation (const GALGAS_lstring & inKey,
                                            const GALGAS_abstractTypeIR & inArgument0,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  cMapElement_typeMapIR * p = NULL ;
  macroMyNew (p, cMapElement_typeMapIR (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@typeMapIR insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeMapIR::modifier_insertKey (GALGAS_lstring inKey,
                                           GALGAS_abstractTypeIR inArgument0,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  cMapElement_typeMapIR * p = NULL ;
  macroMyNew (p, cMapElement_typeMapIR (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "** internal error **" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_typeMapIR_searchKey = "** internal error **" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeMapIR::method_searchKey (GALGAS_lstring inKey,
                                         GALGAS_abstractTypeIR & outArgument0,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) const {
  const cMapElement_typeMapIR * p = (const cMapElement_typeMapIR *) performSearch (inKey,
                                                                                     inCompiler,
                                                                                     kSearchErrorMessage_typeMapIR_searchKey
                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_typeMapIR) ;
    outArgument0 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractTypeIR GALGAS_typeMapIR::reader_mTypeForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_typeMapIR * p = (const cMapElement_typeMapIR *) attributes ;
  GALGAS_abstractTypeIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_typeMapIR) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeMapIR::modifier_setMTypeForKey (GALGAS_abstractTypeIR inAttributeValue,
                                                GALGAS_string inKey,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_typeMapIR * p = (cMapElement_typeMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_typeMapIR) ;
    p->mAttribute_mType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_typeMapIR * GALGAS_typeMapIR::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                             const GALGAS_string & inKey
                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_typeMapIR * result = (cMapElement_typeMapIR *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_typeMapIR) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_typeMapIR::cEnumerator_typeMapIR (const GALGAS_typeMapIR & inEnumeratedObject,
                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeMapIR_2D_element cEnumerator_typeMapIR::current (LOCATION_ARGS) const {
  const cMapElement_typeMapIR * p = (const cMapElement_typeMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_typeMapIR) ;
  return GALGAS_typeMapIR_2D_element (p->mAttribute_lkey, p->mAttribute_mType) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_typeMapIR::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractTypeIR cEnumerator_typeMapIR::current_mType (LOCATION_ARGS) const {
  const cMapElement_typeMapIR * p = (const cMapElement_typeMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_typeMapIR) ;
  return p->mAttribute_mType ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                   @typeMapIR type                                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_typeMapIR ("typeMapIR",
                                  NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_typeMapIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeMapIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_typeMapIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_typeMapIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeMapIR GALGAS_typeMapIR::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_typeMapIR result ;
  const GALGAS_typeMapIR * p = (const GALGAS_typeMapIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_typeMapIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("typeMapIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_procedureMapIR::cMapElement_procedureMapIR (const GALGAS_lstring & inKey,
                                                        const GALGAS_procFormalArgumentListForGeneration & in_mFormalArgumentListForGeneration,
                                                        const GALGAS_instructionListIR & in_mInstructionGenerationList,
                                                        const GALGAS_bool & in_mIsRequired,
                                                        const GALGAS_bool & in_mWarnIfUnused,
                                                        const GALGAS_bool & in_mWeak
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mFormalArgumentListForGeneration (in_mFormalArgumentListForGeneration),
mAttribute_mInstructionGenerationList (in_mInstructionGenerationList),
mAttribute_mIsRequired (in_mIsRequired),
mAttribute_mWarnIfUnused (in_mWarnIfUnused),
mAttribute_mWeak (in_mWeak) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_procedureMapIR::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFormalArgumentListForGeneration.isValid () && mAttribute_mInstructionGenerationList.isValid () && mAttribute_mIsRequired.isValid () && mAttribute_mWarnIfUnused.isValid () && mAttribute_mWeak.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_procedureMapIR::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_procedureMapIR (mAttribute_lkey, mAttribute_mFormalArgumentListForGeneration, mAttribute_mInstructionGenerationList, mAttribute_mIsRequired, mAttribute_mWarnIfUnused, mAttribute_mWeak COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_procedureMapIR::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFormalArgumentListForGeneration" ":" ;
  mAttribute_mFormalArgumentListForGeneration.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionGenerationList" ":" ;
  mAttribute_mInstructionGenerationList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsRequired" ":" ;
  mAttribute_mIsRequired.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mWarnIfUnused" ":" ;
  mAttribute_mWarnIfUnused.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mWeak" ":" ;
  mAttribute_mWeak.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_procedureMapIR::compare (const cCollectionElement * inOperand) const {
  cMapElement_procedureMapIR * operand = (cMapElement_procedureMapIR *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mFormalArgumentListForGeneration.objectCompare (operand->mAttribute_mFormalArgumentListForGeneration) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInstructionGenerationList.objectCompare (operand->mAttribute_mInstructionGenerationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIsRequired.objectCompare (operand->mAttribute_mIsRequired) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mWarnIfUnused.objectCompare (operand->mAttribute_mWarnIfUnused) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mWeak.objectCompare (operand->mAttribute_mWeak) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureMapIR::GALGAS_procedureMapIR (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureMapIR::GALGAS_procedureMapIR (const GALGAS_procedureMapIR & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureMapIR & GALGAS_procedureMapIR::operator = (const GALGAS_procedureMapIR & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureMapIR GALGAS_procedureMapIR::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_procedureMapIR result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureMapIR GALGAS_procedureMapIR::constructor_mapWithMapToOverride (const GALGAS_procedureMapIR & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_procedureMapIR result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureMapIR GALGAS_procedureMapIR::reader_overriddenMap (C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_procedureMapIR result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureMapIR::addAssign_operation (const GALGAS_lstring & inKey,
                                                 const GALGAS_procFormalArgumentListForGeneration & inArgument0,
                                                 const GALGAS_instructionListIR & inArgument1,
                                                 const GALGAS_bool & inArgument2,
                                                 const GALGAS_bool & inArgument3,
                                                 const GALGAS_bool & inArgument4,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_procedureMapIR * p = NULL ;
  macroMyNew (p, cMapElement_procedureMapIR (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@procedureMapIR insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureMapIR::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_procFormalArgumentListForGeneration inArgument0,
                                                GALGAS_instructionListIR inArgument1,
                                                GALGAS_bool inArgument2,
                                                GALGAS_bool inArgument3,
                                                GALGAS_bool inArgument4,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_procedureMapIR * p = NULL ;
  macroMyNew (p, cMapElement_procedureMapIR (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "** internal error **" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_procedureMapIR_searchKey = "** internal error **" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureMapIR::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_procFormalArgumentListForGeneration & outArgument0,
                                              GALGAS_instructionListIR & outArgument1,
                                              GALGAS_bool & outArgument2,
                                              GALGAS_bool & outArgument3,
                                              GALGAS_bool & outArgument4,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_procedureMapIR * p = (const cMapElement_procedureMapIR *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_procedureMapIR_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_procedureMapIR) ;
    outArgument0 = p->mAttribute_mFormalArgumentListForGeneration ;
    outArgument1 = p->mAttribute_mInstructionGenerationList ;
    outArgument2 = p->mAttribute_mIsRequired ;
    outArgument3 = p->mAttribute_mWarnIfUnused ;
    outArgument4 = p->mAttribute_mWeak ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureMapIR::modifier_removeKey (GALGAS_lstring inKey,
                                                GALGAS_procFormalArgumentListForGeneration & outArgument0,
                                                GALGAS_instructionListIR & outArgument1,
                                                GALGAS_bool & outArgument2,
                                                GALGAS_bool & outArgument3,
                                                GALGAS_bool & outArgument4,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  const char * kRemoveErrorMessage = "** internal error **" ;
  capCollectionElement attributes ;
  performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;
  cMapElement_procedureMapIR * p = (cMapElement_procedureMapIR *) attributes.ptr () ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_procedureMapIR) ;
    outArgument0 = p->mAttribute_mFormalArgumentListForGeneration ;
    outArgument1 = p->mAttribute_mInstructionGenerationList ;
    outArgument2 = p->mAttribute_mIsRequired ;
    outArgument3 = p->mAttribute_mWarnIfUnused ;
    outArgument4 = p->mAttribute_mWeak ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procFormalArgumentListForGeneration GALGAS_procedureMapIR::reader_mFormalArgumentListForGenerationForKey (const GALGAS_string & inKey,
                                                                                                                 C_Compiler * inCompiler
                                                                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_procedureMapIR * p = (const cMapElement_procedureMapIR *) attributes ;
  GALGAS_procFormalArgumentListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_procedureMapIR) ;
    result = p->mAttribute_mFormalArgumentListForGeneration ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR GALGAS_procedureMapIR::reader_mInstructionGenerationListForKey (const GALGAS_string & inKey,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_procedureMapIR * p = (const cMapElement_procedureMapIR *) attributes ;
  GALGAS_instructionListIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_procedureMapIR) ;
    result = p->mAttribute_mInstructionGenerationList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_procedureMapIR::reader_mIsRequiredForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_procedureMapIR * p = (const cMapElement_procedureMapIR *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_procedureMapIR) ;
    result = p->mAttribute_mIsRequired ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_procedureMapIR::reader_mWarnIfUnusedForKey (const GALGAS_string & inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_procedureMapIR * p = (const cMapElement_procedureMapIR *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_procedureMapIR) ;
    result = p->mAttribute_mWarnIfUnused ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_procedureMapIR::reader_mWeakForKey (const GALGAS_string & inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_procedureMapIR * p = (const cMapElement_procedureMapIR *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_procedureMapIR) ;
    result = p->mAttribute_mWeak ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureMapIR::modifier_setMFormalArgumentListForGenerationForKey (GALGAS_procFormalArgumentListForGeneration inAttributeValue,
                                                                                GALGAS_string inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_procedureMapIR * p = (cMapElement_procedureMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_procedureMapIR) ;
    p->mAttribute_mFormalArgumentListForGeneration = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureMapIR::modifier_setMInstructionGenerationListForKey (GALGAS_instructionListIR inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_procedureMapIR * p = (cMapElement_procedureMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_procedureMapIR) ;
    p->mAttribute_mInstructionGenerationList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureMapIR::modifier_setMIsRequiredForKey (GALGAS_bool inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_procedureMapIR * p = (cMapElement_procedureMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_procedureMapIR) ;
    p->mAttribute_mIsRequired = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureMapIR::modifier_setMWarnIfUnusedForKey (GALGAS_bool inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_procedureMapIR * p = (cMapElement_procedureMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_procedureMapIR) ;
    p->mAttribute_mWarnIfUnused = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureMapIR::modifier_setMWeakForKey (GALGAS_bool inAttributeValue,
                                                     GALGAS_string inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_procedureMapIR * p = (cMapElement_procedureMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_procedureMapIR) ;
    p->mAttribute_mWeak = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_procedureMapIR * GALGAS_procedureMapIR::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                       const GALGAS_string & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_procedureMapIR * result = (cMapElement_procedureMapIR *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_procedureMapIR) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_procedureMapIR::cEnumerator_procedureMapIR (const GALGAS_procedureMapIR & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureMapIR_2D_element cEnumerator_procedureMapIR::current (LOCATION_ARGS) const {
  const cMapElement_procedureMapIR * p = (const cMapElement_procedureMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_procedureMapIR) ;
  return GALGAS_procedureMapIR_2D_element (p->mAttribute_lkey, p->mAttribute_mFormalArgumentListForGeneration, p->mAttribute_mInstructionGenerationList, p->mAttribute_mIsRequired, p->mAttribute_mWarnIfUnused, p->mAttribute_mWeak) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_procedureMapIR::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procFormalArgumentListForGeneration cEnumerator_procedureMapIR::current_mFormalArgumentListForGeneration (LOCATION_ARGS) const {
  const cMapElement_procedureMapIR * p = (const cMapElement_procedureMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_procedureMapIR) ;
  return p->mAttribute_mFormalArgumentListForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR cEnumerator_procedureMapIR::current_mInstructionGenerationList (LOCATION_ARGS) const {
  const cMapElement_procedureMapIR * p = (const cMapElement_procedureMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_procedureMapIR) ;
  return p->mAttribute_mInstructionGenerationList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_procedureMapIR::current_mIsRequired (LOCATION_ARGS) const {
  const cMapElement_procedureMapIR * p = (const cMapElement_procedureMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_procedureMapIR) ;
  return p->mAttribute_mIsRequired ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_procedureMapIR::current_mWarnIfUnused (LOCATION_ARGS) const {
  const cMapElement_procedureMapIR * p = (const cMapElement_procedureMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_procedureMapIR) ;
  return p->mAttribute_mWarnIfUnused ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_procedureMapIR::current_mWeak (LOCATION_ARGS) const {
  const cMapElement_procedureMapIR * p = (const cMapElement_procedureMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_procedureMapIR) ;
  return p->mAttribute_mWeak ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @procedureMapIR type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_procedureMapIR ("procedureMapIR",
                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_procedureMapIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_procedureMapIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_procedureMapIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_procedureMapIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureMapIR GALGAS_procedureMapIR::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_procedureMapIR result ;
  const GALGAS_procedureMapIR * p = (const GALGAS_procedureMapIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_procedureMapIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("procedureMapIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_functionMapIR::cMapElement_functionMapIR (const GALGAS_lstring & inKey,
                                                      const GALGAS_funcFormalArgumentListForGeneration & in_mFormalArgumentListForGeneration,
                                                      const GALGAS_instructionListIR & in_mInstructionGenerationList,
                                                      const GALGAS_unifiedTypeMap_2D_proxy & in_mResultType,
                                                      const GALGAS_string & in_mResultVarName
                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mFormalArgumentListForGeneration (in_mFormalArgumentListForGeneration),
mAttribute_mInstructionGenerationList (in_mInstructionGenerationList),
mAttribute_mResultType (in_mResultType),
mAttribute_mResultVarName (in_mResultVarName) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_functionMapIR::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFormalArgumentListForGeneration.isValid () && mAttribute_mInstructionGenerationList.isValid () && mAttribute_mResultType.isValid () && mAttribute_mResultVarName.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_functionMapIR::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_functionMapIR (mAttribute_lkey, mAttribute_mFormalArgumentListForGeneration, mAttribute_mInstructionGenerationList, mAttribute_mResultType, mAttribute_mResultVarName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_functionMapIR::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFormalArgumentListForGeneration" ":" ;
  mAttribute_mFormalArgumentListForGeneration.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionGenerationList" ":" ;
  mAttribute_mInstructionGenerationList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mResultType" ":" ;
  mAttribute_mResultType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mResultVarName" ":" ;
  mAttribute_mResultVarName.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_functionMapIR::compare (const cCollectionElement * inOperand) const {
  cMapElement_functionMapIR * operand = (cMapElement_functionMapIR *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mFormalArgumentListForGeneration.objectCompare (operand->mAttribute_mFormalArgumentListForGeneration) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInstructionGenerationList.objectCompare (operand->mAttribute_mInstructionGenerationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mResultType.objectCompare (operand->mAttribute_mResultType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mResultVarName.objectCompare (operand->mAttribute_mResultVarName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionMapIR::GALGAS_functionMapIR (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionMapIR::GALGAS_functionMapIR (const GALGAS_functionMapIR & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionMapIR & GALGAS_functionMapIR::operator = (const GALGAS_functionMapIR & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionMapIR GALGAS_functionMapIR::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_functionMapIR result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionMapIR GALGAS_functionMapIR::constructor_mapWithMapToOverride (const GALGAS_functionMapIR & inMapToOverride
                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_functionMapIR result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionMapIR GALGAS_functionMapIR::reader_overriddenMap (C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_functionMapIR result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_functionMapIR::addAssign_operation (const GALGAS_lstring & inKey,
                                                const GALGAS_funcFormalArgumentListForGeneration & inArgument0,
                                                const GALGAS_instructionListIR & inArgument1,
                                                const GALGAS_unifiedTypeMap_2D_proxy & inArgument2,
                                                const GALGAS_string & inArgument3,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_functionMapIR * p = NULL ;
  macroMyNew (p, cMapElement_functionMapIR (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@functionMapIR insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_functionMapIR::modifier_insertKey (GALGAS_lstring inKey,
                                               GALGAS_funcFormalArgumentListForGeneration inArgument0,
                                               GALGAS_instructionListIR inArgument1,
                                               GALGAS_unifiedTypeMap_2D_proxy inArgument2,
                                               GALGAS_string inArgument3,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_functionMapIR * p = NULL ;
  macroMyNew (p, cMapElement_functionMapIR (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "** internal error **" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_functionMapIR_searchKey = "** internal error **" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_functionMapIR::method_searchKey (GALGAS_lstring inKey,
                                             GALGAS_funcFormalArgumentListForGeneration & outArgument0,
                                             GALGAS_instructionListIR & outArgument1,
                                             GALGAS_unifiedTypeMap_2D_proxy & outArgument2,
                                             GALGAS_string & outArgument3,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  const cMapElement_functionMapIR * p = (const cMapElement_functionMapIR *) performSearch (inKey,
                                                                                             inCompiler,
                                                                                             kSearchErrorMessage_functionMapIR_searchKey
                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_functionMapIR) ;
    outArgument0 = p->mAttribute_mFormalArgumentListForGeneration ;
    outArgument1 = p->mAttribute_mInstructionGenerationList ;
    outArgument2 = p->mAttribute_mResultType ;
    outArgument3 = p->mAttribute_mResultVarName ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_funcFormalArgumentListForGeneration GALGAS_functionMapIR::reader_mFormalArgumentListForGenerationForKey (const GALGAS_string & inKey,
                                                                                                                C_Compiler * inCompiler
                                                                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_functionMapIR * p = (const cMapElement_functionMapIR *) attributes ;
  GALGAS_funcFormalArgumentListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_functionMapIR) ;
    result = p->mAttribute_mFormalArgumentListForGeneration ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR GALGAS_functionMapIR::reader_mInstructionGenerationListForKey (const GALGAS_string & inKey,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_functionMapIR * p = (const cMapElement_functionMapIR *) attributes ;
  GALGAS_instructionListIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_functionMapIR) ;
    result = p->mAttribute_mInstructionGenerationList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_functionMapIR::reader_mResultTypeForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_functionMapIR * p = (const cMapElement_functionMapIR *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_functionMapIR) ;
    result = p->mAttribute_mResultType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_functionMapIR::reader_mResultVarNameForKey (const GALGAS_string & inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_functionMapIR * p = (const cMapElement_functionMapIR *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_functionMapIR) ;
    result = p->mAttribute_mResultVarName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_functionMapIR::modifier_setMFormalArgumentListForGenerationForKey (GALGAS_funcFormalArgumentListForGeneration inAttributeValue,
                                                                               GALGAS_string inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_functionMapIR * p = (cMapElement_functionMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_functionMapIR) ;
    p->mAttribute_mFormalArgumentListForGeneration = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_functionMapIR::modifier_setMInstructionGenerationListForKey (GALGAS_instructionListIR inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_functionMapIR * p = (cMapElement_functionMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_functionMapIR) ;
    p->mAttribute_mInstructionGenerationList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_functionMapIR::modifier_setMResultTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_functionMapIR * p = (cMapElement_functionMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_functionMapIR) ;
    p->mAttribute_mResultType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_functionMapIR::modifier_setMResultVarNameForKey (GALGAS_string inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_functionMapIR * p = (cMapElement_functionMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_functionMapIR) ;
    p->mAttribute_mResultVarName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_functionMapIR * GALGAS_functionMapIR::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                     const GALGAS_string & inKey
                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_functionMapIR * result = (cMapElement_functionMapIR *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_functionMapIR) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_functionMapIR::cEnumerator_functionMapIR (const GALGAS_functionMapIR & inEnumeratedObject,
                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionMapIR_2D_element cEnumerator_functionMapIR::current (LOCATION_ARGS) const {
  const cMapElement_functionMapIR * p = (const cMapElement_functionMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_functionMapIR) ;
  return GALGAS_functionMapIR_2D_element (p->mAttribute_lkey, p->mAttribute_mFormalArgumentListForGeneration, p->mAttribute_mInstructionGenerationList, p->mAttribute_mResultType, p->mAttribute_mResultVarName) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_functionMapIR::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_funcFormalArgumentListForGeneration cEnumerator_functionMapIR::current_mFormalArgumentListForGeneration (LOCATION_ARGS) const {
  const cMapElement_functionMapIR * p = (const cMapElement_functionMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_functionMapIR) ;
  return p->mAttribute_mFormalArgumentListForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR cEnumerator_functionMapIR::current_mInstructionGenerationList (LOCATION_ARGS) const {
  const cMapElement_functionMapIR * p = (const cMapElement_functionMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_functionMapIR) ;
  return p->mAttribute_mInstructionGenerationList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_functionMapIR::current_mResultType (LOCATION_ARGS) const {
  const cMapElement_functionMapIR * p = (const cMapElement_functionMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_functionMapIR) ;
  return p->mAttribute_mResultType ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_functionMapIR::current_mResultVarName (LOCATION_ARGS) const {
  const cMapElement_functionMapIR * p = (const cMapElement_functionMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_functionMapIR) ;
  return p->mAttribute_mResultVarName ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 @functionMapIR type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_functionMapIR ("functionMapIR",
                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_functionMapIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_functionMapIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_functionMapIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_functionMapIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionMapIR GALGAS_functionMapIR::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_functionMapIR result ;
  const GALGAS_functionMapIR * p = (const GALGAS_functionMapIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_functionMapIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("functionMapIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

#include "utilities/MF_MemoryControl.h"
#include "galgas2/C_galgas_CLI_Options.h"

#include "files/C_FileManager.h"

//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       N O N    T E R M I N A L    N A M E S                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const char * gNonTerminalNames_plm_grammar [36] = {
  "<start_symbol>",// Index 0
  "<var_declaration>",// Index 1
  "<declaration>",// Index 2
  "<procedure>",// Index 3
  "<procedure_header>",// Index 4
  "<instructionList>",// Index 5
  "<instruction>",// Index 6
  "<if_instruction>",// Index 7
  "<expression>",// Index 8
  "<primary>",// Index 9
  "<comparison>",// Index 10
  "<additive_expression>",// Index 11
  "<multiplicative_expression>",// Index 12
  "<select_common_5F_syntax_0>",// Index 13
  "<select_common_5F_syntax_1>",// Index 14
  "<select_common_5F_syntax_2>",// Index 15
  "<select_common_5F_syntax_3>",// Index 16
  "<select_common_5F_syntax_4>",// Index 17
  "<select_common_5F_syntax_5>",// Index 18
  "<select_common_5F_syntax_6>",// Index 19
  "<select_common_5F_syntax_7>",// Index 20
  "<select_common_5F_syntax_8>",// Index 21
  "<select_common_5F_syntax_9>",// Index 22
  "<select_common_5F_syntax_10>",// Index 23
  "<select_common_5F_syntax_11>",// Index 24
  "<select_common_5F_syntax_12>",// Index 25
  "<select_common_5F_syntax_13>",// Index 26
  "<select_common_5F_syntax_14>",// Index 27
  "<select_common_5F_syntax_15>",// Index 28
  "<select_common_5F_syntax_16>",// Index 29
  "<select_common_5F_syntax_17>",// Index 30
  "<select_common_5F_syntax_18>",// Index 31
  "<select_common_5F_syntax_19>",// Index 32
  "<select_common_5F_syntax_20>",// Index 33
  "<select_common_5F_syntax_21>",// Index 34
  "<>"// Index 35
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                S L R    A N A L Y Z E R    A C T I O N    T A B L E                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

// Action tables handle shift and reduce actions ;
//  - a shift action is (terminal_symbol, SHIFT (n)) : if shifts to state n ;
//  - the accept action is (terminal_symbol, ACCEPT) ;
//  - a reduce action is (terminal_symbol, REDUCE (n)) ; if reduces to state n.

#define SHIFT(a) ((a) + 2)
#define REDUCE(a) (-(a) - 1)
#define ACCEPT (1)
#define END (-1)

static const int16_t gActionTable_plm_grammar [] = {
// State S0 (index = 0)
  C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_exception, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_proc, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (44)
, END
// State S1 (index = 27)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (18)
, END
// State S2 (index = 30)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (19)
, END
// State S3 (index = 33)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (20)
, END
// State S4 (index = 36)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (21)
, END
// State S5 (index = 39)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (22)
, END
// State S6 (index = 42)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (23)
, END
// State S7 (index = 45)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (24)
, END
// State S8 (index = 48)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (25)
, END
// State S9 (index = 51)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (26)
, END
// State S10 (index = 54)
, C_Lexique_plm_5F_lexique::kToken_proc, SHIFT (9)
, END
// State S11 (index = 57)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (28)
, END
// State S12 (index = 62)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (30)
, END
// State S13 (index = 65)
, C_Lexique_plm_5F_lexique::kToken_, ACCEPT
, END
// State S14 (index = 68)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_exception, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_proc, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (44)
, END
// State S15 (index = 95)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_exception, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_proc, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (44)
, END
// State S16 (index = 122)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (33)
, END
// State S17 (index = 125)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (0)
, END
// State S18 (index = 128)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_exception, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_proc, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (44)
, END
// State S19 (index = 155)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (35)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (48)
, END
// State S20 (index = 184)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (37)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (50)
, END
// State S21 (index = 189)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (39)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (54)
, END
// State S22 (index = 196)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (41)
, END
// State S23 (index = 199)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (42)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (43)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (44)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (45)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (46)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (47)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (50)
, END
// State S24 (index = 226)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (42)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (43)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (44)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (45)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (46)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (47)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (50)
, END
// State S25 (index = 253)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (55)
, END
// State S26 (index = 258)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (57)
, END
// State S27 (index = 265)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (12)
, END
// State S28 (index = 292)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (28)
, END
// State S29 (index = 297)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (60)
, END
// State S30 (index = 300)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (43)
, END
// State S31 (index = 327)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (45)
, END
// State S32 (index = 330)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (46)
, END
// State S33 (index = 333)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (42)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (43)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (44)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (45)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (46)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (47)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (50)
, END
// State S34 (index = 360)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (47)
, END
// State S35 (index = 363)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (35)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (48)
, END
// State S36 (index = 392)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (3)
, END
// State S37 (index = 419)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (37)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (50)
, END
// State S38 (index = 424)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (64)
, END
// State S39 (index = 427)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (39)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (54)
, END
// State S40 (index = 434)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (66)
, C_Lexique_plm_5F_lexique::kToken_proc, SHIFT (9)
, END
// State S41 (index = 439)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (69)
, END
// State S42 (index = 442)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (70)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (71)
, C_Lexique_plm_5F_lexique::kToken__2B__2B_, SHIFT (72)
, C_Lexique_plm_5F_lexique::kToken__2D__2D_, SHIFT (73)
, C_Lexique_plm_5F_lexique::kToken__26__2B__2B_, SHIFT (74)
, C_Lexique_plm_5F_lexique::kToken__26__2D__2D_, SHIFT (75)
, C_Lexique_plm_5F_lexique::kToken__7C__3D_, SHIFT (76)
, C_Lexique_plm_5F_lexique::kToken__26__3D_, SHIFT (77)
, C_Lexique_plm_5F_lexique::kToken__5E__3D_, SHIFT (78)
, END
// State S43 (index = 461)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (80)
, END
// State S44 (index = 464)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (81)
, END
// State S45 (index = 467)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (42)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (43)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (44)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (45)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (46)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (47)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (50)
, END
// State S46 (index = 494)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S47 (index = 509)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, END
// State S48 (index = 512)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S49 (index = 527)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S50 (index = 542)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (42)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (43)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (44)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (45)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (46)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (47)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (50)
, END
// State S51 (index = 569)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (100)
, END
// State S52 (index = 572)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (42)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (43)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (44)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (45)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (46)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (47)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (50)
, END
// State S53 (index = 599)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (14)
, END
// State S54 (index = 608)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (102)
, END
// State S55 (index = 611)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (55)
, END
// State S56 (index = 616)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (104)
, END
// State S57 (index = 619)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (57)
, END
// State S58 (index = 626)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (106)
, END
// State S59 (index = 631)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (69)
, END
// State S60 (index = 634)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (108)
, END
// State S61 (index = 637)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (109)
, END
// State S62 (index = 640)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (49)
, END
// State S63 (index = 667)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (51)
, END
// State S64 (index = 670)
, C_Lexique_plm_5F_lexique::kToken_case, SHIFT (110)
, END
// State S65 (index = 673)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (55)
, END
// State S66 (index = 678)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (111)
, END
// State S67 (index = 681)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (112)
, END
// State S68 (index = 684)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (2)
, END
// State S69 (index = 687)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (113)
, END
// State S70 (index = 690)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S71 (index = 705)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (117)
, END
// State S72 (index = 714)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (15)
, END
// State S73 (index = 741)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (16)
, END
// State S74 (index = 768)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (17)
, END
// State S75 (index = 795)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (18)
, END
// State S76 (index = 822)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (77)
, END
// State S77 (index = 837)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (78)
, END
// State S78 (index = 852)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (79)
, END
// State S79 (index = 867)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S80 (index = 882)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (73)
, END
// State S81 (index = 887)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (122)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (75)
, END
// State S82 (index = 892)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (72)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (72)
, END
// State S83 (index = 901)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__26__26_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (40)
, END
// State S84 (index = 1008)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (124)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (88)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__26__26_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (41)
, END
// State S85 (index = 1119)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S86 (index = 1134)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__26__26_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (39)
, END
// State S87 (index = 1241)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S88 (index = 1256)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S89 (index = 1271)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (23)
, END
// State S90 (index = 1298)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (128)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (129)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, SHIFT (130)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, SHIFT (133)
, C_Lexique_plm_5F_lexique::kToken__26__26_, SHIFT (134)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (107)
, END
// State S91 (index = 1405)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (31)
, END
// State S92 (index = 1466)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_as, SHIFT (136)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, SHIFT (137)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken__3C_, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__3E_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (89)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (89)
, END
// State S93 (index = 1541)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (97)
, END
// State S94 (index = 1634)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (154)
, END
// State S95 (index = 1637)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (24)
, END
// State S96 (index = 1664)
, C_Lexique_plm_5F_lexique::kToken_end, SHIFT (155)
, END
// State S97 (index = 1667)
, C_Lexique_plm_5F_lexique::kToken_then, SHIFT (156)
, END
// State S98 (index = 1670)
, C_Lexique_plm_5F_lexique::kToken_do, SHIFT (157)
, END
// State S99 (index = 1673)
, C_Lexique_plm_5F_lexique::kToken_end, SHIFT (158)
, END
// State S100 (index = 1676)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (7)
, END
// State S101 (index = 1703)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (71)
, END
// State S102 (index = 1712)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (8)
, END
// State S103 (index = 1739)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (57)
, END
// State S104 (index = 1742)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (159)
, END
// State S105 (index = 1745)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (61)
, END
// State S106 (index = 1750)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (106)
, END
// State S107 (index = 1755)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (161)
, END
// State S108 (index = 1758)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (162)
, END
// State S109 (index = 1761)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (10)
, END
// State S110 (index = 1788)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (163)
, END
// State S111 (index = 1791)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (164)
, END
// State S112 (index = 1794)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S113 (index = 1809)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S114 (index = 1824)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (22)
, END
// State S115 (index = 1851)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (167)
, END
// State S116 (index = 1854)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S117 (index = 1869)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (169)
, END
// State S118 (index = 1872)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (170)
, END
// State S119 (index = 1875)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (25)
, END
// State S120 (index = 1902)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (171)
, END
// State S121 (index = 1905)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (172)
, END
// State S122 (index = 1908)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (173)
, END
// State S123 (index = 1911)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (174)
, END
// State S124 (index = 1914)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (175)
, END
// State S125 (index = 1919)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (177)
, END
// State S126 (index = 1922)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__26__26_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (37)
, END
// State S127 (index = 2029)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__26__26_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (38)
, END
// State S128 (index = 2136)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S129 (index = 2151)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S130 (index = 2166)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S131 (index = 2181)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S132 (index = 2196)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S133 (index = 2211)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S134 (index = 2226)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S135 (index = 2241)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (36)
, END
// State S136 (index = 2334)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (185)
, END
// State S137 (index = 2337)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S138 (index = 2352)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S139 (index = 2367)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S140 (index = 2382)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S141 (index = 2397)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S142 (index = 2412)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S143 (index = 2427)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (34)
, END
// State S144 (index = 2488)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S145 (index = 2503)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S146 (index = 2518)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S147 (index = 2533)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S148 (index = 2548)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S149 (index = 2563)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S150 (index = 2578)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S151 (index = 2593)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S152 (index = 2608)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S153 (index = 2623)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (35)
, END
// State S154 (index = 2698)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (201)
, END
// State S155 (index = 2701)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (26)
, END
// State S156 (index = 2728)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (42)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (43)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (44)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (45)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (46)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (47)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (50)
, END
// State S157 (index = 2755)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (42)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (43)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (44)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (45)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (46)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (47)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (50)
, END
// State S158 (index = 2782)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (30)
, END
// State S159 (index = 2809)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (204)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (58)
, END
// State S160 (index = 2814)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (63)
, END
// State S161 (index = 2817)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (206)
, END
// State S162 (index = 2820)
, C_Lexique_plm_5F_lexique::kToken_at, SHIFT (207)
, END
// State S163 (index = 2823)
, C_Lexique_plm_5F_lexique::kToken_case, SHIFT (208)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (52)
, END
// State S164 (index = 2828)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (1)
, END
// State S165 (index = 2831)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (5)
, END
// State S166 (index = 2858)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (6)
, END
// State S167 (index = 2885)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (117)
, END
// State S168 (index = 2894)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (117)
, END
// State S169 (index = 2903)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (117)
, END
// State S170 (index = 2912)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (28)
, END
// State S171 (index = 2939)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (20)
, END
// State S172 (index = 2968)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S173 (index = 2983)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (76)
, END
// State S174 (index = 2986)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S175 (index = 3001)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S176 (index = 3016)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (216)
, END
// State S177 (index = 3019)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__26__26_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (32)
, END
// State S178 (index = 3126)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (128)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (129)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, SHIFT (130)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, SHIFT (133)
, C_Lexique_plm_5F_lexique::kToken__26__26_, SHIFT (134)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (107)
, END
// State S179 (index = 3233)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (128)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (129)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, SHIFT (130)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, SHIFT (133)
, C_Lexique_plm_5F_lexique::kToken__26__26_, SHIFT (134)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (107)
, END
// State S180 (index = 3340)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (128)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (129)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, SHIFT (130)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, SHIFT (133)
, C_Lexique_plm_5F_lexique::kToken__26__26_, SHIFT (134)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (107)
, END
// State S181 (index = 3447)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (128)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (129)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, SHIFT (130)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, SHIFT (133)
, C_Lexique_plm_5F_lexique::kToken__26__26_, SHIFT (134)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (107)
, END
// State S182 (index = 3554)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (128)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (129)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, SHIFT (130)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, SHIFT (133)
, C_Lexique_plm_5F_lexique::kToken__26__26_, SHIFT (134)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (107)
, END
// State S183 (index = 3661)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (128)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (129)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, SHIFT (130)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, SHIFT (133)
, C_Lexique_plm_5F_lexique::kToken__26__26_, SHIFT (134)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (107)
, END
// State S184 (index = 3768)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (128)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (129)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, SHIFT (130)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, SHIFT (133)
, C_Lexique_plm_5F_lexique::kToken__26__26_, SHIFT (134)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (107)
, END
// State S185 (index = 3875)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (90)
, END
// State S186 (index = 3936)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (91)
, END
// State S187 (index = 3997)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (92)
, END
// State S188 (index = 4058)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (93)
, END
// State S189 (index = 4119)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (94)
, END
// State S190 (index = 4180)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (95)
, END
// State S191 (index = 4241)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (96)
, END
// State S192 (index = 4302)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (97)
, END
// State S193 (index = 4395)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (97)
, END
// State S194 (index = 4488)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (97)
, END
// State S195 (index = 4581)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (97)
, END
// State S196 (index = 4674)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (97)
, END
// State S197 (index = 4767)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (97)
, END
// State S198 (index = 4860)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (97)
, END
// State S199 (index = 4953)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (97)
, END
// State S200 (index = 5046)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (97)
, END
// State S201 (index = 5139)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__26__26_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (33)
, END
// State S202 (index = 5246)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_else, SHIFT (233)
, C_Lexique_plm_5F_lexique::kToken_elsif, SHIFT (234)
, END
// State S203 (index = 5253)
, C_Lexique_plm_5F_lexique::kToken_end, SHIFT (236)
, END
// State S204 (index = 5256)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (237)
, END
// State S205 (index = 5259)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (238)
, END
// State S206 (index = 5262)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (239)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (240)
, C_Lexique_plm_5F_lexique::kToken__3F__21_, SHIFT (241)
, END
// State S207 (index = 5271)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (243)
, END
// State S208 (index = 5274)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (244)
, END
// State S209 (index = 5277)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (245)
, END
// State S210 (index = 5280)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (86)
, END
// State S211 (index = 5283)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (84)
, END
// State S212 (index = 5286)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (85)
, END
// State S213 (index = 5289)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (19)
, END
// State S214 (index = 5316)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (21)
, END
// State S215 (index = 5343)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (175)
, END
// State S216 (index = 5348)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__26__26_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (42)
, END
// State S217 (index = 5455)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (108)
, END
// State S218 (index = 5548)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (109)
, END
// State S219 (index = 5641)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (110)
, END
// State S220 (index = 5734)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (111)
, END
// State S221 (index = 5827)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (112)
, END
// State S222 (index = 5920)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (113)
, END
// State S223 (index = 6013)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (114)
, END
// State S224 (index = 6106)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (98)
, END
// State S225 (index = 6181)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (99)
, END
// State S226 (index = 6256)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (100)
, END
// State S227 (index = 6331)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (101)
, END
// State S228 (index = 6406)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (102)
, END
// State S229 (index = 6481)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (103)
, END
// State S230 (index = 6556)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (104)
, END
// State S231 (index = 6631)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (105)
, END
// State S232 (index = 6706)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (106)
, END
// State S233 (index = 6781)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (42)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (43)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (44)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (45)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (46)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (47)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (50)
, END
// State S234 (index = 6808)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (87)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (87)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (88)
, END
// State S235 (index = 6823)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (27)
, END
// State S236 (index = 6826)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (29)
, END
// State S237 (index = 6853)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (249)
, END
// State S238 (index = 6856)
, C_Lexique_plm_5F_lexique::kToken__2D__3E_, SHIFT (250)
, END
// State S239 (index = 6859)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (251)
, END
// State S240 (index = 6862)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (252)
, END
// State S241 (index = 6865)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (253)
, END
// State S242 (index = 6868)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (254)
, END
// State S243 (index = 6871)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (13)
, END
// State S244 (index = 6898)
, C_Lexique_plm_5F_lexique::kToken_case, SHIFT (208)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (52)
, END
// State S245 (index = 6903)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (4)
, END
// State S246 (index = 6930)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (116)
, END
// State S247 (index = 6933)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (81)
, END
// State S248 (index = 6936)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (82)
, END
// State S249 (index = 6939)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (256)
, END
// State S250 (index = 6942)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (257)
, END
// State S251 (index = 6945)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (258)
, END
// State S252 (index = 6948)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (259)
, END
// State S253 (index = 6951)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (260)
, END
// State S254 (index = 6954)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (11)
, END
// State S255 (index = 6985)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (53)
, END
// State S256 (index = 6988)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (204)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (58)
, END
// State S257 (index = 6993)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (262)
, END
// State S258 (index = 6996)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (263)
, END
// State S259 (index = 6999)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (264)
, END
// State S260 (index = 7002)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (265)
, END
// State S261 (index = 7005)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (59)
, END
// State S262 (index = 7008)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (266)
, END
// State S263 (index = 7011)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (239)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (240)
, C_Lexique_plm_5F_lexique::kToken__3F__21_, SHIFT (241)
, END
// State S264 (index = 7020)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (239)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (240)
, C_Lexique_plm_5F_lexique::kToken__3F__21_, SHIFT (241)
, END
// State S265 (index = 7029)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (239)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (240)
, C_Lexique_plm_5F_lexique::kToken__3F__21_, SHIFT (241)
, END
// State S266 (index = 7038)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (270)
, END
// State S267 (index = 7041)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (67)
, END
// State S268 (index = 7044)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (65)
, END
// State S269 (index = 7047)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (66)
, END
// State S270 (index = 7050)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (42)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (43)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (44)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (45)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (46)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (47)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (50)
, END
// State S271 (index = 7077)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (272)
, END
// State S272 (index = 7080)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (9)
, END} ;

static const uint32_t gActionTableIndex_plm_grammar [273] = {
  0  // S0
, 27  // S1
, 30  // S2
, 33  // S3
, 36  // S4
, 39  // S5
, 42  // S6
, 45  // S7
, 48  // S8
, 51  // S9
, 54  // S10
, 57  // S11
, 62  // S12
, 65  // S13
, 68  // S14
, 95  // S15
, 122  // S16
, 125  // S17
, 128  // S18
, 155  // S19
, 184  // S20
, 189  // S21
, 196  // S22
, 199  // S23
, 226  // S24
, 253  // S25
, 258  // S26
, 265  // S27
, 292  // S28
, 297  // S29
, 300  // S30
, 327  // S31
, 330  // S32
, 333  // S33
, 360  // S34
, 363  // S35
, 392  // S36
, 419  // S37
, 424  // S38
, 427  // S39
, 434  // S40
, 439  // S41
, 442  // S42
, 461  // S43
, 464  // S44
, 467  // S45
, 494  // S46
, 509  // S47
, 512  // S48
, 527  // S49
, 542  // S50
, 569  // S51
, 572  // S52
, 599  // S53
, 608  // S54
, 611  // S55
, 616  // S56
, 619  // S57
, 626  // S58
, 631  // S59
, 634  // S60
, 637  // S61
, 640  // S62
, 667  // S63
, 670  // S64
, 673  // S65
, 678  // S66
, 681  // S67
, 684  // S68
, 687  // S69
, 690  // S70
, 705  // S71
, 714  // S72
, 741  // S73
, 768  // S74
, 795  // S75
, 822  // S76
, 837  // S77
, 852  // S78
, 867  // S79
, 882  // S80
, 887  // S81
, 892  // S82
, 901  // S83
, 1008  // S84
, 1119  // S85
, 1134  // S86
, 1241  // S87
, 1256  // S88
, 1271  // S89
, 1298  // S90
, 1405  // S91
, 1466  // S92
, 1541  // S93
, 1634  // S94
, 1637  // S95
, 1664  // S96
, 1667  // S97
, 1670  // S98
, 1673  // S99
, 1676  // S100
, 1703  // S101
, 1712  // S102
, 1739  // S103
, 1742  // S104
, 1745  // S105
, 1750  // S106
, 1755  // S107
, 1758  // S108
, 1761  // S109
, 1788  // S110
, 1791  // S111
, 1794  // S112
, 1809  // S113
, 1824  // S114
, 1851  // S115
, 1854  // S116
, 1869  // S117
, 1872  // S118
, 1875  // S119
, 1902  // S120
, 1905  // S121
, 1908  // S122
, 1911  // S123
, 1914  // S124
, 1919  // S125
, 1922  // S126
, 2029  // S127
, 2136  // S128
, 2151  // S129
, 2166  // S130
, 2181  // S131
, 2196  // S132
, 2211  // S133
, 2226  // S134
, 2241  // S135
, 2334  // S136
, 2337  // S137
, 2352  // S138
, 2367  // S139
, 2382  // S140
, 2397  // S141
, 2412  // S142
, 2427  // S143
, 2488  // S144
, 2503  // S145
, 2518  // S146
, 2533  // S147
, 2548  // S148
, 2563  // S149
, 2578  // S150
, 2593  // S151
, 2608  // S152
, 2623  // S153
, 2698  // S154
, 2701  // S155
, 2728  // S156
, 2755  // S157
, 2782  // S158
, 2809  // S159
, 2814  // S160
, 2817  // S161
, 2820  // S162
, 2823  // S163
, 2828  // S164
, 2831  // S165
, 2858  // S166
, 2885  // S167
, 2894  // S168
, 2903  // S169
, 2912  // S170
, 2939  // S171
, 2968  // S172
, 2983  // S173
, 2986  // S174
, 3001  // S175
, 3016  // S176
, 3019  // S177
, 3126  // S178
, 3233  // S179
, 3340  // S180
, 3447  // S181
, 3554  // S182
, 3661  // S183
, 3768  // S184
, 3875  // S185
, 3936  // S186
, 3997  // S187
, 4058  // S188
, 4119  // S189
, 4180  // S190
, 4241  // S191
, 4302  // S192
, 4395  // S193
, 4488  // S194
, 4581  // S195
, 4674  // S196
, 4767  // S197
, 4860  // S198
, 4953  // S199
, 5046  // S200
, 5139  // S201
, 5246  // S202
, 5253  // S203
, 5256  // S204
, 5259  // S205
, 5262  // S206
, 5271  // S207
, 5274  // S208
, 5277  // S209
, 5280  // S210
, 5283  // S211
, 5286  // S212
, 5289  // S213
, 5316  // S214
, 5343  // S215
, 5348  // S216
, 5455  // S217
, 5548  // S218
, 5641  // S219
, 5734  // S220
, 5827  // S221
, 5920  // S222
, 6013  // S223
, 6106  // S224
, 6181  // S225
, 6256  // S226
, 6331  // S227
, 6406  // S228
, 6481  // S229
, 6556  // S230
, 6631  // S231
, 6706  // S232
, 6781  // S233
, 6808  // S234
, 6823  // S235
, 6826  // S236
, 6853  // S237
, 6856  // S238
, 6859  // S239
, 6862  // S240
, 6865  // S241
, 6868  // S242
, 6871  // S243
, 6898  // S244
, 6903  // S245
, 6930  // S246
, 6933  // S247
, 6936  // S248
, 6939  // S249
, 6942  // S250
, 6945  // S251
, 6948  // S252
, 6951  // S253
, 6954  // S254
, 6985  // S255
, 6988  // S256
, 6993  // S257
, 6996  // S258
, 6999  // S259
, 7002  // S260
, 7005  // S261
, 7008  // S262
, 7011  // S263
, 7020  // S264
, 7029  // S265
, 7038  // S266
, 7041  // S267
, 7044  // S268
, 7047  // S269
, 7050  // S270
, 7077  // S271
, 7080  // S272
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            SLR states successors table                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

// Successor tables handle non terminal successors ;
// an entry is (non_terminal_symbol, n) ; successor is state n.

static const int16_t gSuccessorTable_plm_grammar_0 [11] = {0, 13,
  2, 14,
  3, 15,
  4, 16,
  13, 17, -1} ;

static const int16_t gSuccessorTable_plm_grammar_10 [3] = {4, 27, -1} ;

static const int16_t gSuccessorTable_plm_grammar_11 [3] = {23, 29, -1} ;

static const int16_t gSuccessorTable_plm_grammar_14 [9] = {2, 14,
  3, 15,
  4, 16,
  13, 31, -1} ;

static const int16_t gSuccessorTable_plm_grammar_15 [9] = {2, 14,
  3, 15,
  4, 16,
  13, 32, -1} ;

static const int16_t gSuccessorTable_plm_grammar_18 [9] = {2, 14,
  3, 15,
  4, 16,
  13, 34, -1} ;

static const int16_t gSuccessorTable_plm_grammar_19 [3] = {14, 36, -1} ;

static const int16_t gSuccessorTable_plm_grammar_20 [3] = {15, 38, -1} ;

static const int16_t gSuccessorTable_plm_grammar_21 [3] = {17, 40, -1} ;

static const int16_t gSuccessorTable_plm_grammar_23 [7] = {5, 51,
  6, 52,
  24, 53, -1} ;

static const int16_t gSuccessorTable_plm_grammar_24 [7] = {5, 54,
  6, 52,
  24, 53, -1} ;

static const int16_t gSuccessorTable_plm_grammar_25 [3] = {18, 56, -1} ;

static const int16_t gSuccessorTable_plm_grammar_26 [3] = {20, 58, -1} ;

static const int16_t gSuccessorTable_plm_grammar_28 [3] = {23, 59, -1} ;

static const int16_t gSuccessorTable_plm_grammar_33 [7] = {5, 61,
  6, 52,
  24, 53, -1} ;

static const int16_t gSuccessorTable_plm_grammar_35 [3] = {14, 62, -1} ;

static const int16_t gSuccessorTable_plm_grammar_37 [3] = {15, 63, -1} ;

static const int16_t gSuccessorTable_plm_grammar_39 [3] = {17, 65, -1} ;

static const int16_t gSuccessorTable_plm_grammar_40 [5] = {1, 67,
  4, 68, -1} ;

static const int16_t gSuccessorTable_plm_grammar_42 [3] = {27, 79, -1} ;

static const int16_t gSuccessorTable_plm_grammar_45 [5] = {6, 52,
  24, 82, -1} ;

static const int16_t gSuccessorTable_plm_grammar_46 [13] = {8, 89,
  9, 90,
  10, 91,
  11, 92,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_48 [15] = {7, 96,
  8, 97,
  9, 90,
  10, 91,
  11, 92,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_49 [13] = {8, 98,
  9, 90,
  10, 91,
  11, 92,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_50 [7] = {5, 99,
  6, 52,
  24, 53, -1} ;

static const int16_t gSuccessorTable_plm_grammar_52 [5] = {6, 52,
  24, 101, -1} ;

static const int16_t gSuccessorTable_plm_grammar_55 [3] = {18, 103, -1} ;

static const int16_t gSuccessorTable_plm_grammar_57 [3] = {20, 105, -1} ;

static const int16_t gSuccessorTable_plm_grammar_58 [3] = {21, 107, -1} ;

static const int16_t gSuccessorTable_plm_grammar_70 [13] = {8, 114,
  9, 90,
  10, 91,
  11, 92,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_71 [3] = {29, 118, -1} ;

static const int16_t gSuccessorTable_plm_grammar_79 [13] = {8, 119,
  9, 90,
  10, 91,
  11, 92,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_80 [3] = {25, 121, -1} ;

static const int16_t gSuccessorTable_plm_grammar_81 [3] = {26, 123, -1} ;

static const int16_t gSuccessorTable_plm_grammar_85 [13] = {8, 125,
  9, 90,
  10, 91,
  11, 92,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_87 [5] = {9, 126,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_88 [5] = {9, 127,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_90 [3] = {33, 135, -1} ;

static const int16_t gSuccessorTable_plm_grammar_92 [3] = {31, 143, -1} ;

static const int16_t gSuccessorTable_plm_grammar_93 [3] = {32, 153, -1} ;

static const int16_t gSuccessorTable_plm_grammar_106 [3] = {21, 160, -1} ;

static const int16_t gSuccessorTable_plm_grammar_112 [13] = {8, 165,
  9, 90,
  10, 91,
  11, 92,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_113 [13] = {8, 166,
  9, 90,
  10, 91,
  11, 92,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_116 [13] = {8, 168,
  9, 90,
  10, 91,
  11, 92,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_124 [3] = {34, 176, -1} ;

static const int16_t gSuccessorTable_plm_grammar_128 [5] = {9, 178,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_129 [5] = {9, 179,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_130 [5] = {9, 180,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_131 [5] = {9, 181,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_132 [5] = {9, 182,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_133 [5] = {9, 183,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_134 [5] = {9, 184,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_137 [9] = {9, 90,
  11, 186,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_138 [9] = {9, 90,
  11, 187,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_139 [9] = {9, 90,
  11, 188,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_140 [9] = {9, 90,
  11, 189,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_141 [9] = {9, 90,
  11, 190,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_142 [9] = {9, 90,
  11, 191,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_144 [7] = {9, 90,
  12, 192,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_145 [7] = {9, 90,
  12, 193,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_146 [7] = {9, 90,
  12, 194,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_147 [7] = {9, 90,
  12, 195,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_148 [7] = {9, 90,
  12, 196,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_149 [7] = {9, 90,
  12, 197,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_150 [7] = {9, 90,
  12, 198,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_151 [7] = {9, 90,
  12, 199,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_152 [7] = {9, 90,
  12, 200,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_156 [7] = {5, 202,
  6, 52,
  24, 53, -1} ;

static const int16_t gSuccessorTable_plm_grammar_157 [7] = {5, 203,
  6, 52,
  24, 53, -1} ;

static const int16_t gSuccessorTable_plm_grammar_159 [3] = {19, 205, -1} ;

static const int16_t gSuccessorTable_plm_grammar_163 [3] = {16, 209, -1} ;

static const int16_t gSuccessorTable_plm_grammar_167 [3] = {29, 210, -1} ;

static const int16_t gSuccessorTable_plm_grammar_168 [3] = {29, 211, -1} ;

static const int16_t gSuccessorTable_plm_grammar_169 [3] = {29, 212, -1} ;

static const int16_t gSuccessorTable_plm_grammar_172 [13] = {8, 213,
  9, 90,
  10, 91,
  11, 92,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_174 [13] = {8, 214,
  9, 90,
  10, 91,
  11, 92,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_175 [13] = {8, 215,
  9, 90,
  10, 91,
  11, 92,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_178 [3] = {33, 217, -1} ;

static const int16_t gSuccessorTable_plm_grammar_179 [3] = {33, 218, -1} ;

static const int16_t gSuccessorTable_plm_grammar_180 [3] = {33, 219, -1} ;

static const int16_t gSuccessorTable_plm_grammar_181 [3] = {33, 220, -1} ;

static const int16_t gSuccessorTable_plm_grammar_182 [3] = {33, 221, -1} ;

static const int16_t gSuccessorTable_plm_grammar_183 [3] = {33, 222, -1} ;

static const int16_t gSuccessorTable_plm_grammar_184 [3] = {33, 223, -1} ;

static const int16_t gSuccessorTable_plm_grammar_192 [3] = {32, 224, -1} ;

static const int16_t gSuccessorTable_plm_grammar_193 [3] = {32, 225, -1} ;

static const int16_t gSuccessorTable_plm_grammar_194 [3] = {32, 226, -1} ;

static const int16_t gSuccessorTable_plm_grammar_195 [3] = {32, 227, -1} ;

static const int16_t gSuccessorTable_plm_grammar_196 [3] = {32, 228, -1} ;

static const int16_t gSuccessorTable_plm_grammar_197 [3] = {32, 229, -1} ;

static const int16_t gSuccessorTable_plm_grammar_198 [3] = {32, 230, -1} ;

static const int16_t gSuccessorTable_plm_grammar_199 [3] = {32, 231, -1} ;

static const int16_t gSuccessorTable_plm_grammar_200 [3] = {32, 232, -1} ;

static const int16_t gSuccessorTable_plm_grammar_202 [3] = {28, 235, -1} ;

static const int16_t gSuccessorTable_plm_grammar_206 [3] = {22, 242, -1} ;

static const int16_t gSuccessorTable_plm_grammar_215 [3] = {34, 246, -1} ;

static const int16_t gSuccessorTable_plm_grammar_233 [7] = {5, 247,
  6, 52,
  24, 53, -1} ;

static const int16_t gSuccessorTable_plm_grammar_234 [15] = {7, 248,
  8, 97,
  9, 90,
  10, 91,
  11, 92,
  12, 93,
  30, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_244 [3] = {16, 255, -1} ;

static const int16_t gSuccessorTable_plm_grammar_256 [3] = {19, 261, -1} ;

static const int16_t gSuccessorTable_plm_grammar_263 [3] = {22, 267, -1} ;

static const int16_t gSuccessorTable_plm_grammar_264 [3] = {22, 268, -1} ;

static const int16_t gSuccessorTable_plm_grammar_265 [3] = {22, 269, -1} ;

static const int16_t gSuccessorTable_plm_grammar_270 [7] = {5, 271,
  6, 52,
  24, 53, -1} ;

static const int16_t * gSuccessorTable_plm_grammar [273] = {
gSuccessorTable_plm_grammar_0, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_10, gSuccessorTable_plm_grammar_11, 
  NULL, NULL, gSuccessorTable_plm_grammar_14, gSuccessorTable_plm_grammar_15, 
  NULL, NULL, gSuccessorTable_plm_grammar_18, gSuccessorTable_plm_grammar_19, 
  gSuccessorTable_plm_grammar_20, gSuccessorTable_plm_grammar_21, NULL, gSuccessorTable_plm_grammar_23, 
  gSuccessorTable_plm_grammar_24, gSuccessorTable_plm_grammar_25, gSuccessorTable_plm_grammar_26, NULL, 
  gSuccessorTable_plm_grammar_28, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_33, NULL, gSuccessorTable_plm_grammar_35, 
  NULL, gSuccessorTable_plm_grammar_37, NULL, gSuccessorTable_plm_grammar_39, 
  gSuccessorTable_plm_grammar_40, NULL, gSuccessorTable_plm_grammar_42, NULL, 
  NULL, gSuccessorTable_plm_grammar_45, gSuccessorTable_plm_grammar_46, NULL, 
  gSuccessorTable_plm_grammar_48, gSuccessorTable_plm_grammar_49, gSuccessorTable_plm_grammar_50, NULL, 
  gSuccessorTable_plm_grammar_52, NULL, NULL, gSuccessorTable_plm_grammar_55, 
  NULL, gSuccessorTable_plm_grammar_57, gSuccessorTable_plm_grammar_58, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_70, gSuccessorTable_plm_grammar_71, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_79, 
  gSuccessorTable_plm_grammar_80, gSuccessorTable_plm_grammar_81, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_85, NULL, gSuccessorTable_plm_grammar_87, 
  gSuccessorTable_plm_grammar_88, NULL, gSuccessorTable_plm_grammar_90, NULL, 
  gSuccessorTable_plm_grammar_92, gSuccessorTable_plm_grammar_93, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_106, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_112, gSuccessorTable_plm_grammar_113, NULL, NULL, 
  gSuccessorTable_plm_grammar_116, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_124, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_128, gSuccessorTable_plm_grammar_129, gSuccessorTable_plm_grammar_130, gSuccessorTable_plm_grammar_131, 
  gSuccessorTable_plm_grammar_132, gSuccessorTable_plm_grammar_133, gSuccessorTable_plm_grammar_134, NULL, 
  NULL, gSuccessorTable_plm_grammar_137, gSuccessorTable_plm_grammar_138, gSuccessorTable_plm_grammar_139, 
  gSuccessorTable_plm_grammar_140, gSuccessorTable_plm_grammar_141, gSuccessorTable_plm_grammar_142, NULL, 
  gSuccessorTable_plm_grammar_144, gSuccessorTable_plm_grammar_145, gSuccessorTable_plm_grammar_146, gSuccessorTable_plm_grammar_147, 
  gSuccessorTable_plm_grammar_148, gSuccessorTable_plm_grammar_149, gSuccessorTable_plm_grammar_150, gSuccessorTable_plm_grammar_151, 
  gSuccessorTable_plm_grammar_152, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_156, gSuccessorTable_plm_grammar_157, NULL, gSuccessorTable_plm_grammar_159, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_163, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_167, 
  gSuccessorTable_plm_grammar_168, gSuccessorTable_plm_grammar_169, NULL, NULL, 
  gSuccessorTable_plm_grammar_172, NULL, gSuccessorTable_plm_grammar_174, gSuccessorTable_plm_grammar_175, 
  NULL, NULL, gSuccessorTable_plm_grammar_178, gSuccessorTable_plm_grammar_179, 
  gSuccessorTable_plm_grammar_180, gSuccessorTable_plm_grammar_181, gSuccessorTable_plm_grammar_182, gSuccessorTable_plm_grammar_183, 
  gSuccessorTable_plm_grammar_184, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_192, gSuccessorTable_plm_grammar_193, gSuccessorTable_plm_grammar_194, gSuccessorTable_plm_grammar_195, 
  gSuccessorTable_plm_grammar_196, gSuccessorTable_plm_grammar_197, gSuccessorTable_plm_grammar_198, gSuccessorTable_plm_grammar_199, 
  gSuccessorTable_plm_grammar_200, NULL, gSuccessorTable_plm_grammar_202, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_206, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_215, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_233, gSuccessorTable_plm_grammar_234, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_244, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_256, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_263, 
  gSuccessorTable_plm_grammar_264, gSuccessorTable_plm_grammar_265, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_270, NULL, 
  NULL} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Production rules infos (left non terminal, size of right string)                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const int16_t gProductionsTable_plm_grammar [118 * 2] = {
  0, 1,
  1, 3,
  1, 1,
  2, 3,
  2, 8,
  2, 6,
  2, 6,
  2, 4,
  2, 4,
  2, 14,
  3, 4,
  4, 8,
  2, 2,
  2, 7,
  5, 1,
  6, 2,
  6, 2,
  6, 2,
  6, 2,
  6, 5,
  6, 4,
  6, 5,
  6, 3,
  6, 2,
  6, 2,
  6, 3,
  6, 3,
  7, 4,
  6, 4,
  6, 5,
  6, 3,
  8, 1,
  9, 3,
  9, 3,
  10, 2,
  11, 2,
  12, 2,
  9, 2,
  9, 2,
  9, 1,
  9, 1,
  9, 1,
  9, 4,
  2, 2,
  13, 0,
  13, 2,
  13, 2,
  13, 3,
  14, 0,
  14, 2,
  15, 0,
  15, 2,
  16, 0,
  16, 3,
  17, 0,
  17, 2,
  18, 0,
  18, 2,
  19, 0,
  19, 5,
  20, 0,
  20, 2,
  21, 0,
  21, 2,
  22, 0,
  22, 5,
  22, 5,
  22, 5,
  23, 0,
  23, 2,
  24, 0,
  24, 2,
  24, 2,
  25, 0,
  25, 2,
  26, 0,
  26, 2,
  27, 1,
  27, 1,
  27, 1,
  28, 0,
  28, 2,
  28, 2,
  29, 0,
  29, 3,
  29, 3,
  29, 3,
  30, 0,
  30, 1,
  31, 0,
  31, 2,
  31, 2,
  31, 2,
  31, 2,
  31, 2,
  31, 2,
  31, 2,
  32, 0,
  32, 3,
  32, 3,
  32, 3,
  32, 3,
  32, 3,
  32, 3,
  32, 3,
  32, 3,
  32, 3,
  33, 0,
  33, 3,
  33, 3,
  33, 3,
  33, 3,
  33, 3,
  33, 3,
  33, 3,
  34, 0,
  34, 3,
  35, 1
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'start_symbol' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_start_5F_symbol_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 0 :
      rule_common_5F_syntax_start_5F_symbol_i0_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_start_5F_symbol_ (GALGAS_ast &  parameter_1,
                                GALGAS_lstringlist &  parameter_2,
                                GALGAS_location &  parameter_3,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 0 :
      rule_common_5F_syntax_start_5F_symbol_i0_(parameter_1, parameter_2, parameter_3, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

void cGrammar_plm_5F_grammar::performIndexing (C_Compiler * /* inCompiler */,
             const C_String & /* inSourceFilePath */) {
}

void cGrammar_plm_5F_grammar::performOnlyLexicalAnalysis (C_Compiler * inCompiler,
             const C_String & inSourceFilePath) {
  C_Lexique_plm_5F_lexique * scanner = NULL ;
  macroMyNew (scanner, C_Lexique_plm_5F_lexique (inCompiler, "", "", inSourceFilePath COMMA_HERE)) ;
  if (scanner->sourceText () != NULL) {
    scanner->performLexicalAnalysis () ;
  }
  macroDetachSharedObject (scanner) ;
}

void cGrammar_plm_5F_grammar::performOnlySyntaxAnalysis (C_Compiler * inCompiler,
             const C_String & inSourceFilePath) {
  C_Lexique_plm_5F_lexique * scanner = NULL ;
  macroMyNew (scanner, C_Lexique_plm_5F_lexique (inCompiler, "", "", inSourceFilePath COMMA_HERE)) ;
  if (scanner->sourceText () != NULL) {
    scanner->performBottomUpParsing (gActionTable_plm_grammar, gNonTerminalNames_plm_grammar,
                                     gActionTableIndex_plm_grammar, gSuccessorTable_plm_grammar,
                                     gProductionsTable_plm_grammar) ;
  }
  macroDetachSharedObject (scanner) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Grammar start symbol implementation                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::_performSourceFileParsing_ (C_Compiler * inCompiler,
                                GALGAS_lstring inFilePath,
                                GALGAS_ast &  parameter_1,
                                GALGAS_lstringlist &  parameter_2,
                                GALGAS_location &  parameter_3
                                COMMA_LOCATION_ARGS) {
  if (inFilePath.isValid ()) {
    const GALGAS_string filePathAsString = inFilePath.reader_string (HERE) ;
    C_String filePath = filePathAsString.stringValue () ;
    if (! C_FileManager::isAbsolutePath (filePath)) {
      filePath = inCompiler->sourceFilePath ().stringByDeletingLastPathComponent ().stringByAppendingPathComponent (filePath) ;
    }
    if (C_FileManager::fileExistsAtPath (filePath)) {
      C_Lexique_plm_5F_lexique * scanner = NULL ;
      macroMyNew (scanner, C_Lexique_plm_5F_lexique (inCompiler, "", "", filePath COMMA_HERE)) ;
      if (scanner->sourceText () != NULL) {
        const bool ok = scanner->performBottomUpParsing (gActionTable_plm_grammar, gNonTerminalNames_plm_grammar,
                                                         gActionTableIndex_plm_grammar, gSuccessorTable_plm_grammar,
                                                         gProductionsTable_plm_grammar) ;
        if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
          cGrammar_plm_5F_grammar grammar ;
          grammar.nt_start_5F_symbol_ (parameter_1, parameter_2, parameter_3, scanner) ;
        }
      }else{
        C_String message ;
        message << "the '" << filePath << "' file exists, but cannot be read" ;
        const GALGAS_location errorLocation (inFilePath.reader_location (THERE)) ;
        inCompiler->semanticErrorAtLocation (errorLocation, message COMMA_THERE) ;
      }
      macroDetachSharedObject (scanner) ;
    }else{
      C_String message ;
      message << "the '" << filePath << "' file does not exist" ;
      const GALGAS_location errorLocation (inFilePath.reader_location (THERE)) ;
      inCompiler->semanticErrorAtLocation (errorLocation, message COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::_performSourceStringParsing_ (C_Compiler * inCompiler,
                                GALGAS_string inSourceString,
                                GALGAS_ast &  parameter_1,
                                GALGAS_lstringlist &  parameter_2,
                                GALGAS_location &  parameter_3
                                COMMA_UNUSED_LOCATION_ARGS) {
  C_Lexique_plm_5F_lexique * scanner = NULL ;
  macroMyNew (scanner, C_Lexique_plm_5F_lexique (inCompiler, inSourceString.stringValue (), "" COMMA_HERE)) ;
  if (scanner->sourceText () != NULL) {
    const bool ok = scanner->performBottomUpParsing (gActionTable_plm_grammar, gNonTerminalNames_plm_grammar,
                                                     gActionTableIndex_plm_grammar, gSuccessorTable_plm_grammar,
                                                     gProductionsTable_plm_grammar) ;
    if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
      cGrammar_plm_5F_grammar grammar ;
      grammar.nt_start_5F_symbol_ (parameter_1, parameter_2, parameter_3, scanner) ;
      }
  }
  macroDetachSharedObject (scanner) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'var_declaration' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_var_5F_declaration_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 1 :
      rule_common_5F_syntax_var_5F_declaration_i1_parse(inLexique) ;
    break ;
  case 2 :
      rule_common_5F_syntax_var_5F_declaration_i2_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_var_5F_declaration_ (GALGAS_generalizedTypeEnumAST &  parameter_1,
                                GALGAS_lstring &  parameter_2,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 1 :
      rule_common_5F_syntax_var_5F_declaration_i1_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 2 :
      rule_common_5F_syntax_var_5F_declaration_i2_(parameter_1, parameter_2, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'declaration' non terminal implementation                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_declaration_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 3 :
      rule_common_5F_syntax_declaration_i3_parse(inLexique) ;
    break ;
  case 4 :
      rule_common_5F_syntax_declaration_i4_parse(inLexique) ;
    break ;
  case 5 :
      rule_common_5F_syntax_declaration_i5_parse(inLexique) ;
    break ;
  case 6 :
      rule_common_5F_syntax_declaration_i6_parse(inLexique) ;
    break ;
  case 7 :
      rule_common_5F_syntax_declaration_i7_parse(inLexique) ;
    break ;
  case 8 :
      rule_common_5F_syntax_declaration_i8_parse(inLexique) ;
    break ;
  case 9 :
      rule_common_5F_syntax_declaration_i9_parse(inLexique) ;
    break ;
  case 12 :
      rule_common_5F_syntax_declaration_i12_parse(inLexique) ;
    break ;
  case 13 :
      rule_common_5F_syntax_declaration_i13_parse(inLexique) ;
    break ;
  case 43 :
      rule_plm_5F_specific_5F_syntax_declaration_i0_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_declaration_ (GALGAS_ast &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 3 :
      rule_common_5F_syntax_declaration_i3_(parameter_1, inLexique) ;
    break ;
  case 4 :
      rule_common_5F_syntax_declaration_i4_(parameter_1, inLexique) ;
    break ;
  case 5 :
      rule_common_5F_syntax_declaration_i5_(parameter_1, inLexique) ;
    break ;
  case 6 :
      rule_common_5F_syntax_declaration_i6_(parameter_1, inLexique) ;
    break ;
  case 7 :
      rule_common_5F_syntax_declaration_i7_(parameter_1, inLexique) ;
    break ;
  case 8 :
      rule_common_5F_syntax_declaration_i8_(parameter_1, inLexique) ;
    break ;
  case 9 :
      rule_common_5F_syntax_declaration_i9_(parameter_1, inLexique) ;
    break ;
  case 12 :
      rule_common_5F_syntax_declaration_i12_(parameter_1, inLexique) ;
    break ;
  case 13 :
      rule_common_5F_syntax_declaration_i13_(parameter_1, inLexique) ;
    break ;
  case 43 :
      rule_plm_5F_specific_5F_syntax_declaration_i0_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      'procedure' non terminal implementation                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_procedure_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 10 :
      rule_common_5F_syntax_procedure_i10_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_procedure_ (const GALGAS_procedureKindAST  parameter_1,
                                GALGAS_procedureDeclarationListAST &  parameter_2,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 10 :
      rule_common_5F_syntax_procedure_i10_(parameter_1, parameter_2, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'procedure_header' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_procedure_5F_header_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 11 :
      rule_common_5F_syntax_procedure_5F_header_i11_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_procedure_5F_header_ (GALGAS_lstringlist &  parameter_1,
                                GALGAS_lstring &  parameter_2,
                                GALGAS_lstringlist &  parameter_3,
                                GALGAS_procFormalArgumentList &  parameter_4,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 11 :
      rule_common_5F_syntax_procedure_5F_header_i11_(parameter_1, parameter_2, parameter_3, parameter_4, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'instructionList' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_instructionList_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 14 :
      rule_common_5F_syntax_instructionList_i14_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_instructionList_ (GALGAS_instructionListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 14 :
      rule_common_5F_syntax_instructionList_i14_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'instruction' non terminal implementation                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_instruction_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 15 :
      rule_common_5F_syntax_instruction_i15_parse(inLexique) ;
    break ;
  case 16 :
      rule_common_5F_syntax_instruction_i16_parse(inLexique) ;
    break ;
  case 17 :
      rule_common_5F_syntax_instruction_i17_parse(inLexique) ;
    break ;
  case 18 :
      rule_common_5F_syntax_instruction_i18_parse(inLexique) ;
    break ;
  case 19 :
      rule_common_5F_syntax_instruction_i19_parse(inLexique) ;
    break ;
  case 20 :
      rule_common_5F_syntax_instruction_i20_parse(inLexique) ;
    break ;
  case 21 :
      rule_common_5F_syntax_instruction_i21_parse(inLexique) ;
    break ;
  case 22 :
      rule_common_5F_syntax_instruction_i22_parse(inLexique) ;
    break ;
  case 23 :
      rule_common_5F_syntax_instruction_i23_parse(inLexique) ;
    break ;
  case 24 :
      rule_common_5F_syntax_instruction_i24_parse(inLexique) ;
    break ;
  case 25 :
      rule_common_5F_syntax_instruction_i25_parse(inLexique) ;
    break ;
  case 26 :
      rule_common_5F_syntax_instruction_i26_parse(inLexique) ;
    break ;
  case 28 :
      rule_common_5F_syntax_instruction_i28_parse(inLexique) ;
    break ;
  case 29 :
      rule_common_5F_syntax_instruction_i29_parse(inLexique) ;
    break ;
  case 30 :
      rule_common_5F_syntax_instruction_i30_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_instruction_ (GALGAS_instructionListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 15 :
      rule_common_5F_syntax_instruction_i15_(parameter_1, inLexique) ;
    break ;
  case 16 :
      rule_common_5F_syntax_instruction_i16_(parameter_1, inLexique) ;
    break ;
  case 17 :
      rule_common_5F_syntax_instruction_i17_(parameter_1, inLexique) ;
    break ;
  case 18 :
      rule_common_5F_syntax_instruction_i18_(parameter_1, inLexique) ;
    break ;
  case 19 :
      rule_common_5F_syntax_instruction_i19_(parameter_1, inLexique) ;
    break ;
  case 20 :
      rule_common_5F_syntax_instruction_i20_(parameter_1, inLexique) ;
    break ;
  case 21 :
      rule_common_5F_syntax_instruction_i21_(parameter_1, inLexique) ;
    break ;
  case 22 :
      rule_common_5F_syntax_instruction_i22_(parameter_1, inLexique) ;
    break ;
  case 23 :
      rule_common_5F_syntax_instruction_i23_(parameter_1, inLexique) ;
    break ;
  case 24 :
      rule_common_5F_syntax_instruction_i24_(parameter_1, inLexique) ;
    break ;
  case 25 :
      rule_common_5F_syntax_instruction_i25_(parameter_1, inLexique) ;
    break ;
  case 26 :
      rule_common_5F_syntax_instruction_i26_(parameter_1, inLexique) ;
    break ;
  case 28 :
      rule_common_5F_syntax_instruction_i28_(parameter_1, inLexique) ;
    break ;
  case 29 :
      rule_common_5F_syntax_instruction_i29_(parameter_1, inLexique) ;
    break ;
  case 30 :
      rule_common_5F_syntax_instruction_i30_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'if_instruction' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_if_5F_instruction_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 27 :
      rule_common_5F_syntax_if_5F_instruction_i27_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_if_5F_instruction_ (GALGAS_ifInstructionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 27 :
      rule_common_5F_syntax_if_5F_instruction_i27_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      'expression' non terminal implementation                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 31 :
      rule_common_5F_syntax_expression_i31_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 31 :
      rule_common_5F_syntax_expression_i31_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       'primary' non terminal implementation                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_primary_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 32 :
      rule_common_5F_syntax_primary_i32_parse(inLexique) ;
    break ;
  case 33 :
      rule_common_5F_syntax_primary_i33_parse(inLexique) ;
    break ;
  case 37 :
      rule_common_5F_syntax_primary_i37_parse(inLexique) ;
    break ;
  case 38 :
      rule_common_5F_syntax_primary_i38_parse(inLexique) ;
    break ;
  case 39 :
      rule_common_5F_syntax_primary_i39_parse(inLexique) ;
    break ;
  case 40 :
      rule_common_5F_syntax_primary_i40_parse(inLexique) ;
    break ;
  case 41 :
      rule_common_5F_syntax_primary_i41_parse(inLexique) ;
    break ;
  case 42 :
      rule_common_5F_syntax_primary_i42_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_primary_ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 32 :
      rule_common_5F_syntax_primary_i32_(parameter_1, inLexique) ;
    break ;
  case 33 :
      rule_common_5F_syntax_primary_i33_(parameter_1, inLexique) ;
    break ;
  case 37 :
      rule_common_5F_syntax_primary_i37_(parameter_1, inLexique) ;
    break ;
  case 38 :
      rule_common_5F_syntax_primary_i38_(parameter_1, inLexique) ;
    break ;
  case 39 :
      rule_common_5F_syntax_primary_i39_(parameter_1, inLexique) ;
    break ;
  case 40 :
      rule_common_5F_syntax_primary_i40_(parameter_1, inLexique) ;
    break ;
  case 41 :
      rule_common_5F_syntax_primary_i41_(parameter_1, inLexique) ;
    break ;
  case 42 :
      rule_common_5F_syntax_primary_i42_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      'comparison' non terminal implementation                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_comparison_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 34 :
      rule_common_5F_syntax_comparison_i34_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_comparison_ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 34 :
      rule_common_5F_syntax_comparison_i34_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 'additive_expression' non terminal implementation                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_additive_5F_expression_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 35 :
      rule_common_5F_syntax_additive_5F_expression_i35_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_additive_5F_expression_ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 35 :
      rule_common_5F_syntax_additive_5F_expression_i35_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'multiplicative_expression' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_multiplicative_5F_expression_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 36 :
      rule_common_5F_syntax_multiplicative_5F_expression_i36_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_multiplicative_5F_expression_ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 36 :
      rule_common_5F_syntax_multiplicative_5F_expression_i36_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_0' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_0 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 44 45 46 47
  return inLexique->nextProductionIndex () - 43 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_1' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_1 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 48 49
  return inLexique->nextProductionIndex () - 47 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_2' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_2 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 50 51
  return inLexique->nextProductionIndex () - 49 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_3' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_3 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 52 53
  return inLexique->nextProductionIndex () - 51 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_4' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_4 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 54 55
  return inLexique->nextProductionIndex () - 53 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_5' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_5 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 56 57
  return inLexique->nextProductionIndex () - 55 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_6' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_6 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 58 59
  return inLexique->nextProductionIndex () - 57 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_7' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_7 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 60 61
  return inLexique->nextProductionIndex () - 59 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_8' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_8 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 62 63
  return inLexique->nextProductionIndex () - 61 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_9' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_9 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 64 65 66 67
  return inLexique->nextProductionIndex () - 63 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_10' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_10 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 68 69
  return inLexique->nextProductionIndex () - 67 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_11' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_11 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 70 71 72
  return inLexique->nextProductionIndex () - 69 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_12' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_12 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 73 74
  return inLexique->nextProductionIndex () - 72 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_13' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_13 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 75 76
  return inLexique->nextProductionIndex () - 74 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_14' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_14 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 77 78 79
  return inLexique->nextProductionIndex () - 76 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_15' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_15 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 80 81 82
  return inLexique->nextProductionIndex () - 79 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_16' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_16 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 83 84 85 86
  return inLexique->nextProductionIndex () - 82 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_17' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_17 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 87 88
  return inLexique->nextProductionIndex () - 86 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_18' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_18 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 89 90 91 92 93 94 95 96
  return inLexique->nextProductionIndex () - 88 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_19' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_19 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 97 98 99 100 101 102 103 104 105 106
  return inLexique->nextProductionIndex () - 96 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_20' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_20 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 107 108 109 110 111 112 113 114
  return inLexique->nextProductionIndex () - 106 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_21' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_21 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 115 116
  return inLexique->nextProductionIndex () - 114 ;
}

//---------------------------------------------------------------------------------------------------------------------*

//---------------------------------------------------------------------------------------------------------------------*

#include "utilities/MF_MemoryControl.h"
#include "galgas2/C_galgas_CLI_Options.h"

#include "files/C_FileManager.h"

//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       N O N    T E R M I N A L    N A M E S                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const char * gNonTerminalNames_plms_grammar [36] = {
  "<start_symbol>",// Index 0
  "<var_declaration>",// Index 1
  "<declaration>",// Index 2
  "<procedure>",// Index 3
  "<procedure_header>",// Index 4
  "<instructionList>",// Index 5
  "<instruction>",// Index 6
  "<if_instruction>",// Index 7
  "<expression>",// Index 8
  "<primary>",// Index 9
  "<comparison>",// Index 10
  "<additive_expression>",// Index 11
  "<multiplicative_expression>",// Index 12
  "<select_common_5F_syntax_0>",// Index 13
  "<select_common_5F_syntax_1>",// Index 14
  "<select_common_5F_syntax_2>",// Index 15
  "<select_common_5F_syntax_3>",// Index 16
  "<select_common_5F_syntax_4>",// Index 17
  "<select_common_5F_syntax_5>",// Index 18
  "<select_common_5F_syntax_6>",// Index 19
  "<select_common_5F_syntax_7>",// Index 20
  "<select_common_5F_syntax_8>",// Index 21
  "<select_common_5F_syntax_9>",// Index 22
  "<select_common_5F_syntax_10>",// Index 23
  "<select_common_5F_syntax_11>",// Index 24
  "<select_common_5F_syntax_12>",// Index 25
  "<select_common_5F_syntax_13>",// Index 26
  "<select_common_5F_syntax_14>",// Index 27
  "<select_common_5F_syntax_15>",// Index 28
  "<select_common_5F_syntax_16>",// Index 29
  "<select_common_5F_syntax_17>",// Index 30
  "<select_common_5F_syntax_18>",// Index 31
  "<select_common_5F_syntax_19>",// Index 32
  "<select_common_5F_syntax_20>",// Index 33
  "<select_common_5F_syntax_21>",// Index 34
  "<>"// Index 35
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                S L R    A N A L Y Z E R    A C T I O N    T A B L E                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

// Action tables handle shift and reduce actions ;
//  - a shift action is (terminal_symbol, SHIFT (n)) : if shifts to state n ;
//  - the accept action is (terminal_symbol, ACCEPT) ;
//  - a reduce action is (terminal_symbol, REDUCE (n)) ; if reduces to state n.

#define SHIFT(a) ((a) + 2)
#define REDUCE(a) (-(a) - 1)
#define ACCEPT (1)
#define END (-1)

static const int16_t gActionTable_plms_grammar [] = {
// State S0 (index = 0)
  C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_exception, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_proc, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_mode, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (47)
, END
// State S1 (index = 33)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (21)
, END
// State S2 (index = 36)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (22)
, END
// State S3 (index = 39)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (23)
, END
// State S4 (index = 42)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (24)
, END
// State S5 (index = 45)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (25)
, END
// State S6 (index = 48)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (26)
, END
// State S7 (index = 51)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (27)
, END
// State S8 (index = 54)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (28)
, END
// State S9 (index = 57)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (29)
, END
// State S10 (index = 60)
, C_Lexique_plm_5F_lexique::kToken_proc, SHIFT (9)
, END
// State S11 (index = 63)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (31)
, END
// State S12 (index = 68)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (33)
, END
// State S13 (index = 71)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (34)
, END
// State S14 (index = 74)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (35)
, END
// State S15 (index = 77)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (36)
, END
// State S16 (index = 80)
, C_Lexique_plm_5F_lexique::kToken_, ACCEPT
, END
// State S17 (index = 83)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_exception, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_proc, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_mode, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (47)
, END
// State S18 (index = 116)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_exception, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_proc, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_mode, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (47)
, END
// State S19 (index = 149)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (39)
, END
// State S20 (index = 152)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (0)
, END
// State S21 (index = 155)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_exception, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_proc, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_mode, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (47)
, END
// State S22 (index = 188)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (41)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (51)
, END
// State S23 (index = 223)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (43)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (53)
, END
// State S24 (index = 228)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (45)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (57)
, END
// State S25 (index = 235)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (47)
, END
// State S26 (index = 238)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (50)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (51)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (52)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (53)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (54)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (55)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (56)
, END
// State S27 (index = 265)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (50)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (51)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (52)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (53)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (54)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (55)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (56)
, END
// State S28 (index = 292)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (61)
, END
// State S29 (index = 297)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (63)
, END
// State S30 (index = 304)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (12)
, END
// State S31 (index = 337)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (71)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (31)
, END
// State S32 (index = 342)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (66)
, END
// State S33 (index = 345)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (67)
, END
// State S34 (index = 348)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (68)
, END
// State S35 (index = 351)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (45)
, END
// State S36 (index = 384)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (69)
, END
// State S37 (index = 387)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (48)
, END
// State S38 (index = 390)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (49)
, END
// State S39 (index = 393)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (50)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (51)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (52)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (53)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (54)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (55)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (56)
, END
// State S40 (index = 420)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (50)
, END
// State S41 (index = 423)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (41)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (51)
, END
// State S42 (index = 458)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (3)
, END
// State S43 (index = 491)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (43)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (53)
, END
// State S44 (index = 496)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (73)
, END
// State S45 (index = 499)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (45)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (57)
, END
// State S46 (index = 506)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (75)
, C_Lexique_plm_5F_lexique::kToken_proc, SHIFT (9)
, END
// State S47 (index = 511)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (78)
, END
// State S48 (index = 514)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (79)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (80)
, C_Lexique_plm_5F_lexique::kToken__2B__2B_, SHIFT (81)
, C_Lexique_plm_5F_lexique::kToken__2D__2D_, SHIFT (82)
, C_Lexique_plm_5F_lexique::kToken__26__2B__2B_, SHIFT (83)
, C_Lexique_plm_5F_lexique::kToken__26__2D__2D_, SHIFT (84)
, C_Lexique_plm_5F_lexique::kToken__7C__3D_, SHIFT (85)
, C_Lexique_plm_5F_lexique::kToken__26__3D_, SHIFT (86)
, C_Lexique_plm_5F_lexique::kToken__5E__3D_, SHIFT (87)
, END
// State S49 (index = 533)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (89)
, END
// State S50 (index = 536)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (90)
, END
// State S51 (index = 539)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (50)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (51)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (52)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (53)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (54)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (55)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (56)
, END
// State S52 (index = 566)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S53 (index = 581)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (104)
, END
// State S54 (index = 584)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S55 (index = 599)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S56 (index = 614)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (50)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (51)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (52)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (53)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (54)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (55)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (56)
, END
// State S57 (index = 641)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (109)
, END
// State S58 (index = 644)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (50)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (51)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (52)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (53)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (54)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (55)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (56)
, END
// State S59 (index = 671)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (14)
, END
// State S60 (index = 680)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (111)
, END
// State S61 (index = 683)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (61)
, END
// State S62 (index = 688)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (113)
, END
// State S63 (index = 691)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (63)
, END
// State S64 (index = 698)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (115)
, END
// State S65 (index = 703)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (72)
, END
// State S66 (index = 706)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (117)
, END
// State S67 (index = 709)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (118)
, END
// State S68 (index = 712)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (119)
, END
// State S69 (index = 715)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (46)
, END
// State S70 (index = 748)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (120)
, END
// State S71 (index = 751)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (52)
, END
// State S72 (index = 784)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (54)
, END
// State S73 (index = 787)
, C_Lexique_plm_5F_lexique::kToken_case, SHIFT (121)
, END
// State S74 (index = 790)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (58)
, END
// State S75 (index = 795)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (122)
, END
// State S76 (index = 798)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (123)
, END
// State S77 (index = 801)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (2)
, END
// State S78 (index = 804)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (124)
, END
// State S79 (index = 807)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S80 (index = 822)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (126)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (86)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (127)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (128)
, END
// State S81 (index = 831)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (15)
, END
// State S82 (index = 858)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (16)
, END
// State S83 (index = 885)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (17)
, END
// State S84 (index = 912)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (18)
, END
// State S85 (index = 939)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (80)
, END
// State S86 (index = 954)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (81)
, END
// State S87 (index = 969)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (82)
, END
// State S88 (index = 984)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S89 (index = 999)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (131)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (76)
, END
// State S90 (index = 1004)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (133)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (78)
, END
// State S91 (index = 1009)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (75)
, END
// State S92 (index = 1018)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__26__26_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (40)
, END
// State S93 (index = 1131)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (135)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__26__26_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (41)
, END
// State S94 (index = 1248)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S95 (index = 1263)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__26__26_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (39)
, END
// State S96 (index = 1376)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S97 (index = 1391)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S98 (index = 1406)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (23)
, END
// State S99 (index = 1433)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__26__26_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (110)
, END
// State S100 (index = 1546)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (31)
, END
// State S101 (index = 1613)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_as, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken__3C_, SHIFT (152)
, C_Lexique_plm_5F_lexique::kToken__3E_, SHIFT (153)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (92)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (92)
, END
// State S102 (index = 1694)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (156)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (157)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (158)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (159)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (160)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (161)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (162)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (163)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (100)
, END
// State S103 (index = 1793)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (165)
, END
// State S104 (index = 1796)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (24)
, END
// State S105 (index = 1823)
, C_Lexique_plm_5F_lexique::kToken_end, SHIFT (166)
, END
// State S106 (index = 1826)
, C_Lexique_plm_5F_lexique::kToken_then, SHIFT (167)
, END
// State S107 (index = 1829)
, C_Lexique_plm_5F_lexique::kToken_do, SHIFT (168)
, END
// State S108 (index = 1832)
, C_Lexique_plm_5F_lexique::kToken_end, SHIFT (169)
, END
// State S109 (index = 1835)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (7)
, END
// State S110 (index = 1868)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (74)
, END
// State S111 (index = 1877)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (8)
, END
// State S112 (index = 1910)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (60)
, END
// State S113 (index = 1913)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (170)
, END
// State S114 (index = 1916)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (64)
, END
// State S115 (index = 1921)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (115)
, END
// State S116 (index = 1926)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (172)
, END
// State S117 (index = 1929)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (173)
, END
// State S118 (index = 1932)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (43)
, END
// State S119 (index = 1965)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (44)
, END
// State S120 (index = 1998)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (10)
, END
// State S121 (index = 2031)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (174)
, END
// State S122 (index = 2034)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (175)
, END
// State S123 (index = 2037)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S124 (index = 2052)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S125 (index = 2067)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (22)
, END
// State S126 (index = 2094)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (178)
, END
// State S127 (index = 2097)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S128 (index = 2112)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (180)
, END
// State S129 (index = 2115)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (181)
, END
// State S130 (index = 2118)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (25)
, END
// State S131 (index = 2145)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (182)
, END
// State S132 (index = 2148)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (183)
, END
// State S133 (index = 2151)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (184)
, END
// State S134 (index = 2154)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (185)
, END
// State S135 (index = 2157)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (118)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (186)
, END
// State S136 (index = 2162)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (188)
, END
// State S137 (index = 2165)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__26__26_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (37)
, END
// State S138 (index = 2278)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__26__26_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (38)
, END
// State S139 (index = 2391)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S140 (index = 2406)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S141 (index = 2421)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S142 (index = 2436)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S143 (index = 2451)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S144 (index = 2466)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S145 (index = 2481)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S146 (index = 2496)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (36)
, END
// State S147 (index = 2595)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (196)
, END
// State S148 (index = 2598)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S149 (index = 2613)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S150 (index = 2628)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S151 (index = 2643)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S152 (index = 2658)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S153 (index = 2673)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S154 (index = 2688)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (34)
, END
// State S155 (index = 2755)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S156 (index = 2770)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S157 (index = 2785)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S158 (index = 2800)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S159 (index = 2815)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S160 (index = 2830)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S161 (index = 2845)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S162 (index = 2860)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S163 (index = 2875)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S164 (index = 2890)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (35)
, END
// State S165 (index = 2971)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (212)
, END
// State S166 (index = 2974)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (26)
, END
// State S167 (index = 3001)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (50)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (51)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (52)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (53)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (54)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (55)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (56)
, END
// State S168 (index = 3028)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (50)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (51)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (52)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (53)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (54)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (55)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (56)
, END
// State S169 (index = 3055)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (30)
, END
// State S170 (index = 3082)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (215)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (61)
, END
// State S171 (index = 3087)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (66)
, END
// State S172 (index = 3090)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (217)
, END
// State S173 (index = 3093)
, C_Lexique_plm_5F_lexique::kToken_at, SHIFT (218)
, END
// State S174 (index = 3096)
, C_Lexique_plm_5F_lexique::kToken_case, SHIFT (219)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (55)
, END
// State S175 (index = 3101)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (1)
, END
// State S176 (index = 3104)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (5)
, END
// State S177 (index = 3137)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (6)
, END
// State S178 (index = 3170)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (126)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (86)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (127)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (128)
, END
// State S179 (index = 3179)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (126)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (86)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (127)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (128)
, END
// State S180 (index = 3188)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (126)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (86)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (127)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (128)
, END
// State S181 (index = 3197)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (28)
, END
// State S182 (index = 3224)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (20)
, END
// State S183 (index = 3253)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S184 (index = 3268)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (79)
, END
// State S185 (index = 3271)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S186 (index = 3286)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S187 (index = 3301)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (227)
, END
// State S188 (index = 3304)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__26__26_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (32)
, END
// State S189 (index = 3417)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__26__26_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (110)
, END
// State S190 (index = 3530)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__26__26_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (110)
, END
// State S191 (index = 3643)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__26__26_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (110)
, END
// State S192 (index = 3756)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__26__26_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (110)
, END
// State S193 (index = 3869)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__26__26_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (110)
, END
// State S194 (index = 3982)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__26__26_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (110)
, END
// State S195 (index = 4095)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__26__26_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (110)
, END
// State S196 (index = 4208)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (93)
, END
// State S197 (index = 4275)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (94)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (94)
, END
// State S198 (index = 4342)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (95)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (95)
, END
// State S199 (index = 4409)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (96)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (96)
, END
// State S200 (index = 4476)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (97)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (97)
, END
// State S201 (index = 4543)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (98)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (98)
, END
// State S202 (index = 4610)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (99)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (99)
, END
// State S203 (index = 4677)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (156)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (157)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (158)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (159)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (160)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (161)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (162)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (163)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (100)
, END
// State S204 (index = 4776)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (156)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (157)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (158)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (159)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (160)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (161)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (162)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (163)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (100)
, END
// State S205 (index = 4875)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (156)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (157)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (158)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (159)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (160)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (161)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (162)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (163)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (100)
, END
// State S206 (index = 4974)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (156)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (157)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (158)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (159)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (160)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (161)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (162)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (163)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (100)
, END
// State S207 (index = 5073)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (156)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (157)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (158)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (159)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (160)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (161)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (162)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (163)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (100)
, END
// State S208 (index = 5172)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (156)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (157)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (158)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (159)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (160)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (161)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (162)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (163)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (100)
, END
// State S209 (index = 5271)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (156)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (157)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (158)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (159)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (160)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (161)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (162)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (163)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (100)
, END
// State S210 (index = 5370)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (156)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (157)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (158)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (159)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (160)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (161)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (162)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (163)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (100)
, END
// State S211 (index = 5469)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (155)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (156)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (157)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, SHIFT (158)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (159)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (160)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, SHIFT (161)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (162)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (163)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (100)
, END
// State S212 (index = 5568)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__26__26_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (33)
, END
// State S213 (index = 5681)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (83)
, C_Lexique_plm_5F_lexique::kToken_else, SHIFT (244)
, C_Lexique_plm_5F_lexique::kToken_elsif, SHIFT (245)
, END
// State S214 (index = 5688)
, C_Lexique_plm_5F_lexique::kToken_end, SHIFT (247)
, END
// State S215 (index = 5691)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (248)
, END
// State S216 (index = 5694)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (249)
, END
// State S217 (index = 5697)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (250)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (251)
, C_Lexique_plm_5F_lexique::kToken__3F__21_, SHIFT (252)
, END
// State S218 (index = 5706)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (254)
, END
// State S219 (index = 5709)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (255)
, END
// State S220 (index = 5712)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (256)
, END
// State S221 (index = 5715)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (89)
, END
// State S222 (index = 5718)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (87)
, END
// State S223 (index = 5721)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (88)
, END
// State S224 (index = 5724)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (19)
, END
// State S225 (index = 5751)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (21)
, END
// State S226 (index = 5778)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (118)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (186)
, END
// State S227 (index = 5783)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__26__2A_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__26__2F_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__26__26_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (42)
, END
// State S228 (index = 5896)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (111)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (111)
, END
// State S229 (index = 5995)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (112)
, END
// State S230 (index = 6094)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (113)
, END
// State S231 (index = 6193)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (114)
, END
// State S232 (index = 6292)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (115)
, END
// State S233 (index = 6391)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (116)
, END
// State S234 (index = 6490)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__26__2B_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__7C__7C_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (117)
, END
// State S235 (index = 6589)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (101)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (101)
, END
// State S236 (index = 6670)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (102)
, END
// State S237 (index = 6751)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (103)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (103)
, END
// State S238 (index = 6832)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (104)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (104)
, END
// State S239 (index = 6913)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (105)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (105)
, END
// State S240 (index = 6994)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (106)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (106)
, END
// State S241 (index = 7075)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (107)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (107)
, END
// State S242 (index = 7156)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (108)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (108)
, END
// State S243 (index = 7237)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_as, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (109)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (109)
, END
// State S244 (index = 7318)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (50)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (51)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (52)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (53)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (54)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (55)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (56)
, END
// State S245 (index = 7345)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (92)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (93)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (94)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (95)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (90)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (96)
, C_Lexique_plm_5F_lexique::kToken__26__2D_, SHIFT (97)
, END
// State S246 (index = 7360)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (27)
, END
// State S247 (index = 7363)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_throw, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_forever, REDUCE (29)
, END
// State S248 (index = 7390)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (260)
, END
// State S249 (index = 7393)
, C_Lexique_plm_5F_lexique::kToken__2D__3E_, SHIFT (261)
, END
// State S250 (index = 7396)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (262)
, END
// State S251 (index = 7399)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (263)
, END
// State S252 (index = 7402)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (264)
, END
// State S253 (index = 7405)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (265)
, END
// State S254 (index = 7408)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (13)
, END
// State S255 (index = 7441)
, C_Lexique_plm_5F_lexique::kToken_case, SHIFT (219)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (55)
, END
// State S256 (index = 7446)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (4)
, END
// State S257 (index = 7479)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (119)
, END
// State S258 (index = 7482)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (84)
, END
// State S259 (index = 7485)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (85)
, END
// State S260 (index = 7488)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (267)
, END
// State S261 (index = 7491)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (268)
, END
// State S262 (index = 7494)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (269)
, END
// State S263 (index = 7497)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (270)
, END
// State S264 (index = 7500)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (271)
, END
// State S265 (index = 7503)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (11)
, END
// State S266 (index = 7540)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (56)
, END
// State S267 (index = 7543)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (215)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (61)
, END
// State S268 (index = 7548)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (273)
, END
// State S269 (index = 7551)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (274)
, END
// State S270 (index = 7554)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (275)
, END
// State S271 (index = 7557)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (276)
, END
// State S272 (index = 7560)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (62)
, END
// State S273 (index = 7563)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (277)
, END
// State S274 (index = 7566)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (250)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (251)
, C_Lexique_plm_5F_lexique::kToken__3F__21_, SHIFT (252)
, END
// State S275 (index = 7575)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (250)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (251)
, C_Lexique_plm_5F_lexique::kToken__3F__21_, SHIFT (252)
, END
// State S276 (index = 7584)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (250)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (251)
, C_Lexique_plm_5F_lexique::kToken__3F__21_, SHIFT (252)
, END
// State S277 (index = 7593)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (281)
, END
// State S278 (index = 7596)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (70)
, END
// State S279 (index = 7599)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (68)
, END
// State S280 (index = 7602)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (69)
, END
// State S281 (index = 7605)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (48)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (49)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (50)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (51)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (52)
, C_Lexique_plm_5F_lexique::kToken_throw, SHIFT (53)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (54)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (55)
, C_Lexique_plm_5F_lexique::kToken_forever, SHIFT (56)
, END
// State S282 (index = 7632)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (283)
, END
// State S283 (index = 7635)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_newBooleanType, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_exception, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_proc, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_newSignedBaseType, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_newUnsignedBaseType, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_mode, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_newIntegerType, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (9)
, END} ;

static const uint32_t gActionTableIndex_plms_grammar [284] = {
  0  // S0
, 33  // S1
, 36  // S2
, 39  // S3
, 42  // S4
, 45  // S5
, 48  // S6
, 51  // S7
, 54  // S8
, 57  // S9
, 60  // S10
, 63  // S11
, 68  // S12
, 71  // S13
, 74  // S14
, 77  // S15
, 80  // S16
, 83  // S17
, 116  // S18
, 149  // S19
, 152  // S20
, 155  // S21
, 188  // S22
, 223  // S23
, 228  // S24
, 235  // S25
, 238  // S26
, 265  // S27
, 292  // S28
, 297  // S29
, 304  // S30
, 337  // S31
, 342  // S32
, 345  // S33
, 348  // S34
, 351  // S35
, 384  // S36
, 387  // S37
, 390  // S38
, 393  // S39
, 420  // S40
, 423  // S41
, 458  // S42
, 491  // S43
, 496  // S44
, 499  // S45
, 506  // S46
, 511  // S47
, 514  // S48
, 533  // S49
, 536  // S50
, 539  // S51
, 566  // S52
, 581  // S53
, 584  // S54
, 599  // S55
, 614  // S56
, 641  // S57
, 644  // S58
, 671  // S59
, 680  // S60
, 683  // S61
, 688  // S62
, 691  // S63
, 698  // S64
, 703  // S65
, 706  // S66
, 709  // S67
, 712  // S68
, 715  // S69
, 748  // S70
, 751  // S71
, 784  // S72
, 787  // S73
, 790  // S74
, 795  // S75
, 798  // S76
, 801  // S77
, 804  // S78
, 807  // S79
, 822  // S80
, 831  // S81
, 858  // S82
, 885  // S83
, 912  // S84
, 939  // S85
, 954  // S86
, 969  // S87
, 984  // S88
, 999  // S89
, 1004  // S90
, 1009  // S91
, 1018  // S92
, 1131  // S93
, 1248  // S94
, 1263  // S95
, 1376  // S96
, 1391  // S97
, 1406  // S98
, 1433  // S99
, 1546  // S100
, 1613  // S101
, 1694  // S102
, 1793  // S103
, 1796  // S104
, 1823  // S105
, 1826  // S106
, 1829  // S107
, 1832  // S108
, 1835  // S109
, 1868  // S110
, 1877  // S111
, 1910  // S112
, 1913  // S113
, 1916  // S114
, 1921  // S115
, 1926  // S116
, 1929  // S117
, 1932  // S118
, 1965  // S119
, 1998  // S120
, 2031  // S121
, 2034  // S122
, 2037  // S123
, 2052  // S124
, 2067  // S125
, 2094  // S126
, 2097  // S127
, 2112  // S128
, 2115  // S129
, 2118  // S130
, 2145  // S131
, 2148  // S132
, 2151  // S133
, 2154  // S134
, 2157  // S135
, 2162  // S136
, 2165  // S137
, 2278  // S138
, 2391  // S139
, 2406  // S140
, 2421  // S141
, 2436  // S142
, 2451  // S143
, 2466  // S144
, 2481  // S145
, 2496  // S146
, 2595  // S147
, 2598  // S148
, 2613  // S149
, 2628  // S150
, 2643  // S151
, 2658  // S152
, 2673  // S153
, 2688  // S154
, 2755  // S155
, 2770  // S156
, 2785  // S157
, 2800  // S158
, 2815  // S159
, 2830  // S160
, 2845  // S161
, 2860  // S162
, 2875  // S163
, 2890  // S164
, 2971  // S165
, 2974  // S166
, 3001  // S167
, 3028  // S168
, 3055  // S169
, 3082  // S170
, 3087  // S171
, 3090  // S172
, 3093  // S173
, 3096  // S174
, 3101  // S175
, 3104  // S176
, 3137  // S177
, 3170  // S178
, 3179  // S179
, 3188  // S180
, 3197  // S181
, 3224  // S182
, 3253  // S183
, 3268  // S184
, 3271  // S185
, 3286  // S186
, 3301  // S187
, 3304  // S188
, 3417  // S189
, 3530  // S190
, 3643  // S191
, 3756  // S192
, 3869  // S193
, 3982  // S194
, 4095  // S195
, 4208  // S196
, 4275  // S197
, 4342  // S198
, 4409  // S199
, 4476  // S200
, 4543  // S201
, 4610  // S202
, 4677  // S203
, 4776  // S204
, 4875  // S205
, 4974  // S206
, 5073  // S207
, 5172  // S208
, 5271  // S209
, 5370  // S210
, 5469  // S211
, 5568  // S212
, 5681  // S213
, 5688  // S214
, 5691  // S215
, 5694  // S216
, 5697  // S217
, 5706  // S218
, 5709  // S219
, 5712  // S220
, 5715  // S221
, 5718  // S222
, 5721  // S223
, 5724  // S224
, 5751  // S225
, 5778  // S226
, 5783  // S227
, 5896  // S228
, 5995  // S229
, 6094  // S230
, 6193  // S231
, 6292  // S232
, 6391  // S233
, 6490  // S234
, 6589  // S235
, 6670  // S236
, 6751  // S237
, 6832  // S238
, 6913  // S239
, 6994  // S240
, 7075  // S241
, 7156  // S242
, 7237  // S243
, 7318  // S244
, 7345  // S245
, 7360  // S246
, 7363  // S247
, 7390  // S248
, 7393  // S249
, 7396  // S250
, 7399  // S251
, 7402  // S252
, 7405  // S253
, 7408  // S254
, 7441  // S255
, 7446  // S256
, 7479  // S257
, 7482  // S258
, 7485  // S259
, 7488  // S260
, 7491  // S261
, 7494  // S262
, 7497  // S263
, 7500  // S264
, 7503  // S265
, 7540  // S266
, 7543  // S267
, 7548  // S268
, 7551  // S269
, 7554  // S270
, 7557  // S271
, 7560  // S272
, 7563  // S273
, 7566  // S274
, 7575  // S275
, 7584  // S276
, 7593  // S277
, 7596  // S278
, 7599  // S279
, 7602  // S280
, 7605  // S281
, 7632  // S282
, 7635  // S283
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            SLR states successors table                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

// Successor tables handle non terminal successors ;
// an entry is (non_terminal_symbol, n) ; successor is state n.

static const int16_t gSuccessorTable_plms_grammar_0 [11] = {0, 16,
  2, 17,
  3, 18,
  4, 19,
  13, 20, -1} ;

static const int16_t gSuccessorTable_plms_grammar_10 [3] = {4, 30, -1} ;

static const int16_t gSuccessorTable_plms_grammar_11 [3] = {23, 32, -1} ;

static const int16_t gSuccessorTable_plms_grammar_17 [9] = {2, 17,
  3, 18,
  4, 19,
  13, 37, -1} ;

static const int16_t gSuccessorTable_plms_grammar_18 [9] = {2, 17,
  3, 18,
  4, 19,
  13, 38, -1} ;

static const int16_t gSuccessorTable_plms_grammar_21 [9] = {2, 17,
  3, 18,
  4, 19,
  13, 40, -1} ;

static const int16_t gSuccessorTable_plms_grammar_22 [3] = {14, 42, -1} ;

static const int16_t gSuccessorTable_plms_grammar_23 [3] = {15, 44, -1} ;

static const int16_t gSuccessorTable_plms_grammar_24 [3] = {17, 46, -1} ;

static const int16_t gSuccessorTable_plms_grammar_26 [7] = {5, 57,
  6, 58,
  24, 59, -1} ;

static const int16_t gSuccessorTable_plms_grammar_27 [7] = {5, 60,
  6, 58,
  24, 59, -1} ;

static const int16_t gSuccessorTable_plms_grammar_28 [3] = {18, 62, -1} ;

static const int16_t gSuccessorTable_plms_grammar_29 [3] = {20, 64, -1} ;

static const int16_t gSuccessorTable_plms_grammar_31 [3] = {23, 65, -1} ;

static const int16_t gSuccessorTable_plms_grammar_39 [7] = {5, 70,
  6, 58,
  24, 59, -1} ;

static const int16_t gSuccessorTable_plms_grammar_41 [3] = {14, 71, -1} ;

static const int16_t gSuccessorTable_plms_grammar_43 [3] = {15, 72, -1} ;

static const int16_t gSuccessorTable_plms_grammar_45 [3] = {17, 74, -1} ;

static const int16_t gSuccessorTable_plms_grammar_46 [5] = {1, 76,
  4, 77, -1} ;

static const int16_t gSuccessorTable_plms_grammar_48 [3] = {27, 88, -1} ;

static const int16_t gSuccessorTable_plms_grammar_51 [5] = {6, 58,
  24, 91, -1} ;

static const int16_t gSuccessorTable_plms_grammar_52 [13] = {8, 98,
  9, 99,
  10, 100,
  11, 101,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_54 [15] = {7, 105,
  8, 106,
  9, 99,
  10, 100,
  11, 101,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_55 [13] = {8, 107,
  9, 99,
  10, 100,
  11, 101,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_56 [7] = {5, 108,
  6, 58,
  24, 59, -1} ;

static const int16_t gSuccessorTable_plms_grammar_58 [5] = {6, 58,
  24, 110, -1} ;

static const int16_t gSuccessorTable_plms_grammar_61 [3] = {18, 112, -1} ;

static const int16_t gSuccessorTable_plms_grammar_63 [3] = {20, 114, -1} ;

static const int16_t gSuccessorTable_plms_grammar_64 [3] = {21, 116, -1} ;

static const int16_t gSuccessorTable_plms_grammar_79 [13] = {8, 125,
  9, 99,
  10, 100,
  11, 101,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_80 [3] = {29, 129, -1} ;

static const int16_t gSuccessorTable_plms_grammar_88 [13] = {8, 130,
  9, 99,
  10, 100,
  11, 101,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_89 [3] = {25, 132, -1} ;

static const int16_t gSuccessorTable_plms_grammar_90 [3] = {26, 134, -1} ;

static const int16_t gSuccessorTable_plms_grammar_94 [13] = {8, 136,
  9, 99,
  10, 100,
  11, 101,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_96 [5] = {9, 137,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_97 [5] = {9, 138,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_99 [3] = {33, 146, -1} ;

static const int16_t gSuccessorTable_plms_grammar_101 [3] = {31, 154, -1} ;

static const int16_t gSuccessorTable_plms_grammar_102 [3] = {32, 164, -1} ;

static const int16_t gSuccessorTable_plms_grammar_115 [3] = {21, 171, -1} ;

static const int16_t gSuccessorTable_plms_grammar_123 [13] = {8, 176,
  9, 99,
  10, 100,
  11, 101,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_124 [13] = {8, 177,
  9, 99,
  10, 100,
  11, 101,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_127 [13] = {8, 179,
  9, 99,
  10, 100,
  11, 101,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_135 [3] = {34, 187, -1} ;

static const int16_t gSuccessorTable_plms_grammar_139 [5] = {9, 189,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_140 [5] = {9, 190,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_141 [5] = {9, 191,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_142 [5] = {9, 192,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_143 [5] = {9, 193,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_144 [5] = {9, 194,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_145 [5] = {9, 195,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_148 [9] = {9, 99,
  11, 197,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_149 [9] = {9, 99,
  11, 198,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_150 [9] = {9, 99,
  11, 199,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_151 [9] = {9, 99,
  11, 200,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_152 [9] = {9, 99,
  11, 201,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_153 [9] = {9, 99,
  11, 202,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_155 [7] = {9, 99,
  12, 203,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_156 [7] = {9, 99,
  12, 204,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_157 [7] = {9, 99,
  12, 205,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_158 [7] = {9, 99,
  12, 206,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_159 [7] = {9, 99,
  12, 207,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_160 [7] = {9, 99,
  12, 208,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_161 [7] = {9, 99,
  12, 209,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_162 [7] = {9, 99,
  12, 210,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_163 [7] = {9, 99,
  12, 211,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_167 [7] = {5, 213,
  6, 58,
  24, 59, -1} ;

static const int16_t gSuccessorTable_plms_grammar_168 [7] = {5, 214,
  6, 58,
  24, 59, -1} ;

static const int16_t gSuccessorTable_plms_grammar_170 [3] = {19, 216, -1} ;

static const int16_t gSuccessorTable_plms_grammar_174 [3] = {16, 220, -1} ;

static const int16_t gSuccessorTable_plms_grammar_178 [3] = {29, 221, -1} ;

static const int16_t gSuccessorTable_plms_grammar_179 [3] = {29, 222, -1} ;

static const int16_t gSuccessorTable_plms_grammar_180 [3] = {29, 223, -1} ;

static const int16_t gSuccessorTable_plms_grammar_183 [13] = {8, 224,
  9, 99,
  10, 100,
  11, 101,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_185 [13] = {8, 225,
  9, 99,
  10, 100,
  11, 101,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_186 [13] = {8, 226,
  9, 99,
  10, 100,
  11, 101,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_189 [3] = {33, 228, -1} ;

static const int16_t gSuccessorTable_plms_grammar_190 [3] = {33, 229, -1} ;

static const int16_t gSuccessorTable_plms_grammar_191 [3] = {33, 230, -1} ;

static const int16_t gSuccessorTable_plms_grammar_192 [3] = {33, 231, -1} ;

static const int16_t gSuccessorTable_plms_grammar_193 [3] = {33, 232, -1} ;

static const int16_t gSuccessorTable_plms_grammar_194 [3] = {33, 233, -1} ;

static const int16_t gSuccessorTable_plms_grammar_195 [3] = {33, 234, -1} ;

static const int16_t gSuccessorTable_plms_grammar_203 [3] = {32, 235, -1} ;

static const int16_t gSuccessorTable_plms_grammar_204 [3] = {32, 236, -1} ;

static const int16_t gSuccessorTable_plms_grammar_205 [3] = {32, 237, -1} ;

static const int16_t gSuccessorTable_plms_grammar_206 [3] = {32, 238, -1} ;

static const int16_t gSuccessorTable_plms_grammar_207 [3] = {32, 239, -1} ;

static const int16_t gSuccessorTable_plms_grammar_208 [3] = {32, 240, -1} ;

static const int16_t gSuccessorTable_plms_grammar_209 [3] = {32, 241, -1} ;

static const int16_t gSuccessorTable_plms_grammar_210 [3] = {32, 242, -1} ;

static const int16_t gSuccessorTable_plms_grammar_211 [3] = {32, 243, -1} ;

static const int16_t gSuccessorTable_plms_grammar_213 [3] = {28, 246, -1} ;

static const int16_t gSuccessorTable_plms_grammar_217 [3] = {22, 253, -1} ;

static const int16_t gSuccessorTable_plms_grammar_226 [3] = {34, 257, -1} ;

static const int16_t gSuccessorTable_plms_grammar_244 [7] = {5, 258,
  6, 58,
  24, 59, -1} ;

static const int16_t gSuccessorTable_plms_grammar_245 [15] = {7, 259,
  8, 106,
  9, 99,
  10, 100,
  11, 101,
  12, 102,
  30, 103, -1} ;

static const int16_t gSuccessorTable_plms_grammar_255 [3] = {16, 266, -1} ;

static const int16_t gSuccessorTable_plms_grammar_267 [3] = {19, 272, -1} ;

static const int16_t gSuccessorTable_plms_grammar_274 [3] = {22, 278, -1} ;

static const int16_t gSuccessorTable_plms_grammar_275 [3] = {22, 279, -1} ;

static const int16_t gSuccessorTable_plms_grammar_276 [3] = {22, 280, -1} ;

static const int16_t gSuccessorTable_plms_grammar_281 [7] = {5, 282,
  6, 58,
  24, 59, -1} ;

static const int16_t * gSuccessorTable_plms_grammar [284] = {
gSuccessorTable_plms_grammar_0, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plms_grammar_10, gSuccessorTable_plms_grammar_11, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plms_grammar_17, gSuccessorTable_plms_grammar_18, NULL, 
  NULL, gSuccessorTable_plms_grammar_21, gSuccessorTable_plms_grammar_22, gSuccessorTable_plms_grammar_23, 
  gSuccessorTable_plms_grammar_24, NULL, gSuccessorTable_plms_grammar_26, gSuccessorTable_plms_grammar_27, 
  gSuccessorTable_plms_grammar_28, gSuccessorTable_plms_grammar_29, NULL, gSuccessorTable_plms_grammar_31, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plms_grammar_39, 
  NULL, gSuccessorTable_plms_grammar_41, NULL, gSuccessorTable_plms_grammar_43, 
  NULL, gSuccessorTable_plms_grammar_45, gSuccessorTable_plms_grammar_46, NULL, 
  gSuccessorTable_plms_grammar_48, NULL, NULL, gSuccessorTable_plms_grammar_51, 
  gSuccessorTable_plms_grammar_52, NULL, gSuccessorTable_plms_grammar_54, gSuccessorTable_plms_grammar_55, 
  gSuccessorTable_plms_grammar_56, NULL, gSuccessorTable_plms_grammar_58, NULL, 
  NULL, gSuccessorTable_plms_grammar_61, NULL, gSuccessorTable_plms_grammar_63, 
  gSuccessorTable_plms_grammar_64, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plms_grammar_79, 
  gSuccessorTable_plms_grammar_80, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plms_grammar_88, gSuccessorTable_plms_grammar_89, gSuccessorTable_plms_grammar_90, NULL, 
  NULL, NULL, gSuccessorTable_plms_grammar_94, NULL, 
  gSuccessorTable_plms_grammar_96, gSuccessorTable_plms_grammar_97, NULL, gSuccessorTable_plms_grammar_99, 
  NULL, gSuccessorTable_plms_grammar_101, gSuccessorTable_plms_grammar_102, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plms_grammar_115, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plms_grammar_123, 
  gSuccessorTable_plms_grammar_124, NULL, NULL, gSuccessorTable_plms_grammar_127, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plms_grammar_135, 
  NULL, NULL, NULL, gSuccessorTable_plms_grammar_139, 
  gSuccessorTable_plms_grammar_140, gSuccessorTable_plms_grammar_141, gSuccessorTable_plms_grammar_142, gSuccessorTable_plms_grammar_143, 
  gSuccessorTable_plms_grammar_144, gSuccessorTable_plms_grammar_145, NULL, NULL, 
  gSuccessorTable_plms_grammar_148, gSuccessorTable_plms_grammar_149, gSuccessorTable_plms_grammar_150, gSuccessorTable_plms_grammar_151, 
  gSuccessorTable_plms_grammar_152, gSuccessorTable_plms_grammar_153, NULL, gSuccessorTable_plms_grammar_155, 
  gSuccessorTable_plms_grammar_156, gSuccessorTable_plms_grammar_157, gSuccessorTable_plms_grammar_158, gSuccessorTable_plms_grammar_159, 
  gSuccessorTable_plms_grammar_160, gSuccessorTable_plms_grammar_161, gSuccessorTable_plms_grammar_162, gSuccessorTable_plms_grammar_163, 
  NULL, NULL, NULL, gSuccessorTable_plms_grammar_167, 
  gSuccessorTable_plms_grammar_168, NULL, gSuccessorTable_plms_grammar_170, NULL, 
  NULL, NULL, gSuccessorTable_plms_grammar_174, NULL, 
  NULL, NULL, gSuccessorTable_plms_grammar_178, gSuccessorTable_plms_grammar_179, 
  gSuccessorTable_plms_grammar_180, NULL, NULL, gSuccessorTable_plms_grammar_183, 
  NULL, gSuccessorTable_plms_grammar_185, gSuccessorTable_plms_grammar_186, NULL, 
  NULL, gSuccessorTable_plms_grammar_189, gSuccessorTable_plms_grammar_190, gSuccessorTable_plms_grammar_191, 
  gSuccessorTable_plms_grammar_192, gSuccessorTable_plms_grammar_193, gSuccessorTable_plms_grammar_194, gSuccessorTable_plms_grammar_195, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plms_grammar_203, 
  gSuccessorTable_plms_grammar_204, gSuccessorTable_plms_grammar_205, gSuccessorTable_plms_grammar_206, gSuccessorTable_plms_grammar_207, 
  gSuccessorTable_plms_grammar_208, gSuccessorTable_plms_grammar_209, gSuccessorTable_plms_grammar_210, gSuccessorTable_plms_grammar_211, 
  NULL, gSuccessorTable_plms_grammar_213, NULL, NULL, 
  NULL, gSuccessorTable_plms_grammar_217, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plms_grammar_226, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plms_grammar_244, gSuccessorTable_plms_grammar_245, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plms_grammar_255, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plms_grammar_267, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plms_grammar_274, gSuccessorTable_plms_grammar_275, 
  gSuccessorTable_plms_grammar_276, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plms_grammar_281, NULL, NULL} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Production rules infos (left non terminal, size of right string)                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const int16_t gProductionsTable_plms_grammar [121 * 2] = {
  0, 1,
  1, 3,
  1, 1,
  2, 3,
  2, 8,
  2, 6,
  2, 6,
  2, 4,
  2, 4,
  2, 14,
  3, 4,
  4, 8,
  2, 2,
  2, 7,
  5, 1,
  6, 2,
  6, 2,
  6, 2,
  6, 2,
  6, 5,
  6, 4,
  6, 5,
  6, 3,
  6, 2,
  6, 2,
  6, 3,
  6, 3,
  7, 4,
  6, 4,
  6, 5,
  6, 3,
  8, 1,
  9, 3,
  9, 3,
  10, 2,
  11, 2,
  12, 2,
  9, 2,
  9, 2,
  9, 1,
  9, 1,
  9, 1,
  9, 4,
  2, 4,
  2, 4,
  2, 2,
  2, 3,
  13, 0,
  13, 2,
  13, 2,
  13, 3,
  14, 0,
  14, 2,
  15, 0,
  15, 2,
  16, 0,
  16, 3,
  17, 0,
  17, 2,
  18, 0,
  18, 2,
  19, 0,
  19, 5,
  20, 0,
  20, 2,
  21, 0,
  21, 2,
  22, 0,
  22, 5,
  22, 5,
  22, 5,
  23, 0,
  23, 2,
  24, 0,
  24, 2,
  24, 2,
  25, 0,
  25, 2,
  26, 0,
  26, 2,
  27, 1,
  27, 1,
  27, 1,
  28, 0,
  28, 2,
  28, 2,
  29, 0,
  29, 3,
  29, 3,
  29, 3,
  30, 0,
  30, 1,
  31, 0,
  31, 2,
  31, 2,
  31, 2,
  31, 2,
  31, 2,
  31, 2,
  31, 2,
  32, 0,
  32, 3,
  32, 3,
  32, 3,
  32, 3,
  32, 3,
  32, 3,
  32, 3,
  32, 3,
  32, 3,
  33, 0,
  33, 3,
  33, 3,
  33, 3,
  33, 3,
  33, 3,
  33, 3,
  33, 3,
  34, 0,
  34, 3,
  35, 1
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'start_symbol' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plms_5F_grammar::nt_start_5F_symbol_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 0 :
      rule_common_5F_syntax_start_5F_symbol_i0_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plms_5F_grammar::nt_start_5F_symbol_ (GALGAS_ast &  parameter_1,
                                GALGAS_lstringlist &  parameter_2,
                                GALGAS_location &  parameter_3,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 0 :
      rule_common_5F_syntax_start_5F_symbol_i0_(parameter_1, parameter_2, parameter_3, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

void cGrammar_plms_5F_grammar::performIndexing (C_Compiler * /* inCompiler */,
             const C_String & /* inSourceFilePath */) {
}

void cGrammar_plms_5F_grammar::performOnlyLexicalAnalysis (C_Compiler * inCompiler,
             const C_String & inSourceFilePath) {
  C_Lexique_plm_5F_lexique * scanner = NULL ;
  macroMyNew (scanner, C_Lexique_plm_5F_lexique (inCompiler, "", "", inSourceFilePath COMMA_HERE)) ;
  if (scanner->sourceText () != NULL) {
    scanner->performLexicalAnalysis () ;
  }
  macroDetachSharedObject (scanner) ;
}

void cGrammar_plms_5F_grammar::performOnlySyntaxAnalysis (C_Compiler * inCompiler,
             const C_String & inSourceFilePath) {
  C_Lexique_plm_5F_lexique * scanner = NULL ;
  macroMyNew (scanner, C_Lexique_plm_5F_lexique (inCompiler, "", "", inSourceFilePath COMMA_HERE)) ;
  if (scanner->sourceText () != NULL) {
    scanner->performBottomUpParsing (gActionTable_plms_grammar, gNonTerminalNames_plms_grammar,
                                     gActionTableIndex_plms_grammar, gSuccessorTable_plms_grammar,
                                     gProductionsTable_plms_grammar) ;
  }
  macroDetachSharedObject (scanner) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Grammar start symbol implementation                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plms_5F_grammar::_performSourceFileParsing_ (C_Compiler * inCompiler,
                                GALGAS_lstring inFilePath,
                                GALGAS_ast &  parameter_1,
                                GALGAS_lstringlist &  parameter_2,
                                GALGAS_location &  parameter_3
                                COMMA_LOCATION_ARGS) {
  if (inFilePath.isValid ()) {
    const GALGAS_string filePathAsString = inFilePath.reader_string (HERE) ;
    C_String filePath = filePathAsString.stringValue () ;
    if (! C_FileManager::isAbsolutePath (filePath)) {
      filePath = inCompiler->sourceFilePath ().stringByDeletingLastPathComponent ().stringByAppendingPathComponent (filePath) ;
    }
    if (C_FileManager::fileExistsAtPath (filePath)) {
      C_Lexique_plm_5F_lexique * scanner = NULL ;
      macroMyNew (scanner, C_Lexique_plm_5F_lexique (inCompiler, "", "", filePath COMMA_HERE)) ;
      if (scanner->sourceText () != NULL) {
        const bool ok = scanner->performBottomUpParsing (gActionTable_plms_grammar, gNonTerminalNames_plms_grammar,
                                                         gActionTableIndex_plms_grammar, gSuccessorTable_plms_grammar,
                                                         gProductionsTable_plms_grammar) ;
        if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
          cGrammar_plms_5F_grammar grammar ;
          grammar.nt_start_5F_symbol_ (parameter_1, parameter_2, parameter_3, scanner) ;
        }
      }else{
        C_String message ;
        message << "the '" << filePath << "' file exists, but cannot be read" ;
        const GALGAS_location errorLocation (inFilePath.reader_location (THERE)) ;
        inCompiler->semanticErrorAtLocation (errorLocation, message COMMA_THERE) ;
      }
      macroDetachSharedObject (scanner) ;
    }else{
      C_String message ;
      message << "the '" << filePath << "' file does not exist" ;
      const GALGAS_location errorLocation (inFilePath.reader_location (THERE)) ;
      inCompiler->semanticErrorAtLocation (errorLocation, message COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plms_5F_grammar::_performSourceStringParsing_ (C_Compiler * inCompiler,
                                GALGAS_string inSourceString,
                                GALGAS_ast &  parameter_1,
                                GALGAS_lstringlist &  parameter_2,
                                GALGAS_location &  parameter_3
                                COMMA_UNUSED_LOCATION_ARGS) {
  C_Lexique_plm_5F_lexique * scanner = NULL ;
  macroMyNew (scanner, C_Lexique_plm_5F_lexique (inCompiler, inSourceString.stringValue (), "" COMMA_HERE)) ;
  if (scanner->sourceText () != NULL) {
    const bool ok = scanner->performBottomUpParsing (gActionTable_plms_grammar, gNonTerminalNames_plms_grammar,
                                                     gActionTableIndex_plms_grammar, gSuccessorTable_plms_grammar,
                                                     gProductionsTable_plms_grammar) ;
    if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
      cGrammar_plms_5F_grammar grammar ;
      grammar.nt_start_5F_symbol_ (parameter_1, parameter_2, parameter_3, scanner) ;
      }
  }
  macroDetachSharedObject (scanner) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'var_declaration' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plms_5F_grammar::nt_var_5F_declaration_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 1 :
      rule_common_5F_syntax_var_5F_declaration_i1_parse(inLexique) ;
    break ;
  case 2 :
      rule_common_5F_syntax_var_5F_declaration_i2_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plms_5F_grammar::nt_var_5F_declaration_ (GALGAS_generalizedTypeEnumAST &  parameter_1,
                                GALGAS_lstring &  parameter_2,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 1 :
      rule_common_5F_syntax_var_5F_declaration_i1_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 2 :
      rule_common_5F_syntax_var_5F_declaration_i2_(parameter_1, parameter_2, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'declaration' non terminal implementation                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plms_5F_grammar::nt_declaration_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 3 :
      rule_common_5F_syntax_declaration_i3_parse(inLexique) ;
    break ;
  case 4 :
      rule_common_5F_syntax_declaration_i4_parse(inLexique) ;
    break ;
  case 5 :
      rule_common_5F_syntax_declaration_i5_parse(inLexique) ;
    break ;
  case 6 :
      rule_common_5F_syntax_declaration_i6_parse(inLexique) ;
    break ;
  case 7 :
      rule_common_5F_syntax_declaration_i7_parse(inLexique) ;
    break ;
  case 8 :
      rule_common_5F_syntax_declaration_i8_parse(inLexique) ;
    break ;
  case 9 :
      rule_common_5F_syntax_declaration_i9_parse(inLexique) ;
    break ;
  case 12 :
      rule_common_5F_syntax_declaration_i12_parse(inLexique) ;
    break ;
  case 13 :
      rule_common_5F_syntax_declaration_i13_parse(inLexique) ;
    break ;
  case 43 :
      rule_plms_5F_specific_5F_syntax_declaration_i0_parse(inLexique) ;
    break ;
  case 44 :
      rule_plms_5F_specific_5F_syntax_declaration_i1_parse(inLexique) ;
    break ;
  case 45 :
      rule_plms_5F_specific_5F_syntax_declaration_i2_parse(inLexique) ;
    break ;
  case 46 :
      rule_plms_5F_specific_5F_syntax_declaration_i3_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plms_5F_grammar::nt_declaration_ (GALGAS_ast &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 3 :
      rule_common_5F_syntax_declaration_i3_(parameter_1, inLexique) ;
    break ;
  case 4 :
      rule_common_5F_syntax_declaration_i4_(parameter_1, inLexique) ;
    break ;
  case 5 :
      rule_common_5F_syntax_declaration_i5_(parameter_1, inLexique) ;
    break ;
  case 6 :
      rule_common_5F_syntax_declaration_i6_(parameter_1, inLexique) ;
    break ;
  case 7 :
      rule_common_5F_syntax_declaration_i7_(parameter_1, inLexique) ;
    break ;
  case 8 :
      rule_common_5F_syntax_declaration_i8_(parameter_1, inLexique) ;
    break ;
  case 9 :
      rule_common_5F_syntax_declaration_i9_(parameter_1, inLexique) ;
    break ;
  case 12 :
      rule_common_5F_syntax_declaration_i12_(parameter_1, inLexique) ;
    break ;
  case 13 :
      rule_common_5F_syntax_declaration_i13_(parameter_1, inLexique) ;
    break ;
  case 43 :
      rule_plms_5F_specific_5F_syntax_declaration_i0_(parameter_1, inLexique) ;
    break ;
  case 44 :
      rule_plms_5F_specific_5F_syntax_declaration_i1_(parameter_1, inLexique) ;
    break ;
  case 45 :
      rule_plms_5F_specific_5F_syntax_declaration_i2_(parameter_1, inLexique) ;
    break ;
  case 46 :
      rule_plms_5F_specific_5F_syntax_declaration_i3_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      'procedure' non terminal implementation                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plms_5F_grammar::nt_procedure_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 10 :
      rule_common_5F_syntax_procedure_i10_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plms_5F_grammar::nt_procedure_ (const GALGAS_procedureKindAST  parameter_1,
                                GALGAS_procedureDeclarationListAST &  parameter_2,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 10 :
      rule_common_5F_syntax_procedure_i10_(parameter_1, parameter_2, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'procedure_header' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plms_5F_grammar::nt_procedure_5F_header_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 11 :
      rule_common_5F_syntax_procedure_5F_header_i11_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plms_5F_grammar::nt_procedure_5F_header_ (GALGAS_lstringlist &  parameter_1,
                                GALGAS_lstring &  parameter_2,
                                GALGAS_lstringlist &  parameter_3,
                                GALGAS_procFormalArgumentList &  parameter_4,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 11 :
      rule_common_5F_syntax_procedure_5F_header_i11_(parameter_1, parameter_2, parameter_3, parameter_4, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'instructionList' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plms_5F_grammar::nt_instructionList_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 14 :
      rule_common_5F_syntax_instructionList_i14_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plms_5F_grammar::nt_instructionList_ (GALGAS_instructionListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 14 :
      rule_common_5F_syntax_instructionList_i14_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'instruction' non terminal implementation                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plms_5F_grammar::nt_instruction_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 15 :
      rule_common_5F_syntax_instruction_i15_parse(inLexique) ;
    break ;
  case 16 :
      rule_common_5F_syntax_instruction_i16_parse(inLexique) ;
    break ;
  case 17 :
      rule_common_5F_syntax_instruction_i17_parse(inLexique) ;
    break ;
  case 18 :
      rule_common_5F_syntax_instruction_i18_parse(inLexique) ;
    break ;
  case 19 :
      rule_common_5F_syntax_instruction_i19_parse(inLexique) ;
    break ;
  case 20 :
      rule_common_5F_syntax_instruction_i20_parse(inLexique) ;
    break ;
  case 21 :
      rule_common_5F_syntax_instruction_i21_parse(inLexique) ;
    break ;
  case 22 :
      rule_common_5F_syntax_instruction_i22_parse(inLexique) ;
    break ;
  case 23 :
      rule_common_5F_syntax_instruction_i23_parse(inLexique) ;
    break ;
  case 24 :
      rule_common_5F_syntax_instruction_i24_parse(inLexique) ;
    break ;
  case 25 :
      rule_common_5F_syntax_instruction_i25_parse(inLexique) ;
    break ;
  case 26 :
      rule_common_5F_syntax_instruction_i26_parse(inLexique) ;
    break ;
  case 28 :
      rule_common_5F_syntax_instruction_i28_parse(inLexique) ;
    break ;
  case 29 :
      rule_common_5F_syntax_instruction_i29_parse(inLexique) ;
    break ;
  case 30 :
      rule_common_5F_syntax_instruction_i30_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plms_5F_grammar::nt_instruction_ (GALGAS_instructionListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 15 :
      rule_common_5F_syntax_instruction_i15_(parameter_1, inLexique) ;
    break ;
  case 16 :
      rule_common_5F_syntax_instruction_i16_(parameter_1, inLexique) ;
    break ;
  case 17 :
      rule_common_5F_syntax_instruction_i17_(parameter_1, inLexique) ;
    break ;
  case 18 :
      rule_common_5F_syntax_instruction_i18_(parameter_1, inLexique) ;
    break ;
  case 19 :
      rule_common_5F_syntax_instruction_i19_(parameter_1, inLexique) ;
    break ;
  case 20 :
      rule_common_5F_syntax_instruction_i20_(parameter_1, inLexique) ;
    break ;
  case 21 :
      rule_common_5F_syntax_instruction_i21_(parameter_1, inLexique) ;
    break ;
  case 22 :
      rule_common_5F_syntax_instruction_i22_(parameter_1, inLexique) ;
    break ;
  case 23 :
      rule_common_5F_syntax_instruction_i23_(parameter_1, inLexique) ;
    break ;
  case 24 :
      rule_common_5F_syntax_instruction_i24_(parameter_1, inLexique) ;
    break ;
  case 25 :
      rule_common_5F_syntax_instruction_i25_(parameter_1, inLexique) ;
    break ;
  case 26 :
      rule_common_5F_syntax_instruction_i26_(parameter_1, inLexique) ;
    break ;
  case 28 :
      rule_common_5F_syntax_instruction_i28_(parameter_1, inLexique) ;
    break ;
  case 29 :
      rule_common_5F_syntax_instruction_i29_(parameter_1, inLexique) ;
    break ;
  case 30 :
      rule_common_5F_syntax_instruction_i30_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'if_instruction' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plms_5F_grammar::nt_if_5F_instruction_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 27 :
      rule_common_5F_syntax_if_5F_instruction_i27_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plms_5F_grammar::nt_if_5F_instruction_ (GALGAS_ifInstructionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 27 :
      rule_common_5F_syntax_if_5F_instruction_i27_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      'expression' non terminal implementation                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plms_5F_grammar::nt_expression_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 31 :
      rule_common_5F_syntax_expression_i31_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plms_5F_grammar::nt_expression_ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 31 :
      rule_common_5F_syntax_expression_i31_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       'primary' non terminal implementation                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plms_5F_grammar::nt_primary_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 32 :
      rule_common_5F_syntax_primary_i32_parse(inLexique) ;
    break ;
  case 33 :
      rule_common_5F_syntax_primary_i33_parse(inLexique) ;
    break ;
  case 37 :
      rule_common_5F_syntax_primary_i37_parse(inLexique) ;
    break ;
  case 38 :
      rule_common_5F_syntax_primary_i38_parse(inLexique) ;
    break ;
  case 39 :
      rule_common_5F_syntax_primary_i39_parse(inLexique) ;
    break ;
  case 40 :
      rule_common_5F_syntax_primary_i40_parse(inLexique) ;
    break ;
  case 41 :
      rule_common_5F_syntax_primary_i41_parse(inLexique) ;
    break ;
  case 42 :
      rule_common_5F_syntax_primary_i42_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plms_5F_grammar::nt_primary_ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 32 :
      rule_common_5F_syntax_primary_i32_(parameter_1, inLexique) ;
    break ;
  case 33 :
      rule_common_5F_syntax_primary_i33_(parameter_1, inLexique) ;
    break ;
  case 37 :
      rule_common_5F_syntax_primary_i37_(parameter_1, inLexique) ;
    break ;
  case 38 :
      rule_common_5F_syntax_primary_i38_(parameter_1, inLexique) ;
    break ;
  case 39 :
      rule_common_5F_syntax_primary_i39_(parameter_1, inLexique) ;
    break ;
  case 40 :
      rule_common_5F_syntax_primary_i40_(parameter_1, inLexique) ;
    break ;
  case 41 :
      rule_common_5F_syntax_primary_i41_(parameter_1, inLexique) ;
    break ;
  case 42 :
      rule_common_5F_syntax_primary_i42_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      'comparison' non terminal implementation                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plms_5F_grammar::nt_comparison_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 34 :
      rule_common_5F_syntax_comparison_i34_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plms_5F_grammar::nt_comparison_ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 34 :
      rule_common_5F_syntax_comparison_i34_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 'additive_expression' non terminal implementation                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plms_5F_grammar::nt_additive_5F_expression_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 35 :
      rule_common_5F_syntax_additive_5F_expression_i35_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plms_5F_grammar::nt_additive_5F_expression_ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 35 :
      rule_common_5F_syntax_additive_5F_expression_i35_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'multiplicative_expression' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plms_5F_grammar::nt_multiplicative_5F_expression_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 36 :
      rule_common_5F_syntax_multiplicative_5F_expression_i36_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plms_5F_grammar::nt_multiplicative_5F_expression_ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 36 :
      rule_common_5F_syntax_multiplicative_5F_expression_i36_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_0' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_0 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 47 48 49 50
  return inLexique->nextProductionIndex () - 46 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_1' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_1 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 51 52
  return inLexique->nextProductionIndex () - 50 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_2' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_2 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 53 54
  return inLexique->nextProductionIndex () - 52 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_3' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_3 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 55 56
  return inLexique->nextProductionIndex () - 54 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_4' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_4 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 57 58
  return inLexique->nextProductionIndex () - 56 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_5' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_5 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 59 60
  return inLexique->nextProductionIndex () - 58 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_6' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_6 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 61 62
  return inLexique->nextProductionIndex () - 60 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_7' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_7 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 63 64
  return inLexique->nextProductionIndex () - 62 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_8' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_8 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 65 66
  return inLexique->nextProductionIndex () - 64 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_9' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_9 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 67 68 69 70
  return inLexique->nextProductionIndex () - 66 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_10' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_10 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 71 72
  return inLexique->nextProductionIndex () - 70 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_11' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_11 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 73 74 75
  return inLexique->nextProductionIndex () - 72 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_12' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_12 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 76 77
  return inLexique->nextProductionIndex () - 75 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_13' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_13 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 78 79
  return inLexique->nextProductionIndex () - 77 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_14' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_14 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 80 81 82
  return inLexique->nextProductionIndex () - 79 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_15' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_15 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 83 84 85
  return inLexique->nextProductionIndex () - 82 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_16' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_16 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 86 87 88 89
  return inLexique->nextProductionIndex () - 85 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_17' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_17 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 90 91
  return inLexique->nextProductionIndex () - 89 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_18' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_18 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 92 93 94 95 96 97 98 99
  return inLexique->nextProductionIndex () - 91 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_19' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_19 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 100 101 102 103 104 105 106 107 108 109
  return inLexique->nextProductionIndex () - 99 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_20' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_20 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 110 111 112 113 114 115 116 117
  return inLexique->nextProductionIndex () - 109 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_21' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plms_5F_grammar::select_common_5F_syntax_21 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 118 119
  return inLexique->nextProductionIndex () - 117 ;
}

//---------------------------------------------------------------------------------------------------------------------*

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy::GALGAS_unifiedTypeMap_2D_proxy (void) :
AC_GALGAS_uniqueMapProxy () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_unifiedTypeMap_2D_proxy::constructor_null (LOCATION_ARGS) {
  GALGAS_unifiedTypeMap_2D_proxy result ;
  result.makeNullProxy (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap_2D_proxy::class_method_makeProxy (GALGAS_unifiedTypeMap & ioMap,
                                                             GALGAS_lstring inKey,
                                                             GALGAS_unifiedTypeMap_2D_proxy & outProxy
                                                             COMMA_LOCATION_ARGS) {
  outProxy.internalMakeProxy (ioMap, inKey COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap_2D_proxy::class_method_makeProxyFromString (GALGAS_unifiedTypeMap & ioMap,
                                                                       GALGAS_string inKey,
                                                                       GALGAS_unifiedTypeMap_2D_proxy & outProxy
                                                                       COMMA_LOCATION_ARGS) {
  outProxy.internalMakeProxyFromString (ioMap, inKey COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_unifiedTypeMap_2D_proxy::reader_kind (C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_typeKind result ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) getAttributeListPointer (inCompiler, "kind" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_kind;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap GALGAS_unifiedTypeMap_2D_proxy::reader_constructorMap (C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_constructorMap result ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) getAttributeListPointer (inCompiler, "constructorMap" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_constructorMap;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureMap GALGAS_unifiedTypeMap_2D_proxy::reader_procedureMap (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_procedureMap result ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) getAttributeListPointer (inCompiler, "procedureMap" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_procedureMap;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_unifiedTypeMap_2D_proxy::reader_copiable (C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_bool result ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) getAttributeListPointer (inCompiler, "copiable" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_copiable;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_unifiedTypeMap_2D_proxy::reader_equatable (C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_bool result ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) getAttributeListPointer (inCompiler, "equatable" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_equatable;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_unifiedTypeMap_2D_proxy::reader_comparable (C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  GALGAS_bool result ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) getAttributeListPointer (inCompiler, "comparable" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_comparable;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_unifiedTypeMap_2D_proxy::constructor_searchKey (const GALGAS_unifiedTypeMap & inMap,
                                                                                      const GALGAS_lstring & inKey,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeMap_2D_proxy result ;
  result.internalMakeRegularProxyBySearchingKey (inMap, inKey, kSearchErrorMessage_unifiedTypeMap_searchKey, inCompiler COMMA_THERE) ;
  return result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @unifiedTypeMap-proxy type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_unifiedTypeMap_2D_proxy ("unifiedTypeMap-proxy",
                                                NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_unifiedTypeMap_2D_proxy::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_unifiedTypeMap_2D_proxy ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_unifiedTypeMap_2D_proxy::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_unifiedTypeMap_2D_proxy (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_unifiedTypeMap_2D_proxy::extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeMap_2D_proxy result ;
  const GALGAS_unifiedTypeMap_2D_proxy * p = (const GALGAS_unifiedTypeMap_2D_proxy *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_unifiedTypeMap_2D_proxy *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("unifiedTypeMap-proxy", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_procedureKindAST_structureProc::cEnumAssociatedValues_procedureKindAST_structureProc (const GALGAS_lstring & inAssociatedValue0,
                                                                                                            const GALGAS_bool & inAssociatedValue1
                                                                                                            COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0),
mAssociatedValue1 (inAssociatedValue1) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_procedureKindAST_structureProc::description (C_String & ioString,
                                                                        const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  mAssociatedValue1.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_procedureKindAST_structureProc::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_procedureKindAST_structureProc * ptr = dynamic_cast<const cEnumAssociatedValues_procedureKindAST_structureProc *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  if (result == kOperandEqual) {
    result = mAssociatedValue1.objectCompare (ptr->mAssociatedValue1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureKindAST::GALGAS_procedureKindAST (void) :
mAssociatedValues (),
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureKindAST GALGAS_procedureKindAST::constructor_standAloneProc (UNUSED_LOCATION_ARGS) {
  GALGAS_procedureKindAST result ;
  result.mEnum = kEnum_standAloneProc ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureKindAST GALGAS_procedureKindAST::constructor_structureProc (const GALGAS_lstring & inAssociatedValue0,
                                                                            const GALGAS_bool & inAssociatedValue1
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_procedureKindAST result ;
  if (inAssociatedValue0.isValid () && inAssociatedValue1.isValid ()) {
    result.mEnum = kEnum_structureProc ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_procedureKindAST_structureProc (inAssociatedValue0, inAssociatedValue1 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureKindAST::method_structureProc (GALGAS_lstring & outAssociatedValue0,
                                                    GALGAS_bool & outAssociatedValue1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_structureProc) {
    outAssociatedValue0.drop () ;
    outAssociatedValue1.drop () ;
    C_String s ;
    s << "method @procedureKindAST structureProc invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_procedureKindAST_structureProc * ptr = (const cEnumAssociatedValues_procedureKindAST_structureProc *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
    outAssociatedValue1 = ptr->mAssociatedValue1 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_procedureKindAST [3] = {
  "(not built)",
  "standAloneProc",
  "structureProc"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_procedureKindAST::reader_isStandAloneProc (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_standAloneProc == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_procedureKindAST::reader_isStructureProc (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_structureProc == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procedureKindAST::description (C_String & ioString,
                                           const int32_t inIndentation) const {
  ioString << "<enum @procedureKindAST: " << gEnumNameArrayFor_procedureKindAST [mEnum] ;
  mAssociatedValues.description (ioString, inIndentation) ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_procedureKindAST::objectCompare (const GALGAS_procedureKindAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mAssociatedValues.objectCompare (inOperand.mAssociatedValues) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @procedureKindAST type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_procedureKindAST ("procedureKindAST",
                                         NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_procedureKindAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_procedureKindAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_procedureKindAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_procedureKindAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureKindAST GALGAS_procedureKindAST::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_procedureKindAST result ;
  const GALGAS_procedureKindAST * p = (const GALGAS_procedureKindAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_procedureKindAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("procedureKindAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_variableKindIR_register::cEnumAssociatedValues_variableKindIR_register (const GALGAS_string & inAssociatedValue0
                                                                                              COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_variableKindIR_register::description (C_String & ioString,
                                                                 const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_variableKindIR_register::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_variableKindIR_register * ptr = dynamic_cast<const cEnumAssociatedValues_variableKindIR_register *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_variableKindIR_globalConstant::cEnumAssociatedValues_variableKindIR_globalConstant (const GALGAS_string & inAssociatedValue0
                                                                                                          COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_variableKindIR_globalConstant::description (C_String & ioString,
                                                                       const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_variableKindIR_globalConstant::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_variableKindIR_globalConstant * ptr = dynamic_cast<const cEnumAssociatedValues_variableKindIR_globalConstant *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_variableKindIR_globalVariable::cEnumAssociatedValues_variableKindIR_globalVariable (const GALGAS_string & inAssociatedValue0
                                                                                                          COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_variableKindIR_globalVariable::description (C_String & ioString,
                                                                       const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_variableKindIR_globalVariable::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_variableKindIR_globalVariable * ptr = dynamic_cast<const cEnumAssociatedValues_variableKindIR_globalVariable *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_variableKindIR_localVariable::cEnumAssociatedValues_variableKindIR_localVariable (const GALGAS_string & inAssociatedValue0
                                                                                                        COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_variableKindIR_localVariable::description (C_String & ioString,
                                                                      const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_variableKindIR_localVariable::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_variableKindIR_localVariable * ptr = dynamic_cast<const cEnumAssociatedValues_variableKindIR_localVariable *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_variableKindIR_inArgument::cEnumAssociatedValues_variableKindIR_inArgument (const GALGAS_string & inAssociatedValue0
                                                                                                  COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_variableKindIR_inArgument::description (C_String & ioString,
                                                                   const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_variableKindIR_inArgument::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_variableKindIR_inArgument * ptr = dynamic_cast<const cEnumAssociatedValues_variableKindIR_inArgument *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_variableKindIR_inOutArgument::cEnumAssociatedValues_variableKindIR_inOutArgument (const GALGAS_string & inAssociatedValue0
                                                                                                        COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_variableKindIR_inOutArgument::description (C_String & ioString,
                                                                      const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_variableKindIR_inOutArgument::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_variableKindIR_inOutArgument * ptr = dynamic_cast<const cEnumAssociatedValues_variableKindIR_inOutArgument *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_variableKindIR_outArgument::cEnumAssociatedValues_variableKindIR_outArgument (const GALGAS_string & inAssociatedValue0
                                                                                                    COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_variableKindIR_outArgument::description (C_String & ioString,
                                                                    const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_variableKindIR_outArgument::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_variableKindIR_outArgument * ptr = dynamic_cast<const cEnumAssociatedValues_variableKindIR_outArgument *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_variableKindIR_localConstant::cEnumAssociatedValues_variableKindIR_localConstant (const GALGAS_string & inAssociatedValue0
                                                                                                        COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_variableKindIR_localConstant::description (C_String & ioString,
                                                                      const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_variableKindIR_localConstant::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_variableKindIR_localConstant * ptr = dynamic_cast<const cEnumAssociatedValues_variableKindIR_localConstant *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_variableKindIR_temporaryConstant::cEnumAssociatedValues_variableKindIR_temporaryConstant (const GALGAS_uint & inAssociatedValue0
                                                                                                                COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_variableKindIR_temporaryConstant::description (C_String & ioString,
                                                                          const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_variableKindIR_temporaryConstant::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_variableKindIR_temporaryConstant * ptr = dynamic_cast<const cEnumAssociatedValues_variableKindIR_temporaryConstant *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_variableKindIR_localAccess::cEnumAssociatedValues_variableKindIR_localAccess (const GALGAS_string & inAssociatedValue0
                                                                                                    COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_variableKindIR_localAccess::description (C_String & ioString,
                                                                    const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_variableKindIR_localAccess::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_variableKindIR_localAccess * ptr = dynamic_cast<const cEnumAssociatedValues_variableKindIR_localAccess *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_variableKindIR_literalUnsignedInteger::cEnumAssociatedValues_variableKindIR_literalUnsignedInteger (const GALGAS_unifiedTypeMap_2D_proxy & inAssociatedValue0,
                                                                                                                          const GALGAS_uint_36__34_ & inAssociatedValue1
                                                                                                                          COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0),
mAssociatedValue1 (inAssociatedValue1) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_variableKindIR_literalUnsignedInteger::description (C_String & ioString,
                                                                               const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  mAssociatedValue1.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_variableKindIR_literalUnsignedInteger::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_variableKindIR_literalUnsignedInteger * ptr = dynamic_cast<const cEnumAssociatedValues_variableKindIR_literalUnsignedInteger *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  if (result == kOperandEqual) {
    result = mAssociatedValue1.objectCompare (ptr->mAssociatedValue1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_variableKindIR_literalSignedInteger::cEnumAssociatedValues_variableKindIR_literalSignedInteger (const GALGAS_unifiedTypeMap_2D_proxy & inAssociatedValue0,
                                                                                                                      const GALGAS_sint_36__34_ & inAssociatedValue1
                                                                                                                      COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0),
mAssociatedValue1 (inAssociatedValue1) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_variableKindIR_literalSignedInteger::description (C_String & ioString,
                                                                             const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  mAssociatedValue1.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_variableKindIR_literalSignedInteger::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_variableKindIR_literalSignedInteger * ptr = dynamic_cast<const cEnumAssociatedValues_variableKindIR_literalSignedInteger *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  if (result == kOperandEqual) {
    result = mAssociatedValue1.objectCompare (ptr->mAssociatedValue1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_variableKindIR_literalString::cEnumAssociatedValues_variableKindIR_literalString (const GALGAS_string & inAssociatedValue0,
                                                                                                        const GALGAS_string & inAssociatedValue1
                                                                                                        COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0),
mAssociatedValue1 (inAssociatedValue1) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_variableKindIR_literalString::description (C_String & ioString,
                                                                      const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  mAssociatedValue1.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_variableKindIR_literalString::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_variableKindIR_literalString * ptr = dynamic_cast<const cEnumAssociatedValues_variableKindIR_literalString *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  if (result == kOperandEqual) {
    result = mAssociatedValue1.objectCompare (ptr->mAssociatedValue1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR::GALGAS_variableKindIR (void) :
mAssociatedValues (),
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_variableKindIR::constructor_register (const GALGAS_string & inAssociatedValue0
                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_variableKindIR result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_register ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_variableKindIR_register (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_variableKindIR::constructor_globalConstant (const GALGAS_string & inAssociatedValue0
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_variableKindIR result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_globalConstant ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_variableKindIR_globalConstant (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_variableKindIR::constructor_globalVariable (const GALGAS_string & inAssociatedValue0
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_variableKindIR result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_globalVariable ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_variableKindIR_globalVariable (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_variableKindIR::constructor_localVariable (const GALGAS_string & inAssociatedValue0
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_variableKindIR result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_localVariable ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_variableKindIR_localVariable (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_variableKindIR::constructor_inArgument (const GALGAS_string & inAssociatedValue0
                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_variableKindIR result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_inArgument ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_variableKindIR_inArgument (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_variableKindIR::constructor_inOutArgument (const GALGAS_string & inAssociatedValue0
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_variableKindIR result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_inOutArgument ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_variableKindIR_inOutArgument (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_variableKindIR::constructor_outArgument (const GALGAS_string & inAssociatedValue0
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_variableKindIR result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_outArgument ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_variableKindIR_outArgument (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_variableKindIR::constructor_localConstant (const GALGAS_string & inAssociatedValue0
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_variableKindIR result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_localConstant ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_variableKindIR_localConstant (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_variableKindIR::constructor_temporaryConstant (const GALGAS_uint & inAssociatedValue0
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_variableKindIR result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_temporaryConstant ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_variableKindIR_temporaryConstant (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_variableKindIR::constructor_localAccess (const GALGAS_string & inAssociatedValue0
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_variableKindIR result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_localAccess ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_variableKindIR_localAccess (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_variableKindIR::constructor_literalUnsignedInteger (const GALGAS_unifiedTypeMap_2D_proxy & inAssociatedValue0,
                                                                                 const GALGAS_uint_36__34_ & inAssociatedValue1
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_variableKindIR result ;
  if (inAssociatedValue0.isValid () && inAssociatedValue1.isValid ()) {
    result.mEnum = kEnum_literalUnsignedInteger ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_variableKindIR_literalUnsignedInteger (inAssociatedValue0, inAssociatedValue1 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_variableKindIR::constructor_literalSignedInteger (const GALGAS_unifiedTypeMap_2D_proxy & inAssociatedValue0,
                                                                               const GALGAS_sint_36__34_ & inAssociatedValue1
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_variableKindIR result ;
  if (inAssociatedValue0.isValid () && inAssociatedValue1.isValid ()) {
    result.mEnum = kEnum_literalSignedInteger ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_variableKindIR_literalSignedInteger (inAssociatedValue0, inAssociatedValue1 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_variableKindIR::constructor_literalString (const GALGAS_string & inAssociatedValue0,
                                                                        const GALGAS_string & inAssociatedValue1
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_variableKindIR result ;
  if (inAssociatedValue0.isValid () && inAssociatedValue1.isValid ()) {
    result.mEnum = kEnum_literalString ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_variableKindIR_literalString (inAssociatedValue0, inAssociatedValue1 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableKindIR::method_register (GALGAS_string & outAssociatedValue0,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_register) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @variableKindIR register invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_variableKindIR_register * ptr = (const cEnumAssociatedValues_variableKindIR_register *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableKindIR::method_globalConstant (GALGAS_string & outAssociatedValue0,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_globalConstant) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @variableKindIR globalConstant invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_variableKindIR_globalConstant * ptr = (const cEnumAssociatedValues_variableKindIR_globalConstant *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableKindIR::method_globalVariable (GALGAS_string & outAssociatedValue0,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_globalVariable) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @variableKindIR globalVariable invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_variableKindIR_globalVariable * ptr = (const cEnumAssociatedValues_variableKindIR_globalVariable *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableKindIR::method_localVariable (GALGAS_string & outAssociatedValue0,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_localVariable) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @variableKindIR localVariable invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_variableKindIR_localVariable * ptr = (const cEnumAssociatedValues_variableKindIR_localVariable *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableKindIR::method_inArgument (GALGAS_string & outAssociatedValue0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_inArgument) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @variableKindIR inArgument invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_variableKindIR_inArgument * ptr = (const cEnumAssociatedValues_variableKindIR_inArgument *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableKindIR::method_inOutArgument (GALGAS_string & outAssociatedValue0,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_inOutArgument) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @variableKindIR inOutArgument invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_variableKindIR_inOutArgument * ptr = (const cEnumAssociatedValues_variableKindIR_inOutArgument *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableKindIR::method_outArgument (GALGAS_string & outAssociatedValue0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_outArgument) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @variableKindIR outArgument invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_variableKindIR_outArgument * ptr = (const cEnumAssociatedValues_variableKindIR_outArgument *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableKindIR::method_localConstant (GALGAS_string & outAssociatedValue0,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_localConstant) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @variableKindIR localConstant invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_variableKindIR_localConstant * ptr = (const cEnumAssociatedValues_variableKindIR_localConstant *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableKindIR::method_temporaryConstant (GALGAS_uint & outAssociatedValue0,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_temporaryConstant) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @variableKindIR temporaryConstant invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_variableKindIR_temporaryConstant * ptr = (const cEnumAssociatedValues_variableKindIR_temporaryConstant *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableKindIR::method_localAccess (GALGAS_string & outAssociatedValue0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_localAccess) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @variableKindIR localAccess invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_variableKindIR_localAccess * ptr = (const cEnumAssociatedValues_variableKindIR_localAccess *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableKindIR::method_literalUnsignedInteger (GALGAS_unifiedTypeMap_2D_proxy & outAssociatedValue0,
                                                           GALGAS_uint_36__34_ & outAssociatedValue1,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_literalUnsignedInteger) {
    outAssociatedValue0.drop () ;
    outAssociatedValue1.drop () ;
    C_String s ;
    s << "method @variableKindIR literalUnsignedInteger invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_variableKindIR_literalUnsignedInteger * ptr = (const cEnumAssociatedValues_variableKindIR_literalUnsignedInteger *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
    outAssociatedValue1 = ptr->mAssociatedValue1 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableKindIR::method_literalSignedInteger (GALGAS_unifiedTypeMap_2D_proxy & outAssociatedValue0,
                                                         GALGAS_sint_36__34_ & outAssociatedValue1,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_literalSignedInteger) {
    outAssociatedValue0.drop () ;
    outAssociatedValue1.drop () ;
    C_String s ;
    s << "method @variableKindIR literalSignedInteger invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_variableKindIR_literalSignedInteger * ptr = (const cEnumAssociatedValues_variableKindIR_literalSignedInteger *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
    outAssociatedValue1 = ptr->mAssociatedValue1 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableKindIR::method_literalString (GALGAS_string & outAssociatedValue0,
                                                  GALGAS_string & outAssociatedValue1,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_literalString) {
    outAssociatedValue0.drop () ;
    outAssociatedValue1.drop () ;
    C_String s ;
    s << "method @variableKindIR literalString invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_variableKindIR_literalString * ptr = (const cEnumAssociatedValues_variableKindIR_literalString *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
    outAssociatedValue1 = ptr->mAssociatedValue1 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_variableKindIR [14] = {
  "(not built)",
  "register",
  "globalConstant",
  "globalVariable",
  "localVariable",
  "inArgument",
  "inOutArgument",
  "outArgument",
  "localConstant",
  "temporaryConstant",
  "localAccess",
  "literalUnsignedInteger",
  "literalSignedInteger",
  "literalString"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableKindIR::reader_isRegister (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_register == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableKindIR::reader_isGlobalConstant (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_globalConstant == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableKindIR::reader_isGlobalVariable (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_globalVariable == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableKindIR::reader_isLocalVariable (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_localVariable == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableKindIR::reader_isInArgument (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_inArgument == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableKindIR::reader_isInOutArgument (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_inOutArgument == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableKindIR::reader_isOutArgument (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_outArgument == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableKindIR::reader_isLocalConstant (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_localConstant == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableKindIR::reader_isTemporaryConstant (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_temporaryConstant == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableKindIR::reader_isLocalAccess (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_localAccess == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableKindIR::reader_isLiteralUnsignedInteger (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_literalUnsignedInteger == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableKindIR::reader_isLiteralSignedInteger (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_literalSignedInteger == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableKindIR::reader_isLiteralString (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_literalString == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableKindIR::description (C_String & ioString,
                                         const int32_t inIndentation) const {
  ioString << "<enum @variableKindIR: " << gEnumNameArrayFor_variableKindIR [mEnum] ;
  mAssociatedValues.description (ioString, inIndentation) ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_variableKindIR::objectCompare (const GALGAS_variableKindIR & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mAssociatedValues.objectCompare (inOperand.mAssociatedValues) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @variableKindIR type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_variableKindIR ("variableKindIR",
                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_variableKindIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_variableKindIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_variableKindIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_variableKindIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableKindIR GALGAS_variableKindIR::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_variableKindIR result ;
  const GALGAS_variableKindIR * p = (const GALGAS_variableKindIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_variableKindIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("variableKindIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_procEffectiveParameterPassingModeAST_input::cEnumAssociatedValues_procEffectiveParameterPassingModeAST_input (const GALGAS_lstring & inAssociatedValue0
                                                                                                                                    COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_procEffectiveParameterPassingModeAST_input::description (C_String & ioString,
                                                                                    const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_procEffectiveParameterPassingModeAST_input::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_procEffectiveParameterPassingModeAST_input * ptr = dynamic_cast<const cEnumAssociatedValues_procEffectiveParameterPassingModeAST_input *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_procEffectiveParameterPassingModeAST_output::cEnumAssociatedValues_procEffectiveParameterPassingModeAST_output (const GALGAS_expressionAST & inAssociatedValue0
                                                                                                                                      COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_procEffectiveParameterPassingModeAST_output::description (C_String & ioString,
                                                                                     const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_procEffectiveParameterPassingModeAST_output::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_procEffectiveParameterPassingModeAST_output * ptr = dynamic_cast<const cEnumAssociatedValues_procEffectiveParameterPassingModeAST_output *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_procEffectiveParameterPassingModeAST_outputInput::cEnumAssociatedValues_procEffectiveParameterPassingModeAST_outputInput (const GALGAS_lstring & inAssociatedValue0
                                                                                                                                                COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_procEffectiveParameterPassingModeAST_outputInput::description (C_String & ioString,
                                                                                          const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_procEffectiveParameterPassingModeAST_outputInput::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_procEffectiveParameterPassingModeAST_outputInput * ptr = dynamic_cast<const cEnumAssociatedValues_procEffectiveParameterPassingModeAST_outputInput *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterPassingModeAST::GALGAS_procEffectiveParameterPassingModeAST (void) :
mAssociatedValues (),
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterPassingModeAST GALGAS_procEffectiveParameterPassingModeAST::constructor_input (const GALGAS_lstring & inAssociatedValue0
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_procEffectiveParameterPassingModeAST result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_input ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_procEffectiveParameterPassingModeAST_input (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterPassingModeAST GALGAS_procEffectiveParameterPassingModeAST::constructor_output (const GALGAS_expressionAST & inAssociatedValue0
                                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_procEffectiveParameterPassingModeAST result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_output ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_procEffectiveParameterPassingModeAST_output (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterPassingModeAST GALGAS_procEffectiveParameterPassingModeAST::constructor_outputInput (const GALGAS_lstring & inAssociatedValue0
                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_procEffectiveParameterPassingModeAST result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_outputInput ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_procEffectiveParameterPassingModeAST_outputInput (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procEffectiveParameterPassingModeAST::method_input (GALGAS_lstring & outAssociatedValue0,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_input) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @procEffectiveParameterPassingModeAST input invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_procEffectiveParameterPassingModeAST_input * ptr = (const cEnumAssociatedValues_procEffectiveParameterPassingModeAST_input *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procEffectiveParameterPassingModeAST::method_output (GALGAS_expressionAST & outAssociatedValue0,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_output) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @procEffectiveParameterPassingModeAST output invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_procEffectiveParameterPassingModeAST_output * ptr = (const cEnumAssociatedValues_procEffectiveParameterPassingModeAST_output *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procEffectiveParameterPassingModeAST::method_outputInput (GALGAS_lstring & outAssociatedValue0,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_outputInput) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @procEffectiveParameterPassingModeAST outputInput invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_procEffectiveParameterPassingModeAST_outputInput * ptr = (const cEnumAssociatedValues_procEffectiveParameterPassingModeAST_outputInput *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_procEffectiveParameterPassingModeAST [4] = {
  "(not built)",
  "input",
  "output",
  "outputInput"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_procEffectiveParameterPassingModeAST::reader_isInput (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_input == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_procEffectiveParameterPassingModeAST::reader_isOutput (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_output == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_procEffectiveParameterPassingModeAST::reader_isOutputInput (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_outputInput == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procEffectiveParameterPassingModeAST::description (C_String & ioString,
                                                               const int32_t inIndentation) const {
  ioString << "<enum @procEffectiveParameterPassingModeAST: " << gEnumNameArrayFor_procEffectiveParameterPassingModeAST [mEnum] ;
  mAssociatedValues.description (ioString, inIndentation) ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_procEffectiveParameterPassingModeAST::objectCompare (const GALGAS_procEffectiveParameterPassingModeAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mAssociatedValues.objectCompare (inOperand.mAssociatedValues) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     @procEffectiveParameterPassingModeAST type                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_procEffectiveParameterPassingModeAST ("procEffectiveParameterPassingModeAST",
                                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_procEffectiveParameterPassingModeAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_procEffectiveParameterPassingModeAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_procEffectiveParameterPassingModeAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_procEffectiveParameterPassingModeAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterPassingModeAST GALGAS_procEffectiveParameterPassingModeAST::extractObject (const GALGAS_object & inObject,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_procEffectiveParameterPassingModeAST result ;
  const GALGAS_procEffectiveParameterPassingModeAST * p = (const GALGAS_procEffectiveParameterPassingModeAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_procEffectiveParameterPassingModeAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("procEffectiveParameterPassingModeAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_receiverType_receiver::cEnumAssociatedValues_receiverType_receiver (const GALGAS_unifiedTypeMap_2D_proxy & inAssociatedValue0,
                                                                                          const GALGAS_string & inAssociatedValue1
                                                                                          COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0),
mAssociatedValue1 (inAssociatedValue1) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_receiverType_receiver::description (C_String & ioString,
                                                               const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  mAssociatedValue1.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_receiverType_receiver::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_receiverType_receiver * ptr = dynamic_cast<const cEnumAssociatedValues_receiverType_receiver *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  if (result == kOperandEqual) {
    result = mAssociatedValue1.objectCompare (ptr->mAssociatedValue1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_receiverType_mutatingReceiver::cEnumAssociatedValues_receiverType_mutatingReceiver (const GALGAS_unifiedTypeMap_2D_proxy & inAssociatedValue0,
                                                                                                          const GALGAS_string & inAssociatedValue1
                                                                                                          COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0),
mAssociatedValue1 (inAssociatedValue1) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_receiverType_mutatingReceiver::description (C_String & ioString,
                                                                       const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  mAssociatedValue1.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_receiverType_mutatingReceiver::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_receiverType_mutatingReceiver * ptr = dynamic_cast<const cEnumAssociatedValues_receiverType_mutatingReceiver *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  if (result == kOperandEqual) {
    result = mAssociatedValue1.objectCompare (ptr->mAssociatedValue1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_receiverType::GALGAS_receiverType (void) :
mAssociatedValues (),
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_receiverType GALGAS_receiverType::constructor_noReceiver (UNUSED_LOCATION_ARGS) {
  GALGAS_receiverType result ;
  result.mEnum = kEnum_noReceiver ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_receiverType GALGAS_receiverType::constructor_receiver (const GALGAS_unifiedTypeMap_2D_proxy & inAssociatedValue0,
                                                               const GALGAS_string & inAssociatedValue1
                                                               COMMA_LOCATION_ARGS) {
  GALGAS_receiverType result ;
  if (inAssociatedValue0.isValid () && inAssociatedValue1.isValid ()) {
    result.mEnum = kEnum_receiver ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_receiverType_receiver (inAssociatedValue0, inAssociatedValue1 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_receiverType GALGAS_receiverType::constructor_mutatingReceiver (const GALGAS_unifiedTypeMap_2D_proxy & inAssociatedValue0,
                                                                       const GALGAS_string & inAssociatedValue1
                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_receiverType result ;
  if (inAssociatedValue0.isValid () && inAssociatedValue1.isValid ()) {
    result.mEnum = kEnum_mutatingReceiver ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_receiverType_mutatingReceiver (inAssociatedValue0, inAssociatedValue1 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_receiverType::method_receiver (GALGAS_unifiedTypeMap_2D_proxy & outAssociatedValue0,
                                           GALGAS_string & outAssociatedValue1,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_receiver) {
    outAssociatedValue0.drop () ;
    outAssociatedValue1.drop () ;
    C_String s ;
    s << "method @receiverType receiver invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_receiverType_receiver * ptr = (const cEnumAssociatedValues_receiverType_receiver *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
    outAssociatedValue1 = ptr->mAssociatedValue1 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_receiverType::method_mutatingReceiver (GALGAS_unifiedTypeMap_2D_proxy & outAssociatedValue0,
                                                   GALGAS_string & outAssociatedValue1,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_mutatingReceiver) {
    outAssociatedValue0.drop () ;
    outAssociatedValue1.drop () ;
    C_String s ;
    s << "method @receiverType mutatingReceiver invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_receiverType_mutatingReceiver * ptr = (const cEnumAssociatedValues_receiverType_mutatingReceiver *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
    outAssociatedValue1 = ptr->mAssociatedValue1 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_receiverType [4] = {
  "(not built)",
  "noReceiver",
  "receiver",
  "mutatingReceiver"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_receiverType::reader_isNoReceiver (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_noReceiver == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_receiverType::reader_isReceiver (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_receiver == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_receiverType::reader_isMutatingReceiver (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_mutatingReceiver == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_receiverType::description (C_String & ioString,
                                       const int32_t inIndentation) const {
  ioString << "<enum @receiverType: " << gEnumNameArrayFor_receiverType [mEnum] ;
  mAssociatedValues.description (ioString, inIndentation) ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_receiverType::objectCompare (const GALGAS_receiverType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mAssociatedValues.objectCompare (inOperand.mAssociatedValues) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 @receiverType type                                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_receiverType ("receiverType",
                                     NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_receiverType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_receiverType ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_receiverType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_receiverType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_receiverType GALGAS_receiverType::extractObject (const GALGAS_object & inObject,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  GALGAS_receiverType result ;
  const GALGAS_receiverType * p = (const GALGAS_receiverType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_receiverType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("receiverType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_typeKind_enumeration::cEnumAssociatedValues_typeKind_enumeration (const GALGAS_enumConstantMap & inAssociatedValue0
                                                                                        COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_typeKind_enumeration::description (C_String & ioString,
                                                              const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_typeKind_enumeration::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_typeKind_enumeration * ptr = dynamic_cast<const cEnumAssociatedValues_typeKind_enumeration *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_typeKind_structure::cEnumAssociatedValues_typeKind_structure (const GALGAS_propertyList & inAssociatedValue0
                                                                                    COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_typeKind_structure::description (C_String & ioString,
                                                            const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_typeKind_structure::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_typeKind_structure * ptr = dynamic_cast<const cEnumAssociatedValues_typeKind_structure *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_typeKind_integer::cEnumAssociatedValues_typeKind_integer (const GALGAS_sint_36__34_ & inAssociatedValue0,
                                                                                const GALGAS_uint_36__34_ & inAssociatedValue1
                                                                                COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0),
mAssociatedValue1 (inAssociatedValue1) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_typeKind_integer::description (C_String & ioString,
                                                          const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  mAssociatedValue1.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_typeKind_integer::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_typeKind_integer * ptr = dynamic_cast<const cEnumAssociatedValues_typeKind_integer *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  if (result == kOperandEqual) {
    result = mAssociatedValue1.objectCompare (ptr->mAssociatedValue1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind::GALGAS_typeKind (void) :
mAssociatedValues (),
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_typeKind::constructor_boolean (UNUSED_LOCATION_ARGS) {
  GALGAS_typeKind result ;
  result.mEnum = kEnum_boolean ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_typeKind::constructor_boolset (UNUSED_LOCATION_ARGS) {
  GALGAS_typeKind result ;
  result.mEnum = kEnum_boolset ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_typeKind::constructor_literalString (UNUSED_LOCATION_ARGS) {
  GALGAS_typeKind result ;
  result.mEnum = kEnum_literalString ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_typeKind::constructor_enumeration (const GALGAS_enumConstantMap & inAssociatedValue0
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_typeKind result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_enumeration ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_typeKind_enumeration (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_typeKind::constructor_structure (const GALGAS_propertyList & inAssociatedValue0
                                                        COMMA_LOCATION_ARGS) {
  GALGAS_typeKind result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_structure ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_typeKind_structure (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_typeKind::constructor_integer (const GALGAS_sint_36__34_ & inAssociatedValue0,
                                                      const GALGAS_uint_36__34_ & inAssociatedValue1
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_typeKind result ;
  if (inAssociatedValue0.isValid () && inAssociatedValue1.isValid ()) {
    result.mEnum = kEnum_integer ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_typeKind_integer (inAssociatedValue0, inAssociatedValue1 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeKind::method_enumeration (GALGAS_enumConstantMap & outAssociatedValue0,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_enumeration) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @typeKind enumeration invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_typeKind_enumeration * ptr = (const cEnumAssociatedValues_typeKind_enumeration *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeKind::method_structure (GALGAS_propertyList & outAssociatedValue0,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_structure) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @typeKind structure invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_typeKind_structure * ptr = (const cEnumAssociatedValues_typeKind_structure *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeKind::method_integer (GALGAS_sint_36__34_ & outAssociatedValue0,
                                      GALGAS_uint_36__34_ & outAssociatedValue1,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_integer) {
    outAssociatedValue0.drop () ;
    outAssociatedValue1.drop () ;
    C_String s ;
    s << "method @typeKind integer invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_typeKind_integer * ptr = (const cEnumAssociatedValues_typeKind_integer *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
    outAssociatedValue1 = ptr->mAssociatedValue1 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_typeKind [7] = {
  "(not built)",
  "boolean",
  "boolset",
  "literalString",
  "enumeration",
  "structure",
  "integer"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_typeKind::reader_isBoolean (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_boolean == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_typeKind::reader_isBoolset (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_boolset == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_typeKind::reader_isLiteralString (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_literalString == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_typeKind::reader_isEnumeration (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_enumeration == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_typeKind::reader_isStructure (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_structure == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_typeKind::reader_isInteger (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_integer == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeKind::description (C_String & ioString,
                                   const int32_t inIndentation) const {
  ioString << "<enum @typeKind: " << gEnumNameArrayFor_typeKind [mEnum] ;
  mAssociatedValues.description (ioString, inIndentation) ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_typeKind::objectCompare (const GALGAS_typeKind & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mAssociatedValues.objectCompare (inOperand.mAssociatedValues) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                   @typeKind type                                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_typeKind ("typeKind",
                                 NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_typeKind::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeKind ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_typeKind::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_typeKind (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_typeKind::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  GALGAS_typeKind result ;
  const GALGAS_typeKind * p = (const GALGAS_typeKind *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_typeKind *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("typeKind", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_generalizedTypeEnumAST_valueType::cEnumAssociatedValues_generalizedTypeEnumAST_valueType (const GALGAS_lstring & inAssociatedValue0
                                                                                                                COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_generalizedTypeEnumAST_valueType::description (C_String & ioString,
                                                                          const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_generalizedTypeEnumAST_valueType::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_generalizedTypeEnumAST_valueType * ptr = dynamic_cast<const cEnumAssociatedValues_generalizedTypeEnumAST_valueType *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_generalizedTypeEnumAST_procType::cEnumAssociatedValues_generalizedTypeEnumAST_procType (const GALGAS_lstringlist & inAssociatedValue0,
                                                                                                              const GALGAS_procFormalArgumentList & inAssociatedValue1
                                                                                                              COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0),
mAssociatedValue1 (inAssociatedValue1) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_generalizedTypeEnumAST_procType::description (C_String & ioString,
                                                                         const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  mAssociatedValue1.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_generalizedTypeEnumAST_procType::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_generalizedTypeEnumAST_procType * ptr = dynamic_cast<const cEnumAssociatedValues_generalizedTypeEnumAST_procType *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  if (result == kOperandEqual) {
    result = mAssociatedValue1.objectCompare (ptr->mAssociatedValue1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_generalizedTypeEnumAST::GALGAS_generalizedTypeEnumAST (void) :
mAssociatedValues (),
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_generalizedTypeEnumAST GALGAS_generalizedTypeEnumAST::constructor_valueType (const GALGAS_lstring & inAssociatedValue0
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_generalizedTypeEnumAST result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_valueType ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_generalizedTypeEnumAST_valueType (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_generalizedTypeEnumAST GALGAS_generalizedTypeEnumAST::constructor_procType (const GALGAS_lstringlist & inAssociatedValue0,
                                                                                   const GALGAS_procFormalArgumentList & inAssociatedValue1
                                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_generalizedTypeEnumAST result ;
  if (inAssociatedValue0.isValid () && inAssociatedValue1.isValid ()) {
    result.mEnum = kEnum_procType ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_generalizedTypeEnumAST_procType (inAssociatedValue0, inAssociatedValue1 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_generalizedTypeEnumAST::method_valueType (GALGAS_lstring & outAssociatedValue0,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_valueType) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @generalizedTypeEnumAST valueType invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_generalizedTypeEnumAST_valueType * ptr = (const cEnumAssociatedValues_generalizedTypeEnumAST_valueType *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_generalizedTypeEnumAST::method_procType (GALGAS_lstringlist & outAssociatedValue0,
                                                     GALGAS_procFormalArgumentList & outAssociatedValue1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_procType) {
    outAssociatedValue0.drop () ;
    outAssociatedValue1.drop () ;
    C_String s ;
    s << "method @generalizedTypeEnumAST procType invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_generalizedTypeEnumAST_procType * ptr = (const cEnumAssociatedValues_generalizedTypeEnumAST_procType *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
    outAssociatedValue1 = ptr->mAssociatedValue1 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_generalizedTypeEnumAST [3] = {
  "(not built)",
  "valueType",
  "procType"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_generalizedTypeEnumAST::reader_isValueType (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_valueType == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_generalizedTypeEnumAST::reader_isProcType (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_procType == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_generalizedTypeEnumAST::description (C_String & ioString,
                                                 const int32_t inIndentation) const {
  ioString << "<enum @generalizedTypeEnumAST: " << gEnumNameArrayFor_generalizedTypeEnumAST [mEnum] ;
  mAssociatedValues.description (ioString, inIndentation) ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_generalizedTypeEnumAST::objectCompare (const GALGAS_generalizedTypeEnumAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mAssociatedValues.objectCompare (inOperand.mAssociatedValues) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @generalizedTypeEnumAST type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_generalizedTypeEnumAST ("generalizedTypeEnumAST",
                                               NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_generalizedTypeEnumAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_generalizedTypeEnumAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_generalizedTypeEnumAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_generalizedTypeEnumAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_generalizedTypeEnumAST GALGAS_generalizedTypeEnumAST::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_generalizedTypeEnumAST result ;
  const GALGAS_generalizedTypeEnumAST * p = (const GALGAS_generalizedTypeEnumAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_generalizedTypeEnumAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("generalizedTypeEnumAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               Bool options                                                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

C_BoolCommandLineOption gOption_plm_5F_options_noExceptionGeneration ("plm_options",
                                         "noExceptionGeneration",
                                         0,
                                         "no-exception-generation",
                                         "Do not generate exception code") ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               UInt options                                                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              String options                                                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              String List options                                                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

C_StringListCommandLineOption gOption_plm_5F_options_pathList ("plm_options",
                                         "pathList",
                                         0,
                                         "path",
                                         "Search pathes for source files") ;

//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Routine 'enterNodeInPrecedenceGraph'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_enterNodeInPrecedenceGraph (GALGAS_lstring inArgument_inNodeName,
                                         GALGAS_abstractDeclaration inArgument_inInfo,
                                         GALGAS_generalizedTypeEnumAST inArgument_inType,
                                         GALGAS_semanticTypePrecedenceGraph & ioArgument_ioGraph,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  {
  ioArgument_ioGraph.modifier_addNode (inArgument_inNodeName, inArgument_inInfo, inCompiler COMMA_SOURCE_FILE ("generalized-type.galgas", 53)) ;
  }
  switch (inArgument_inType.enumValue ()) {
  case GALGAS_generalizedTypeEnumAST::kNotBuilt:
    break ;
  case GALGAS_generalizedTypeEnumAST::kEnum_valueType:
    {
      const cEnumAssociatedValues_generalizedTypeEnumAST_valueType * extractPtr_2662 = (const cEnumAssociatedValues_generalizedTypeEnumAST_valueType *) (inArgument_inType.unsafePointer ()) ;
      const GALGAS_lstring extractedValue_typeName = extractPtr_2662->mAssociatedValue0 ;
      {
      ioArgument_ioGraph.modifier_addEdge (inArgument_inNodeName, extractedValue_typeName COMMA_SOURCE_FILE ("generalized-type.galgas", 56)) ;
      }
    }
    break ;
  case GALGAS_generalizedTypeEnumAST::kEnum_procType:
    {
      const cEnumAssociatedValues_generalizedTypeEnumAST_procType * extractPtr_2833 = (const cEnumAssociatedValues_generalizedTypeEnumAST_procType *) (inArgument_inType.unsafePointer ()) ;
      const GALGAS_procFormalArgumentList extractedValue_procFormalArgumentList = extractPtr_2833->mAssociatedValue1 ;
      cEnumerator_procFormalArgumentList enumerator_2750 (extractedValue_procFormalArgumentList, kEnumeration_up) ;
      while (enumerator_2750.hasCurrentObject ()) {
        {
        ioArgument_ioGraph.modifier_addEdge (inArgument_inNodeName, enumerator_2750.current (HERE).mAttribute_mFormalArgumentTypeName COMMA_SOURCE_FILE ("generalized-type.galgas", 59)) ;
        }
        enumerator_2750.gotoNextObject () ;
      }
    }
    break ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Routine 'enterBooleanOperators'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_enterBooleanOperators (GALGAS_lstring inArgument_inBooleanTypeName,
                                    GALGAS_semanticContext & ioArgument_ioContext,
                                    C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeMap_2D_proxy var_selfTypeProxy ;
  {
  GALGAS_unifiedTypeMap_2D_proxy::class_method_makeProxy (ioArgument_ioContext.mAttribute_mTypeMap, inArgument_inBooleanTypeName, var_selfTypeProxy COMMA_SOURCE_FILE ("bool-type.galgas", 105)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mEqualOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 107)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("bool-type.galgas", 107)), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 107)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("bool-type.galgas", 107)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 106)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mNonEqualOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 111)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("bool-type.galgas", 111)), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 111)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("bool-type.galgas", 111)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 110)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mStrictInfOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 115)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("bool-type.galgas", 115)), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 115)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("bool-type.galgas", 115)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 114)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mInfEqualOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 119)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("bool-type.galgas", 119)), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 119)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("bool-type.galgas", 119)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 118)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mStrictSupOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 123)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("bool-type.galgas", 123)), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 123)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("bool-type.galgas", 123)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 122)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mSupEqualOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 127)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("bool-type.galgas", 127)), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 127)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("bool-type.galgas", 127)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 126)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mAndOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 131)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("bool-type.galgas", 131)), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 131)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("bool-type.galgas", 131)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 130)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mAndShortCircuitOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 135)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("bool-type.galgas", 135)), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 135)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("bool-type.galgas", 135)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 134)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mOrOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 139)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("bool-type.galgas", 139)), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 139)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("bool-type.galgas", 139)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 138)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mOrShortCircuitOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 143)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("bool-type.galgas", 143)), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 143)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("bool-type.galgas", 143)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 142)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mXorOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 147)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("bool-type.galgas", 147)), inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 147)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("bool-type.galgas", 147)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("bool-type.galgas", 146)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       Filewrapper 'booleanGenerationTemplate'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_booleanGenerationTemplate_0 [1] = {
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_booleanGenerationTemplate_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_booleanGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_booleanGenerationTemplate_0,
  0,
  gWrapperAllDirectories_booleanGenerationTemplate_0
) ;


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            Filewrapper template 'booleanGenerationTemplate declaration'                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_booleanGenerationTemplate_declaration (C_Compiler * inCompiler,
                                                                         const GALGAS_string & in_ENUMERATION_5F_NAME,
                                                                         const GALGAS_string & in_ACTUAL_5F_TYPE_5F_NAME
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "//---------------------------------------------------------------------------------------------------------------------*\n"
    "//" ;
  result << GALGAS_string ("boolean ").add_operation (in_ENUMERATION_5F_NAME, inCompiler COMMA_SOURCE_FILE ("boolean-declaration.galgasTemplate", 2)).reader_stringByLeftAndRightPadding (GALGAS_uint ((uint32_t) 117U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE ("boolean-declaration.galgasTemplate", 2)).stringValue () ;
  result << "*\n"
    "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n"
    "typedef " ;
  result << in_ACTUAL_5F_TYPE_5F_NAME.stringValue () ;
  result << " " ;
  result << function_mangledNameForType (in_ENUMERATION_5F_NAME, inCompiler COMMA_SOURCE_FILE ("boolean-declaration.galgasTemplate", 5)).stringValue () ;
  result << " ;\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         Routine 'enterEnumerationOperators'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_enterEnumerationOperators (GALGAS_lstring inArgument_inEnumerationTypeName,
                                        GALGAS_semanticContext & ioArgument_ioContext,
                                        C_Compiler * inCompiler
                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeMap_2D_proxy var_BoolTypeProxy ;
  {
  GALGAS_unifiedTypeMap_2D_proxy::class_method_makeProxy (ioArgument_ioContext.mAttribute_mTypeMap, GALGAS_string ("Bool").reader_nowhere (SOURCE_FILE ("enumeration-declaration.galgas", 126)), var_BoolTypeProxy COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 126)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mEqualOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inEnumerationTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 128)).add_operation (inArgument_inEnumerationTypeName.reader_string (SOURCE_FILE ("enumeration-declaration.galgas", 128)), inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 128)), inArgument_inEnumerationTypeName.mAttribute_location  COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 128)), var_BoolTypeProxy, inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 127)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mNonEqualOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inEnumerationTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 132)).add_operation (inArgument_inEnumerationTypeName.reader_string (SOURCE_FILE ("enumeration-declaration.galgas", 132)), inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 132)), inArgument_inEnumerationTypeName.mAttribute_location  COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 132)), var_BoolTypeProxy, inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 131)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mStrictInfOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inEnumerationTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 136)).add_operation (inArgument_inEnumerationTypeName.reader_string (SOURCE_FILE ("enumeration-declaration.galgas", 136)), inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 136)), inArgument_inEnumerationTypeName.mAttribute_location  COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 136)), var_BoolTypeProxy, inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 135)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mInfEqualOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inEnumerationTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 140)).add_operation (inArgument_inEnumerationTypeName.reader_string (SOURCE_FILE ("enumeration-declaration.galgas", 140)), inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 140)), inArgument_inEnumerationTypeName.mAttribute_location  COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 140)), var_BoolTypeProxy, inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 139)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mStrictSupOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inEnumerationTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 144)).add_operation (inArgument_inEnumerationTypeName.reader_string (SOURCE_FILE ("enumeration-declaration.galgas", 144)), inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 144)), inArgument_inEnumerationTypeName.mAttribute_location  COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 144)), var_BoolTypeProxy, inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 143)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mSupEqualOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inEnumerationTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 148)).add_operation (inArgument_inEnumerationTypeName.reader_string (SOURCE_FILE ("enumeration-declaration.galgas", 148)), inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 148)), inArgument_inEnumerationTypeName.mAttribute_location  COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 148)), var_BoolTypeProxy, inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgas", 147)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     Filewrapper 'enumerationGenerationTemplate'                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_enumerationGenerationTemplate_0 [1] = {
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_enumerationGenerationTemplate_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_enumerationGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_enumerationGenerationTemplate_0,
  0,
  gWrapperAllDirectories_enumerationGenerationTemplate_0
) ;


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Filewrapper template 'enumerationGenerationTemplate declaration'                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_enumerationGenerationTemplate_declaration (C_Compiler * inCompiler,
                                                                             const GALGAS_string & in_ENUMERATION_5F_NAME,
                                                                             const GALGAS_string & in_ACTUAL_5F_TYPE_5F_NAME
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "//---------------------------------------------------------------------------------------------------------------------*\n"
    "//" ;
  result << GALGAS_string ("enumeration ").add_operation (in_ENUMERATION_5F_NAME, inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgasTemplate", 2)).reader_stringByLeftAndRightPadding (GALGAS_uint ((uint32_t) 117U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE ("enumeration-declaration.galgasTemplate", 2)).stringValue () ;
  result << "*\n"
    "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n"
    "typedef " ;
  result << in_ACTUAL_5F_TYPE_5F_NAME.stringValue () ;
  result << " " ;
  result << function_mangledNameForType (in_ENUMERATION_5F_NAME, inCompiler COMMA_SOURCE_FILE ("enumeration-declaration.galgasTemplate", 5)).stringValue () ;
  result << " ;\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   Filewrapper 'globalVariableGenerationTemplate'                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_globalVariableGenerationTemplate_0 [1] = {
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_globalVariableGenerationTemplate_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_globalVariableGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_globalVariableGenerationTemplate_0,
  0,
  gWrapperAllDirectories_globalVariableGenerationTemplate_0
) ;


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       Filewrapper template 'globalVariableGenerationTemplate implementation'                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_globalVariableGenerationTemplate_implementation (C_Compiler * inCompiler,
                                                                                   const GALGAS_string & in_GLOBAL_5F_VAR_5F_NAME,
                                                                                   const GALGAS_string & in_GLOBAL_5F_TYPE_5F_NAME,
                                                                                   const GALGAS_bool & in_GENERATE_5F_VOLATILE,
                                                                                   const GALGAS_string & in_INITIAL_5F_VALUE_5F_STRING
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "//---------------------------------------------------------------------------------------------------------------------*\n"
    "//" ;
  result << GALGAS_string ("global variable ").add_operation (in_GLOBAL_5F_VAR_5F_NAME, inCompiler COMMA_SOURCE_FILE ("global-var-declaration.galgasTemplate", 2)).reader_stringByLeftAndRightPadding (GALGAS_uint ((uint32_t) 117U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE ("global-var-declaration.galgasTemplate", 2)).stringValue () ;
  result << "*\n"
    "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n" ;
  const enumGalgasBool test_0 = in_GENERATE_5F_VOLATILE.boolEnum () ;
  if (kBoolTrue == test_0) {
    result << "volatile " ;
  }else if (kBoolFalse == test_0) {
  }
  result << function_mangledNameForType (in_GLOBAL_5F_TYPE_5F_NAME, inCompiler COMMA_SOURCE_FILE ("global-var-declaration.galgasTemplate", 9)).stringValue () ;
  result << " " ;
  result << function_mangledNameForGlobalVariable (in_GLOBAL_5F_VAR_5F_NAME, inCompiler COMMA_SOURCE_FILE ("global-var-declaration.galgasTemplate", 11)).stringValue () ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, in_INITIAL_5F_VALUE_5F_STRING.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_1) {
    result << " = " ;
    result << in_INITIAL_5F_VALUE_5F_STRING.stringValue () ;
  }else if (kBoolFalse == test_1) {
  }
  result << " ;\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   Filewrapper 'globalConstantGenerationTemplate'                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_globalConstantGenerationTemplate_0 [1] = {
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_globalConstantGenerationTemplate_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_globalConstantGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_globalConstantGenerationTemplate_0,
  0,
  gWrapperAllDirectories_globalConstantGenerationTemplate_0
) ;


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                         Filewrapper template 'globalConstantGenerationTemplate declaration'                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_globalConstantGenerationTemplate_declaration (C_Compiler * inCompiler,
                                                                                const GALGAS_string & in_GLOBAL_5F_CONSTANT_5F_NAME,
                                                                                const GALGAS_string & in_CONSTANT_5F_VALUE
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "//---------------------------------------------------------------------------------------------------------------------*\n"
    "//" ;
  result << GALGAS_string ("global constant ").add_operation (in_GLOBAL_5F_CONSTANT_5F_NAME, inCompiler COMMA_SOURCE_FILE ("global-constant-declaration.galgasTemplate", 2)).reader_stringByLeftAndRightPadding (GALGAS_uint ((uint32_t) 117U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE ("global-constant-declaration.galgasTemplate", 2)).stringValue () ;
  result << "*\n"
    "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n"
    "#define " ;
  result << function_mangledNameForConstant (in_GLOBAL_5F_CONSTANT_5F_NAME, inCompiler COMMA_SOURCE_FILE ("global-constant-declaration.galgasTemplate", 5)).stringValue () ;
  result << " (" ;
  result << in_CONSTANT_5F_VALUE.stringValue () ;
  result << ")\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Routine 'enterIntegerOperators'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_enterIntegerOperators (GALGAS_lstring inArgument_inIntegerTypeName,
                                    GALGAS_semanticContext & ioArgument_ioContext,
                                    C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  ioArgument_ioContext.mAttribute_mTypeNameSetForIncDec.addAssign_operation (inArgument_inIntegerTypeName.mAttribute_string  COMMA_SOURCE_FILE ("type-integer.galgas", 124)) ;
  GALGAS_unifiedTypeMap_2D_proxy var_selfTypeProxy ;
  {
  GALGAS_unifiedTypeMap_2D_proxy::class_method_makeProxy (ioArgument_ioContext.mAttribute_mTypeMap, inArgument_inIntegerTypeName, var_selfTypeProxy COMMA_SOURCE_FILE ("type-integer.galgas", 126)) ;
  }
  GALGAS_unifiedTypeMap_2D_proxy var_BoolTypeProxy ;
  {
  GALGAS_unifiedTypeMap_2D_proxy::class_method_makeProxy (ioArgument_ioContext.mAttribute_mTypeMap, GALGAS_string ("Bool").reader_nowhere (SOURCE_FILE ("type-integer.galgas", 127)), var_BoolTypeProxy COMMA_SOURCE_FILE ("type-integer.galgas", 127)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mEqualOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 129)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 129)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 129)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 129)), var_BoolTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 128)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mNonEqualOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 133)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 133)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 133)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 133)), var_BoolTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 132)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mStrictInfOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 137)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 137)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 137)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 137)), var_BoolTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 136)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mInfEqualOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 141)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 141)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 141)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 141)), var_BoolTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 140)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mStrictSupOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 145)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 145)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 145)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 145)), var_BoolTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 144)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mSupEqualOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 149)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 149)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 149)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 149)), var_BoolTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 148)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mAndOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 153)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 153)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 153)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 153)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 152)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mOrOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 157)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 157)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 157)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 157)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 156)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mXorOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 161)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 161)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 161)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 161)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 160)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mAddOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 165)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 165)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 165)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 165)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 164)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mAddNoOvfOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 169)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 169)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 169)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 169)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 168)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mSubOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 173)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 173)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 173)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 173)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 172)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mSubNoOvfOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 177)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 177)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 177)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 177)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 176)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mMulOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 181)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 181)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 181)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 181)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 180)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mMulNoOvfOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 185)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 185)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 185)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 185)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 184)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mDivOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 189)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 189)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 189)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 189)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 188)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mDivNoOvfOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 193)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 193)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 193)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 193)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 192)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mModOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 197)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 197)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 197)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 197)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 196)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mLeftShiftOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 201)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 201)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 201)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 201)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 200)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mRightShiftOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inIntegerTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 205)).add_operation (inArgument_inIntegerTypeName.reader_string (SOURCE_FILE ("type-integer.galgas", 205)), inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 205)), inArgument_inIntegerTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-integer.galgas", 205)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 204)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mUnaryMinusOperatorMap.modifier_insertKey (inArgument_inIntegerTypeName, var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-integer.galgas", 208)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       Filewrapper 'integerGenerationTemplate'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_integerGenerationTemplate_0 [1] = {
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_integerGenerationTemplate_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_integerGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_integerGenerationTemplate_0,
  0,
  gWrapperAllDirectories_integerGenerationTemplate_0
) ;


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            Filewrapper template 'integerGenerationTemplate declaration'                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_integerGenerationTemplate_declaration (C_Compiler * inCompiler,
                                                                         const GALGAS_string & in_INTEGER_5F_TYPE_5F_NAME,
                                                                         const GALGAS_string & in_ACTUAL_5F_TYPE_5F_NAME
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "//---------------------------------------------------------------------------------------------------------------------*\n"
    "//" ;
  result << GALGAS_string ("integer ").add_operation (in_INTEGER_5F_TYPE_5F_NAME, inCompiler COMMA_SOURCE_FILE ("integer-declaration.galgasTemplate", 2)).reader_stringByLeftAndRightPadding (GALGAS_uint ((uint32_t) 117U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE ("integer-declaration.galgasTemplate", 2)).stringValue () ;
  result << "*\n"
    "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n"
    "typedef " ;
  result << in_ACTUAL_5F_TYPE_5F_NAME.stringValue () ;
  result << " " ;
  result << function_mangledNameForType (in_INTEGER_5F_TYPE_5F_NAME, inCompiler COMMA_SOURCE_FILE ("integer-declaration.galgasTemplate", 5)).stringValue () ;
  result << " ;\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Routine 'enterStaticStringOperators'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_enterStaticStringOperators (GALGAS_lstring inArgument_inBooleanTypeName,
                                         GALGAS_semanticContext & ioArgument_ioContext,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeMap_2D_proxy var_selfTypeProxy ;
  {
  GALGAS_unifiedTypeMap_2D_proxy::class_method_makeProxy (ioArgument_ioContext.mAttribute_mTypeMap, inArgument_inBooleanTypeName, var_selfTypeProxy COMMA_SOURCE_FILE ("type-static-string.galgas", 63)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mEqualOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 65)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("type-static-string.galgas", 65)), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 65)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-static-string.galgas", 65)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 64)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mNonEqualOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 69)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("type-static-string.galgas", 69)), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 69)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-static-string.galgas", 69)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 68)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mStrictInfOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 73)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("type-static-string.galgas", 73)), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 73)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-static-string.galgas", 73)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 72)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mInfEqualOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 77)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("type-static-string.galgas", 77)), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 77)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-static-string.galgas", 77)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 76)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mStrictSupOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 81)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("type-static-string.galgas", 81)), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 81)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-static-string.galgas", 81)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 80)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mSupEqualOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 85)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("type-static-string.galgas", 85)), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 85)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-static-string.galgas", 85)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 84)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mAndOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 89)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("type-static-string.galgas", 89)), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 89)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-static-string.galgas", 89)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 88)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mAndShortCircuitOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 93)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("type-static-string.galgas", 93)), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 93)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-static-string.galgas", 93)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 92)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mOrOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 97)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("type-static-string.galgas", 97)), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 97)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-static-string.galgas", 97)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 96)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mOrShortCircuitOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 101)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("type-static-string.galgas", 101)), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 101)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-static-string.galgas", 101)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 100)) ;
  }
  {
  ioArgument_ioContext.mAttribute_mXorOperatorMap.modifier_insertKey (GALGAS_lstring::constructor_new (inArgument_inBooleanTypeName.mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 105)).add_operation (inArgument_inBooleanTypeName.reader_string (SOURCE_FILE ("type-static-string.galgas", 105)), inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 105)), inArgument_inBooleanTypeName.mAttribute_location  COMMA_SOURCE_FILE ("type-static-string.galgas", 105)), var_selfTypeProxy, inCompiler COMMA_SOURCE_FILE ("type-static-string.galgas", 104)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    Filewrapper 'literalStringGenerationTemplate'                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_literalStringGenerationTemplate_0 [1] = {
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_literalStringGenerationTemplate_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_literalStringGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_literalStringGenerationTemplate_0,
  0,
  gWrapperAllDirectories_literalStringGenerationTemplate_0
) ;


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                         Filewrapper template 'literalStringGenerationTemplate declaration'                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_literalStringGenerationTemplate_declaration (C_Compiler * inCompiler,
                                                                               const GALGAS_string & in_STATIC_5F_STRING_5F_NAME
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "//---------------------------------------------------------------------------------------------------------------------*\n"
    "//" ;
  result << GALGAS_string ("literal string ").add_operation (in_STATIC_5F_STRING_5F_NAME, inCompiler COMMA_SOURCE_FILE ("literal-string-declaration.galgasTemplate", 2)).reader_stringByLeftAndRightPadding (GALGAS_uint ((uint32_t) 117U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE ("literal-string-declaration.galgasTemplate", 2)).stringValue () ;
  result << "*\n"
    "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n"
    "typedef const char * " ;
  result << function_mangledNameForType (in_STATIC_5F_STRING_5F_NAME, inCompiler COMMA_SOURCE_FILE ("literal-string-declaration.galgasTemplate", 5)).stringValue () ;
  result << " ;\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          Once function 'exceptionModeName'                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_string onceFunction_exceptionModeName (C_Compiler * /* inCompiler */
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("exception") ;
//---
  return result_outResult ;
}



//---------------------------------------------------------------------------------------------------------------------*
//  Function implementation                                                                                            *
//---------------------------------------------------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_exceptionModeName = false ;
static GALGAS_string gOnceFunctionResult_exceptionModeName ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_exceptionModeName (class C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_exceptionModeName) {
    gOnceFunctionResult_exceptionModeName = onceFunction_exceptionModeName (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_exceptionModeName = true ;
  }
  return gOnceFunctionResult_exceptionModeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void releaseOnceFunctionResult_exceptionModeName (void) {
  gOnceFunctionResult_exceptionModeName.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_exceptionModeName (NULL,
                                                               releaseOnceFunctionResult_exceptionModeName) ;

//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_exceptionModeName [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_exceptionModeName (C_Compiler * inCompiler,
                                                                  const cObjectArray & /* inEffectiveParameterArray */,
                                                                  const GALGAS_location & /* inErrorLocation */
                                                                  COMMA_LOCATION_ARGS) {
  return function_exceptionModeName (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_exceptionModeName ("exceptionModeName",
                                                                   functionWithGenericHeader_exceptionModeName,
                                                                   & kTypeDescriptor_GALGAS_string,
                                                                   0,
                                                                   functionArgs_exceptionModeName) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Filewrapper 'functionGenerationTemplate'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_functionGenerationTemplate_0 [1] = {
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_functionGenerationTemplate_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_functionGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_functionGenerationTemplate_0,
  0,
  gWrapperAllDirectories_functionGenerationTemplate_0
) ;


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            Filewrapper template 'functionGenerationTemplate declaration'                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_functionGenerationTemplate_declaration (C_Compiler * inCompiler,
                                                                          const GALGAS_string & in_FUNCTION_5F_NAME,
                                                                          const GALGAS_funcFormalArgumentListForGeneration & in_FORMAL_5F_ARGUMENT_5F_LIST,
                                                                          const GALGAS_unifiedTypeMap_2D_proxy & in_RESULT_5F_TYPE
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  uint32_t columnMarker = 0 ;
  result << "//---------------------------------------------------------------------------------------------------------------------*\n"
    "//" ;
  result << GALGAS_string ("func ").add_operation (in_FUNCTION_5F_NAME, inCompiler COMMA_SOURCE_FILE ("function-declaration.galgasTemplate", 2)).reader_stringByLeftAndRightPadding (GALGAS_uint ((uint32_t) 117U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE ("function-declaration.galgasTemplate", 2)).stringValue () ;
  result << "*\n"
    "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n"
    "static " ;
  result << function_mangledNameForType (in_RESULT_5F_TYPE.reader_key (inCompiler COMMA_SOURCE_FILE ("function-declaration.galgasTemplate", 5)), inCompiler COMMA_SOURCE_FILE ("function-declaration.galgasTemplate", 5)).stringValue () ;
  result << " " ;
  result << function_mangledNameForFunction (in_FUNCTION_5F_NAME, inCompiler COMMA_SOURCE_FILE ("function-declaration.galgasTemplate", 5)).stringValue () ;
  result << " (" ;
  columnMarker = result.currentColumn () ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, in_FORMAL_5F_ARGUMENT_5F_LIST.reader_length (SOURCE_FILE ("function-declaration.galgasTemplate", 6)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    result << "void" ;
  }else if (kBoolFalse == test_0) {
    GALGAS_uint index_514_ (0) ;
    if (in_FORMAL_5F_ARGUMENT_5F_LIST.isValid ()) {
      cEnumerator_funcFormalArgumentListForGeneration enumerator_514 (in_FORMAL_5F_ARGUMENT_5F_LIST, kEnumeration_up) ;
      while (enumerator_514.hasCurrentObject ()) {
        result << function_mangledNameForType (enumerator_514.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("function-declaration.galgasTemplate", 11)), inCompiler COMMA_SOURCE_FILE ("function-declaration.galgasTemplate", 11)).stringValue () ;
        result << " " ;
        result << enumerator_514.current_mFormalArgumentName (HERE).stringValue () ;
        if (enumerator_514.hasNextObject ()) {
          result << ",\n" ;
          result.appendSpacesUntilColumn (columnMarker) ;
        }
        index_514_.increment () ;
        enumerator_514.gotoNextObject () ;
      }
    }
  }
  result << ") ;\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Filewrapper template 'functionGenerationTemplate implementation'                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_functionGenerationTemplate_implementation (C_Compiler * inCompiler,
                                                                             const GALGAS_string & in_FUNCTION_5F_NAME,
                                                                             const GALGAS_funcFormalArgumentListForGeneration & in_FORMAL_5F_ARGUMENT_5F_LIST,
                                                                             const GALGAS_instructionListIR & in_INSTRUCTION_5F_GENERATION_5F_LIST,
                                                                             const GALGAS_unifiedTypeMap_2D_proxy & in_RESULT_5F_TYPE,
                                                                             const GALGAS_string & in_RESULT_5F_VAR_5F_NAME
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  uint32_t columnMarker = 0 ;
  result << "//---------------------------------------------------------------------------------------------------------------------*\n"
    "//" ;
  result << GALGAS_string ("func ").add_operation (in_FUNCTION_5F_NAME, inCompiler COMMA_SOURCE_FILE ("function-implementation.galgasTemplate", 2)).reader_stringByLeftAndRightPadding (GALGAS_uint ((uint32_t) 117U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE ("function-implementation.galgasTemplate", 2)).stringValue () ;
  result << "*\n"
    "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n"
    "static " ;
  result << function_mangledNameForType (in_RESULT_5F_TYPE.reader_key (inCompiler COMMA_SOURCE_FILE ("function-implementation.galgasTemplate", 5)), inCompiler COMMA_SOURCE_FILE ("function-implementation.galgasTemplate", 5)).stringValue () ;
  result << " " ;
  result << function_mangledNameForFunction (in_FUNCTION_5F_NAME, inCompiler COMMA_SOURCE_FILE ("function-implementation.galgasTemplate", 5)).stringValue () ;
  result << " (" ;
  columnMarker = result.currentColumn () ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, in_FORMAL_5F_ARGUMENT_5F_LIST.reader_length (SOURCE_FILE ("function-implementation.galgasTemplate", 6)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    result << "void" ;
  }else if (kBoolFalse == test_0) {
    GALGAS_uint index_514_ (0) ;
    if (in_FORMAL_5F_ARGUMENT_5F_LIST.isValid ()) {
      cEnumerator_funcFormalArgumentListForGeneration enumerator_514 (in_FORMAL_5F_ARGUMENT_5F_LIST, kEnumeration_up) ;
      while (enumerator_514.hasCurrentObject ()) {
        result << function_mangledNameForType (enumerator_514.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("function-implementation.galgasTemplate", 11)), inCompiler COMMA_SOURCE_FILE ("function-implementation.galgasTemplate", 11)).stringValue () ;
        result << " " ;
        result << enumerator_514.current_mFormalArgumentName (HERE).stringValue () ;
        if (enumerator_514.hasNextObject ()) {
          result << ",\n" ;
          result.appendSpacesUntilColumn (columnMarker) ;
        }
        index_514_.increment () ;
        enumerator_514.gotoNextObject () ;
      }
    }
  }
  result << ") {\n"
    "  " ;
  result << function_mangledNameForType (in_RESULT_5F_TYPE.reader_key (inCompiler COMMA_SOURCE_FILE ("function-implementation.galgasTemplate", 18)), inCompiler COMMA_SOURCE_FILE ("function-implementation.galgasTemplate", 18)).stringValue () ;
  result << " " ;
  result << function_mangledNameForLocalVariable (in_RESULT_5F_VAR_5F_NAME, inCompiler COMMA_SOURCE_FILE ("function-implementation.galgasTemplate", 18)).stringValue () ;
  result << " ;\n" ;
  result << categoryReader_instructionListCode (in_INSTRUCTION_5F_GENERATION_5F_LIST, inCompiler COMMA_SOURCE_FILE ("function-implementation.galgasTemplate", 19)).stringValue () ;
  result << "  return " ;
  result << function_mangledNameForLocalVariable (in_RESULT_5F_VAR_5F_NAME, inCompiler COMMA_SOURCE_FILE ("function-implementation.galgasTemplate", 20)).stringValue () ;
  result << " ;\n"
    "}\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Function 'mangledName'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string function_mangledName (const GALGAS_procedureKindAST & constinArgument_inProcedureKind,
                                    const GALGAS_string & constinArgument_inProcedureName,
                                    GALGAS_procFormalArgumentList inArgument_inProcFormalArgumentList,
                                    C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outMangledName ; // Returned variable
  result_outMangledName = GALGAS_string::makeEmptyString () ;
  switch (constinArgument_inProcedureKind.enumValue ()) {
  case GALGAS_procedureKindAST::kNotBuilt:
    break ;
  case GALGAS_procedureKindAST::kEnum_standAloneProc:
    {
    }
    break ;
  case GALGAS_procedureKindAST::kEnum_structureProc:
    {
      const cEnumAssociatedValues_procedureKindAST_structureProc * extractPtr_6797 = (const cEnumAssociatedValues_procedureKindAST_structureProc *) (constinArgument_inProcedureKind.unsafePointer ()) ;
      const GALGAS_lstring extractedValue_structureTypeName = extractPtr_6797->mAssociatedValue0 ;
      result_outMangledName.dotAssign_operation (extractedValue_structureTypeName.mAttribute_string.add_operation (GALGAS_string ("_"), inCompiler COMMA_SOURCE_FILE ("proc-declaration.galgas", 197))  COMMA_SOURCE_FILE ("proc-declaration.galgas", 197)) ;
    }
    break ;
  }
  result_outMangledName.dotAssign_operation (constinArgument_inProcedureName  COMMA_SOURCE_FILE ("proc-declaration.galgas", 199)) ;
  cEnumerator_procFormalArgumentList enumerator_6903 (inArgument_inProcFormalArgumentList, kEnumeration_up) ;
  while (enumerator_6903.hasCurrentObject ()) {
    result_outMangledName.dotAssign_operation (GALGAS_string (" ")  COMMA_SOURCE_FILE ("proc-declaration.galgas", 201)) ;
    switch (enumerator_6903.current_mFormalArgumentPassingMode (HERE).enumValue ()) {
    case GALGAS_procFormalArgumentPassingMode::kNotBuilt:
      break ;
    case GALGAS_procFormalArgumentPassingMode::kEnum_input:
      {
        result_outMangledName.dotAssign_operation (GALGAS_string ("\?")  COMMA_SOURCE_FILE ("proc-declaration.galgas", 203)) ;
      }
      break ;
    case GALGAS_procFormalArgumentPassingMode::kEnum_output:
      {
        result_outMangledName.dotAssign_operation (GALGAS_string ("!")  COMMA_SOURCE_FILE ("proc-declaration.galgas", 204)) ;
      }
      break ;
    case GALGAS_procFormalArgumentPassingMode::kEnum_inputOutput:
      {
        result_outMangledName.dotAssign_operation (GALGAS_string ("\?!")  COMMA_SOURCE_FILE ("proc-declaration.galgas", 205)) ;
      }
      break ;
    }
    result_outMangledName.dotAssign_operation (enumerator_6903.current_mSelector (HERE).mAttribute_string  COMMA_SOURCE_FILE ("proc-declaration.galgas", 207)) ;
    enumerator_6903.gotoNextObject () ;
  }
//---
  return result_outMangledName ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_mangledName [4] = {
  & kTypeDescriptor_GALGAS_procedureKindAST,
  & kTypeDescriptor_GALGAS_string,
  & kTypeDescriptor_GALGAS_procFormalArgumentList,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_mangledName (C_Compiler * inCompiler,
                                                            const cObjectArray & inEffectiveParameterArray,
                                                            const GALGAS_location & /* §§ inErrorLocation */
                                                            COMMA_LOCATION_ARGS) {
  const GALGAS_procedureKindAST operand0 = GALGAS_procedureKindAST::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                                   inCompiler
                                                                                   COMMA_THERE) ;
  const GALGAS_string operand1 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  const GALGAS_procFormalArgumentList operand2 = GALGAS_procFormalArgumentList::extractObject (inEffectiveParameterArray.objectAtIndex (2 COMMA_HERE),
                                                                                               inCompiler
                                                                                               COMMA_THERE) ;
  return function_mangledName (operand0,
                               operand1,
                               operand2,
                               inCompiler
                               COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_mangledName ("mangledName",
                                                             functionWithGenericHeader_mangledName,
                                                             & kTypeDescriptor_GALGAS_string,
                                                             3,
                                                             functionArgs_mangledName) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Filewrapper 'procedureGenerationTemplate'                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_procedureGenerationTemplate_0 [1] = {
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_procedureGenerationTemplate_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_procedureGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_procedureGenerationTemplate_0,
  0,
  gWrapperAllDirectories_procedureGenerationTemplate_0
) ;


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           Filewrapper template 'procedureGenerationTemplate declaration'                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_procedureGenerationTemplate_declaration (C_Compiler * inCompiler,
                                                                           const GALGAS_string & in_PROCEDURE_5F_MANGLED_5F_NAME,
                                                                           const GALGAS_procFormalArgumentListForGeneration & in_FORMAL_5F_ARGUMENT_5F_LIST
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  uint32_t columnMarker = 0 ;
  result << "//---------------------------------------------------------------------------------------------------------------------*\n"
    "//" ;
  result << GALGAS_string ("proc ").add_operation (in_PROCEDURE_5F_MANGLED_5F_NAME, inCompiler COMMA_SOURCE_FILE ("procedure-declaration.galgasTemplate", 2)).reader_stringByLeftAndRightPadding (GALGAS_uint ((uint32_t) 117U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE ("procedure-declaration.galgasTemplate", 2)).stringValue () ;
  result << "*\n"
    "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n"
    "static void " ;
  result << in_PROCEDURE_5F_MANGLED_5F_NAME.stringValue () ;
  result << " (" ;
  columnMarker = result.currentColumn () ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, in_FORMAL_5F_ARGUMENT_5F_LIST.reader_length (SOURCE_FILE ("procedure-declaration.galgasTemplate", 6)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    result << "void" ;
  }else if (kBoolFalse == test_0) {
    GALGAS_uint index_458_ (0) ;
    if (in_FORMAL_5F_ARGUMENT_5F_LIST.isValid ()) {
      cEnumerator_procFormalArgumentListForGeneration enumerator_458 (in_FORMAL_5F_ARGUMENT_5F_LIST, kEnumeration_up) ;
      while (enumerator_458.hasCurrentObject ()) {
        result << function_mangledNameForType (enumerator_458.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("procedure-declaration.galgasTemplate", 11)), inCompiler COMMA_SOURCE_FILE ("procedure-declaration.galgasTemplate", 11)).stringValue () ;
        switch (enumerator_458.current_mFormalArgumentKind (HERE).enumValue ()) {
        case GALGAS_procFormalArgumentPassingMode::kNotBuilt :
          break ;
        case GALGAS_procFormalArgumentPassingMode::kEnum_input :
          break ;
        case GALGAS_procFormalArgumentPassingMode::kEnum_output :
        case GALGAS_procFormalArgumentPassingMode::kEnum_inputOutput :
          {
            result << " *" ;
          }
          break ;
        }
        result << " " ;
        result << enumerator_458.current_mFormalArgumentName (HERE).stringValue () ;
        if (enumerator_458.hasNextObject ()) {
          result << ",\n" ;
          result.appendSpacesUntilColumn (columnMarker) ;
        }
        index_458_.increment () ;
        enumerator_458.gotoNextObject () ;
      }
    }
  }
  result << ") ;\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Filewrapper template 'procedureGenerationTemplate implementation'                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_procedureGenerationTemplate_implementation (C_Compiler * inCompiler,
                                                                              const GALGAS_string & in_PROCEDURE_5F_MANGLED_5F_NAME,
                                                                              const GALGAS_procFormalArgumentListForGeneration & in_FORMAL_5F_ARGUMENT_5F_LIST,
                                                                              const GALGAS_instructionListIR & in_INSTRUCTION_5F_GENERATION_5F_LIST
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  uint32_t columnMarker = 0 ;
  result << "//---------------------------------------------------------------------------------------------------------------------*\n"
    "//" ;
  result << GALGAS_string ("proc ").add_operation (in_PROCEDURE_5F_MANGLED_5F_NAME, inCompiler COMMA_SOURCE_FILE ("procedure-implementation.galgasTemplate", 2)).reader_stringByLeftAndRightPadding (GALGAS_uint ((uint32_t) 117U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE ("procedure-implementation.galgasTemplate", 2)).stringValue () ;
  result << "*\n"
    "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n"
    "static void " ;
  result << in_PROCEDURE_5F_MANGLED_5F_NAME.stringValue () ;
  result << " (" ;
  columnMarker = result.currentColumn () ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, in_FORMAL_5F_ARGUMENT_5F_LIST.reader_length (SOURCE_FILE ("procedure-implementation.galgasTemplate", 6)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    result << "void" ;
  }else if (kBoolFalse == test_0) {
    GALGAS_uint index_458_ (0) ;
    if (in_FORMAL_5F_ARGUMENT_5F_LIST.isValid ()) {
      cEnumerator_procFormalArgumentListForGeneration enumerator_458 (in_FORMAL_5F_ARGUMENT_5F_LIST, kEnumeration_up) ;
      while (enumerator_458.hasCurrentObject ()) {
        result << function_mangledNameForType (enumerator_458.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("procedure-implementation.galgasTemplate", 11)), inCompiler COMMA_SOURCE_FILE ("procedure-implementation.galgasTemplate", 11)).stringValue () ;
        switch (enumerator_458.current_mFormalArgumentKind (HERE).enumValue ()) {
        case GALGAS_procFormalArgumentPassingMode::kNotBuilt :
          break ;
        case GALGAS_procFormalArgumentPassingMode::kEnum_input :
          break ;
        case GALGAS_procFormalArgumentPassingMode::kEnum_output :
        case GALGAS_procFormalArgumentPassingMode::kEnum_inputOutput :
          {
            result << " *" ;
          }
          break ;
        }
        result << " " ;
        result << enumerator_458.current_mFormalArgumentName (HERE).stringValue () ;
        if (enumerator_458.hasNextObject ()) {
          result << ",\n" ;
          result.appendSpacesUntilColumn (columnMarker) ;
        }
        index_458_.increment () ;
        enumerator_458.gotoNextObject () ;
      }
    }
  }
  result << ") {\n" ;
  result << categoryReader_instructionListCode (in_INSTRUCTION_5F_GENERATION_5F_LIST, inCompiler COMMA_SOURCE_FILE ("procedure-implementation.galgasTemplate", 22)).stringValue () ;
  result << "}\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Filewrapper 'registerGenerationTemplate'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_registerGenerationTemplate_0 [1] = {
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_registerGenerationTemplate_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_registerGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_registerGenerationTemplate_0,
  0,
  gWrapperAllDirectories_registerGenerationTemplate_0
) ;


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            Filewrapper template 'registerGenerationTemplate declaration'                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_registerGenerationTemplate_declaration (C_Compiler * inCompiler,
                                                                          const GALGAS_string & in_REGISTER_5F_TYPE_5F_NAME,
                                                                          const GALGAS_string & in_REGISTER_5F_NAME,
                                                                          const GALGAS_uint_36__34_ & in_REGISTER_5F_ADDRESS
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "//---------------------------------------------------------------------------------------------------------------------*\n"
    "//" ;
  result << GALGAS_string ("register ").add_operation (in_REGISTER_5F_NAME, inCompiler COMMA_SOURCE_FILE ("register-declaration.galgasTemplate", 2)).reader_stringByLeftAndRightPadding (GALGAS_uint ((uint32_t) 117U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE ("register-declaration.galgasTemplate", 2)).stringValue () ;
  result << "*\n"
    "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n"
    "#define " ;
  result << function_mangledNameForRegister (in_REGISTER_5F_NAME, inCompiler COMMA_SOURCE_FILE ("register-declaration.galgasTemplate", 5)).stringValue () ;
  result << " (* ((volatile " ;
  result << function_mangledNameForType (in_REGISTER_5F_TYPE_5F_NAME, inCompiler COMMA_SOURCE_FILE ("register-declaration.galgasTemplate", 5)).stringValue () ;
  result << " *) " ;
  result << in_REGISTER_5F_ADDRESS.reader_hexString (SOURCE_FILE ("register-declaration.galgasTemplate", 5)).stringValue () ;
  result << "))\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Function 'initialVariableMap'                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap function_initialVariableMap (const GALGAS_semanticContext & constinArgument_inContext,
                                                GALGAS_bool inArgument_inGlobalsAreConstant,
                                                C_Compiler * inCompiler
                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_variableMap result_outVariableMap ; // Returned variable
  GALGAS_stringset var_allModeSet = constinArgument_inContext.mAttribute_mModeMap.reader_keySet (SOURCE_FILE ("variable-map.galgas", 64)) ;
  result_outVariableMap = GALGAS_variableMap::constructor_emptyMap (SOURCE_FILE ("variable-map.galgas", 66)) ;
  GALGAS_procFormalArgumentListForGeneration var_formalArguments = GALGAS_procFormalArgumentListForGeneration::constructor_emptyList (SOURCE_FILE ("variable-map.galgas", 67)) ;
  cEnumerator_registerMap enumerator_2507 (constinArgument_inContext.mAttribute_mRegisterMap, kEnumeration_up) ;
  while (enumerator_2507.hasCurrentObject ()) {
    GALGAS_bool test_0 = enumerator_2507.current_mIsReadOnly (HERE) ;
    if (kBoolTrue != test_0.boolEnum ()) {
      test_0 = inArgument_inGlobalsAreConstant ;
    }
    const enumGalgasBool test_1 = test_0.boolEnum () ;
    if (kBoolTrue == test_1) {
      {
      result_outVariableMap.modifier_insertUsedLocalConstant (enumerator_2507.current_lkey (HERE), enumerator_2507.current_mType (HERE), var_allModeSet, function_mangledNameForRegister (enumerator_2507.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("variable-map.galgas", 74)), GALGAS_variableKindIR::constructor_register (enumerator_2507.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("variable-map.galgas", 75)), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE ("variable-map.galgas", 70)) ;
      }
    }else if (kBoolFalse == test_1) {
      {
      result_outVariableMap.modifier_insertDefinedLocalVariable (enumerator_2507.current_lkey (HERE), enumerator_2507.current_mType (HERE), var_allModeSet, function_mangledNameForRegister (enumerator_2507.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("variable-map.galgas", 83)), GALGAS_variableKindIR::constructor_register (enumerator_2507.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("variable-map.galgas", 84)), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE ("variable-map.galgas", 79)) ;
      }
    }
    enumerator_2507.gotoNextObject () ;
  }
  cEnumerator_globalConstantMap enumerator_3117 (constinArgument_inContext.mAttribute_mGlobalConstantMap, kEnumeration_up) ;
  while (enumerator_3117.hasCurrentObject ()) {
    {
    result_outVariableMap.modifier_insertUsedLocalConstant (enumerator_3117.current_lkey (HERE), enumerator_3117.current_mConstantType (HERE), var_allModeSet, function_mangledNameForConstant (enumerator_3117.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("variable-map.galgas", 95)), GALGAS_variableKindIR::constructor_globalConstant (enumerator_3117.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("variable-map.galgas", 96)), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE ("variable-map.galgas", 91)) ;
    }
    enumerator_3117.gotoNextObject () ;
  }
  cEnumerator_globalVariableMap enumerator_3459 (constinArgument_inContext.mAttribute_mGlobalVariableMap, kEnumeration_up) ;
  while (enumerator_3459.hasCurrentObject ()) {
    const enumGalgasBool test_2 = inArgument_inGlobalsAreConstant.boolEnum () ;
    if (kBoolTrue == test_2) {
      {
      result_outVariableMap.modifier_insertUsedLocalConstant (enumerator_3459.current_lkey (HERE), enumerator_3459.current_mVariableType (HERE), enumerator_3459.current_mExecutionModeSet (HERE), function_mangledNameForGlobalVariable (enumerator_3459.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("variable-map.galgas", 107)), GALGAS_variableKindIR::constructor_globalVariable (enumerator_3459.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("variable-map.galgas", 108)), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE ("variable-map.galgas", 103)) ;
      }
    }else if (kBoolFalse == test_2) {
      {
      result_outVariableMap.modifier_insertGlobalVariable (enumerator_3459.current_lkey (HERE), enumerator_3459.current_mVariableType (HERE), enumerator_3459.current_mExecutionModeSet (HERE), function_mangledNameForGlobalVariable (enumerator_3459.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("variable-map.galgas", 116)), GALGAS_variableKindIR::constructor_globalVariable (enumerator_3459.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("variable-map.galgas", 117)), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE ("variable-map.galgas", 112)) ;
      }
    }
    enumerator_3459.gotoNextObject () ;
  }
//---
  return result_outVariableMap ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_initialVariableMap [3] = {
  & kTypeDescriptor_GALGAS_semanticContext,
  & kTypeDescriptor_GALGAS_bool,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_initialVariableMap (C_Compiler * inCompiler,
                                                                   const cObjectArray & inEffectiveParameterArray,
                                                                   const GALGAS_location & /* §§ inErrorLocation */
                                                                   COMMA_LOCATION_ARGS) {
  const GALGAS_semanticContext operand0 = GALGAS_semanticContext::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                                 inCompiler
                                                                                 COMMA_THERE) ;
  const GALGAS_bool operand1 = GALGAS_bool::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE),
                                                           inCompiler
                                                           COMMA_THERE) ;
  return function_initialVariableMap (operand0,
                                      operand1,
                                      inCompiler
                                      COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_initialVariableMap ("initialVariableMap",
                                                                    functionWithGenericHeader_initialVariableMap,
                                                                    & kTypeDescriptor_GALGAS_variableMap,
                                                                    2,
                                                                    functionArgs_initialVariableMap) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Routine 'getNewTempVariable'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_getNewTempVariable (GALGAS_uint & ioArgument_ioTemporaryIndex,
                                 GALGAS_variableKindIR & outArgument_outTempVariable,
                                 C_Compiler * inCompiler
                                 COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outTempVariable.drop () ; // Release 'out' argument
  outArgument_outTempVariable = GALGAS_variableKindIR::constructor_temporaryConstant (ioArgument_ioTemporaryIndex  COMMA_SOURCE_FILE ("variable-map.galgas", 130)) ;
  ioArgument_ioTemporaryIndex.increment_operation (inCompiler  COMMA_SOURCE_FILE ("variable-map.galgas", 131)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Routine 'buildOrderedDeclarationList'                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_buildOrderedDeclarationList (GALGAS_declarationListAST inArgument_inDeclarationListAST,
                                          const GALGAS_procedureDeclarationListAST constinArgument_inProcedureListAST,
                                          GALGAS_location inArgument_inEndOfSourceFile,
                                          GALGAS_declarationListAST & outArgument_outDeclarationListAST,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outDeclarationListAST.drop () ; // Release 'out' argument
  GALGAS_semanticTypePrecedenceGraph var_precedenceGraph = GALGAS_semanticTypePrecedenceGraph::constructor_emptyGraph (SOURCE_FILE ("ordered-declaration-list.galgas", 28)) ;
  cEnumerator_declarationListAST enumerator_1704 (inArgument_inDeclarationListAST, kEnumeration_up) ;
  while (enumerator_1704.hasCurrentObject ()) {
    callCategoryMethod_enterInPrecedenceGraph ((const cPtr_abstractDeclaration *) enumerator_1704.current_mDeclaration (HERE).ptr (), var_precedenceGraph, inCompiler COMMA_SOURCE_FILE ("ordered-declaration-list.galgas", 30)) ;
    enumerator_1704.gotoNextObject () ;
  }
  cEnumerator_procedureDeclarationListAST enumerator_1813 (constinArgument_inProcedureListAST, kEnumeration_up) ;
  while (enumerator_1813.hasCurrentObject ()) {
    categoryMethod_enterInPrecedenceGraph (enumerator_1813.current (HERE), var_precedenceGraph, inCompiler COMMA_SOURCE_FILE ("ordered-declaration-list.galgas", 33)) ;
    enumerator_1813.gotoNextObject () ;
  }
  outArgument_outDeclarationListAST = GALGAS_declarationListAST::constructor_emptyList (SOURCE_FILE ("ordered-declaration-list.galgas", 36)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_precedenceGraph.reader_undefinedNodeCount (SOURCE_FILE ("ordered-declaration-list.galgas", 37)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    cEnumerator_lstringlist enumerator_2026 (var_precedenceGraph.reader_undefinedNodeReferenceList (SOURCE_FILE ("ordered-declaration-list.galgas", 38)), kEnumeration_up) ;
    while (enumerator_2026.hasCurrentObject ()) {
      GALGAS_location location_1 (enumerator_2026.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").add_operation (enumerator_2026.current_mValue (HERE).reader_string (SOURCE_FILE ("ordered-declaration-list.galgas", 39)), inCompiler COMMA_SOURCE_FILE ("ordered-declaration-list.galgas", 39)).add_operation (GALGAS_string ("' type is not defined"), inCompiler COMMA_SOURCE_FILE ("ordered-declaration-list.galgas", 39))  COMMA_SOURCE_FILE ("ordered-declaration-list.galgas", 39)) ;
      enumerator_2026.gotoNextObject () ;
    }
  }else if (kBoolFalse == test_0) {
    GALGAS_declarationListAST var_unsortedSemanticDeclarationListAST ;
    GALGAS_lstringlist joker_2182 ; // Joker input parameter
    GALGAS_lstringlist joker_2257 ; // Joker input parameter
    var_precedenceGraph.method_topologicalSort (outArgument_outDeclarationListAST, joker_2182, var_unsortedSemanticDeclarationListAST, joker_2257, inCompiler COMMA_SOURCE_FILE ("ordered-declaration-list.galgas", 42)) ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE ("ordered-declaration-list.galgas", 48)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_string var_s = GALGAS_string ("semantic analysis not performed, ").add_operation (var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE ("ordered-declaration-list.galgas", 50)).reader_string (SOURCE_FILE ("ordered-declaration-list.galgas", 49)), inCompiler COMMA_SOURCE_FILE ("ordered-declaration-list.galgas", 49)).add_operation (GALGAS_string (" declarations are involved in circular definition:"), inCompiler COMMA_SOURCE_FILE ("ordered-declaration-list.galgas", 50)) ;
      cEnumerator_declarationListAST enumerator_2551 (var_unsortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_2551.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "-  ").add_operation (callCategoryReader_keyRepresentation ((const cPtr_abstractDeclaration *) enumerator_2551.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("ordered-declaration-list.galgas", 53)), inCompiler COMMA_SOURCE_FILE ("ordered-declaration-list.galgas", 53))  COMMA_SOURCE_FILE ("ordered-declaration-list.galgas", 53)) ;
        enumerator_2551.gotoNextObject () ;
      }
      inCompiler->emitSemanticError (inArgument_inEndOfSourceFile, var_s  COMMA_SOURCE_FILE ("ordered-declaration-list.galgas", 55)) ;
      cEnumerator_declarationListAST enumerator_2706 (var_unsortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_2706.hasCurrentObject ()) {
        inCompiler->emitSemanticError (callCategoryReader_location ((const cPtr_abstractDeclaration *) enumerator_2706.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("ordered-declaration-list.galgas", 57)), GALGAS_string ("the ").add_operation (callCategoryReader_keyRepresentation ((const cPtr_abstractDeclaration *) enumerator_2706.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("ordered-declaration-list.galgas", 57)), inCompiler COMMA_SOURCE_FILE ("ordered-declaration-list.galgas", 57)).add_operation (GALGAS_string (" type is declared here"), inCompiler COMMA_SOURCE_FILE ("ordered-declaration-list.galgas", 57))  COMMA_SOURCE_FILE ("ordered-declaration-list.galgas", 57)) ;
        enumerator_2706.gotoNextObject () ;
      }
    }
  }
}


