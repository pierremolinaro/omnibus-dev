#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "all-declarations-2.h"


//---------------------------------------------------------------------------------------------------------------------*

cMapElement_routineMapIR::cMapElement_routineMapIR (const GALGAS_lstring & inKey,
                                                    const GALGAS_procFormalArgumentListForGeneration & in_mFormalArgumentListForGeneration,
                                                    const GALGAS_instructionListIR & in_mInstructionGenerationList,
                                                    const GALGAS_bool & in_mIsRequired,
                                                    const GALGAS_bool & in_mWarnIfUnused,
                                                    const GALGAS_bool & in_mWeak,
                                                    const GALGAS_bool & in_mNullOnNoPanic,
                                                    const GALGAS_bool & in_mGlobal,
                                                    const GALGAS_routineKind & in_mKind,
                                                    const GALGAS_unifiedTypeMap_2D_proxy & in_mReturnType
                                                    COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mFormalArgumentListForGeneration (in_mFormalArgumentListForGeneration),
mAttribute_mInstructionGenerationList (in_mInstructionGenerationList),
mAttribute_mIsRequired (in_mIsRequired),
mAttribute_mWarnIfUnused (in_mWarnIfUnused),
mAttribute_mWeak (in_mWeak),
mAttribute_mNullOnNoPanic (in_mNullOnNoPanic),
mAttribute_mGlobal (in_mGlobal),
mAttribute_mKind (in_mKind),
mAttribute_mReturnType (in_mReturnType) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_routineMapIR::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFormalArgumentListForGeneration.isValid () && mAttribute_mInstructionGenerationList.isValid () && mAttribute_mIsRequired.isValid () && mAttribute_mWarnIfUnused.isValid () && mAttribute_mWeak.isValid () && mAttribute_mNullOnNoPanic.isValid () && mAttribute_mGlobal.isValid () && mAttribute_mKind.isValid () && mAttribute_mReturnType.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_routineMapIR::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_routineMapIR (mAttribute_lkey, mAttribute_mFormalArgumentListForGeneration, mAttribute_mInstructionGenerationList, mAttribute_mIsRequired, mAttribute_mWarnIfUnused, mAttribute_mWeak, mAttribute_mNullOnNoPanic, mAttribute_mGlobal, mAttribute_mKind, mAttribute_mReturnType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_routineMapIR::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFormalArgumentListForGeneration" ":" ;
  mAttribute_mFormalArgumentListForGeneration.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionGenerationList" ":" ;
  mAttribute_mInstructionGenerationList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsRequired" ":" ;
  mAttribute_mIsRequired.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mWarnIfUnused" ":" ;
  mAttribute_mWarnIfUnused.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mWeak" ":" ;
  mAttribute_mWeak.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mNullOnNoPanic" ":" ;
  mAttribute_mNullOnNoPanic.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGlobal" ":" ;
  mAttribute_mGlobal.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mKind" ":" ;
  mAttribute_mKind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mReturnType" ":" ;
  mAttribute_mReturnType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_routineMapIR::compare (const cCollectionElement * inOperand) const {
  cMapElement_routineMapIR * operand = (cMapElement_routineMapIR *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mFormalArgumentListForGeneration.objectCompare (operand->mAttribute_mFormalArgumentListForGeneration) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInstructionGenerationList.objectCompare (operand->mAttribute_mInstructionGenerationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIsRequired.objectCompare (operand->mAttribute_mIsRequired) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mWarnIfUnused.objectCompare (operand->mAttribute_mWarnIfUnused) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mWeak.objectCompare (operand->mAttribute_mWeak) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mNullOnNoPanic.objectCompare (operand->mAttribute_mNullOnNoPanic) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mGlobal.objectCompare (operand->mAttribute_mGlobal) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mKind.objectCompare (operand->mAttribute_mKind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mReturnType.objectCompare (operand->mAttribute_mReturnType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapIR::GALGAS_routineMapIR (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapIR::GALGAS_routineMapIR (const GALGAS_routineMapIR & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapIR & GALGAS_routineMapIR::operator = (const GALGAS_routineMapIR & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapIR GALGAS_routineMapIR::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_routineMapIR result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapIR GALGAS_routineMapIR::constructor_mapWithMapToOverride (const GALGAS_routineMapIR & inMapToOverride
                                                                           COMMA_LOCATION_ARGS) {
  GALGAS_routineMapIR result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapIR GALGAS_routineMapIR::getter_overriddenMap (C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  GALGAS_routineMapIR result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapIR::addAssign_operation (const GALGAS_lstring & inKey,
                                               const GALGAS_procFormalArgumentListForGeneration & inArgument0,
                                               const GALGAS_instructionListIR & inArgument1,
                                               const GALGAS_bool & inArgument2,
                                               const GALGAS_bool & inArgument3,
                                               const GALGAS_bool & inArgument4,
                                               const GALGAS_bool & inArgument5,
                                               const GALGAS_bool & inArgument6,
                                               const GALGAS_routineKind & inArgument7,
                                               const GALGAS_unifiedTypeMap_2D_proxy & inArgument8,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_routineMapIR * p = NULL ;
  macroMyNew (p, cMapElement_routineMapIR (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6, inArgument7, inArgument8 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@routineMapIR insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapIR::setter_insertKey (GALGAS_lstring inKey,
                                            GALGAS_procFormalArgumentListForGeneration inArgument0,
                                            GALGAS_instructionListIR inArgument1,
                                            GALGAS_bool inArgument2,
                                            GALGAS_bool inArgument3,
                                            GALGAS_bool inArgument4,
                                            GALGAS_bool inArgument5,
                                            GALGAS_bool inArgument6,
                                            GALGAS_routineKind inArgument7,
                                            GALGAS_unifiedTypeMap_2D_proxy inArgument8,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  cMapElement_routineMapIR * p = NULL ;
  macroMyNew (p, cMapElement_routineMapIR (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6, inArgument7, inArgument8 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "routine '%K' is already defined" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_routineMapIR_searchKey = "** internal error **" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapIR::method_searchKey (GALGAS_lstring inKey,
                                            GALGAS_procFormalArgumentListForGeneration & outArgument0,
                                            GALGAS_instructionListIR & outArgument1,
                                            GALGAS_bool & outArgument2,
                                            GALGAS_bool & outArgument3,
                                            GALGAS_bool & outArgument4,
                                            GALGAS_bool & outArgument5,
                                            GALGAS_bool & outArgument6,
                                            GALGAS_routineKind & outArgument7,
                                            GALGAS_unifiedTypeMap_2D_proxy & outArgument8,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) const {
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) performSearch (inKey,
                                                                                           inCompiler,
                                                                                           kSearchErrorMessage_routineMapIR_searchKey
                                                                                           COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
    outArgument7.drop () ;
    outArgument8.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    outArgument0 = p->mAttribute_mFormalArgumentListForGeneration ;
    outArgument1 = p->mAttribute_mInstructionGenerationList ;
    outArgument2 = p->mAttribute_mIsRequired ;
    outArgument3 = p->mAttribute_mWarnIfUnused ;
    outArgument4 = p->mAttribute_mWeak ;
    outArgument5 = p->mAttribute_mNullOnNoPanic ;
    outArgument6 = p->mAttribute_mGlobal ;
    outArgument7 = p->mAttribute_mKind ;
    outArgument8 = p->mAttribute_mReturnType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapIR::setter_removeKey (GALGAS_lstring inKey,
                                            GALGAS_procFormalArgumentListForGeneration & outArgument0,
                                            GALGAS_instructionListIR & outArgument1,
                                            GALGAS_bool & outArgument2,
                                            GALGAS_bool & outArgument3,
                                            GALGAS_bool & outArgument4,
                                            GALGAS_bool & outArgument5,
                                            GALGAS_bool & outArgument6,
                                            GALGAS_routineKind & outArgument7,
                                            GALGAS_unifiedTypeMap_2D_proxy & outArgument8,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  const char * kRemoveErrorMessage = "** internal error **" ;
  capCollectionElement attributes ;
  performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;
  cMapElement_routineMapIR * p = (cMapElement_routineMapIR *) attributes.ptr () ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    outArgument0 = p->mAttribute_mFormalArgumentListForGeneration ;
    outArgument1 = p->mAttribute_mInstructionGenerationList ;
    outArgument2 = p->mAttribute_mIsRequired ;
    outArgument3 = p->mAttribute_mWarnIfUnused ;
    outArgument4 = p->mAttribute_mWeak ;
    outArgument5 = p->mAttribute_mNullOnNoPanic ;
    outArgument6 = p->mAttribute_mGlobal ;
    outArgument7 = p->mAttribute_mKind ;
    outArgument8 = p->mAttribute_mReturnType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procFormalArgumentListForGeneration GALGAS_routineMapIR::getter_mFormalArgumentListForGenerationForKey (const GALGAS_string & inKey,
                                                                                                               C_Compiler * inCompiler
                                                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) attributes ;
  GALGAS_procFormalArgumentListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    result = p->mAttribute_mFormalArgumentListForGeneration ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR GALGAS_routineMapIR::getter_mInstructionGenerationListForKey (const GALGAS_string & inKey,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) attributes ;
  GALGAS_instructionListIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    result = p->mAttribute_mInstructionGenerationList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineMapIR::getter_mIsRequiredForKey (const GALGAS_string & inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    result = p->mAttribute_mIsRequired ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineMapIR::getter_mWarnIfUnusedForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    result = p->mAttribute_mWarnIfUnused ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineMapIR::getter_mWeakForKey (const GALGAS_string & inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    result = p->mAttribute_mWeak ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineMapIR::getter_mNullOnNoPanicForKey (const GALGAS_string & inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    result = p->mAttribute_mNullOnNoPanic ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineMapIR::getter_mGlobalForKey (const GALGAS_string & inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    result = p->mAttribute_mGlobal ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKind GALGAS_routineMapIR::getter_mKindForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) attributes ;
  GALGAS_routineKind result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    result = p->mAttribute_mKind ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_routineMapIR::getter_mReturnTypeForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    result = p->mAttribute_mReturnType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapIR::setter_setMFormalArgumentListForGenerationForKey (GALGAS_procFormalArgumentListForGeneration inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapIR * p = (cMapElement_routineMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    p->mAttribute_mFormalArgumentListForGeneration = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapIR::setter_setMInstructionGenerationListForKey (GALGAS_instructionListIR inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapIR * p = (cMapElement_routineMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    p->mAttribute_mInstructionGenerationList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapIR::setter_setMIsRequiredForKey (GALGAS_bool inAttributeValue,
                                                       GALGAS_string inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapIR * p = (cMapElement_routineMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    p->mAttribute_mIsRequired = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapIR::setter_setMWarnIfUnusedForKey (GALGAS_bool inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapIR * p = (cMapElement_routineMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    p->mAttribute_mWarnIfUnused = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapIR::setter_setMWeakForKey (GALGAS_bool inAttributeValue,
                                                 GALGAS_string inKey,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapIR * p = (cMapElement_routineMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    p->mAttribute_mWeak = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapIR::setter_setMNullOnNoPanicForKey (GALGAS_bool inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapIR * p = (cMapElement_routineMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    p->mAttribute_mNullOnNoPanic = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapIR::setter_setMGlobalForKey (GALGAS_bool inAttributeValue,
                                                   GALGAS_string inKey,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapIR * p = (cMapElement_routineMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    p->mAttribute_mGlobal = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapIR::setter_setMKindForKey (GALGAS_routineKind inAttributeValue,
                                                 GALGAS_string inKey,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapIR * p = (cMapElement_routineMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    p->mAttribute_mKind = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapIR::setter_setMReturnTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                                       GALGAS_string inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapIR * p = (cMapElement_routineMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapIR) ;
    p->mAttribute_mReturnType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_routineMapIR * GALGAS_routineMapIR::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                   const GALGAS_string & inKey
                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_routineMapIR * result = (cMapElement_routineMapIR *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_routineMapIR) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_routineMapIR::cEnumerator_routineMapIR (const GALGAS_routineMapIR & inEnumeratedObject,
                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapIR_2D_element cEnumerator_routineMapIR::current (LOCATION_ARGS) const {
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapIR) ;
  return GALGAS_routineMapIR_2D_element (p->mAttribute_lkey, p->mAttribute_mFormalArgumentListForGeneration, p->mAttribute_mInstructionGenerationList, p->mAttribute_mIsRequired, p->mAttribute_mWarnIfUnused, p->mAttribute_mWeak, p->mAttribute_mNullOnNoPanic, p->mAttribute_mGlobal, p->mAttribute_mKind, p->mAttribute_mReturnType) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_routineMapIR::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procFormalArgumentListForGeneration cEnumerator_routineMapIR::current_mFormalArgumentListForGeneration (LOCATION_ARGS) const {
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapIR) ;
  return p->mAttribute_mFormalArgumentListForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR cEnumerator_routineMapIR::current_mInstructionGenerationList (LOCATION_ARGS) const {
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapIR) ;
  return p->mAttribute_mInstructionGenerationList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineMapIR::current_mIsRequired (LOCATION_ARGS) const {
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapIR) ;
  return p->mAttribute_mIsRequired ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineMapIR::current_mWarnIfUnused (LOCATION_ARGS) const {
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapIR) ;
  return p->mAttribute_mWarnIfUnused ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineMapIR::current_mWeak (LOCATION_ARGS) const {
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapIR) ;
  return p->mAttribute_mWeak ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineMapIR::current_mNullOnNoPanic (LOCATION_ARGS) const {
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapIR) ;
  return p->mAttribute_mNullOnNoPanic ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineMapIR::current_mGlobal (LOCATION_ARGS) const {
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapIR) ;
  return p->mAttribute_mGlobal ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKind cEnumerator_routineMapIR::current_mKind (LOCATION_ARGS) const {
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapIR) ;
  return p->mAttribute_mKind ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_routineMapIR::current_mReturnType (LOCATION_ARGS) const {
  const cMapElement_routineMapIR * p = (const cMapElement_routineMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapIR) ;
  return p->mAttribute_mReturnType ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 @routineMapIR type                                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineMapIR ("routineMapIR",
                                     NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineMapIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineMapIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineMapIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineMapIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapIR GALGAS_routineMapIR::extractObject (const GALGAS_object & inObject,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  GALGAS_routineMapIR result ;
  const GALGAS_routineMapIR * p = (const GALGAS_routineMapIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineMapIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("routineMapIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            Class for element of '@procCallEffectiveParameterListIR' list                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_procCallEffectiveParameterListIR : public cCollectionElement {
  public : GALGAS_procCallEffectiveParameterListIR_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_procCallEffectiveParameterListIR (const GALGAS_procEffectiveParameterPassingModeIR & in_mEffectiveParameterPassingMode,
                                                                const GALGAS_string & in_mSelector,
                                                                const GALGAS_operandIR & in_mParameter
                                                                COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
  public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_procCallEffectiveParameterListIR::cCollectionElement_procCallEffectiveParameterListIR (const GALGAS_procEffectiveParameterPassingModeIR & in_mEffectiveParameterPassingMode,
                                                                                                          const GALGAS_string & in_mSelector,
                                                                                                          const GALGAS_operandIR & in_mParameter
                                                                                                          COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mEffectiveParameterPassingMode, in_mSelector, in_mParameter) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_procCallEffectiveParameterListIR::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_procCallEffectiveParameterListIR::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_procCallEffectiveParameterListIR (mObject.mAttribute_mEffectiveParameterPassingMode, mObject.mAttribute_mSelector, mObject.mAttribute_mParameter COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_procCallEffectiveParameterListIR::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEffectiveParameterPassingMode" ":" ;
  mObject.mAttribute_mEffectiveParameterPassingMode.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSelector" ":" ;
  mObject.mAttribute_mSelector.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mParameter" ":" ;
  mObject.mAttribute_mParameter.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_procCallEffectiveParameterListIR::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_procCallEffectiveParameterListIR * operand = (cCollectionElement_procCallEffectiveParameterListIR *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_procCallEffectiveParameterListIR) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procCallEffectiveParameterListIR::GALGAS_procCallEffectiveParameterListIR (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procCallEffectiveParameterListIR::GALGAS_procCallEffectiveParameterListIR (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procCallEffectiveParameterListIR GALGAS_procCallEffectiveParameterListIR::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_procCallEffectiveParameterListIR result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procCallEffectiveParameterListIR GALGAS_procCallEffectiveParameterListIR::constructor_listWithValue (const GALGAS_procEffectiveParameterPassingModeIR & inOperand0,
                                                                                                            const GALGAS_string & inOperand1,
                                                                                                            const GALGAS_operandIR & inOperand2
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_procCallEffectiveParameterListIR result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_procCallEffectiveParameterListIR::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procCallEffectiveParameterListIR::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                         const GALGAS_procEffectiveParameterPassingModeIR & in_mEffectiveParameterPassingMode,
                                                                         const GALGAS_string & in_mSelector,
                                                                         const GALGAS_operandIR & in_mParameter
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement_procCallEffectiveParameterListIR * p = NULL ;
  macroMyNew (p, cCollectionElement_procCallEffectiveParameterListIR (in_mEffectiveParameterPassingMode,
                                                                      in_mSelector,
                                                                      in_mParameter COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procCallEffectiveParameterListIR::addAssign_operation (const GALGAS_procEffectiveParameterPassingModeIR & inOperand0,
                                                                   const GALGAS_string & inOperand1,
                                                                   const GALGAS_operandIR & inOperand2
                                                                   COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_procCallEffectiveParameterListIR (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procCallEffectiveParameterListIR::setter_insertAtIndex (const GALGAS_procEffectiveParameterPassingModeIR inOperand0,
                                                                    const GALGAS_string inOperand1,
                                                                    const GALGAS_operandIR inOperand2,
                                                                    const GALGAS_uint inInsertionIndex,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_procCallEffectiveParameterListIR (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procCallEffectiveParameterListIR::setter_removeAtIndex (GALGAS_procEffectiveParameterPassingModeIR & outOperand0,
                                                                    GALGAS_string & outOperand1,
                                                                    GALGAS_operandIR & outOperand2,
                                                                    const GALGAS_uint inRemoveIndex,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_procCallEffectiveParameterListIR * p = (cCollectionElement_procCallEffectiveParameterListIR *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_procCallEffectiveParameterListIR) ;
      outOperand0 = p->mObject.mAttribute_mEffectiveParameterPassingMode ;
      outOperand1 = p->mObject.mAttribute_mSelector ;
      outOperand2 = p->mObject.mAttribute_mParameter ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procCallEffectiveParameterListIR::setter_popFirst (GALGAS_procEffectiveParameterPassingModeIR & outOperand0,
                                                               GALGAS_string & outOperand1,
                                                               GALGAS_operandIR & outOperand2,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_procCallEffectiveParameterListIR * p = (cCollectionElement_procCallEffectiveParameterListIR *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_procCallEffectiveParameterListIR) ;
    outOperand0 = p->mObject.mAttribute_mEffectiveParameterPassingMode ;
    outOperand1 = p->mObject.mAttribute_mSelector ;
    outOperand2 = p->mObject.mAttribute_mParameter ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procCallEffectiveParameterListIR::setter_popLast (GALGAS_procEffectiveParameterPassingModeIR & outOperand0,
                                                              GALGAS_string & outOperand1,
                                                              GALGAS_operandIR & outOperand2,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_procCallEffectiveParameterListIR * p = (cCollectionElement_procCallEffectiveParameterListIR *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_procCallEffectiveParameterListIR) ;
    outOperand0 = p->mObject.mAttribute_mEffectiveParameterPassingMode ;
    outOperand1 = p->mObject.mAttribute_mSelector ;
    outOperand2 = p->mObject.mAttribute_mParameter ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procCallEffectiveParameterListIR::method_first (GALGAS_procEffectiveParameterPassingModeIR & outOperand0,
                                                            GALGAS_string & outOperand1,
                                                            GALGAS_operandIR & outOperand2,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_procCallEffectiveParameterListIR * p = (cCollectionElement_procCallEffectiveParameterListIR *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_procCallEffectiveParameterListIR) ;
    outOperand0 = p->mObject.mAttribute_mEffectiveParameterPassingMode ;
    outOperand1 = p->mObject.mAttribute_mSelector ;
    outOperand2 = p->mObject.mAttribute_mParameter ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procCallEffectiveParameterListIR::method_last (GALGAS_procEffectiveParameterPassingModeIR & outOperand0,
                                                           GALGAS_string & outOperand1,
                                                           GALGAS_operandIR & outOperand2,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_procCallEffectiveParameterListIR * p = (cCollectionElement_procCallEffectiveParameterListIR *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_procCallEffectiveParameterListIR) ;
    outOperand0 = p->mObject.mAttribute_mEffectiveParameterPassingMode ;
    outOperand1 = p->mObject.mAttribute_mSelector ;
    outOperand2 = p->mObject.mAttribute_mParameter ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procCallEffectiveParameterListIR GALGAS_procCallEffectiveParameterListIR::add_operation (const GALGAS_procCallEffectiveParameterListIR & inOperand,
                                                                                                C_Compiler * /* inCompiler */
                                                                                                COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_procCallEffectiveParameterListIR result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procCallEffectiveParameterListIR GALGAS_procCallEffectiveParameterListIR::getter_subListWithRange (const GALGAS_range & inRange,
                                                                                                          C_Compiler * inCompiler
                                                                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_procCallEffectiveParameterListIR result = GALGAS_procCallEffectiveParameterListIR::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procCallEffectiveParameterListIR GALGAS_procCallEffectiveParameterListIR::getter_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                          C_Compiler * inCompiler
                                                                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_procCallEffectiveParameterListIR result = GALGAS_procCallEffectiveParameterListIR::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procCallEffectiveParameterListIR GALGAS_procCallEffectiveParameterListIR::getter_subListToIndex (const GALGAS_uint & inIndex,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_procCallEffectiveParameterListIR result = GALGAS_procCallEffectiveParameterListIR::constructor_emptyList (THERE) ;
  subListToIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procCallEffectiveParameterListIR::plusAssign_operation (const GALGAS_procCallEffectiveParameterListIR inOperand,
                                                                    C_Compiler * /* inCompiler */
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterPassingModeIR GALGAS_procCallEffectiveParameterListIR::getter_mEffectiveParameterPassingModeAtIndex (const GALGAS_uint & inIndex,
                                                                                                                                  C_Compiler * inCompiler
                                                                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_procCallEffectiveParameterListIR * p = (cCollectionElement_procCallEffectiveParameterListIR *) attributes.ptr () ;
  GALGAS_procEffectiveParameterPassingModeIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_procCallEffectiveParameterListIR) ;
    result = p->mObject.mAttribute_mEffectiveParameterPassingMode ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_procCallEffectiveParameterListIR::getter_mSelectorAtIndex (const GALGAS_uint & inIndex,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_procCallEffectiveParameterListIR * p = (cCollectionElement_procCallEffectiveParameterListIR *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_procCallEffectiveParameterListIR) ;
    result = p->mObject.mAttribute_mSelector ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandIR GALGAS_procCallEffectiveParameterListIR::getter_mParameterAtIndex (const GALGAS_uint & inIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_procCallEffectiveParameterListIR * p = (cCollectionElement_procCallEffectiveParameterListIR *) attributes.ptr () ;
  GALGAS_operandIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_procCallEffectiveParameterListIR) ;
    result = p->mObject.mAttribute_mParameter ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_procCallEffectiveParameterListIR::cEnumerator_procCallEffectiveParameterListIR (const GALGAS_procCallEffectiveParameterListIR & inEnumeratedObject,
                                                                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procCallEffectiveParameterListIR_2D_element cEnumerator_procCallEffectiveParameterListIR::current (LOCATION_ARGS) const {
  const cCollectionElement_procCallEffectiveParameterListIR * p = (const cCollectionElement_procCallEffectiveParameterListIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_procCallEffectiveParameterListIR) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterPassingModeIR cEnumerator_procCallEffectiveParameterListIR::current_mEffectiveParameterPassingMode (LOCATION_ARGS) const {
  const cCollectionElement_procCallEffectiveParameterListIR * p = (const cCollectionElement_procCallEffectiveParameterListIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_procCallEffectiveParameterListIR) ;
  return p->mObject.mAttribute_mEffectiveParameterPassingMode ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_procCallEffectiveParameterListIR::current_mSelector (LOCATION_ARGS) const {
  const cCollectionElement_procCallEffectiveParameterListIR * p = (const cCollectionElement_procCallEffectiveParameterListIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_procCallEffectiveParameterListIR) ;
  return p->mObject.mAttribute_mSelector ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandIR cEnumerator_procCallEffectiveParameterListIR::current_mParameter (LOCATION_ARGS) const {
  const cCollectionElement_procCallEffectiveParameterListIR * p = (const cCollectionElement_procCallEffectiveParameterListIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_procCallEffectiveParameterListIR) ;
  return p->mObject.mAttribute_mParameter ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       @procCallEffectiveParameterListIR type                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_procCallEffectiveParameterListIR ("procCallEffectiveParameterListIR",
                                                         NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_procCallEffectiveParameterListIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_procCallEffectiveParameterListIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_procCallEffectiveParameterListIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_procCallEffectiveParameterListIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procCallEffectiveParameterListIR GALGAS_procCallEffectiveParameterListIR::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_procCallEffectiveParameterListIR result ;
  const GALGAS_procCallEffectiveParameterListIR * p = (const GALGAS_procCallEffectiveParameterListIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_procCallEffectiveParameterListIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("procCallEffectiveParameterListIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_guardMapIR::cMapElement_guardMapIR (const GALGAS_lstring & inKey,
                                                const GALGAS_procFormalArgumentListForGeneration & in_mFormalArgumentListForGeneration,
                                                const GALGAS_guardKindGenerationIR & in_mGuardKindGenerationIR,
                                                const GALGAS_instructionListIR & in_mInstructionGenerationList,
                                                const GALGAS_bool & in_mWarnIfUnused
                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mFormalArgumentListForGeneration (in_mFormalArgumentListForGeneration),
mAttribute_mGuardKindGenerationIR (in_mGuardKindGenerationIR),
mAttribute_mInstructionGenerationList (in_mInstructionGenerationList),
mAttribute_mWarnIfUnused (in_mWarnIfUnused) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_guardMapIR::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFormalArgumentListForGeneration.isValid () && mAttribute_mGuardKindGenerationIR.isValid () && mAttribute_mInstructionGenerationList.isValid () && mAttribute_mWarnIfUnused.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_guardMapIR::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_guardMapIR (mAttribute_lkey, mAttribute_mFormalArgumentListForGeneration, mAttribute_mGuardKindGenerationIR, mAttribute_mInstructionGenerationList, mAttribute_mWarnIfUnused COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_guardMapIR::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFormalArgumentListForGeneration" ":" ;
  mAttribute_mFormalArgumentListForGeneration.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGuardKindGenerationIR" ":" ;
  mAttribute_mGuardKindGenerationIR.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionGenerationList" ":" ;
  mAttribute_mInstructionGenerationList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mWarnIfUnused" ":" ;
  mAttribute_mWarnIfUnused.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_guardMapIR::compare (const cCollectionElement * inOperand) const {
  cMapElement_guardMapIR * operand = (cMapElement_guardMapIR *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mFormalArgumentListForGeneration.objectCompare (operand->mAttribute_mFormalArgumentListForGeneration) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mGuardKindGenerationIR.objectCompare (operand->mAttribute_mGuardKindGenerationIR) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInstructionGenerationList.objectCompare (operand->mAttribute_mInstructionGenerationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mWarnIfUnused.objectCompare (operand->mAttribute_mWarnIfUnused) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapIR::GALGAS_guardMapIR (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapIR::GALGAS_guardMapIR (const GALGAS_guardMapIR & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapIR & GALGAS_guardMapIR::operator = (const GALGAS_guardMapIR & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapIR GALGAS_guardMapIR::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_guardMapIR result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapIR GALGAS_guardMapIR::constructor_mapWithMapToOverride (const GALGAS_guardMapIR & inMapToOverride
                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_guardMapIR result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapIR GALGAS_guardMapIR::getter_overriddenMap (C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_guardMapIR result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapIR::addAssign_operation (const GALGAS_lstring & inKey,
                                             const GALGAS_procFormalArgumentListForGeneration & inArgument0,
                                             const GALGAS_guardKindGenerationIR & inArgument1,
                                             const GALGAS_instructionListIR & inArgument2,
                                             const GALGAS_bool & inArgument3,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_guardMapIR * p = NULL ;
  macroMyNew (p, cMapElement_guardMapIR (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@guardMapIR insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapIR::setter_insertKey (GALGAS_lstring inKey,
                                          GALGAS_procFormalArgumentListForGeneration inArgument0,
                                          GALGAS_guardKindGenerationIR inArgument1,
                                          GALGAS_instructionListIR inArgument2,
                                          GALGAS_bool inArgument3,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
  cMapElement_guardMapIR * p = NULL ;
  macroMyNew (p, cMapElement_guardMapIR (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "guard '%K' is already defined" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_guardMapIR_searchKey = "** internal error **" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapIR::method_searchKey (GALGAS_lstring inKey,
                                          GALGAS_procFormalArgumentListForGeneration & outArgument0,
                                          GALGAS_guardKindGenerationIR & outArgument1,
                                          GALGAS_instructionListIR & outArgument2,
                                          GALGAS_bool & outArgument3,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) const {
  const cMapElement_guardMapIR * p = (const cMapElement_guardMapIR *) performSearch (inKey,
                                                                                       inCompiler,
                                                                                       kSearchErrorMessage_guardMapIR_searchKey
                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_guardMapIR) ;
    outArgument0 = p->mAttribute_mFormalArgumentListForGeneration ;
    outArgument1 = p->mAttribute_mGuardKindGenerationIR ;
    outArgument2 = p->mAttribute_mInstructionGenerationList ;
    outArgument3 = p->mAttribute_mWarnIfUnused ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapIR::setter_removeKey (GALGAS_lstring inKey,
                                          GALGAS_procFormalArgumentListForGeneration & outArgument0,
                                          GALGAS_guardKindGenerationIR & outArgument1,
                                          GALGAS_instructionListIR & outArgument2,
                                          GALGAS_bool & outArgument3,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
  const char * kRemoveErrorMessage = "** internal error **" ;
  capCollectionElement attributes ;
  performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;
  cMapElement_guardMapIR * p = (cMapElement_guardMapIR *) attributes.ptr () ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_guardMapIR) ;
    outArgument0 = p->mAttribute_mFormalArgumentListForGeneration ;
    outArgument1 = p->mAttribute_mGuardKindGenerationIR ;
    outArgument2 = p->mAttribute_mInstructionGenerationList ;
    outArgument3 = p->mAttribute_mWarnIfUnused ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procFormalArgumentListForGeneration GALGAS_guardMapIR::getter_mFormalArgumentListForGenerationForKey (const GALGAS_string & inKey,
                                                                                                             C_Compiler * inCompiler
                                                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_guardMapIR * p = (const cMapElement_guardMapIR *) attributes ;
  GALGAS_procFormalArgumentListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_guardMapIR) ;
    result = p->mAttribute_mFormalArgumentListForGeneration ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardKindGenerationIR GALGAS_guardMapIR::getter_mGuardKindGenerationIRForKey (const GALGAS_string & inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_guardMapIR * p = (const cMapElement_guardMapIR *) attributes ;
  GALGAS_guardKindGenerationIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_guardMapIR) ;
    result = p->mAttribute_mGuardKindGenerationIR ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR GALGAS_guardMapIR::getter_mInstructionGenerationListForKey (const GALGAS_string & inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_guardMapIR * p = (const cMapElement_guardMapIR *) attributes ;
  GALGAS_instructionListIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_guardMapIR) ;
    result = p->mAttribute_mInstructionGenerationList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_guardMapIR::getter_mWarnIfUnusedForKey (const GALGAS_string & inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_guardMapIR * p = (const cMapElement_guardMapIR *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_guardMapIR) ;
    result = p->mAttribute_mWarnIfUnused ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapIR::setter_setMFormalArgumentListForGenerationForKey (GALGAS_procFormalArgumentListForGeneration inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_guardMapIR * p = (cMapElement_guardMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_guardMapIR) ;
    p->mAttribute_mFormalArgumentListForGeneration = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapIR::setter_setMGuardKindGenerationIRForKey (GALGAS_guardKindGenerationIR inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_guardMapIR * p = (cMapElement_guardMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_guardMapIR) ;
    p->mAttribute_mGuardKindGenerationIR = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapIR::setter_setMInstructionGenerationListForKey (GALGAS_instructionListIR inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_guardMapIR * p = (cMapElement_guardMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_guardMapIR) ;
    p->mAttribute_mInstructionGenerationList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapIR::setter_setMWarnIfUnusedForKey (GALGAS_bool inAttributeValue,
                                                       GALGAS_string inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_guardMapIR * p = (cMapElement_guardMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_guardMapIR) ;
    p->mAttribute_mWarnIfUnused = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_guardMapIR * GALGAS_guardMapIR::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                               const GALGAS_string & inKey
                                                                               COMMA_LOCATION_ARGS) {
  cMapElement_guardMapIR * result = (cMapElement_guardMapIR *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_guardMapIR) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_guardMapIR::cEnumerator_guardMapIR (const GALGAS_guardMapIR & inEnumeratedObject,
                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapIR_2D_element cEnumerator_guardMapIR::current (LOCATION_ARGS) const {
  const cMapElement_guardMapIR * p = (const cMapElement_guardMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_guardMapIR) ;
  return GALGAS_guardMapIR_2D_element (p->mAttribute_lkey, p->mAttribute_mFormalArgumentListForGeneration, p->mAttribute_mGuardKindGenerationIR, p->mAttribute_mInstructionGenerationList, p->mAttribute_mWarnIfUnused) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_guardMapIR::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procFormalArgumentListForGeneration cEnumerator_guardMapIR::current_mFormalArgumentListForGeneration (LOCATION_ARGS) const {
  const cMapElement_guardMapIR * p = (const cMapElement_guardMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_guardMapIR) ;
  return p->mAttribute_mFormalArgumentListForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardKindGenerationIR cEnumerator_guardMapIR::current_mGuardKindGenerationIR (LOCATION_ARGS) const {
  const cMapElement_guardMapIR * p = (const cMapElement_guardMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_guardMapIR) ;
  return p->mAttribute_mGuardKindGenerationIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR cEnumerator_guardMapIR::current_mInstructionGenerationList (LOCATION_ARGS) const {
  const cMapElement_guardMapIR * p = (const cMapElement_guardMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_guardMapIR) ;
  return p->mAttribute_mInstructionGenerationList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_guardMapIR::current_mWarnIfUnused (LOCATION_ARGS) const {
  const cMapElement_guardMapIR * p = (const cMapElement_guardMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_guardMapIR) ;
  return p->mAttribute_mWarnIfUnused ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                  @guardMapIR type                                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_guardMapIR ("guardMapIR",
                                   NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_guardMapIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_guardMapIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_guardMapIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_guardMapIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapIR GALGAS_guardMapIR::extractObject (const GALGAS_object & inObject,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  GALGAS_guardMapIR result ;
  const GALGAS_guardMapIR * p = (const GALGAS_guardMapIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_guardMapIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("guardMapIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           Class for element of '@functionCallEffectiveParameterList' list                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_functionCallEffectiveParameterList : public cCollectionElement {
  public : GALGAS_functionCallEffectiveParameterList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_functionCallEffectiveParameterList (const GALGAS_lstring & in_mSelector,
                                                                  const GALGAS_expressionAST & in_mExpression
                                                                  COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
  public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_functionCallEffectiveParameterList::cCollectionElement_functionCallEffectiveParameterList (const GALGAS_lstring & in_mSelector,
                                                                                                              const GALGAS_expressionAST & in_mExpression
                                                                                                              COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mSelector, in_mExpression) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_functionCallEffectiveParameterList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_functionCallEffectiveParameterList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_functionCallEffectiveParameterList (mObject.mAttribute_mSelector, mObject.mAttribute_mExpression COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_functionCallEffectiveParameterList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSelector" ":" ;
  mObject.mAttribute_mSelector.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mExpression" ":" ;
  mObject.mAttribute_mExpression.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_functionCallEffectiveParameterList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_functionCallEffectiveParameterList * operand = (cCollectionElement_functionCallEffectiveParameterList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_functionCallEffectiveParameterList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionCallEffectiveParameterList::GALGAS_functionCallEffectiveParameterList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionCallEffectiveParameterList::GALGAS_functionCallEffectiveParameterList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionCallEffectiveParameterList GALGAS_functionCallEffectiveParameterList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_functionCallEffectiveParameterList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionCallEffectiveParameterList GALGAS_functionCallEffectiveParameterList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                                                                const GALGAS_expressionAST & inOperand1
                                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_functionCallEffectiveParameterList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_functionCallEffectiveParameterList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_functionCallEffectiveParameterList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                           const GALGAS_lstring & in_mSelector,
                                                                           const GALGAS_expressionAST & in_mExpression
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement_functionCallEffectiveParameterList * p = NULL ;
  macroMyNew (p, cCollectionElement_functionCallEffectiveParameterList (in_mSelector,
                                                                        in_mExpression COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_functionCallEffectiveParameterList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                                                     const GALGAS_expressionAST & inOperand1
                                                                     COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_functionCallEffectiveParameterList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_functionCallEffectiveParameterList::setter_insertAtIndex (const GALGAS_lstring inOperand0,
                                                                      const GALGAS_expressionAST inOperand1,
                                                                      const GALGAS_uint inInsertionIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_functionCallEffectiveParameterList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_functionCallEffectiveParameterList::setter_removeAtIndex (GALGAS_lstring & outOperand0,
                                                                      GALGAS_expressionAST & outOperand1,
                                                                      const GALGAS_uint inRemoveIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_functionCallEffectiveParameterList * p = (cCollectionElement_functionCallEffectiveParameterList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_functionCallEffectiveParameterList) ;
      outOperand0 = p->mObject.mAttribute_mSelector ;
      outOperand1 = p->mObject.mAttribute_mExpression ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_functionCallEffectiveParameterList::setter_popFirst (GALGAS_lstring & outOperand0,
                                                                 GALGAS_expressionAST & outOperand1,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_functionCallEffectiveParameterList * p = (cCollectionElement_functionCallEffectiveParameterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_functionCallEffectiveParameterList) ;
    outOperand0 = p->mObject.mAttribute_mSelector ;
    outOperand1 = p->mObject.mAttribute_mExpression ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_functionCallEffectiveParameterList::setter_popLast (GALGAS_lstring & outOperand0,
                                                                GALGAS_expressionAST & outOperand1,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_functionCallEffectiveParameterList * p = (cCollectionElement_functionCallEffectiveParameterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_functionCallEffectiveParameterList) ;
    outOperand0 = p->mObject.mAttribute_mSelector ;
    outOperand1 = p->mObject.mAttribute_mExpression ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_functionCallEffectiveParameterList::method_first (GALGAS_lstring & outOperand0,
                                                              GALGAS_expressionAST & outOperand1,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_functionCallEffectiveParameterList * p = (cCollectionElement_functionCallEffectiveParameterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_functionCallEffectiveParameterList) ;
    outOperand0 = p->mObject.mAttribute_mSelector ;
    outOperand1 = p->mObject.mAttribute_mExpression ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_functionCallEffectiveParameterList::method_last (GALGAS_lstring & outOperand0,
                                                             GALGAS_expressionAST & outOperand1,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_functionCallEffectiveParameterList * p = (cCollectionElement_functionCallEffectiveParameterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_functionCallEffectiveParameterList) ;
    outOperand0 = p->mObject.mAttribute_mSelector ;
    outOperand1 = p->mObject.mAttribute_mExpression ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionCallEffectiveParameterList GALGAS_functionCallEffectiveParameterList::add_operation (const GALGAS_functionCallEffectiveParameterList & inOperand,
                                                                                                    C_Compiler * /* inCompiler */
                                                                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_functionCallEffectiveParameterList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionCallEffectiveParameterList GALGAS_functionCallEffectiveParameterList::getter_subListWithRange (const GALGAS_range & inRange,
                                                                                                              C_Compiler * inCompiler
                                                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_functionCallEffectiveParameterList result = GALGAS_functionCallEffectiveParameterList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionCallEffectiveParameterList GALGAS_functionCallEffectiveParameterList::getter_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                              C_Compiler * inCompiler
                                                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_functionCallEffectiveParameterList result = GALGAS_functionCallEffectiveParameterList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionCallEffectiveParameterList GALGAS_functionCallEffectiveParameterList::getter_subListToIndex (const GALGAS_uint & inIndex,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_functionCallEffectiveParameterList result = GALGAS_functionCallEffectiveParameterList::constructor_emptyList (THERE) ;
  subListToIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_functionCallEffectiveParameterList::plusAssign_operation (const GALGAS_functionCallEffectiveParameterList inOperand,
                                                                      C_Compiler * /* inCompiler */
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_functionCallEffectiveParameterList::getter_mSelectorAtIndex (const GALGAS_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_functionCallEffectiveParameterList * p = (cCollectionElement_functionCallEffectiveParameterList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_functionCallEffectiveParameterList) ;
    result = p->mObject.mAttribute_mSelector ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_expressionAST GALGAS_functionCallEffectiveParameterList::getter_mExpressionAtIndex (const GALGAS_uint & inIndex,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_functionCallEffectiveParameterList * p = (cCollectionElement_functionCallEffectiveParameterList *) attributes.ptr () ;
  GALGAS_expressionAST result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_functionCallEffectiveParameterList) ;
    result = p->mObject.mAttribute_mExpression ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_functionCallEffectiveParameterList::cEnumerator_functionCallEffectiveParameterList (const GALGAS_functionCallEffectiveParameterList & inEnumeratedObject,
                                                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionCallEffectiveParameterList_2D_element cEnumerator_functionCallEffectiveParameterList::current (LOCATION_ARGS) const {
  const cCollectionElement_functionCallEffectiveParameterList * p = (const cCollectionElement_functionCallEffectiveParameterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_functionCallEffectiveParameterList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_functionCallEffectiveParameterList::current_mSelector (LOCATION_ARGS) const {
  const cCollectionElement_functionCallEffectiveParameterList * p = (const cCollectionElement_functionCallEffectiveParameterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_functionCallEffectiveParameterList) ;
  return p->mObject.mAttribute_mSelector ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_expressionAST cEnumerator_functionCallEffectiveParameterList::current_mExpression (LOCATION_ARGS) const {
  const cCollectionElement_functionCallEffectiveParameterList * p = (const cCollectionElement_functionCallEffectiveParameterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_functionCallEffectiveParameterList) ;
  return p->mObject.mAttribute_mExpression ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      @functionCallEffectiveParameterList type                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_functionCallEffectiveParameterList ("functionCallEffectiveParameterList",
                                                           NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_functionCallEffectiveParameterList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_functionCallEffectiveParameterList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_functionCallEffectiveParameterList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_functionCallEffectiveParameterList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_functionCallEffectiveParameterList GALGAS_functionCallEffectiveParameterList::extractObject (const GALGAS_object & inObject,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_functionCallEffectiveParameterList result ;
  const GALGAS_functionCallEffectiveParameterList * p = (const GALGAS_functionCallEffectiveParameterList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_functionCallEffectiveParameterList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("functionCallEffectiveParameterList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator::GALGAS_infixOperator (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_equal (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_equal ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_nonEqual (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_nonEqual ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_strictInf (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_strictInf ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_strictSup (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_strictSup ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_infEqual (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_infEqual ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_supEqual (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_supEqual ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_andOp (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_andOp ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_orOp (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_orOp ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_xorOp (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_xorOp ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_booleanXorOp (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_booleanXorOp ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_addOp (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_addOp ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_addOpNoOvf (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_addOpNoOvf ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_subOp (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_subOp ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_subOpNoOvf (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_subOpNoOvf ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_mulOp (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_mulOp ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_mulOpNoOvf (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_mulOpNoOvf ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_divOp (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_divOp ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_divOpNoOvf (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_divOpNoOvf ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_modOp (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_modOp ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_modOpNoOvf (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_modOpNoOvf ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_leftShiftOp (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_leftShiftOp ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::constructor_rightShiftOp (UNUSED_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  result.mEnum = kEnum_rightShiftOp ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_infixOperator [23] = {
  "(not built)",
  "equal",
  "nonEqual",
  "strictInf",
  "strictSup",
  "infEqual",
  "supEqual",
  "andOp",
  "orOp",
  "xorOp",
  "booleanXorOp",
  "addOp",
  "addOpNoOvf",
  "subOp",
  "subOpNoOvf",
  "mulOp",
  "mulOpNoOvf",
  "divOp",
  "divOpNoOvf",
  "modOp",
  "modOpNoOvf",
  "leftShiftOp",
  "rightShiftOp"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isEqual (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_equal == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isNonEqual (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_nonEqual == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isStrictInf (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_strictInf == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isStrictSup (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_strictSup == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isInfEqual (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_infEqual == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isSupEqual (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_supEqual == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isAndOp (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_andOp == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isOrOp (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_orOp == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isXorOp (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_xorOp == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isBooleanXorOp (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_booleanXorOp == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isAddOp (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_addOp == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isAddOpNoOvf (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_addOpNoOvf == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isSubOp (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_subOp == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isSubOpNoOvf (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_subOpNoOvf == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isMulOp (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_mulOp == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isMulOpNoOvf (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_mulOpNoOvf == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isDivOp (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_divOp == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isDivOpNoOvf (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_divOpNoOvf == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isModOp (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_modOp == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isModOpNoOvf (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_modOpNoOvf == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isLeftShiftOp (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_leftShiftOp == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_infixOperator::getter_isRightShiftOp (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_rightShiftOp == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_infixOperator::description (C_String & ioString,
                                        const int32_t /* inIndentation */) const {
  ioString << "<enum @infixOperator: " << gEnumNameArrayFor_infixOperator [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_infixOperator::objectCompare (const GALGAS_infixOperator & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 @infixOperator type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_infixOperator ("infixOperator",
                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_infixOperator::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_infixOperator ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_infixOperator::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_infixOperator (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperator GALGAS_infixOperator::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_infixOperator result ;
  const GALGAS_infixOperator * p = (const GALGAS_infixOperator *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_infixOperator *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("infixOperator", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_infixOperatorMap::cMapElement_infixOperatorMap (const GALGAS_lstring & inKey,
                                                            const GALGAS_unifiedTypeMap_2D_proxy & in_mResultType,
                                                            const GALGAS_infixOperatorDescription & in_mOperation
                                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mResultType (in_mResultType),
mAttribute_mOperation (in_mOperation) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_infixOperatorMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mResultType.isValid () && mAttribute_mOperation.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_infixOperatorMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_infixOperatorMap (mAttribute_lkey, mAttribute_mResultType, mAttribute_mOperation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_infixOperatorMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mResultType" ":" ;
  mAttribute_mResultType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOperation" ":" ;
  mAttribute_mOperation.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_infixOperatorMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_infixOperatorMap * operand = (cMapElement_infixOperatorMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mResultType.objectCompare (operand->mAttribute_mResultType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOperation.objectCompare (operand->mAttribute_mOperation) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperatorMap::GALGAS_infixOperatorMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperatorMap::GALGAS_infixOperatorMap (const GALGAS_infixOperatorMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperatorMap & GALGAS_infixOperatorMap::operator = (const GALGAS_infixOperatorMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperatorMap GALGAS_infixOperatorMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_infixOperatorMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperatorMap GALGAS_infixOperatorMap::constructor_mapWithMapToOverride (const GALGAS_infixOperatorMap & inMapToOverride
                                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_infixOperatorMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperatorMap GALGAS_infixOperatorMap::getter_overriddenMap (C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  GALGAS_infixOperatorMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_infixOperatorMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                   const GALGAS_unifiedTypeMap_2D_proxy & inArgument0,
                                                   const GALGAS_infixOperatorDescription & inArgument1,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_infixOperatorMap * p = NULL ;
  macroMyNew (p, cMapElement_infixOperatorMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@infixOperatorMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_infixOperatorMap::setter_insertKey (GALGAS_lstring inKey,
                                                GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                GALGAS_infixOperatorDescription inArgument1,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_infixOperatorMap * p = NULL ;
  macroMyNew (p, cMapElement_infixOperatorMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "** internal error **" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_infixOperatorMap_searchKey = "** internal error **" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_infixOperatorMap::method_searchKey (GALGAS_lstring inKey,
                                                GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                GALGAS_infixOperatorDescription & outArgument1,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  const cMapElement_infixOperatorMap * p = (const cMapElement_infixOperatorMap *) performSearch (inKey,
                                                                                                   inCompiler,
                                                                                                   kSearchErrorMessage_infixOperatorMap_searchKey
                                                                                                   COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_infixOperatorMap) ;
    outArgument0 = p->mAttribute_mResultType ;
    outArgument1 = p->mAttribute_mOperation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_infixOperatorMap::getter_mResultTypeForKey (const GALGAS_string & inKey,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_infixOperatorMap * p = (const cMapElement_infixOperatorMap *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_infixOperatorMap) ;
    result = p->mAttribute_mResultType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperatorDescription GALGAS_infixOperatorMap::getter_mOperationForKey (const GALGAS_string & inKey,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_infixOperatorMap * p = (const cMapElement_infixOperatorMap *) attributes ;
  GALGAS_infixOperatorDescription result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_infixOperatorMap) ;
    result = p->mAttribute_mOperation ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_infixOperatorMap::setter_setMResultTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_infixOperatorMap * p = (cMapElement_infixOperatorMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_infixOperatorMap) ;
    p->mAttribute_mResultType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_infixOperatorMap::setter_setMOperationForKey (GALGAS_infixOperatorDescription inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_infixOperatorMap * p = (cMapElement_infixOperatorMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_infixOperatorMap) ;
    p->mAttribute_mOperation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_infixOperatorMap * GALGAS_infixOperatorMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                           const GALGAS_string & inKey
                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement_infixOperatorMap * result = (cMapElement_infixOperatorMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_infixOperatorMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_infixOperatorMap::cEnumerator_infixOperatorMap (const GALGAS_infixOperatorMap & inEnumeratedObject,
                                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperatorMap_2D_element cEnumerator_infixOperatorMap::current (LOCATION_ARGS) const {
  const cMapElement_infixOperatorMap * p = (const cMapElement_infixOperatorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_infixOperatorMap) ;
  return GALGAS_infixOperatorMap_2D_element (p->mAttribute_lkey, p->mAttribute_mResultType, p->mAttribute_mOperation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_infixOperatorMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_infixOperatorMap::current_mResultType (LOCATION_ARGS) const {
  const cMapElement_infixOperatorMap * p = (const cMapElement_infixOperatorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_infixOperatorMap) ;
  return p->mAttribute_mResultType ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperatorDescription cEnumerator_infixOperatorMap::current_mOperation (LOCATION_ARGS) const {
  const cMapElement_infixOperatorMap * p = (const cMapElement_infixOperatorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_infixOperatorMap) ;
  return p->mAttribute_mOperation ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @infixOperatorMap type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_infixOperatorMap ("infixOperatorMap",
                                         NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_infixOperatorMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_infixOperatorMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_infixOperatorMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_infixOperatorMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_infixOperatorMap GALGAS_infixOperatorMap::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_infixOperatorMap result ;
  const GALGAS_infixOperatorMap * p = (const GALGAS_infixOperatorMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_infixOperatorMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("infixOperatorMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperator::GALGAS_prefixOperator (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperator GALGAS_prefixOperator::constructor_notOperator (UNUSED_LOCATION_ARGS) {
  GALGAS_prefixOperator result ;
  result.mEnum = kEnum_notOperator ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperator GALGAS_prefixOperator::constructor_minus (UNUSED_LOCATION_ARGS) {
  GALGAS_prefixOperator result ;
  result.mEnum = kEnum_minus ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperator GALGAS_prefixOperator::constructor_unsignedComplement (UNUSED_LOCATION_ARGS) {
  GALGAS_prefixOperator result ;
  result.mEnum = kEnum_unsignedComplement ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperator GALGAS_prefixOperator::constructor_minusNoOvf (UNUSED_LOCATION_ARGS) {
  GALGAS_prefixOperator result ;
  result.mEnum = kEnum_minusNoOvf ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_prefixOperator [5] = {
  "(not built)",
  "notOperator",
  "minus",
  "unsignedComplement",
  "minusNoOvf"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_prefixOperator::getter_isNotOperator (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_notOperator == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_prefixOperator::getter_isMinus (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_minus == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_prefixOperator::getter_isUnsignedComplement (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_unsignedComplement == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_prefixOperator::getter_isMinusNoOvf (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_minusNoOvf == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_prefixOperator::description (C_String & ioString,
                                         const int32_t /* inIndentation */) const {
  ioString << "<enum @prefixOperator: " << gEnumNameArrayFor_prefixOperator [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_prefixOperator::objectCompare (const GALGAS_prefixOperator & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @prefixOperator type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_prefixOperator ("prefixOperator",
                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_prefixOperator::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_prefixOperator ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_prefixOperator::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_prefixOperator (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperator GALGAS_prefixOperator::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_prefixOperator result ;
  const GALGAS_prefixOperator * p = (const GALGAS_prefixOperator *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_prefixOperator *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("prefixOperator", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               Class for element of '@effectiveParameterListAST' list                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_effectiveParameterListAST : public cCollectionElement {
  public : GALGAS_effectiveParameterListAST_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_effectiveParameterListAST (const GALGAS_effectiveParameterPassingModeAST & in_mEffectiveParameterKind,
                                                         const GALGAS_lstring & in_mSelector
                                                         COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
  public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_effectiveParameterListAST::cCollectionElement_effectiveParameterListAST (const GALGAS_effectiveParameterPassingModeAST & in_mEffectiveParameterKind,
                                                                                            const GALGAS_lstring & in_mSelector
                                                                                            COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mEffectiveParameterKind, in_mSelector) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_effectiveParameterListAST::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_effectiveParameterListAST::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_effectiveParameterListAST (mObject.mAttribute_mEffectiveParameterKind, mObject.mAttribute_mSelector COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_effectiveParameterListAST::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEffectiveParameterKind" ":" ;
  mObject.mAttribute_mEffectiveParameterKind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSelector" ":" ;
  mObject.mAttribute_mSelector.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_effectiveParameterListAST::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_effectiveParameterListAST * operand = (cCollectionElement_effectiveParameterListAST *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_effectiveParameterListAST) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_effectiveParameterListAST::GALGAS_effectiveParameterListAST (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_effectiveParameterListAST::GALGAS_effectiveParameterListAST (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_effectiveParameterListAST GALGAS_effectiveParameterListAST::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_effectiveParameterListAST result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_effectiveParameterListAST GALGAS_effectiveParameterListAST::constructor_listWithValue (const GALGAS_effectiveParameterPassingModeAST & inOperand0,
                                                                                              const GALGAS_lstring & inOperand1
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_effectiveParameterListAST result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_effectiveParameterListAST::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_effectiveParameterListAST::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                  const GALGAS_effectiveParameterPassingModeAST & in_mEffectiveParameterKind,
                                                                  const GALGAS_lstring & in_mSelector
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_effectiveParameterListAST * p = NULL ;
  macroMyNew (p, cCollectionElement_effectiveParameterListAST (in_mEffectiveParameterKind,
                                                               in_mSelector COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_effectiveParameterListAST::addAssign_operation (const GALGAS_effectiveParameterPassingModeAST & inOperand0,
                                                            const GALGAS_lstring & inOperand1
                                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_effectiveParameterListAST (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_effectiveParameterListAST::setter_insertAtIndex (const GALGAS_effectiveParameterPassingModeAST inOperand0,
                                                             const GALGAS_lstring inOperand1,
                                                             const GALGAS_uint inInsertionIndex,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_effectiveParameterListAST (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_effectiveParameterListAST::setter_removeAtIndex (GALGAS_effectiveParameterPassingModeAST & outOperand0,
                                                             GALGAS_lstring & outOperand1,
                                                             const GALGAS_uint inRemoveIndex,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_effectiveParameterListAST * p = (cCollectionElement_effectiveParameterListAST *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_effectiveParameterListAST) ;
      outOperand0 = p->mObject.mAttribute_mEffectiveParameterKind ;
      outOperand1 = p->mObject.mAttribute_mSelector ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_effectiveParameterListAST::setter_popFirst (GALGAS_effectiveParameterPassingModeAST & outOperand0,
                                                        GALGAS_lstring & outOperand1,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_effectiveParameterListAST * p = (cCollectionElement_effectiveParameterListAST *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_effectiveParameterListAST) ;
    outOperand0 = p->mObject.mAttribute_mEffectiveParameterKind ;
    outOperand1 = p->mObject.mAttribute_mSelector ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_effectiveParameterListAST::setter_popLast (GALGAS_effectiveParameterPassingModeAST & outOperand0,
                                                       GALGAS_lstring & outOperand1,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_effectiveParameterListAST * p = (cCollectionElement_effectiveParameterListAST *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_effectiveParameterListAST) ;
    outOperand0 = p->mObject.mAttribute_mEffectiveParameterKind ;
    outOperand1 = p->mObject.mAttribute_mSelector ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_effectiveParameterListAST::method_first (GALGAS_effectiveParameterPassingModeAST & outOperand0,
                                                     GALGAS_lstring & outOperand1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_effectiveParameterListAST * p = (cCollectionElement_effectiveParameterListAST *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_effectiveParameterListAST) ;
    outOperand0 = p->mObject.mAttribute_mEffectiveParameterKind ;
    outOperand1 = p->mObject.mAttribute_mSelector ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_effectiveParameterListAST::method_last (GALGAS_effectiveParameterPassingModeAST & outOperand0,
                                                    GALGAS_lstring & outOperand1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_effectiveParameterListAST * p = (cCollectionElement_effectiveParameterListAST *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_effectiveParameterListAST) ;
    outOperand0 = p->mObject.mAttribute_mEffectiveParameterKind ;
    outOperand1 = p->mObject.mAttribute_mSelector ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_effectiveParameterListAST GALGAS_effectiveParameterListAST::add_operation (const GALGAS_effectiveParameterListAST & inOperand,
                                                                                  C_Compiler * /* inCompiler */
                                                                                  COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_effectiveParameterListAST result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_effectiveParameterListAST GALGAS_effectiveParameterListAST::getter_subListWithRange (const GALGAS_range & inRange,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_effectiveParameterListAST result = GALGAS_effectiveParameterListAST::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_effectiveParameterListAST GALGAS_effectiveParameterListAST::getter_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_effectiveParameterListAST result = GALGAS_effectiveParameterListAST::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_effectiveParameterListAST GALGAS_effectiveParameterListAST::getter_subListToIndex (const GALGAS_uint & inIndex,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_effectiveParameterListAST result = GALGAS_effectiveParameterListAST::constructor_emptyList (THERE) ;
  subListToIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_effectiveParameterListAST::plusAssign_operation (const GALGAS_effectiveParameterListAST inOperand,
                                                             C_Compiler * /* inCompiler */
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_effectiveParameterPassingModeAST GALGAS_effectiveParameterListAST::getter_mEffectiveParameterKindAtIndex (const GALGAS_uint & inIndex,
                                                                                                                 C_Compiler * inCompiler
                                                                                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_effectiveParameterListAST * p = (cCollectionElement_effectiveParameterListAST *) attributes.ptr () ;
  GALGAS_effectiveParameterPassingModeAST result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_effectiveParameterListAST) ;
    result = p->mObject.mAttribute_mEffectiveParameterKind ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_effectiveParameterListAST::getter_mSelectorAtIndex (const GALGAS_uint & inIndex,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_effectiveParameterListAST * p = (cCollectionElement_effectiveParameterListAST *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_effectiveParameterListAST) ;
    result = p->mObject.mAttribute_mSelector ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_effectiveParameterListAST::cEnumerator_effectiveParameterListAST (const GALGAS_effectiveParameterListAST & inEnumeratedObject,
                                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_effectiveParameterListAST_2D_element cEnumerator_effectiveParameterListAST::current (LOCATION_ARGS) const {
  const cCollectionElement_effectiveParameterListAST * p = (const cCollectionElement_effectiveParameterListAST *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_effectiveParameterListAST) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_effectiveParameterPassingModeAST cEnumerator_effectiveParameterListAST::current_mEffectiveParameterKind (LOCATION_ARGS) const {
  const cCollectionElement_effectiveParameterListAST * p = (const cCollectionElement_effectiveParameterListAST *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_effectiveParameterListAST) ;
  return p->mObject.mAttribute_mEffectiveParameterKind ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_effectiveParameterListAST::current_mSelector (LOCATION_ARGS) const {
  const cCollectionElement_effectiveParameterListAST * p = (const cCollectionElement_effectiveParameterListAST *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_effectiveParameterListAST) ;
  return p->mObject.mAttribute_mSelector ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @effectiveParameterListAST type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_effectiveParameterListAST ("effectiveParameterListAST",
                                                  NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_effectiveParameterListAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_effectiveParameterListAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_effectiveParameterListAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_effectiveParameterListAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_effectiveParameterListAST GALGAS_effectiveParameterListAST::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_effectiveParameterListAST result ;
  const GALGAS_effectiveParameterListAST * p = (const GALGAS_effectiveParameterListAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_effectiveParameterListAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("effectiveParameterListAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKindIR::GALGAS_routineKindIR (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKindIR GALGAS_routineKindIR::constructor_function (UNUSED_LOCATION_ARGS) {
  GALGAS_routineKindIR result ;
  result.mEnum = kEnum_function ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKindIR GALGAS_routineKindIR::constructor_sectionInProcessorUserMode (UNUSED_LOCATION_ARGS) {
  GALGAS_routineKindIR result ;
  result.mEnum = kEnum_sectionInProcessorUserMode ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKindIR GALGAS_routineKindIR::constructor_serviceInProcessorUserMode (UNUSED_LOCATION_ARGS) {
  GALGAS_routineKindIR result ;
  result.mEnum = kEnum_serviceInProcessorUserMode ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKindIR GALGAS_routineKindIR::constructor_sectionInProcessorPrivilegedMode (UNUSED_LOCATION_ARGS) {
  GALGAS_routineKindIR result ;
  result.mEnum = kEnum_sectionInProcessorPrivilegedMode ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKindIR GALGAS_routineKindIR::constructor_serviceInProcessorPrivilegedMode (UNUSED_LOCATION_ARGS) {
  GALGAS_routineKindIR result ;
  result.mEnum = kEnum_serviceInProcessorPrivilegedMode ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_routineKindIR [6] = {
  "(not built)",
  "function",
  "sectionInProcessorUserMode",
  "serviceInProcessorUserMode",
  "sectionInProcessorPrivilegedMode",
  "serviceInProcessorPrivilegedMode"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineKindIR::getter_isFunction (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_function == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineKindIR::getter_isSectionInProcessorUserMode (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_sectionInProcessorUserMode == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineKindIR::getter_isServiceInProcessorUserMode (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_serviceInProcessorUserMode == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineKindIR::getter_isSectionInProcessorPrivilegedMode (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_sectionInProcessorPrivilegedMode == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineKindIR::getter_isServiceInProcessorPrivilegedMode (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_serviceInProcessorPrivilegedMode == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineKindIR::description (C_String & ioString,
                                        const int32_t /* inIndentation */) const {
  ioString << "<enum @routineKindIR: " << gEnumNameArrayFor_routineKindIR [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_routineKindIR::objectCompare (const GALGAS_routineKindIR & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 @routineKindIR type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineKindIR ("routineKindIR",
                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineKindIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineKindIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineKindIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineKindIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKindIR GALGAS_routineKindIR::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_routineKindIR result ;
  const GALGAS_routineKindIR * p = (const GALGAS_routineKindIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineKindIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("routineKindIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operatorAssignKind::GALGAS_operatorAssignKind (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operatorAssignKind GALGAS_operatorAssignKind::constructor_bitWiseOrAssign (UNUSED_LOCATION_ARGS) {
  GALGAS_operatorAssignKind result ;
  result.mEnum = kEnum_bitWiseOrAssign ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operatorAssignKind GALGAS_operatorAssignKind::constructor_bitWiseAndAssign (UNUSED_LOCATION_ARGS) {
  GALGAS_operatorAssignKind result ;
  result.mEnum = kEnum_bitWiseAndAssign ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operatorAssignKind GALGAS_operatorAssignKind::constructor_bitWiseXorAssign (UNUSED_LOCATION_ARGS) {
  GALGAS_operatorAssignKind result ;
  result.mEnum = kEnum_bitWiseXorAssign ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operatorAssignKind GALGAS_operatorAssignKind::constructor_addAssign (UNUSED_LOCATION_ARGS) {
  GALGAS_operatorAssignKind result ;
  result.mEnum = kEnum_addAssign ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operatorAssignKind GALGAS_operatorAssignKind::constructor_addModuloAssign (UNUSED_LOCATION_ARGS) {
  GALGAS_operatorAssignKind result ;
  result.mEnum = kEnum_addModuloAssign ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operatorAssignKind GALGAS_operatorAssignKind::constructor_subAssign (UNUSED_LOCATION_ARGS) {
  GALGAS_operatorAssignKind result ;
  result.mEnum = kEnum_subAssign ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operatorAssignKind GALGAS_operatorAssignKind::constructor_subModuloAssign (UNUSED_LOCATION_ARGS) {
  GALGAS_operatorAssignKind result ;
  result.mEnum = kEnum_subModuloAssign ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operatorAssignKind GALGAS_operatorAssignKind::constructor_mulAssign (UNUSED_LOCATION_ARGS) {
  GALGAS_operatorAssignKind result ;
  result.mEnum = kEnum_mulAssign ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operatorAssignKind GALGAS_operatorAssignKind::constructor_mulModuloAssign (UNUSED_LOCATION_ARGS) {
  GALGAS_operatorAssignKind result ;
  result.mEnum = kEnum_mulModuloAssign ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operatorAssignKind GALGAS_operatorAssignKind::constructor_divAssign (UNUSED_LOCATION_ARGS) {
  GALGAS_operatorAssignKind result ;
  result.mEnum = kEnum_divAssign ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operatorAssignKind GALGAS_operatorAssignKind::constructor_divZeroAssign (UNUSED_LOCATION_ARGS) {
  GALGAS_operatorAssignKind result ;
  result.mEnum = kEnum_divZeroAssign ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operatorAssignKind GALGAS_operatorAssignKind::constructor_modAssign (UNUSED_LOCATION_ARGS) {
  GALGAS_operatorAssignKind result ;
  result.mEnum = kEnum_modAssign ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operatorAssignKind GALGAS_operatorAssignKind::constructor_modZeroAssign (UNUSED_LOCATION_ARGS) {
  GALGAS_operatorAssignKind result ;
  result.mEnum = kEnum_modZeroAssign ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_operatorAssignKind [14] = {
  "(not built)",
  "bitWiseOrAssign",
  "bitWiseAndAssign",
  "bitWiseXorAssign",
  "addAssign",
  "addModuloAssign",
  "subAssign",
  "subModuloAssign",
  "mulAssign",
  "mulModuloAssign",
  "divAssign",
  "divZeroAssign",
  "modAssign",
  "modZeroAssign"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_operatorAssignKind::getter_isBitWiseOrAssign (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_bitWiseOrAssign == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_operatorAssignKind::getter_isBitWiseAndAssign (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_bitWiseAndAssign == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_operatorAssignKind::getter_isBitWiseXorAssign (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_bitWiseXorAssign == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_operatorAssignKind::getter_isAddAssign (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_addAssign == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_operatorAssignKind::getter_isAddModuloAssign (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_addModuloAssign == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_operatorAssignKind::getter_isSubAssign (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_subAssign == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_operatorAssignKind::getter_isSubModuloAssign (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_subModuloAssign == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_operatorAssignKind::getter_isMulAssign (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_mulAssign == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_operatorAssignKind::getter_isMulModuloAssign (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_mulModuloAssign == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_operatorAssignKind::getter_isDivAssign (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_divAssign == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_operatorAssignKind::getter_isDivZeroAssign (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_divZeroAssign == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_operatorAssignKind::getter_isModAssign (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_modAssign == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_operatorAssignKind::getter_isModZeroAssign (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_modZeroAssign == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operatorAssignKind::description (C_String & ioString,
                                             const int32_t /* inIndentation */) const {
  ioString << "<enum @operatorAssignKind: " << gEnumNameArrayFor_operatorAssignKind [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_operatorAssignKind::objectCompare (const GALGAS_operatorAssignKind & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @operatorAssignKind type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_operatorAssignKind ("operatorAssignKind",
                                           NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_operatorAssignKind::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_operatorAssignKind ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_operatorAssignKind::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_operatorAssignKind (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operatorAssignKind GALGAS_operatorAssignKind::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_operatorAssignKind result ;
  const GALGAS_operatorAssignKind * p = (const GALGAS_operatorAssignKind *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_operatorAssignKind *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("operatorAssignKind", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                Class for element of '@onInstructionBranchList' list                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_onInstructionBranchList : public cCollectionElement {
  public : GALGAS_onInstructionBranchList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_onInstructionBranchList (const GALGAS_guardedCommand & in_mGuardedCommand,
                                                       const GALGAS_instructionListAST & in_mInstructionList,
                                                       const GALGAS_location & in_mEndOfBranch
                                                       COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
  public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_onInstructionBranchList::cCollectionElement_onInstructionBranchList (const GALGAS_guardedCommand & in_mGuardedCommand,
                                                                                        const GALGAS_instructionListAST & in_mInstructionList,
                                                                                        const GALGAS_location & in_mEndOfBranch
                                                                                        COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mGuardedCommand, in_mInstructionList, in_mEndOfBranch) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_onInstructionBranchList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_onInstructionBranchList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_onInstructionBranchList (mObject.mAttribute_mGuardedCommand, mObject.mAttribute_mInstructionList, mObject.mAttribute_mEndOfBranch COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_onInstructionBranchList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGuardedCommand" ":" ;
  mObject.mAttribute_mGuardedCommand.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionList" ":" ;
  mObject.mAttribute_mInstructionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEndOfBranch" ":" ;
  mObject.mAttribute_mEndOfBranch.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_onInstructionBranchList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_onInstructionBranchList * operand = (cCollectionElement_onInstructionBranchList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_onInstructionBranchList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchList::GALGAS_onInstructionBranchList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchList::GALGAS_onInstructionBranchList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchList GALGAS_onInstructionBranchList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_onInstructionBranchList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchList GALGAS_onInstructionBranchList::constructor_listWithValue (const GALGAS_guardedCommand & inOperand0,
                                                                                          const GALGAS_instructionListAST & inOperand1,
                                                                                          const GALGAS_location & inOperand2
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_onInstructionBranchList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_onInstructionBranchList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                const GALGAS_guardedCommand & in_mGuardedCommand,
                                                                const GALGAS_instructionListAST & in_mInstructionList,
                                                                const GALGAS_location & in_mEndOfBranch
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement_onInstructionBranchList * p = NULL ;
  macroMyNew (p, cCollectionElement_onInstructionBranchList (in_mGuardedCommand,
                                                             in_mInstructionList,
                                                             in_mEndOfBranch COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchList::addAssign_operation (const GALGAS_guardedCommand & inOperand0,
                                                          const GALGAS_instructionListAST & inOperand1,
                                                          const GALGAS_location & inOperand2
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_onInstructionBranchList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchList::setter_insertAtIndex (const GALGAS_guardedCommand inOperand0,
                                                           const GALGAS_instructionListAST inOperand1,
                                                           const GALGAS_location inOperand2,
                                                           const GALGAS_uint inInsertionIndex,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_onInstructionBranchList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchList::setter_removeAtIndex (GALGAS_guardedCommand & outOperand0,
                                                           GALGAS_instructionListAST & outOperand1,
                                                           GALGAS_location & outOperand2,
                                                           const GALGAS_uint inRemoveIndex,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_onInstructionBranchList * p = (cCollectionElement_onInstructionBranchList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_onInstructionBranchList) ;
      outOperand0 = p->mObject.mAttribute_mGuardedCommand ;
      outOperand1 = p->mObject.mAttribute_mInstructionList ;
      outOperand2 = p->mObject.mAttribute_mEndOfBranch ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchList::setter_popFirst (GALGAS_guardedCommand & outOperand0,
                                                      GALGAS_instructionListAST & outOperand1,
                                                      GALGAS_location & outOperand2,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_onInstructionBranchList * p = (cCollectionElement_onInstructionBranchList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_onInstructionBranchList) ;
    outOperand0 = p->mObject.mAttribute_mGuardedCommand ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mEndOfBranch ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchList::setter_popLast (GALGAS_guardedCommand & outOperand0,
                                                     GALGAS_instructionListAST & outOperand1,
                                                     GALGAS_location & outOperand2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_onInstructionBranchList * p = (cCollectionElement_onInstructionBranchList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_onInstructionBranchList) ;
    outOperand0 = p->mObject.mAttribute_mGuardedCommand ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mEndOfBranch ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchList::method_first (GALGAS_guardedCommand & outOperand0,
                                                   GALGAS_instructionListAST & outOperand1,
                                                   GALGAS_location & outOperand2,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_onInstructionBranchList * p = (cCollectionElement_onInstructionBranchList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_onInstructionBranchList) ;
    outOperand0 = p->mObject.mAttribute_mGuardedCommand ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mEndOfBranch ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchList::method_last (GALGAS_guardedCommand & outOperand0,
                                                  GALGAS_instructionListAST & outOperand1,
                                                  GALGAS_location & outOperand2,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_onInstructionBranchList * p = (cCollectionElement_onInstructionBranchList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_onInstructionBranchList) ;
    outOperand0 = p->mObject.mAttribute_mGuardedCommand ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mEndOfBranch ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchList GALGAS_onInstructionBranchList::add_operation (const GALGAS_onInstructionBranchList & inOperand,
                                                                              C_Compiler * /* inCompiler */
                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_onInstructionBranchList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchList GALGAS_onInstructionBranchList::getter_subListWithRange (const GALGAS_range & inRange,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_onInstructionBranchList result = GALGAS_onInstructionBranchList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchList GALGAS_onInstructionBranchList::getter_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_onInstructionBranchList result = GALGAS_onInstructionBranchList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchList GALGAS_onInstructionBranchList::getter_subListToIndex (const GALGAS_uint & inIndex,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_onInstructionBranchList result = GALGAS_onInstructionBranchList::constructor_emptyList (THERE) ;
  subListToIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchList::plusAssign_operation (const GALGAS_onInstructionBranchList inOperand,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardedCommand GALGAS_onInstructionBranchList::getter_mGuardedCommandAtIndex (const GALGAS_uint & inIndex,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_onInstructionBranchList * p = (cCollectionElement_onInstructionBranchList *) attributes.ptr () ;
  GALGAS_guardedCommand result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_onInstructionBranchList) ;
    result = p->mObject.mAttribute_mGuardedCommand ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListAST GALGAS_onInstructionBranchList::getter_mInstructionListAtIndex (const GALGAS_uint & inIndex,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_onInstructionBranchList * p = (cCollectionElement_onInstructionBranchList *) attributes.ptr () ;
  GALGAS_instructionListAST result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_onInstructionBranchList) ;
    result = p->mObject.mAttribute_mInstructionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_onInstructionBranchList::getter_mEndOfBranchAtIndex (const GALGAS_uint & inIndex,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_onInstructionBranchList * p = (cCollectionElement_onInstructionBranchList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_onInstructionBranchList) ;
    result = p->mObject.mAttribute_mEndOfBranch ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_onInstructionBranchList::cEnumerator_onInstructionBranchList (const GALGAS_onInstructionBranchList & inEnumeratedObject,
                                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchList_2D_element cEnumerator_onInstructionBranchList::current (LOCATION_ARGS) const {
  const cCollectionElement_onInstructionBranchList * p = (const cCollectionElement_onInstructionBranchList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_onInstructionBranchList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardedCommand cEnumerator_onInstructionBranchList::current_mGuardedCommand (LOCATION_ARGS) const {
  const cCollectionElement_onInstructionBranchList * p = (const cCollectionElement_onInstructionBranchList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_onInstructionBranchList) ;
  return p->mObject.mAttribute_mGuardedCommand ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListAST cEnumerator_onInstructionBranchList::current_mInstructionList (LOCATION_ARGS) const {
  const cCollectionElement_onInstructionBranchList * p = (const cCollectionElement_onInstructionBranchList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_onInstructionBranchList) ;
  return p->mObject.mAttribute_mInstructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cEnumerator_onInstructionBranchList::current_mEndOfBranch (LOCATION_ARGS) const {
  const cCollectionElement_onInstructionBranchList * p = (const cCollectionElement_onInstructionBranchList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_onInstructionBranchList) ;
  return p->mObject.mAttribute_mEndOfBranch ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @onInstructionBranchList type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_onInstructionBranchList ("onInstructionBranchList",
                                                NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_onInstructionBranchList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_onInstructionBranchList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_onInstructionBranchList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_onInstructionBranchList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchList GALGAS_onInstructionBranchList::extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_onInstructionBranchList result ;
  const GALGAS_onInstructionBranchList * p = (const GALGAS_onInstructionBranchList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_onInstructionBranchList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("onInstructionBranchList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               Class for element of '@onInstructionBranchListIR' list                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_onInstructionBranchListIR : public cCollectionElement {
  public : GALGAS_onInstructionBranchListIR_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_onInstructionBranchListIR (const GALGAS_guardedCommandIR & in_mGuardedCommand,
                                                         const GALGAS_instructionListIR & in_mInstructionGenerationList
                                                         COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
  public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_onInstructionBranchListIR::cCollectionElement_onInstructionBranchListIR (const GALGAS_guardedCommandIR & in_mGuardedCommand,
                                                                                            const GALGAS_instructionListIR & in_mInstructionGenerationList
                                                                                            COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mGuardedCommand, in_mInstructionGenerationList) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_onInstructionBranchListIR::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_onInstructionBranchListIR::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_onInstructionBranchListIR (mObject.mAttribute_mGuardedCommand, mObject.mAttribute_mInstructionGenerationList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_onInstructionBranchListIR::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGuardedCommand" ":" ;
  mObject.mAttribute_mGuardedCommand.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionGenerationList" ":" ;
  mObject.mAttribute_mInstructionGenerationList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_onInstructionBranchListIR::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_onInstructionBranchListIR * operand = (cCollectionElement_onInstructionBranchListIR *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_onInstructionBranchListIR) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchListIR::GALGAS_onInstructionBranchListIR (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchListIR::GALGAS_onInstructionBranchListIR (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchListIR GALGAS_onInstructionBranchListIR::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_onInstructionBranchListIR result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchListIR GALGAS_onInstructionBranchListIR::constructor_listWithValue (const GALGAS_guardedCommandIR & inOperand0,
                                                                                              const GALGAS_instructionListIR & inOperand1
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_onInstructionBranchListIR result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_onInstructionBranchListIR::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchListIR::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                  const GALGAS_guardedCommandIR & in_mGuardedCommand,
                                                                  const GALGAS_instructionListIR & in_mInstructionGenerationList
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_onInstructionBranchListIR * p = NULL ;
  macroMyNew (p, cCollectionElement_onInstructionBranchListIR (in_mGuardedCommand,
                                                               in_mInstructionGenerationList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchListIR::addAssign_operation (const GALGAS_guardedCommandIR & inOperand0,
                                                            const GALGAS_instructionListIR & inOperand1
                                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_onInstructionBranchListIR (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchListIR::setter_insertAtIndex (const GALGAS_guardedCommandIR inOperand0,
                                                             const GALGAS_instructionListIR inOperand1,
                                                             const GALGAS_uint inInsertionIndex,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_onInstructionBranchListIR (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchListIR::setter_removeAtIndex (GALGAS_guardedCommandIR & outOperand0,
                                                             GALGAS_instructionListIR & outOperand1,
                                                             const GALGAS_uint inRemoveIndex,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_onInstructionBranchListIR * p = (cCollectionElement_onInstructionBranchListIR *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_onInstructionBranchListIR) ;
      outOperand0 = p->mObject.mAttribute_mGuardedCommand ;
      outOperand1 = p->mObject.mAttribute_mInstructionGenerationList ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchListIR::setter_popFirst (GALGAS_guardedCommandIR & outOperand0,
                                                        GALGAS_instructionListIR & outOperand1,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_onInstructionBranchListIR * p = (cCollectionElement_onInstructionBranchListIR *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_onInstructionBranchListIR) ;
    outOperand0 = p->mObject.mAttribute_mGuardedCommand ;
    outOperand1 = p->mObject.mAttribute_mInstructionGenerationList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchListIR::setter_popLast (GALGAS_guardedCommandIR & outOperand0,
                                                       GALGAS_instructionListIR & outOperand1,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_onInstructionBranchListIR * p = (cCollectionElement_onInstructionBranchListIR *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_onInstructionBranchListIR) ;
    outOperand0 = p->mObject.mAttribute_mGuardedCommand ;
    outOperand1 = p->mObject.mAttribute_mInstructionGenerationList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchListIR::method_first (GALGAS_guardedCommandIR & outOperand0,
                                                     GALGAS_instructionListIR & outOperand1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_onInstructionBranchListIR * p = (cCollectionElement_onInstructionBranchListIR *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_onInstructionBranchListIR) ;
    outOperand0 = p->mObject.mAttribute_mGuardedCommand ;
    outOperand1 = p->mObject.mAttribute_mInstructionGenerationList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchListIR::method_last (GALGAS_guardedCommandIR & outOperand0,
                                                    GALGAS_instructionListIR & outOperand1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_onInstructionBranchListIR * p = (cCollectionElement_onInstructionBranchListIR *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_onInstructionBranchListIR) ;
    outOperand0 = p->mObject.mAttribute_mGuardedCommand ;
    outOperand1 = p->mObject.mAttribute_mInstructionGenerationList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchListIR GALGAS_onInstructionBranchListIR::add_operation (const GALGAS_onInstructionBranchListIR & inOperand,
                                                                                  C_Compiler * /* inCompiler */
                                                                                  COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_onInstructionBranchListIR result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchListIR GALGAS_onInstructionBranchListIR::getter_subListWithRange (const GALGAS_range & inRange,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_onInstructionBranchListIR result = GALGAS_onInstructionBranchListIR::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchListIR GALGAS_onInstructionBranchListIR::getter_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_onInstructionBranchListIR result = GALGAS_onInstructionBranchListIR::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchListIR GALGAS_onInstructionBranchListIR::getter_subListToIndex (const GALGAS_uint & inIndex,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_onInstructionBranchListIR result = GALGAS_onInstructionBranchListIR::constructor_emptyList (THERE) ;
  subListToIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_onInstructionBranchListIR::plusAssign_operation (const GALGAS_onInstructionBranchListIR inOperand,
                                                             C_Compiler * /* inCompiler */
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardedCommandIR GALGAS_onInstructionBranchListIR::getter_mGuardedCommandAtIndex (const GALGAS_uint & inIndex,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_onInstructionBranchListIR * p = (cCollectionElement_onInstructionBranchListIR *) attributes.ptr () ;
  GALGAS_guardedCommandIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_onInstructionBranchListIR) ;
    result = p->mObject.mAttribute_mGuardedCommand ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR GALGAS_onInstructionBranchListIR::getter_mInstructionGenerationListAtIndex (const GALGAS_uint & inIndex,
                                                                                                     C_Compiler * inCompiler
                                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_onInstructionBranchListIR * p = (cCollectionElement_onInstructionBranchListIR *) attributes.ptr () ;
  GALGAS_instructionListIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_onInstructionBranchListIR) ;
    result = p->mObject.mAttribute_mInstructionGenerationList ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_onInstructionBranchListIR::cEnumerator_onInstructionBranchListIR (const GALGAS_onInstructionBranchListIR & inEnumeratedObject,
                                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchListIR_2D_element cEnumerator_onInstructionBranchListIR::current (LOCATION_ARGS) const {
  const cCollectionElement_onInstructionBranchListIR * p = (const cCollectionElement_onInstructionBranchListIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_onInstructionBranchListIR) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardedCommandIR cEnumerator_onInstructionBranchListIR::current_mGuardedCommand (LOCATION_ARGS) const {
  const cCollectionElement_onInstructionBranchListIR * p = (const cCollectionElement_onInstructionBranchListIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_onInstructionBranchListIR) ;
  return p->mObject.mAttribute_mGuardedCommand ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_instructionListIR cEnumerator_onInstructionBranchListIR::current_mInstructionGenerationList (LOCATION_ARGS) const {
  const cCollectionElement_onInstructionBranchListIR * p = (const cCollectionElement_onInstructionBranchListIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_onInstructionBranchListIR) ;
  return p->mObject.mAttribute_mInstructionGenerationList ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @onInstructionBranchListIR type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_onInstructionBranchListIR ("onInstructionBranchListIR",
                                                  NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_onInstructionBranchListIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_onInstructionBranchListIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_onInstructionBranchListIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_onInstructionBranchListIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_onInstructionBranchListIR GALGAS_onInstructionBranchListIR::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_onInstructionBranchListIR result ;
  const GALGAS_onInstructionBranchListIR * p = (const GALGAS_onInstructionBranchListIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_onInstructionBranchListIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("onInstructionBranchListIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               Class for element of '@procEffectiveParameterList' list                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_procEffectiveParameterList : public cCollectionElement {
  public : GALGAS_procEffectiveParameterList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_procEffectiveParameterList (const GALGAS_effectiveParameterPassingModeAST & in_mEffectiveParameterPassingMode,
                                                          const GALGAS_lstring & in_mSelector,
                                                          const GALGAS_unifiedTypeMap_2D_proxy & in_mParameterType
                                                          COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
  public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_procEffectiveParameterList::cCollectionElement_procEffectiveParameterList (const GALGAS_effectiveParameterPassingModeAST & in_mEffectiveParameterPassingMode,
                                                                                              const GALGAS_lstring & in_mSelector,
                                                                                              const GALGAS_unifiedTypeMap_2D_proxy & in_mParameterType
                                                                                              COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mEffectiveParameterPassingMode, in_mSelector, in_mParameterType) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_procEffectiveParameterList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_procEffectiveParameterList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_procEffectiveParameterList (mObject.mAttribute_mEffectiveParameterPassingMode, mObject.mAttribute_mSelector, mObject.mAttribute_mParameterType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_procEffectiveParameterList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEffectiveParameterPassingMode" ":" ;
  mObject.mAttribute_mEffectiveParameterPassingMode.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSelector" ":" ;
  mObject.mAttribute_mSelector.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mParameterType" ":" ;
  mObject.mAttribute_mParameterType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_procEffectiveParameterList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_procEffectiveParameterList * operand = (cCollectionElement_procEffectiveParameterList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_procEffectiveParameterList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterList::GALGAS_procEffectiveParameterList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterList::GALGAS_procEffectiveParameterList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterList GALGAS_procEffectiveParameterList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_procEffectiveParameterList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterList GALGAS_procEffectiveParameterList::constructor_listWithValue (const GALGAS_effectiveParameterPassingModeAST & inOperand0,
                                                                                                const GALGAS_lstring & inOperand1,
                                                                                                const GALGAS_unifiedTypeMap_2D_proxy & inOperand2
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_procEffectiveParameterList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_procEffectiveParameterList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procEffectiveParameterList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                   const GALGAS_effectiveParameterPassingModeAST & in_mEffectiveParameterPassingMode,
                                                                   const GALGAS_lstring & in_mSelector,
                                                                   const GALGAS_unifiedTypeMap_2D_proxy & in_mParameterType
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement_procEffectiveParameterList * p = NULL ;
  macroMyNew (p, cCollectionElement_procEffectiveParameterList (in_mEffectiveParameterPassingMode,
                                                                in_mSelector,
                                                                in_mParameterType COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procEffectiveParameterList::addAssign_operation (const GALGAS_effectiveParameterPassingModeAST & inOperand0,
                                                             const GALGAS_lstring & inOperand1,
                                                             const GALGAS_unifiedTypeMap_2D_proxy & inOperand2
                                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_procEffectiveParameterList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procEffectiveParameterList::setter_insertAtIndex (const GALGAS_effectiveParameterPassingModeAST inOperand0,
                                                              const GALGAS_lstring inOperand1,
                                                              const GALGAS_unifiedTypeMap_2D_proxy inOperand2,
                                                              const GALGAS_uint inInsertionIndex,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_procEffectiveParameterList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procEffectiveParameterList::setter_removeAtIndex (GALGAS_effectiveParameterPassingModeAST & outOperand0,
                                                              GALGAS_lstring & outOperand1,
                                                              GALGAS_unifiedTypeMap_2D_proxy & outOperand2,
                                                              const GALGAS_uint inRemoveIndex,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_procEffectiveParameterList * p = (cCollectionElement_procEffectiveParameterList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_procEffectiveParameterList) ;
      outOperand0 = p->mObject.mAttribute_mEffectiveParameterPassingMode ;
      outOperand1 = p->mObject.mAttribute_mSelector ;
      outOperand2 = p->mObject.mAttribute_mParameterType ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procEffectiveParameterList::setter_popFirst (GALGAS_effectiveParameterPassingModeAST & outOperand0,
                                                         GALGAS_lstring & outOperand1,
                                                         GALGAS_unifiedTypeMap_2D_proxy & outOperand2,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_procEffectiveParameterList * p = (cCollectionElement_procEffectiveParameterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_procEffectiveParameterList) ;
    outOperand0 = p->mObject.mAttribute_mEffectiveParameterPassingMode ;
    outOperand1 = p->mObject.mAttribute_mSelector ;
    outOperand2 = p->mObject.mAttribute_mParameterType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procEffectiveParameterList::setter_popLast (GALGAS_effectiveParameterPassingModeAST & outOperand0,
                                                        GALGAS_lstring & outOperand1,
                                                        GALGAS_unifiedTypeMap_2D_proxy & outOperand2,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_procEffectiveParameterList * p = (cCollectionElement_procEffectiveParameterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_procEffectiveParameterList) ;
    outOperand0 = p->mObject.mAttribute_mEffectiveParameterPassingMode ;
    outOperand1 = p->mObject.mAttribute_mSelector ;
    outOperand2 = p->mObject.mAttribute_mParameterType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procEffectiveParameterList::method_first (GALGAS_effectiveParameterPassingModeAST & outOperand0,
                                                      GALGAS_lstring & outOperand1,
                                                      GALGAS_unifiedTypeMap_2D_proxy & outOperand2,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_procEffectiveParameterList * p = (cCollectionElement_procEffectiveParameterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_procEffectiveParameterList) ;
    outOperand0 = p->mObject.mAttribute_mEffectiveParameterPassingMode ;
    outOperand1 = p->mObject.mAttribute_mSelector ;
    outOperand2 = p->mObject.mAttribute_mParameterType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procEffectiveParameterList::method_last (GALGAS_effectiveParameterPassingModeAST & outOperand0,
                                                     GALGAS_lstring & outOperand1,
                                                     GALGAS_unifiedTypeMap_2D_proxy & outOperand2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_procEffectiveParameterList * p = (cCollectionElement_procEffectiveParameterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_procEffectiveParameterList) ;
    outOperand0 = p->mObject.mAttribute_mEffectiveParameterPassingMode ;
    outOperand1 = p->mObject.mAttribute_mSelector ;
    outOperand2 = p->mObject.mAttribute_mParameterType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterList GALGAS_procEffectiveParameterList::add_operation (const GALGAS_procEffectiveParameterList & inOperand,
                                                                                    C_Compiler * /* inCompiler */
                                                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_procEffectiveParameterList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterList GALGAS_procEffectiveParameterList::getter_subListWithRange (const GALGAS_range & inRange,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_procEffectiveParameterList result = GALGAS_procEffectiveParameterList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterList GALGAS_procEffectiveParameterList::getter_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_procEffectiveParameterList result = GALGAS_procEffectiveParameterList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterList GALGAS_procEffectiveParameterList::getter_subListToIndex (const GALGAS_uint & inIndex,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_procEffectiveParameterList result = GALGAS_procEffectiveParameterList::constructor_emptyList (THERE) ;
  subListToIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procEffectiveParameterList::plusAssign_operation (const GALGAS_procEffectiveParameterList inOperand,
                                                              C_Compiler * /* inCompiler */
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_effectiveParameterPassingModeAST GALGAS_procEffectiveParameterList::getter_mEffectiveParameterPassingModeAtIndex (const GALGAS_uint & inIndex,
                                                                                                                         C_Compiler * inCompiler
                                                                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_procEffectiveParameterList * p = (cCollectionElement_procEffectiveParameterList *) attributes.ptr () ;
  GALGAS_effectiveParameterPassingModeAST result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_procEffectiveParameterList) ;
    result = p->mObject.mAttribute_mEffectiveParameterPassingMode ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_procEffectiveParameterList::getter_mSelectorAtIndex (const GALGAS_uint & inIndex,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_procEffectiveParameterList * p = (cCollectionElement_procEffectiveParameterList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_procEffectiveParameterList) ;
    result = p->mObject.mAttribute_mSelector ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_procEffectiveParameterList::getter_mParameterTypeAtIndex (const GALGAS_uint & inIndex,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_procEffectiveParameterList * p = (cCollectionElement_procEffectiveParameterList *) attributes.ptr () ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_procEffectiveParameterList) ;
    result = p->mObject.mAttribute_mParameterType ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_procEffectiveParameterList::cEnumerator_procEffectiveParameterList (const GALGAS_procEffectiveParameterList & inEnumeratedObject,
                                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterList_2D_element cEnumerator_procEffectiveParameterList::current (LOCATION_ARGS) const {
  const cCollectionElement_procEffectiveParameterList * p = (const cCollectionElement_procEffectiveParameterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_procEffectiveParameterList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_effectiveParameterPassingModeAST cEnumerator_procEffectiveParameterList::current_mEffectiveParameterPassingMode (LOCATION_ARGS) const {
  const cCollectionElement_procEffectiveParameterList * p = (const cCollectionElement_procEffectiveParameterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_procEffectiveParameterList) ;
  return p->mObject.mAttribute_mEffectiveParameterPassingMode ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_procEffectiveParameterList::current_mSelector (LOCATION_ARGS) const {
  const cCollectionElement_procEffectiveParameterList * p = (const cCollectionElement_procEffectiveParameterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_procEffectiveParameterList) ;
  return p->mObject.mAttribute_mSelector ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_procEffectiveParameterList::current_mParameterType (LOCATION_ARGS) const {
  const cCollectionElement_procEffectiveParameterList * p = (const cCollectionElement_procEffectiveParameterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_procEffectiveParameterList) ;
  return p->mObject.mAttribute_mParameterType ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @procEffectiveParameterList type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_procEffectiveParameterList ("procEffectiveParameterList",
                                                   NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_procEffectiveParameterList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_procEffectiveParameterList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_procEffectiveParameterList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_procEffectiveParameterList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterList GALGAS_procEffectiveParameterList::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_procEffectiveParameterList result ;
  const GALGAS_procEffectiveParameterList * p = (const GALGAS_procEffectiveParameterList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_procEffectiveParameterList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("procEffectiveParameterList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterPassingModeIR::GALGAS_procEffectiveParameterPassingModeIR (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterPassingModeIR GALGAS_procEffectiveParameterPassingModeIR::constructor_input (UNUSED_LOCATION_ARGS) {
  GALGAS_procEffectiveParameterPassingModeIR result ;
  result.mEnum = kEnum_input ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterPassingModeIR GALGAS_procEffectiveParameterPassingModeIR::constructor_output (UNUSED_LOCATION_ARGS) {
  GALGAS_procEffectiveParameterPassingModeIR result ;
  result.mEnum = kEnum_output ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterPassingModeIR GALGAS_procEffectiveParameterPassingModeIR::constructor_outputInput (UNUSED_LOCATION_ARGS) {
  GALGAS_procEffectiveParameterPassingModeIR result ;
  result.mEnum = kEnum_outputInput ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_procEffectiveParameterPassingModeIR [4] = {
  "(not built)",
  "input",
  "output",
  "outputInput"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_procEffectiveParameterPassingModeIR::getter_isInput (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_input == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_procEffectiveParameterPassingModeIR::getter_isOutput (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_output == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_procEffectiveParameterPassingModeIR::getter_isOutputInput (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_outputInput == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_procEffectiveParameterPassingModeIR::description (C_String & ioString,
                                                              const int32_t /* inIndentation */) const {
  ioString << "<enum @procEffectiveParameterPassingModeIR: " << gEnumNameArrayFor_procEffectiveParameterPassingModeIR [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_procEffectiveParameterPassingModeIR::objectCompare (const GALGAS_procEffectiveParameterPassingModeIR & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      @procEffectiveParameterPassingModeIR type                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_procEffectiveParameterPassingModeIR ("procEffectiveParameterPassingModeIR",
                                                            NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_procEffectiveParameterPassingModeIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_procEffectiveParameterPassingModeIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_procEffectiveParameterPassingModeIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_procEffectiveParameterPassingModeIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procEffectiveParameterPassingModeIR GALGAS_procEffectiveParameterPassingModeIR::extractObject (const GALGAS_object & inObject,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_procEffectiveParameterPassingModeIR result ;
  const GALGAS_procEffectiveParameterPassingModeIR * p = (const GALGAS_procEffectiveParameterPassingModeIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_procEffectiveParameterPassingModeIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("procEffectiveParameterPassingModeIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_variableMap::cMapElement_variableMap (const GALGAS_lstring & inKey,
                                                  const GALGAS_unifiedTypeMap_2D_proxy & in_type,
                                                  const GALGAS_bool & in_readAccessAllowed,
                                                  const GALGAS_objectInMemoryIR & in_variableKind,
                                                  const GALGAS_bool & in_copyable,
                                                  const GALGAS_controlRegisterBitSliceAccessMap & in_fieldMap,
                                                  const GALGAS_bool & in_canBeUsedAsInputParameter,
                                                  const GALGAS_bool & in_isConstant
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_type (in_type),
mAttribute_readAccessAllowed (in_readAccessAllowed),
mAttribute_variableKind (in_variableKind),
mAttribute_copyable (in_copyable),
mAttribute_fieldMap (in_fieldMap),
mAttribute_canBeUsedAsInputParameter (in_canBeUsedAsInputParameter),
mAttribute_isConstant (in_isConstant) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_variableMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_type.isValid () && mAttribute_readAccessAllowed.isValid () && mAttribute_variableKind.isValid () && mAttribute_copyable.isValid () && mAttribute_fieldMap.isValid () && mAttribute_canBeUsedAsInputParameter.isValid () && mAttribute_isConstant.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_variableMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_variableMap (mAttribute_lkey, mAttribute_type, mAttribute_readAccessAllowed, mAttribute_variableKind, mAttribute_copyable, mAttribute_fieldMap, mAttribute_canBeUsedAsInputParameter, mAttribute_isConstant COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_variableMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "type" ":" ;
  mAttribute_type.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "readAccessAllowed" ":" ;
  mAttribute_readAccessAllowed.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "variableKind" ":" ;
  mAttribute_variableKind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "copyable" ":" ;
  mAttribute_copyable.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "fieldMap" ":" ;
  mAttribute_fieldMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "canBeUsedAsInputParameter" ":" ;
  mAttribute_canBeUsedAsInputParameter.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "isConstant" ":" ;
  mAttribute_isConstant.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_variableMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_variableMap * operand = (cMapElement_variableMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_type.objectCompare (operand->mAttribute_type) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_readAccessAllowed.objectCompare (operand->mAttribute_readAccessAllowed) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_variableKind.objectCompare (operand->mAttribute_variableKind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_copyable.objectCompare (operand->mAttribute_copyable) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_fieldMap.objectCompare (operand->mAttribute_fieldMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_canBeUsedAsInputParameter.objectCompare (operand->mAttribute_canBeUsedAsInputParameter) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_isConstant.objectCompare (operand->mAttribute_isConstant) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap::GALGAS_variableMap (void) :
AC_GALGAS_uniqueMap () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap::GALGAS_variableMap (const GALGAS_variableMap & inSource) :
AC_GALGAS_uniqueMap (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap & GALGAS_variableMap::operator = (const GALGAS_variableMap & inSource) {
  * ((AC_GALGAS_uniqueMap *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap GALGAS_variableMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_variableMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton states                                                       *
//---------------------------------------------------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const uint32_t kMapStateCount_variableMap = 25 ;
#endif
static const uint32_t kMapState_variableMap_constantInputFormalArgument = 15 ;
static const uint32_t kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused = 17 ;
static const uint32_t kMapState_variableMap_currentInstanceAttribute = 22 ;
static const uint32_t kMapState_variableMap_currentInstanceAttributeInModifier = 23 ;
static const uint32_t kMapState_variableMap_currentInstanceDroppedAttributeInModifier = 24 ;
static const uint32_t kMapState_variableMap_definedLocalVariable = 6 ;
static const uint32_t kMapState_variableMap_definedOutputFormalArgument = 10 ;
static const uint32_t kMapState_variableMap_droppedInputFormalArgument = 20 ;
static const uint32_t kMapState_variableMap_droppedInputOutputFormalArgument = 13 ;
static const uint32_t kMapState_variableMap_droppedLocalVariable = 8 ;
static const uint32_t kMapState_variableMap_globalVariable = 1 ;
static const uint32_t kMapState_variableMap_inaccessibleControlRegister = 0 ;
static const uint32_t kMapState_variableMap_inputFormalArgumentDeclaredAsUnused = 21 ;
static const uint32_t kMapState_variableMap_inputFormalParameter = 18 ;
static const uint32_t kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused = 14 ;
static const uint32_t kMapState_variableMap_localConstant = 3 ;
static const uint32_t kMapState_variableMap_undefinedLocalConstant = 4 ;
static const uint32_t kMapState_variableMap_undefinedLocalVariable = 5 ;
static const uint32_t kMapState_variableMap_undefinedOutputFormalArgument = 9 ;
static const uint32_t kMapState_variableMap_unusedInputOutputFormalArgument = 11 ;
static const uint32_t kMapState_variableMap_usedConstantInputFormalArgument = 16 ;
static const uint32_t kMapState_variableMap_usedInputFormalArgument = 19 ;
static const uint32_t kMapState_variableMap_usedInputOutputFormalArgument = 12 ;
static const uint32_t kMapState_variableMap_usedLocalConstant = 2 ;
static const uint32_t kMapState_variableMap_usedLocalVariable = 7 ;

//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton state names                                                  *
//---------------------------------------------------------------------------------------------------------------------*

static const char * kMapStateNames_variableMap [25] = {
  "inaccessibleControlRegister",
  "globalVariable",
  "usedLocalConstant",
  "localConstant",
  "undefinedLocalConstant",
  "undefinedLocalVariable",
  "definedLocalVariable",
  "usedLocalVariable",
  "droppedLocalVariable",
  "undefinedOutputFormalArgument",
  "definedOutputFormalArgument",
  "unusedInputOutputFormalArgument",
  "usedInputOutputFormalArgument",
  "droppedInputOutputFormalArgument",
  "inputOutputFormalArgumentDeclaredAsUnused",
  "constantInputFormalArgument",
  "usedConstantInputFormalArgument",
  "constantInputFormalArgumentDeclaredAsUnused",
  "inputFormalParameter",
  "usedInputFormalArgument",
  "droppedInputFormalArgument",
  "inputFormalArgumentDeclaredAsUnused",
  "currentInstanceAttribute",
  "currentInstanceAttributeInModifier",
  "currentInstanceDroppedAttributeInModifier"
} ;

//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton actions                                                    *
//---------------------------------------------------------------------------------------------------------------------*

static const uint32_t kMapActionCount_variableMap = 5 ;
static const uint32_t kMapAction_variableMap_dropAccess = 3 ;
static const uint32_t kMapAction_variableMap_neutralAccess = 4 ;
static const uint32_t kMapAction_variableMap_readAccess = 0 ;
static const uint32_t kMapAction_variableMap_readWriteAccess = 2 ;
static const uint32_t kMapAction_variableMap_writeAccess = 1 ;

//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton action names                                                 *
//---------------------------------------------------------------------------------------------------------------------*

static const char * kMapActionNames_variableMap [5] = {
  "dropAccess",
  "neutralAccess",
  "readAccess",
  "readWriteAccess",
  "writeAccess"
} ;

//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton transitions                                                  *
//---------------------------------------------------------------------------------------------------------------------*

static const cMapAutomatonTransition kMapTransitions_variableMap [25 * 5] = {
// State 'inaccessibleControlRegister', index 0 
  {kMapState_variableMap_inaccessibleControlRegister /* 0 */, kMapAutomatonIssueError, "the control register is inaccessible"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_inaccessibleControlRegister /* 0 */, kMapAutomatonIssueError, "the control register is inaccessible"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_inaccessibleControlRegister /* 0 */, kMapAutomatonIssueError, "the control register is inaccessible"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_inaccessibleControlRegister /* 0 */, kMapAutomatonIssueError, "the control register is inaccessible"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_inaccessibleControlRegister /* 0 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'globalVariable', index 1 
  {kMapState_variableMap_globalVariable /* 1 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_globalVariable /* 1 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_globalVariable /* 1 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_globalVariable /* 1 */, kMapAutomatonIssueError, "a global variable cannot be drop"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_globalVariable /* 1 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'usedLocalConstant', index 2 
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonIssueError, "a constant cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonIssueError, "a constant cannot be written"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonIssueError, "a constant cannot be drop"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'localConstant', index 3 
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonIssueError, "a constant cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonIssueError, "a constant cannot be written"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonIssueError, "a constant cannot be drop"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_localConstant /* 3 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'undefinedLocalConstant', index 4 
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonIssueError, "the constant is undefined"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_localConstant /* 3 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonIssueError, "the constant is undefined"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonIssueError, "the constant is undefined"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'undefinedLocalVariable', index 5 
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapAutomatonIssueError, "an undefined local variable cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapAutomatonIssueError, "an undefined local variable cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapAutomatonIssueWarning, "the local variable has no value"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'definedLocalVariable', index 6 
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonIssueWarning, "the local variable has been dropped without any read"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'usedLocalVariable', index 7 
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'droppedLocalVariable', index 8 
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonIssueError, "a dropped local variable cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonIssueError, "a dropped local variable cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonIssueWarning, "the local variable is already dropped"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'undefinedOutputFormalArgument', index 9 
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapAutomatonIssueError, "an undefined output formal parameter cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapAutomatonIssueError, "an undefined output formal parameter cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapAutomatonIssueWarning, "the output formal parameter has no value"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'definedOutputFormalArgument', index 10 
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'unusedInputOutputFormalArgument', index 11 
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'usedInputOutputFormalArgument', index 12 
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'droppedInputOutputFormalArgument', index 13 
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonIssueError, "a dropped input/output formal argument cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonIssueError, "a dropped input/output formal argument cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonIssueWarning, "the input/output formal argument is already dropped"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'inputOutputFormalArgumentDeclaredAsUnused', index 14 
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonIssueWarning, "the input/output formal parameter has been declared as unused"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'constantInputFormalArgument', index 15 
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be dropped"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_constantInputFormalArgument /* 15 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'usedConstantInputFormalArgument', index 16 
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be dropped"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'constantInputFormalArgumentDeclaredAsUnused', index 17 
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueWarning, "the constant input formal parameter is declared as unused"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be written"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonIssueError, "a constant input formal parameter cannot be dropped"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 17 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'inputFormalParameter', index 18 
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_inputFormalParameter /* 18 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'usedInputFormalArgument', index 19 
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'droppedInputFormalArgument', index 20 
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonIssueError, "a dropped input formal parameter cannot be read"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonIssueError, "a dropped input formal parameter cannot be read"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonIssueWarning, "the input formal parameter is already dropped"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'inputFormalArgumentDeclaredAsUnused', index 21 
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonIssueWarning, "the input formal parameter is declared as unused"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'currentInstanceAttribute', index 22 
  {kMapState_variableMap_currentInstanceAttribute /* 22 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_currentInstanceAttribute /* 22 */, kMapAutomatonIssueError, "an attribute cannot be written within a method or a reader"}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_currentInstanceAttribute /* 22 */, kMapAutomatonIssueError, "an attribute cannot be modified within a method or a reader"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_currentInstanceAttribute /* 22 */, kMapAutomatonIssueError, "an attribute cannot be dropped within a method or a reader"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_currentInstanceAttribute /* 22 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'currentInstanceAttributeInModifier', index 23 
  {kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapAutomatonNoIssue, ""}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapAutomatonNoIssue, ""}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 24 */, kMapAutomatonNoIssue, ""}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
// State 'currentInstanceDroppedAttributeInModifier', index 24 
  {kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 24 */, kMapAutomatonIssueError, "the attribute cannot be read, it has been dropped"}, // for action 'readAccess', (index 0)
  {kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapAutomatonNoIssue, ""}, // for action 'writeAccess', (index 1)
  {kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 24 */, kMapAutomatonIssueError, "the attribute cannot be read/written, it has been dropped"}, // for action 'readWriteAccess', (index 2)
  {kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 24 */, kMapAutomatonIssueWarning, "the attribute is already dropped"}, // for action 'dropAccess', (index 3)
  {kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 24 */, kMapAutomatonNoIssue, ""}, // for action 'neutralAccess', (index 4)
} ;

//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton final state issues                                           *
//---------------------------------------------------------------------------------------------------------------------*

static const cMapAutomatonFinalIssue kMapAutomatonFinalIssue_variableMap [25] = {
  {kMapAutomatonNoIssue, ""},// state 'inaccessibleControlRegister' (index 0)
  {kMapAutomatonNoIssue, ""},// state 'globalVariable' (index 1)
  {kMapAutomatonNoIssue, ""},// state 'usedLocalConstant' (index 2)
  {kMapAutomatonIssueWarning, "the '%K' constant value is unused"},// state 'localConstant' (index 3)
  {kMapAutomatonIssueWarning, "the '%K' constant value is unused"},// state 'undefinedLocalConstant' (index 4)
  {kMapAutomatonIssueWarning, "the '%K' local variable is unused"},// state 'undefinedLocalVariable' (index 5)
  {kMapAutomatonNoIssue, ""},// state 'definedLocalVariable' (index 6)
  {kMapAutomatonNoIssue, ""},// state 'usedLocalVariable' (index 7)
  {kMapAutomatonNoIssue, ""},// state 'droppedLocalVariable' (index 8)
  {kMapAutomatonIssueError, "the '%K' output formal parameter is undefined"},// state 'undefinedOutputFormalArgument' (index 9)
  {kMapAutomatonNoIssue, ""},// state 'definedOutputFormalArgument' (index 10)
  {kMapAutomatonIssueWarning, "the '%K' input/output formal parameter is unused"},// state 'unusedInputOutputFormalArgument' (index 11)
  {kMapAutomatonNoIssue, ""},// state 'usedInputOutputFormalArgument' (index 12)
  {kMapAutomatonIssueError, "the '%K' input/ouput formal argument should be valuated at the end of the routine"},// state 'droppedInputOutputFormalArgument' (index 13)
  {kMapAutomatonNoIssue, ""},// state 'inputOutputFormalArgumentDeclaredAsUnused' (index 14)
  {kMapAutomatonIssueWarning, "the constant '%K' input formal parameter is not used and is not declared as unused"},// state 'constantInputFormalArgument' (index 15)
  {kMapAutomatonNoIssue, ""},// state 'usedConstantInputFormalArgument' (index 16)
  {kMapAutomatonNoIssue, ""},// state 'constantInputFormalArgumentDeclaredAsUnused' (index 17)
  {kMapAutomatonIssueWarning, "the '%K' input formal parameter is not used and is not declared as unused"},// state 'inputFormalParameter' (index 18)
  {kMapAutomatonNoIssue, ""},// state 'usedInputFormalArgument' (index 19)
  {kMapAutomatonNoIssue, ""},// state 'droppedInputFormalArgument' (index 20)
  {kMapAutomatonNoIssue, ""},// state 'inputFormalArgumentDeclaredAsUnused' (index 21)
  {kMapAutomatonNoIssue, ""},// state 'currentInstanceAttribute' (index 22)
  {kMapAutomatonNoIssue, ""},// state 'currentInstanceAttributeInModifier' (index 23)
  {kMapAutomatonIssueWarning, "the '%K' attribute is in the dropped state at the end of the modifier"},// state 'currentInstanceDroppedAttributeInModifier' (index 24)
} ;
//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_closeBranch (GALGAS_location inErrorLocation,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  closeBranch (inErrorLocation,
               kMapAutomatonFinalIssue_variableMap,
               #ifndef DO_NOT_GENERATE_CHECKINGS
                 kMapStateCount_variableMap,
               #endif
               inCompiler COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::method_checkAutomatonStates (GALGAS_location inErrorLocation,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  checkAutomatonStates (inErrorLocation, kMapAutomatonFinalIssue_variableMap, inCompiler COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                             map override 'selectBlock'                                              *
//---------------------------------------------------------------------------------------------------------------------*

static const cBranchOverrideTransformationDescriptor kBranchBehaviourForOverride_variableMap_selectBlock [30] = {
  {kMapState_variableMap_localConstant /* 3 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones let it undefined"},
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapState_variableMap_localConstant /* 3 */, kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones let it undefined"},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgument /* 15 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 17 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 24 */, kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 24 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 24 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapAutomatonNoIssue, ""},
} ;

//---------------------------------------------------------------------------------------------------------------------*

static const cBranchOverrideCompatibilityDescriptor kBranchCombinationForOverride_variableMap_selectBlock [42] = {
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapState_variableMap_localConstant /* 3 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_localConstant /* 3 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones let it undefined"},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones let it undefined"},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonIssueError, "this branch lets the '%K' variable undefined, while previous ones define it"},
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonIssueError, "this branch drops the '%K' variable, while previous ones let it defined"},
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonIssueError, "this branch lets the '%K' variable undefined, while previous defines let it"},
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonIssueError, "this branch drops the '%K' variable, while previous ones let it defined"},
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones drop it"},
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonIssueError, "this branch defines the '%K' variable, while previous ones drop it"},
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonIssueError, "this branch defines the '%K' output formal argument, while previous ones let it undefined"},
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonIssueError, "this branch lets the '%K' variable undefined, while previous ones define it"},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapAutomatonIssueError, "this branch drops the '%K' input/output formal argument, while previous ones let it undefined"},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonIssueError, "this branch drops the '%K' input/output formal argument, while previous ones let it defined"},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapAutomatonIssueError, "this branch lets the '%K' input/output formal argument defined, while previous ones drop it"},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonIssueError, "this branch lets the '%K' input/output formal argument defined, while previous ones drop it"},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapAutomatonIssueError, "this branch lets the '%K' input formal argument defined, while previous ones drop it"},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapAutomatonIssueError, "this branch drops the '%K' input formal argument defined, while previous ones let it defined"},
  {kMapState_variableMap_constantInputFormalArgument /* 15 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_constantInputFormalArgument /* 15 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 17 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 17 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_inputFormalParameter /* 18 */, kMapAutomatonIssueError, "this branch drops the '%K' input formal argument, while previous let it defined"},
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonIssueError, "this branch drops the '%K' input formal argument, while previous ones let it defined"},
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonIssueError, "this branch drops the '%K' input formal argument, while previous ones let it defined"},
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonIssueError, "this branch defines the '%K' input formal argument, while previous ones let it dropped"},
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 24 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapAutomatonIssueError, "this branch drops the '%K' attribute, while previous ones let it defined"},
  {kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 24 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapAutomatonIssueError, "this branch lets the '%K' attribute defined, while previous ones drop it"},
} ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_openOverrideForSelectBlock (C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  openOverride (kBranchBehaviourForOverride_variableMap_selectBlock, 30,
                kBranchCombinationForOverride_variableMap_selectBlock, 42,
                "selectBlock",
                inCompiler
                COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                             map override 'repeatBlock'                                              *
//---------------------------------------------------------------------------------------------------------------------*

static const cBranchOverrideTransformationDescriptor kBranchBehaviourForOverride_variableMap_repeatBlock [30] = {
  {kMapState_variableMap_localConstant /* 3 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonIssueError, "the repeated branch should not define the '%K' variable"},
  {kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapState_variableMap_localConstant /* 3 */, kMapState_variableMap_undefinedLocalConstant /* 4 */, kMapAutomatonIssueError, "the repeated branch should not define the '%K' variable"},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapAutomatonIssueError, "the repeated branch should not define the '%K' variable"},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapAutomatonIssueError, "the repeated branch should not define the '%K' variable"},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' variable"},
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' variable"},
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' variable"},
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonIssueError, "the repeated branch should not define the dropped '%K' variable"},
  {kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapAutomatonIssueError, "the repeated branch should not define the '%K' output formal argument"},
  {kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapState_variableMap_undefinedOutputFormalArgument /* 9 */, kMapState_variableMap_definedOutputFormalArgument /* 10 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' output formal argument"},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input/output formal argument"},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input/output formal argument"},
  {kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapAutomatonIssueError, "the repeated branch should define the '%K' input formal argument"},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_droppedInputOutputFormalArgument /* 13 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input/output formal argument"},
  {kMapState_variableMap_constantInputFormalArgument /* 15 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 17 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_inputFormalParameter /* 18 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input formal argument"},
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input formal argument"},
  {kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input formal argument"},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_droppedInputFormalArgument /* 20 */, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' input formal argument"},
  {kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 24 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapAutomatonIssueError, "the repeated branch should not drop the '%K' attribute"},
  {kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 24 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapAutomatonNoIssue, ""},
} ;

//---------------------------------------------------------------------------------------------------------------------*

static const cBranchOverrideCompatibilityDescriptor kBranchCombinationForOverride_variableMap_repeatBlock [20] = {
  {kMapState_variableMap_usedLocalConstant /* 2 */, kMapState_variableMap_localConstant /* 3 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_localConstant /* 3 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapState_variableMap_usedLocalConstant /* 2 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedLocalVariable /* 7 */, kMapState_variableMap_definedLocalVariable /* 6 */, kMapState_variableMap_usedLocalVariable /* 7 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_droppedLocalVariable /* 8 */, kMapState_variableMap_undefinedLocalVariable /* 5 */, kMapState_variableMap_droppedLocalVariable /* 8 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_unusedInputOutputFormalArgument /* 11 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused /* 14 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapState_variableMap_usedInputOutputFormalArgument /* 12 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgument /* 15 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_constantInputFormalArgument /* 15 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 17 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused /* 17 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapState_variableMap_usedConstantInputFormalArgument /* 16 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_inputFormalParameter /* 18 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_inputFormalArgumentDeclaredAsUnused /* 21 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapState_variableMap_usedInputFormalArgument /* 19 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 24 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapAutomatonNoIssue, ""},
  {kMapState_variableMap_currentInstanceDroppedAttributeInModifier /* 24 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapState_variableMap_currentInstanceAttributeInModifier /* 23 */, kMapAutomatonNoIssue, ""},
} ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_openOverrideForRepeatBlock (C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  openOverride (kBranchBehaviourForOverride_variableMap_repeatBlock, 30,
                kBranchCombinationForOverride_variableMap_repeatBlock, 20,
                "repeatBlock",
                inCompiler
                COMMA_THERE) ;
}


//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertInaccessibleControlRegister (GALGAS_lstring inKey,
                                                                   GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                                   GALGAS_bool inArgument1,
                                                                   GALGAS_objectInMemoryIR inArgument2,
                                                                   GALGAS_bool inArgument3,
                                                                   GALGAS_controlRegisterBitSliceAccessMap inArgument4,
                                                                   GALGAS_bool inArgument5,
                                                                   GALGAS_bool inArgument6,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' global variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        kMapState_variableMap_inaccessibleControlRegister,
                        kMapStateNames_variableMap [kMapState_variableMap_inaccessibleControlRegister],
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertGlobalVariable (GALGAS_lstring inKey,
                                                      GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                      GALGAS_bool inArgument1,
                                                      GALGAS_objectInMemoryIR inArgument2,
                                                      GALGAS_bool inArgument3,
                                                      GALGAS_controlRegisterBitSliceAccessMap inArgument4,
                                                      GALGAS_bool inArgument5,
                                                      GALGAS_bool inArgument6,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' global variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        kMapState_variableMap_globalVariable,
                        kMapStateNames_variableMap [kMapState_variableMap_globalVariable],
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertMutableAttribute (GALGAS_lstring inKey,
                                                        GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                        GALGAS_bool inArgument1,
                                                        GALGAS_objectInMemoryIR inArgument2,
                                                        GALGAS_bool inArgument3,
                                                        GALGAS_controlRegisterBitSliceAccessMap inArgument4,
                                                        GALGAS_bool inArgument5,
                                                        GALGAS_bool inArgument6,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' attribute (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        kMapState_variableMap_currentInstanceAttributeInModifier,
                        kMapStateNames_variableMap [kMapState_variableMap_currentInstanceAttributeInModifier],
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertNonMutableAttribute (GALGAS_lstring inKey,
                                                           GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                           GALGAS_bool inArgument1,
                                                           GALGAS_objectInMemoryIR inArgument2,
                                                           GALGAS_bool inArgument3,
                                                           GALGAS_controlRegisterBitSliceAccessMap inArgument4,
                                                           GALGAS_bool inArgument5,
                                                           GALGAS_bool inArgument6,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' attribute (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        kMapState_variableMap_currentInstanceAttribute,
                        kMapStateNames_variableMap [kMapState_variableMap_currentInstanceAttribute],
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertUndefinedLocalVariable (GALGAS_lstring inKey,
                                                              GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                              GALGAS_bool inArgument1,
                                                              GALGAS_objectInMemoryIR inArgument2,
                                                              GALGAS_bool inArgument3,
                                                              GALGAS_controlRegisterBitSliceAccessMap inArgument4,
                                                              GALGAS_bool inArgument5,
                                                              GALGAS_bool inArgument6,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        kMapState_variableMap_undefinedLocalVariable,
                        kMapStateNames_variableMap [kMapState_variableMap_undefinedLocalVariable],
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertDefinedLocalVariable (GALGAS_lstring inKey,
                                                            GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                            GALGAS_bool inArgument1,
                                                            GALGAS_objectInMemoryIR inArgument2,
                                                            GALGAS_bool inArgument3,
                                                            GALGAS_controlRegisterBitSliceAccessMap inArgument4,
                                                            GALGAS_bool inArgument5,
                                                            GALGAS_bool inArgument6,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        kMapState_variableMap_definedLocalVariable,
                        kMapStateNames_variableMap [kMapState_variableMap_definedLocalVariable],
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertUndefinedLocalConstant (GALGAS_lstring inKey,
                                                              GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                              GALGAS_bool inArgument1,
                                                              GALGAS_objectInMemoryIR inArgument2,
                                                              GALGAS_bool inArgument3,
                                                              GALGAS_controlRegisterBitSliceAccessMap inArgument4,
                                                              GALGAS_bool inArgument5,
                                                              GALGAS_bool inArgument6,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        kMapState_variableMap_undefinedLocalConstant,
                        kMapStateNames_variableMap [kMapState_variableMap_undefinedLocalConstant],
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertLocalConstant (GALGAS_lstring inKey,
                                                     GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                     GALGAS_bool inArgument1,
                                                     GALGAS_objectInMemoryIR inArgument2,
                                                     GALGAS_bool inArgument3,
                                                     GALGAS_controlRegisterBitSliceAccessMap inArgument4,
                                                     GALGAS_bool inArgument5,
                                                     GALGAS_bool inArgument6,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        kMapState_variableMap_localConstant,
                        kMapStateNames_variableMap [kMapState_variableMap_localConstant],
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertUsedLocalConstant (GALGAS_lstring inKey,
                                                         GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                         GALGAS_bool inArgument1,
                                                         GALGAS_objectInMemoryIR inArgument2,
                                                         GALGAS_bool inArgument3,
                                                         GALGAS_controlRegisterBitSliceAccessMap inArgument4,
                                                         GALGAS_bool inArgument5,
                                                         GALGAS_bool inArgument6,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        kMapState_variableMap_usedLocalConstant,
                        kMapStateNames_variableMap [kMapState_variableMap_usedLocalConstant],
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertInputFormalArgument (GALGAS_lstring inKey,
                                                           GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                           GALGAS_bool inArgument1,
                                                           GALGAS_objectInMemoryIR inArgument2,
                                                           GALGAS_bool inArgument3,
                                                           GALGAS_controlRegisterBitSliceAccessMap inArgument4,
                                                           GALGAS_bool inArgument5,
                                                           GALGAS_bool inArgument6,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        kMapState_variableMap_inputFormalParameter,
                        kMapStateNames_variableMap [kMapState_variableMap_inputFormalParameter],
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertInputFormalArgumentDeclaredAsUnused (GALGAS_lstring inKey,
                                                                           GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                                           GALGAS_bool inArgument1,
                                                                           GALGAS_objectInMemoryIR inArgument2,
                                                                           GALGAS_bool inArgument3,
                                                                           GALGAS_controlRegisterBitSliceAccessMap inArgument4,
                                                                           GALGAS_bool inArgument5,
                                                                           GALGAS_bool inArgument6,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        kMapState_variableMap_inputFormalArgumentDeclaredAsUnused,
                        kMapStateNames_variableMap [kMapState_variableMap_inputFormalArgumentDeclaredAsUnused],
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertConstantInputFormalArgument (GALGAS_lstring inKey,
                                                                   GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                                   GALGAS_bool inArgument1,
                                                                   GALGAS_objectInMemoryIR inArgument2,
                                                                   GALGAS_bool inArgument3,
                                                                   GALGAS_controlRegisterBitSliceAccessMap inArgument4,
                                                                   GALGAS_bool inArgument5,
                                                                   GALGAS_bool inArgument6,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        kMapState_variableMap_constantInputFormalArgument,
                        kMapStateNames_variableMap [kMapState_variableMap_constantInputFormalArgument],
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertUsedConstantInputFormalArgument (GALGAS_lstring inKey,
                                                                       GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                                       GALGAS_bool inArgument1,
                                                                       GALGAS_objectInMemoryIR inArgument2,
                                                                       GALGAS_bool inArgument3,
                                                                       GALGAS_controlRegisterBitSliceAccessMap inArgument4,
                                                                       GALGAS_bool inArgument5,
                                                                       GALGAS_bool inArgument6,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        kMapState_variableMap_usedConstantInputFormalArgument,
                        kMapStateNames_variableMap [kMapState_variableMap_usedConstantInputFormalArgument],
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertConstantInputFormalArgumentDeclaredAsUnused (GALGAS_lstring inKey,
                                                                                   GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                                                   GALGAS_bool inArgument1,
                                                                                   GALGAS_objectInMemoryIR inArgument2,
                                                                                   GALGAS_bool inArgument3,
                                                                                   GALGAS_controlRegisterBitSliceAccessMap inArgument4,
                                                                                   GALGAS_bool inArgument5,
                                                                                   GALGAS_bool inArgument6,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused,
                        kMapStateNames_variableMap [kMapState_variableMap_constantInputFormalArgumentDeclaredAsUnused],
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertOutputFormalArgument (GALGAS_lstring inKey,
                                                            GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                            GALGAS_bool inArgument1,
                                                            GALGAS_objectInMemoryIR inArgument2,
                                                            GALGAS_bool inArgument3,
                                                            GALGAS_controlRegisterBitSliceAccessMap inArgument4,
                                                            GALGAS_bool inArgument5,
                                                            GALGAS_bool inArgument6,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        kMapState_variableMap_undefinedOutputFormalArgument,
                        kMapStateNames_variableMap [kMapState_variableMap_undefinedOutputFormalArgument],
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertInputOutputFormalArgument (GALGAS_lstring inKey,
                                                                 GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                                 GALGAS_bool inArgument1,
                                                                 GALGAS_objectInMemoryIR inArgument2,
                                                                 GALGAS_bool inArgument3,
                                                                 GALGAS_controlRegisterBitSliceAccessMap inArgument4,
                                                                 GALGAS_bool inArgument5,
                                                                 GALGAS_bool inArgument6,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        kMapState_variableMap_unusedInputOutputFormalArgument,
                        kMapStateNames_variableMap [kMapState_variableMap_unusedInputOutputFormalArgument],
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_insertInputOutputFormalArgumentDeclaredAsUnused (GALGAS_lstring inKey,
                                                                                 GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                                                 GALGAS_bool inArgument1,
                                                                                 GALGAS_objectInMemoryIR inArgument2,
                                                                                 GALGAS_bool inArgument3,
                                                                                 GALGAS_controlRegisterBitSliceAccessMap inArgument4,
                                                                                 GALGAS_bool inArgument5,
                                                                                 GALGAS_bool inArgument6,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * p = NULL ;
  macroMyNew (p, cMapElement_variableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of '%K' variable (previous declaration was in %L)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused,
                        kMapStateNames_variableMap [kMapState_variableMap_inputOutputFormalArgumentDeclaredAsUnused],
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForReadAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_searchForReadAccess (GALGAS_lstring inKey,
                                                     GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                     GALGAS_bool & outArgument1,
                                                     GALGAS_objectInMemoryIR & outArgument2,
                                                     GALGAS_bool & outArgument3,
                                                     GALGAS_controlRegisterBitSliceAccessMap & outArgument4,
                                                     GALGAS_bool & outArgument5,
                                                     GALGAS_bool & outArgument6,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_readAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         kMapStateNames_variableMap,
                                                                                         kMapActionNames_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForReadAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_type ;
    outArgument1 = p->mAttribute_readAccessAllowed ;
    outArgument2 = p->mAttribute_variableKind ;
    outArgument3 = p->mAttribute_copyable ;
    outArgument4 = p->mAttribute_fieldMap ;
    outArgument5 = p->mAttribute_canBeUsedAsInputParameter ;
    outArgument6 = p->mAttribute_isConstant ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForWriteAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_searchForWriteAccess (GALGAS_lstring inKey,
                                                      GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                      GALGAS_bool & outArgument1,
                                                      GALGAS_objectInMemoryIR & outArgument2,
                                                      GALGAS_bool & outArgument3,
                                                      GALGAS_controlRegisterBitSliceAccessMap & outArgument4,
                                                      GALGAS_bool & outArgument5,
                                                      GALGAS_bool & outArgument6,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_writeAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         kMapStateNames_variableMap,
                                                                                         kMapActionNames_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForWriteAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_type ;
    outArgument1 = p->mAttribute_readAccessAllowed ;
    outArgument2 = p->mAttribute_variableKind ;
    outArgument3 = p->mAttribute_copyable ;
    outArgument4 = p->mAttribute_fieldMap ;
    outArgument5 = p->mAttribute_canBeUsedAsInputParameter ;
    outArgument6 = p->mAttribute_isConstant ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForReadWriteAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_searchForReadWriteAccess (GALGAS_lstring inKey,
                                                          GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                          GALGAS_bool & outArgument1,
                                                          GALGAS_objectInMemoryIR & outArgument2,
                                                          GALGAS_bool & outArgument3,
                                                          GALGAS_controlRegisterBitSliceAccessMap & outArgument4,
                                                          GALGAS_bool & outArgument5,
                                                          GALGAS_bool & outArgument6,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_readWriteAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         kMapStateNames_variableMap,
                                                                                         kMapActionNames_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForReadWriteAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_type ;
    outArgument1 = p->mAttribute_readAccessAllowed ;
    outArgument2 = p->mAttribute_variableKind ;
    outArgument3 = p->mAttribute_copyable ;
    outArgument4 = p->mAttribute_fieldMap ;
    outArgument5 = p->mAttribute_canBeUsedAsInputParameter ;
    outArgument6 = p->mAttribute_isConstant ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_searchForDropAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_searchForDropAccess (GALGAS_lstring inKey,
                                                     GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                     GALGAS_bool & outArgument1,
                                                     GALGAS_objectInMemoryIR & outArgument2,
                                                     GALGAS_bool & outArgument3,
                                                     GALGAS_controlRegisterBitSliceAccessMap & outArgument4,
                                                     GALGAS_bool & outArgument5,
                                                     GALGAS_bool & outArgument6,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_dropAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         kMapStateNames_variableMap,
                                                                                         kMapActionNames_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_searchForDropAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_type ;
    outArgument1 = p->mAttribute_readAccessAllowed ;
    outArgument2 = p->mAttribute_variableKind ;
    outArgument3 = p->mAttribute_copyable ;
    outArgument4 = p->mAttribute_fieldMap ;
    outArgument5 = p->mAttribute_canBeUsedAsInputParameter ;
    outArgument6 = p->mAttribute_isConstant ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_variableMap_neutralAccess = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_neutralAccess (GALGAS_lstring inKey,
                                               GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                               GALGAS_bool & outArgument1,
                                               GALGAS_objectInMemoryIR & outArgument2,
                                               GALGAS_bool & outArgument3,
                                               GALGAS_controlRegisterBitSliceAccessMap & outArgument4,
                                               GALGAS_bool & outArgument5,
                                               GALGAS_bool & outArgument6,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kMapAction_variableMap_neutralAccess,
                                                                                         kMapTransitions_variableMap,
                                                                                         kMapActionCount_variableMap,
                                                                                         kMapStateNames_variableMap,
                                                                                         kMapActionNames_variableMap,
                                                                                         #ifndef DO_NOT_GENERATE_CHECKINGS
                                                                                           kMapStateCount_variableMap,
                                                                                         #endif
                                                                                         kSearchErrorMessage_variableMap_neutralAccess
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_variableMap) ;
    outArgument0 = p->mAttribute_type ;
    outArgument1 = p->mAttribute_readAccessAllowed ;
    outArgument2 = p->mAttribute_variableKind ;
    outArgument3 = p->mAttribute_copyable ;
    outArgument4 = p->mAttribute_fieldMap ;
    outArgument5 = p->mAttribute_canBeUsedAsInputParameter ;
    outArgument6 = p->mAttribute_isConstant ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_variableMap::getter_typeForKey (const GALGAS_string & inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_type ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableMap::getter_readAccessAllowedForKey (const GALGAS_string & inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_readAccessAllowed ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectInMemoryIR GALGAS_variableMap::getter_variableKindForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_objectInMemoryIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_variableKind ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableMap::getter_copyableForKey (const GALGAS_string & inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_copyable ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterBitSliceAccessMap GALGAS_variableMap::getter_fieldMapForKey (const GALGAS_string & inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_controlRegisterBitSliceAccessMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_fieldMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableMap::getter_canBeUsedAsInputParameterForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_canBeUsedAsInputParameter ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableMap::getter_isConstantForKey (const GALGAS_string & inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_isConstant ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_setTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                               GALGAS_string inKey,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_type = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_setReadAccessAllowedForKey (GALGAS_bool inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_readAccessAllowed = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_setVariableKindForKey (GALGAS_objectInMemoryIR inAttributeValue,
                                                       GALGAS_string inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_variableKind = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_setCopyableForKey (GALGAS_bool inAttributeValue,
                                                   GALGAS_string inKey,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_copyable = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_setFieldMapForKey (GALGAS_controlRegisterBitSliceAccessMap inAttributeValue,
                                                   GALGAS_string inKey,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_fieldMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_setCanBeUsedAsInputParameterForKey (GALGAS_bool inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_canBeUsedAsInputParameter = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap::setter_setIsConstantForKey (GALGAS_bool inAttributeValue,
                                                     GALGAS_string inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_variableMap * p = (cMapElement_variableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    p->mAttribute_isConstant = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_variableMap * GALGAS_variableMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                 const GALGAS_string & inKey
                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_variableMap * result = (cMapElement_variableMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_variableMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_variableMap::cEnumerator_variableMap (const GALGAS_variableMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_variableMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_variableMap::current_type (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_variableMap) ;
  return p->mAttribute_type ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_variableMap::current_readAccessAllowed (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_variableMap) ;
  return p->mAttribute_readAccessAllowed ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectInMemoryIR cEnumerator_variableMap::current_variableKind (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_variableMap) ;
  return p->mAttribute_variableKind ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_variableMap::current_copyable (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_variableMap) ;
  return p->mAttribute_copyable ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterBitSliceAccessMap cEnumerator_variableMap::current_fieldMap (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_variableMap) ;
  return p->mAttribute_fieldMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_variableMap::current_canBeUsedAsInputParameter (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_variableMap) ;
  return p->mAttribute_canBeUsedAsInputParameter ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_variableMap::current_isConstant (LOCATION_ARGS) const {
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_variableMap) ;
  return p->mAttribute_isConstant ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                  @variableMap type                                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_variableMap ("variableMap",
                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_variableMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_variableMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_variableMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_variableMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap GALGAS_variableMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_variableMap result ;
  const GALGAS_variableMap * p = (const GALGAS_variableMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_variableMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("variableMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy::GALGAS_variableMap_2D_proxy (void) :
AC_GALGAS_uniqueMapProxy () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy GALGAS_variableMap_2D_proxy::constructor_null (LOCATION_ARGS) {
  GALGAS_variableMap_2D_proxy result ;
  result.makeNullProxy (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap_2D_proxy::class_method_makeProxy (GALGAS_variableMap & ioMap,
                                                          GALGAS_lstring inKey,
                                                          GALGAS_variableMap_2D_proxy & outProxy
                                                          COMMA_LOCATION_ARGS) {
  outProxy.internalMakeProxy (ioMap, inKey COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_variableMap_2D_proxy::class_method_makeProxyFromString (GALGAS_variableMap & ioMap,
                                                                    GALGAS_string inKey,
                                                                    GALGAS_variableMap_2D_proxy & outProxy
                                                                    COMMA_LOCATION_ARGS) {
  outProxy.internalMakeProxyFromString (ioMap, inKey COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_variableMap_2D_proxy::getter_type (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_unifiedTypeMap_2D_proxy result ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) getAttributeListPointer (inCompiler, "type" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_type;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableMap_2D_proxy::getter_readAccessAllowed (C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_bool result ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) getAttributeListPointer (inCompiler, "readAccessAllowed" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_readAccessAllowed;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_objectInMemoryIR GALGAS_variableMap_2D_proxy::getter_variableKind (C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_objectInMemoryIR result ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) getAttributeListPointer (inCompiler, "variableKind" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_variableKind;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableMap_2D_proxy::getter_copyable (C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_bool result ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) getAttributeListPointer (inCompiler, "copyable" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_copyable;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterBitSliceAccessMap GALGAS_variableMap_2D_proxy::getter_fieldMap (C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_controlRegisterBitSliceAccessMap result ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) getAttributeListPointer (inCompiler, "fieldMap" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_fieldMap;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableMap_2D_proxy::getter_canBeUsedAsInputParameter (C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_bool result ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) getAttributeListPointer (inCompiler, "canBeUsedAsInputParameter" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_canBeUsedAsInputParameter;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_variableMap_2D_proxy::getter_isConstant (C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_bool result ;
  const cMapElement_variableMap * p = (const cMapElement_variableMap *) getAttributeListPointer (inCompiler, "isConstant" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_variableMap) ;
    result = p->mAttribute_isConstant;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy GALGAS_variableMap_2D_proxy::constructor_searchForReadAccess (const GALGAS_variableMap & inMap,
                                                                                          const GALGAS_lstring & inKey,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_variableMap_2D_proxy result ;
  result.internalMakeRegularProxyBySearchingKey (inMap, inKey, kSearchErrorMessage_variableMap_searchForReadAccess, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy GALGAS_variableMap_2D_proxy::constructor_searchForWriteAccess (const GALGAS_variableMap & inMap,
                                                                                           const GALGAS_lstring & inKey,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_LOCATION_ARGS) {
  GALGAS_variableMap_2D_proxy result ;
  result.internalMakeRegularProxyBySearchingKey (inMap, inKey, kSearchErrorMessage_variableMap_searchForWriteAccess, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy GALGAS_variableMap_2D_proxy::constructor_searchForReadWriteAccess (const GALGAS_variableMap & inMap,
                                                                                               const GALGAS_lstring & inKey,
                                                                                               C_Compiler * inCompiler
                                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_variableMap_2D_proxy result ;
  result.internalMakeRegularProxyBySearchingKey (inMap, inKey, kSearchErrorMessage_variableMap_searchForReadWriteAccess, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy GALGAS_variableMap_2D_proxy::constructor_searchForDropAccess (const GALGAS_variableMap & inMap,
                                                                                          const GALGAS_lstring & inKey,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_variableMap_2D_proxy result ;
  result.internalMakeRegularProxyBySearchingKey (inMap, inKey, kSearchErrorMessage_variableMap_searchForDropAccess, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy GALGAS_variableMap_2D_proxy::constructor_neutralAccess (const GALGAS_variableMap & inMap,
                                                                                    const GALGAS_lstring & inKey,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_variableMap_2D_proxy result ;
  result.internalMakeRegularProxyBySearchingKey (inMap, inKey, kSearchErrorMessage_variableMap_neutralAccess, inCompiler COMMA_THERE) ;
  return result ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @variableMap-proxy type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_variableMap_2D_proxy ("variableMap-proxy",
                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_variableMap_2D_proxy::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_variableMap_2D_proxy ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_variableMap_2D_proxy::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_variableMap_2D_proxy (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_variableMap_2D_proxy GALGAS_variableMap_2D_proxy::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_variableMap_2D_proxy result ;
  const GALGAS_variableMap_2D_proxy * p = (const GALGAS_variableMap_2D_proxy *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_variableMap_2D_proxy *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("variableMap-proxy", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        '@semanticTypePrecedenceGraph' graph                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph::GALGAS_semanticTypePrecedenceGraph (void) :
AC_GALGAS_graph () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph GALGAS_semanticTypePrecedenceGraph::constructor_emptyGraph (LOCATION_ARGS) {
  GALGAS_semanticTypePrecedenceGraph result ;
  result.makeNewEmptyGraph (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::setter_addNode (GALGAS_lstring inKey,
                                                         GALGAS_abstractDeclaration inArgument_0,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  GALGAS_declarationListAST::makeAttributesFromObjects (attributes, inArgument_0 COMMA_THERE) ;
  const char * kErrorMessage = "the '%K' symbol is already declared at %L" ;
  internalAddNode (inKey, kErrorMessage, attributes, inCompiler COMMA_THERE) ;
}


//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::method_topologicalSort (GALGAS_declarationListAST & outSortedList,
                                                                 GALGAS_lstringlist & outSortedKeyList,
                                                                 GALGAS_declarationListAST & outUnsortedList,
                                                                 GALGAS_lstringlist & outUnsortedKeyList,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  cSharedList * sortedList = NULL ;
  cSharedList * unsortedList = NULL ;
  internalTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_declarationListAST (sortedList) ;
  outUnsortedList = GALGAS_declarationListAST (unsortedList) ;
  GALGAS_declarationListAST::detachSharedList (sortedList) ;
  GALGAS_declarationListAST::detachSharedList (unsortedList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::method_depthFirstTopologicalSort (GALGAS_declarationListAST & outSortedList,
                                                                           GALGAS_lstringlist & outSortedKeyList,
                                                                           GALGAS_declarationListAST & outUnsortedList,
                                                                           GALGAS_lstringlist & outUnsortedKeyList,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  cSharedList * sortedList = NULL ;
  cSharedList * unsortedList = NULL ;
  internalDepthFirstTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_declarationListAST (sortedList) ;
  outUnsortedList = GALGAS_declarationListAST (unsortedList) ;
  GALGAS_declarationListAST::detachSharedList (sortedList) ;
  GALGAS_declarationListAST::detachSharedList (unsortedList) ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph GALGAS_semanticTypePrecedenceGraph::getter_reversedGraph (LOCATION_ARGS) const {
  GALGAS_semanticTypePrecedenceGraph result ;
  result.reversedGraphFromGraph (*this COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::method_circularities (GALGAS_declarationListAST & outInfoList,
                                                               GALGAS_lstringlist & outKeyList
                                                               COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalFindCircularities (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_declarationListAST (infoList) ;
  GALGAS_declarationListAST::detachSharedList (infoList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::method_nodesWithNoSuccessor (GALGAS_declarationListAST & outInfoList,
                                                                      GALGAS_lstringlist & outKeyList
                                                                      COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalNodesWithNoSuccessor (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_declarationListAST (infoList) ;
  GALGAS_declarationListAST::detachSharedList (infoList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::method_nodesWithNoPredecessor (GALGAS_declarationListAST & outInfoList,
                                                                        GALGAS_lstringlist & outKeyList
                                                                        COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalNodesWithNoPredecessor (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_declarationListAST (infoList) ;
  GALGAS_declarationListAST::detachSharedList (infoList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph GALGAS_semanticTypePrecedenceGraph::getter_subgraphFromNodes (const GALGAS_lstringlist & inStartKeyList,
                                                                                                 const GALGAS_stringset & inKeysToExclude,
                                                                                                 C_Compiler * inCompiler
                                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_semanticTypePrecedenceGraph result ;
  subGraph (result, inStartKeyList, inKeysToExclude, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_semanticTypePrecedenceGraph::getter_accessibleNodesFromNodes (const GALGAS_lstringlist & inStartKeyList,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_lstringlist result ;
  GALGAS_semanticTypePrecedenceGraph resultingGraph ;
  subGraph (resultingGraph,
            inStartKeyList,
            GALGAS_stringset::constructor_emptySet (HERE),
            inCompiler
            COMMA_THERE) ;
  if (resultingGraph.isValid ()) {
    result = resultingGraph.getter_lkeyList (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @semanticTypePrecedenceGraph type                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_semanticTypePrecedenceGraph ("semanticTypePrecedenceGraph",
                                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_semanticTypePrecedenceGraph::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_semanticTypePrecedenceGraph ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_semanticTypePrecedenceGraph::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_semanticTypePrecedenceGraph (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph GALGAS_semanticTypePrecedenceGraph::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_semanticTypePrecedenceGraph result ;
  const GALGAS_semanticTypePrecedenceGraph * p = (const GALGAS_semanticTypePrecedenceGraph *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_semanticTypePrecedenceGraph *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("semanticTypePrecedenceGraph", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_routineMapForContext::cMapElement_routineMapForContext (const GALGAS_lstring & inKey,
                                                                    const GALGAS_bool & in_mMutating,
                                                                    const GALGAS_modeMap & in_mModeMap,
                                                                    const GALGAS_procedureSignature & in_mSignature,
                                                                    const GALGAS_routineKind & in_mRoutineKind,
                                                                    const GALGAS_bool & in_mWeak,
                                                                    const GALGAS_unifiedTypeMap_2D_proxy & in_mReturnType
                                                                    COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mMutating (in_mMutating),
mAttribute_mModeMap (in_mModeMap),
mAttribute_mSignature (in_mSignature),
mAttribute_mRoutineKind (in_mRoutineKind),
mAttribute_mWeak (in_mWeak),
mAttribute_mReturnType (in_mReturnType) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_routineMapForContext::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mMutating.isValid () && mAttribute_mModeMap.isValid () && mAttribute_mSignature.isValid () && mAttribute_mRoutineKind.isValid () && mAttribute_mWeak.isValid () && mAttribute_mReturnType.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_routineMapForContext::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_routineMapForContext (mAttribute_lkey, mAttribute_mMutating, mAttribute_mModeMap, mAttribute_mSignature, mAttribute_mRoutineKind, mAttribute_mWeak, mAttribute_mReturnType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_routineMapForContext::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mMutating" ":" ;
  mAttribute_mMutating.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mModeMap" ":" ;
  mAttribute_mModeMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSignature" ":" ;
  mAttribute_mSignature.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRoutineKind" ":" ;
  mAttribute_mRoutineKind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mWeak" ":" ;
  mAttribute_mWeak.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mReturnType" ":" ;
  mAttribute_mReturnType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_routineMapForContext::compare (const cCollectionElement * inOperand) const {
  cMapElement_routineMapForContext * operand = (cMapElement_routineMapForContext *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mMutating.objectCompare (operand->mAttribute_mMutating) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mModeMap.objectCompare (operand->mAttribute_mModeMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSignature.objectCompare (operand->mAttribute_mSignature) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRoutineKind.objectCompare (operand->mAttribute_mRoutineKind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mWeak.objectCompare (operand->mAttribute_mWeak) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mReturnType.objectCompare (operand->mAttribute_mReturnType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapForContext::GALGAS_routineMapForContext (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapForContext::GALGAS_routineMapForContext (const GALGAS_routineMapForContext & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapForContext & GALGAS_routineMapForContext::operator = (const GALGAS_routineMapForContext & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapForContext GALGAS_routineMapForContext::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_routineMapForContext result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapForContext GALGAS_routineMapForContext::constructor_mapWithMapToOverride (const GALGAS_routineMapForContext & inMapToOverride
                                                                                           COMMA_LOCATION_ARGS) {
  GALGAS_routineMapForContext result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapForContext GALGAS_routineMapForContext::getter_overriddenMap (C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  GALGAS_routineMapForContext result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::addAssign_operation (const GALGAS_lstring & inKey,
                                                       const GALGAS_bool & inArgument0,
                                                       const GALGAS_modeMap & inArgument1,
                                                       const GALGAS_procedureSignature & inArgument2,
                                                       const GALGAS_routineKind & inArgument3,
                                                       const GALGAS_bool & inArgument4,
                                                       const GALGAS_unifiedTypeMap_2D_proxy & inArgument5,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_routineMapForContext * p = NULL ;
  macroMyNew (p, cMapElement_routineMapForContext (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@routineMapForContext insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_insertKey (GALGAS_lstring inKey,
                                                    GALGAS_bool inArgument0,
                                                    GALGAS_modeMap inArgument1,
                                                    GALGAS_procedureSignature inArgument2,
                                                    GALGAS_routineKind inArgument3,
                                                    GALGAS_bool inArgument4,
                                                    GALGAS_unifiedTypeMap_2D_proxy inArgument5,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_routineMapForContext * p = NULL ;
  macroMyNew (p, cMapElement_routineMapForContext (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' routine is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_routineMapForContext_searchKey = "there is no '%K' routine" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::method_searchKey (GALGAS_lstring inKey,
                                                    GALGAS_bool & outArgument0,
                                                    GALGAS_modeMap & outArgument1,
                                                    GALGAS_procedureSignature & outArgument2,
                                                    GALGAS_routineKind & outArgument3,
                                                    GALGAS_bool & outArgument4,
                                                    GALGAS_unifiedTypeMap_2D_proxy & outArgument5,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) performSearch (inKey,
                                                                                                           inCompiler,
                                                                                                           kSearchErrorMessage_routineMapForContext_searchKey
                                                                                                           COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    outArgument0 = p->mAttribute_mMutating ;
    outArgument1 = p->mAttribute_mModeMap ;
    outArgument2 = p->mAttribute_mSignature ;
    outArgument3 = p->mAttribute_mRoutineKind ;
    outArgument4 = p->mAttribute_mWeak ;
    outArgument5 = p->mAttribute_mReturnType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_removeKey (GALGAS_lstring inKey,
                                                    GALGAS_bool & outArgument0,
                                                    GALGAS_modeMap & outArgument1,
                                                    GALGAS_procedureSignature & outArgument2,
                                                    GALGAS_routineKind & outArgument3,
                                                    GALGAS_bool & outArgument4,
                                                    GALGAS_unifiedTypeMap_2D_proxy & outArgument5,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  const char * kRemoveErrorMessage = "there is no '%K' routine" ;
  capCollectionElement attributes ;
  performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes.ptr () ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    outArgument0 = p->mAttribute_mMutating ;
    outArgument1 = p->mAttribute_mModeMap ;
    outArgument2 = p->mAttribute_mSignature ;
    outArgument3 = p->mAttribute_mRoutineKind ;
    outArgument4 = p->mAttribute_mWeak ;
    outArgument5 = p->mAttribute_mReturnType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineMapForContext::getter_mMutatingForKey (const GALGAS_string & inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    result = p->mAttribute_mMutating ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_modeMap GALGAS_routineMapForContext::getter_mModeMapForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) attributes ;
  GALGAS_modeMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    result = p->mAttribute_mModeMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature GALGAS_routineMapForContext::getter_mSignatureForKey (const GALGAS_string & inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) attributes ;
  GALGAS_procedureSignature result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    result = p->mAttribute_mSignature ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKind GALGAS_routineMapForContext::getter_mRoutineKindForKey (const GALGAS_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) attributes ;
  GALGAS_routineKind result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    result = p->mAttribute_mRoutineKind ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineMapForContext::getter_mWeakForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    result = p->mAttribute_mWeak ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_routineMapForContext::getter_mReturnTypeForKey (const GALGAS_string & inKey,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    result = p->mAttribute_mReturnType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_setMMutatingForKey (GALGAS_bool inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    p->mAttribute_mMutating = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_setMModeMapForKey (GALGAS_modeMap inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    p->mAttribute_mModeMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_setMSignatureForKey (GALGAS_procedureSignature inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    p->mAttribute_mSignature = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_setMRoutineKindForKey (GALGAS_routineKind inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    p->mAttribute_mRoutineKind = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_setMWeakForKey (GALGAS_bool inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    p->mAttribute_mWeak = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMapForContext::setter_setMReturnTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMapForContext * p = (cMapElement_routineMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMapForContext) ;
    p->mAttribute_mReturnType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_routineMapForContext * GALGAS_routineMapForContext::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                   const GALGAS_string & inKey
                                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_routineMapForContext * result = (cMapElement_routineMapForContext *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_routineMapForContext) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_routineMapForContext::cEnumerator_routineMapForContext (const GALGAS_routineMapForContext & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapForContext_2D_element cEnumerator_routineMapForContext::current (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return GALGAS_routineMapForContext_2D_element (p->mAttribute_lkey, p->mAttribute_mMutating, p->mAttribute_mModeMap, p->mAttribute_mSignature, p->mAttribute_mRoutineKind, p->mAttribute_mWeak, p->mAttribute_mReturnType) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_routineMapForContext::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineMapForContext::current_mMutating (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return p->mAttribute_mMutating ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_modeMap cEnumerator_routineMapForContext::current_mModeMap (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return p->mAttribute_mModeMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature cEnumerator_routineMapForContext::current_mSignature (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return p->mAttribute_mSignature ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKind cEnumerator_routineMapForContext::current_mRoutineKind (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return p->mAttribute_mRoutineKind ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineMapForContext::current_mWeak (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return p->mAttribute_mWeak ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_routineMapForContext::current_mReturnType (LOCATION_ARGS) const {
  const cMapElement_routineMapForContext * p = (const cMapElement_routineMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMapForContext) ;
  return p->mAttribute_mReturnType ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @routineMapForContext type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineMapForContext ("routineMapForContext",
                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineMapForContext::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineMapForContext ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineMapForContext::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineMapForContext (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMapForContext GALGAS_routineMapForContext::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_routineMapForContext result ;
  const GALGAS_routineMapForContext * p = (const GALGAS_routineMapForContext *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineMapForContext *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("routineMapForContext", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_modeMap::cMapElement_modeMap (const GALGAS_lstring & inKey
                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_modeMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_modeMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_modeMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_modeMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_modeMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_modeMap * operand = (cMapElement_modeMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_modeMap::GALGAS_modeMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_modeMap::GALGAS_modeMap (const GALGAS_modeMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_modeMap & GALGAS_modeMap::operator = (const GALGAS_modeMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_modeMap GALGAS_modeMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_modeMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_modeMap GALGAS_modeMap::constructor_mapWithMapToOverride (const GALGAS_modeMap & inMapToOverride
                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_modeMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_modeMap GALGAS_modeMap::getter_overriddenMap (C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_modeMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_modeMap::addAssign_operation (const GALGAS_lstring & inKey,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
  cMapElement_modeMap * p = NULL ;
  macroMyNew (p, cMapElement_modeMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@modeMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_modeMap::setter_insertKey (GALGAS_lstring inKey,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) {
  cMapElement_modeMap * p = NULL ;
  macroMyNew (p, cMapElement_modeMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%%%K' mode is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_modeMap_searchKey = "there is no '%%%K' mode" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_modeMap::method_searchKey (GALGAS_lstring inKey,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) const {
  const cMapElement_modeMap * p = (const cMapElement_modeMap *) performSearch (inKey,
                                                                                 inCompiler,
                                                                                 kSearchErrorMessage_modeMap_searchKey
                                                                                 COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, cMapElement_modeMap) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_modeMap * GALGAS_modeMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                         const GALGAS_string & inKey
                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_modeMap * result = (cMapElement_modeMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_modeMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_modeMap::cEnumerator_modeMap (const GALGAS_modeMap & inEnumeratedObject,
                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_modeMap_2D_element cEnumerator_modeMap::current (LOCATION_ARGS) const {
  const cMapElement_modeMap * p = (const cMapElement_modeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_modeMap) ;
  return GALGAS_modeMap_2D_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_modeMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                    @modeMap type                                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_modeMap ("modeMap",
                                NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_modeMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_modeMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_modeMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_modeMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_modeMap GALGAS_modeMap::extractObject (const GALGAS_object & inObject,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  GALGAS_modeMap result ;
  const GALGAS_modeMap * p = (const GALGAS_modeMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_modeMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("modeMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_guardMapForContext::cMapElement_guardMapForContext (const GALGAS_lstring & inKey,
                                                                const GALGAS_procedureSignature & in_mSignature
                                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mSignature (in_mSignature) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_guardMapForContext::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSignature.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_guardMapForContext::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_guardMapForContext (mAttribute_lkey, mAttribute_mSignature COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_guardMapForContext::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSignature" ":" ;
  mAttribute_mSignature.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_guardMapForContext::compare (const cCollectionElement * inOperand) const {
  cMapElement_guardMapForContext * operand = (cMapElement_guardMapForContext *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mSignature.objectCompare (operand->mAttribute_mSignature) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapForContext::GALGAS_guardMapForContext (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapForContext::GALGAS_guardMapForContext (const GALGAS_guardMapForContext & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapForContext & GALGAS_guardMapForContext::operator = (const GALGAS_guardMapForContext & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapForContext GALGAS_guardMapForContext::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_guardMapForContext result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapForContext GALGAS_guardMapForContext::constructor_mapWithMapToOverride (const GALGAS_guardMapForContext & inMapToOverride
                                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_guardMapForContext result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapForContext GALGAS_guardMapForContext::getter_overriddenMap (C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_guardMapForContext result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapForContext::addAssign_operation (const GALGAS_lstring & inKey,
                                                     const GALGAS_procedureSignature & inArgument0,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_guardMapForContext * p = NULL ;
  macroMyNew (p, cMapElement_guardMapForContext (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@guardMapForContext insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapForContext::setter_insertKey (GALGAS_lstring inKey,
                                                  GALGAS_procedureSignature inArgument0,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cMapElement_guardMapForContext * p = NULL ;
  macroMyNew (p, cMapElement_guardMapForContext (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' guard is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_guardMapForContext_searchKey = "there is no '%K' guard" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapForContext::method_searchKey (GALGAS_lstring inKey,
                                                  GALGAS_procedureSignature & outArgument0,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  const cMapElement_guardMapForContext * p = (const cMapElement_guardMapForContext *) performSearch (inKey,
                                                                                                       inCompiler,
                                                                                                       kSearchErrorMessage_guardMapForContext_searchKey
                                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_guardMapForContext) ;
    outArgument0 = p->mAttribute_mSignature ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapForContext::setter_removeKey (GALGAS_lstring inKey,
                                                  GALGAS_procedureSignature & outArgument0,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  const char * kRemoveErrorMessage = "there is no '%K' guard" ;
  capCollectionElement attributes ;
  performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;
  cMapElement_guardMapForContext * p = (cMapElement_guardMapForContext *) attributes.ptr () ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_guardMapForContext) ;
    outArgument0 = p->mAttribute_mSignature ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature GALGAS_guardMapForContext::getter_mSignatureForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_guardMapForContext * p = (const cMapElement_guardMapForContext *) attributes ;
  GALGAS_procedureSignature result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_guardMapForContext) ;
    result = p->mAttribute_mSignature ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_guardMapForContext::setter_setMSignatureForKey (GALGAS_procedureSignature inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_guardMapForContext * p = (cMapElement_guardMapForContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_guardMapForContext) ;
    p->mAttribute_mSignature = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_guardMapForContext * GALGAS_guardMapForContext::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                               const GALGAS_string & inKey
                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement_guardMapForContext * result = (cMapElement_guardMapForContext *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_guardMapForContext) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_guardMapForContext::cEnumerator_guardMapForContext (const GALGAS_guardMapForContext & inEnumeratedObject,
                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapForContext_2D_element cEnumerator_guardMapForContext::current (LOCATION_ARGS) const {
  const cMapElement_guardMapForContext * p = (const cMapElement_guardMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_guardMapForContext) ;
  return GALGAS_guardMapForContext_2D_element (p->mAttribute_lkey, p->mAttribute_mSignature) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_guardMapForContext::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_procedureSignature cEnumerator_guardMapForContext::current_mSignature (LOCATION_ARGS) const {
  const cMapElement_guardMapForContext * p = (const cMapElement_guardMapForContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_guardMapForContext) ;
  return p->mAttribute_mSignature ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @guardMapForContext type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_guardMapForContext ("guardMapForContext",
                                           NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_guardMapForContext::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_guardMapForContext ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_guardMapForContext::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_guardMapForContext (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_guardMapForContext GALGAS_guardMapForContext::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_guardMapForContext result ;
  const GALGAS_guardMapForContext * p = (const GALGAS_guardMapForContext *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_guardMapForContext *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("guardMapForContext", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_typeKind_enumeration::cEnumAssociatedValues_typeKind_enumeration (const GALGAS_enumConstantMap & inAssociatedValue0
                                                                                        COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_typeKind_enumeration::description (C_String & ioString,
                                                              const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_typeKind_enumeration::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_typeKind_enumeration * ptr = dynamic_cast<const cEnumAssociatedValues_typeKind_enumeration *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_typeKind_structure::cEnumAssociatedValues_typeKind_structure (const GALGAS_propertyMap & inAssociatedValue0,
                                                                                    const GALGAS_propertyList & inAssociatedValue1
                                                                                    COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0),
mAssociatedValue1 (inAssociatedValue1) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_typeKind_structure::description (C_String & ioString,
                                                            const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  mAssociatedValue1.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_typeKind_structure::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_typeKind_structure * ptr = dynamic_cast<const cEnumAssociatedValues_typeKind_structure *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  if (result == kOperandEqual) {
    result = mAssociatedValue1.objectCompare (ptr->mAssociatedValue1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_typeKind_integer::cEnumAssociatedValues_typeKind_integer (const GALGAS_bigint & inAssociatedValue0,
                                                                                const GALGAS_bigint & inAssociatedValue1,
                                                                                const GALGAS_bool & inAssociatedValue2,
                                                                                const GALGAS_uint & inAssociatedValue3
                                                                                COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0),
mAssociatedValue1 (inAssociatedValue1),
mAssociatedValue2 (inAssociatedValue2),
mAssociatedValue3 (inAssociatedValue3) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_typeKind_integer::description (C_String & ioString,
                                                          const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  mAssociatedValue1.description (ioString, inIndentation) ;
  mAssociatedValue2.description (ioString, inIndentation) ;
  mAssociatedValue3.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_typeKind_integer::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_typeKind_integer * ptr = dynamic_cast<const cEnumAssociatedValues_typeKind_integer *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  if (result == kOperandEqual) {
    result = mAssociatedValue1.objectCompare (ptr->mAssociatedValue1) ;
  }
  if (result == kOperandEqual) {
    result = mAssociatedValue2.objectCompare (ptr->mAssociatedValue2) ;
  }
  if (result == kOperandEqual) {
    result = mAssociatedValue3.objectCompare (ptr->mAssociatedValue3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_typeKind_opaque::cEnumAssociatedValues_typeKind_opaque (const GALGAS_bigint & inAssociatedValue0
                                                                              COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_typeKind_opaque::description (C_String & ioString,
                                                         const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_typeKind_opaque::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_typeKind_opaque * ptr = dynamic_cast<const cEnumAssociatedValues_typeKind_opaque *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind::GALGAS_typeKind (void) :
mAssociatedValues (),
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_typeKind::constructor_boolean (UNUSED_LOCATION_ARGS) {
  GALGAS_typeKind result ;
  result.mEnum = kEnum_boolean ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_typeKind::constructor_boolset (UNUSED_LOCATION_ARGS) {
  GALGAS_typeKind result ;
  result.mEnum = kEnum_boolset ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_typeKind::constructor_literalString (UNUSED_LOCATION_ARGS) {
  GALGAS_typeKind result ;
  result.mEnum = kEnum_literalString ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_typeKind::constructor_enumeration (const GALGAS_enumConstantMap & inAssociatedValue0
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_typeKind result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_enumeration ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_typeKind_enumeration (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_typeKind::constructor_structure (const GALGAS_propertyMap & inAssociatedValue0,
                                                        const GALGAS_propertyList & inAssociatedValue1
                                                        COMMA_LOCATION_ARGS) {
  GALGAS_typeKind result ;
  if (inAssociatedValue0.isValid () && inAssociatedValue1.isValid ()) {
    result.mEnum = kEnum_structure ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_typeKind_structure (inAssociatedValue0, inAssociatedValue1 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_typeKind::constructor_integer (const GALGAS_bigint & inAssociatedValue0,
                                                      const GALGAS_bigint & inAssociatedValue1,
                                                      const GALGAS_bool & inAssociatedValue2,
                                                      const GALGAS_uint & inAssociatedValue3
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_typeKind result ;
  if (inAssociatedValue0.isValid () && inAssociatedValue1.isValid () && inAssociatedValue2.isValid () && inAssociatedValue3.isValid ()) {
    result.mEnum = kEnum_integer ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_typeKind_integer (inAssociatedValue0, inAssociatedValue1, inAssociatedValue2, inAssociatedValue3 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_typeKind::constructor_staticInteger (UNUSED_LOCATION_ARGS) {
  GALGAS_typeKind result ;
  result.mEnum = kEnum_staticInteger ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_typeKind::constructor_opaque (const GALGAS_bigint & inAssociatedValue0
                                                     COMMA_LOCATION_ARGS) {
  GALGAS_typeKind result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_opaque ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_typeKind_opaque (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeKind::method_enumeration (GALGAS_enumConstantMap & outAssociatedValue0,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_enumeration) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @typeKind enumeration invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_typeKind_enumeration * ptr = (const cEnumAssociatedValues_typeKind_enumeration *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeKind::method_structure (GALGAS_propertyMap & outAssociatedValue0,
                                        GALGAS_propertyList & outAssociatedValue1,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_structure) {
    outAssociatedValue0.drop () ;
    outAssociatedValue1.drop () ;
    C_String s ;
    s << "method @typeKind structure invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_typeKind_structure * ptr = (const cEnumAssociatedValues_typeKind_structure *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
    outAssociatedValue1 = ptr->mAssociatedValue1 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeKind::method_integer (GALGAS_bigint & outAssociatedValue0,
                                      GALGAS_bigint & outAssociatedValue1,
                                      GALGAS_bool & outAssociatedValue2,
                                      GALGAS_uint & outAssociatedValue3,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_integer) {
    outAssociatedValue0.drop () ;
    outAssociatedValue1.drop () ;
    outAssociatedValue2.drop () ;
    outAssociatedValue3.drop () ;
    C_String s ;
    s << "method @typeKind integer invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_typeKind_integer * ptr = (const cEnumAssociatedValues_typeKind_integer *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
    outAssociatedValue1 = ptr->mAssociatedValue1 ;
    outAssociatedValue2 = ptr->mAssociatedValue2 ;
    outAssociatedValue3 = ptr->mAssociatedValue3 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeKind::method_opaque (GALGAS_bigint & outAssociatedValue0,
                                     C_Compiler * inCompiler
                                     COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_opaque) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @typeKind opaque invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_typeKind_opaque * ptr = (const cEnumAssociatedValues_typeKind_opaque *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_typeKind [9] = {
  "(not built)",
  "boolean",
  "boolset",
  "literalString",
  "enumeration",
  "structure",
  "integer",
  "staticInteger",
  "opaque"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_typeKind::getter_isBoolean (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_boolean == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_typeKind::getter_isBoolset (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_boolset == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_typeKind::getter_isLiteralString (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_literalString == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_typeKind::getter_isEnumeration (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_enumeration == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_typeKind::getter_isStructure (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_structure == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_typeKind::getter_isInteger (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_integer == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_typeKind::getter_isStaticInteger (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_staticInteger == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_typeKind::getter_isOpaque (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_opaque == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeKind::description (C_String & ioString,
                                   const int32_t inIndentation) const {
  ioString << "<enum @typeKind: " << gEnumNameArrayFor_typeKind [mEnum] ;
  mAssociatedValues.description (ioString, inIndentation) ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_typeKind::objectCompare (const GALGAS_typeKind & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mAssociatedValues.objectCompare (inOperand.mAssociatedValues) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                   @typeKind type                                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_typeKind ("typeKind",
                                 NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_typeKind::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeKind ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_typeKind::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_typeKind (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_typeKind::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  GALGAS_typeKind result ;
  const GALGAS_typeKind * p = (const GALGAS_typeKind *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_typeKind *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("typeKind", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_prefixOperatorMap::cMapElement_prefixOperatorMap (const GALGAS_lstring & inKey
                                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_prefixOperatorMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_prefixOperatorMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_prefixOperatorMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_prefixOperatorMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_prefixOperatorMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_prefixOperatorMap * operand = (cMapElement_prefixOperatorMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperatorMap::GALGAS_prefixOperatorMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperatorMap::GALGAS_prefixOperatorMap (const GALGAS_prefixOperatorMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperatorMap & GALGAS_prefixOperatorMap::operator = (const GALGAS_prefixOperatorMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperatorMap GALGAS_prefixOperatorMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_prefixOperatorMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperatorMap GALGAS_prefixOperatorMap::constructor_mapWithMapToOverride (const GALGAS_prefixOperatorMap & inMapToOverride
                                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_prefixOperatorMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperatorMap GALGAS_prefixOperatorMap::getter_overriddenMap (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_prefixOperatorMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_prefixOperatorMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_prefixOperatorMap * p = NULL ;
  macroMyNew (p, cMapElement_prefixOperatorMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@prefixOperatorMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_prefixOperatorMap::setter_insertKey (GALGAS_lstring inKey,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_prefixOperatorMap * p = NULL ;
  macroMyNew (p, cMapElement_prefixOperatorMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "** internal error **" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_prefixOperatorMap_searchKey = "prefix operation is not defined for $%K type" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_prefixOperatorMap::method_searchKey (GALGAS_lstring inKey,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  const cMapElement_prefixOperatorMap * p = (const cMapElement_prefixOperatorMap *) performSearch (inKey,
                                                                                                     inCompiler,
                                                                                                     kSearchErrorMessage_prefixOperatorMap_searchKey
                                                                                                     COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, cMapElement_prefixOperatorMap) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_prefixOperatorMap * GALGAS_prefixOperatorMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                             const GALGAS_string & inKey
                                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_prefixOperatorMap * result = (cMapElement_prefixOperatorMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_prefixOperatorMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_prefixOperatorMap::cEnumerator_prefixOperatorMap (const GALGAS_prefixOperatorMap & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperatorMap_2D_element cEnumerator_prefixOperatorMap::current (LOCATION_ARGS) const {
  const cMapElement_prefixOperatorMap * p = (const cMapElement_prefixOperatorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_prefixOperatorMap) ;
  return GALGAS_prefixOperatorMap_2D_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_prefixOperatorMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @prefixOperatorMap type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_prefixOperatorMap ("prefixOperatorMap",
                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_prefixOperatorMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_prefixOperatorMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_prefixOperatorMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_prefixOperatorMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_prefixOperatorMap GALGAS_prefixOperatorMap::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_prefixOperatorMap result ;
  const GALGAS_prefixOperatorMap * p = (const GALGAS_prefixOperatorMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_prefixOperatorMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("prefixOperatorMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_staticStringMap::cMapElement_staticStringMap (const GALGAS_lstring & inKey,
                                                          const GALGAS_uint & in_mIndex
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIndex (in_mIndex) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_staticStringMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIndex.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_staticStringMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_staticStringMap (mAttribute_lkey, mAttribute_mIndex COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_staticStringMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIndex" ":" ;
  mAttribute_mIndex.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_staticStringMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_staticStringMap * operand = (cMapElement_staticStringMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIndex.objectCompare (operand->mAttribute_mIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_staticStringMap::GALGAS_staticStringMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_staticStringMap::GALGAS_staticStringMap (const GALGAS_staticStringMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_staticStringMap & GALGAS_staticStringMap::operator = (const GALGAS_staticStringMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_staticStringMap GALGAS_staticStringMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_staticStringMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_staticStringMap GALGAS_staticStringMap::constructor_mapWithMapToOverride (const GALGAS_staticStringMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_staticStringMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_staticStringMap GALGAS_staticStringMap::getter_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_staticStringMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_staticStringMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                  const GALGAS_uint & inArgument0,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cMapElement_staticStringMap * p = NULL ;
  macroMyNew (p, cMapElement_staticStringMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@staticStringMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_staticStringMap::setter_insertKey (GALGAS_lstring inKey,
                                               GALGAS_uint inArgument0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_staticStringMap * p = NULL ;
  macroMyNew (p, cMapElement_staticStringMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "-- internal error --" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_staticStringMap_searchKey = "-- internal error --" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_staticStringMap::method_searchKey (GALGAS_lstring inKey,
                                               GALGAS_uint & outArgument0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  const cMapElement_staticStringMap * p = (const cMapElement_staticStringMap *) performSearch (inKey,
                                                                                                 inCompiler,
                                                                                                 kSearchErrorMessage_staticStringMap_searchKey
                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_staticStringMap) ;
    outArgument0 = p->mAttribute_mIndex ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_staticStringMap::getter_mIndexForKey (const GALGAS_string & inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_staticStringMap * p = (const cMapElement_staticStringMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_staticStringMap) ;
    result = p->mAttribute_mIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_staticStringMap::setter_setMIndexForKey (GALGAS_uint inAttributeValue,
                                                     GALGAS_string inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_staticStringMap * p = (cMapElement_staticStringMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_staticStringMap) ;
    p->mAttribute_mIndex = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_staticStringMap * GALGAS_staticStringMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                         const GALGAS_string & inKey
                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_staticStringMap * result = (cMapElement_staticStringMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_staticStringMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_staticStringMap::cEnumerator_staticStringMap (const GALGAS_staticStringMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_staticStringMap_2D_element cEnumerator_staticStringMap::current (LOCATION_ARGS) const {
  const cMapElement_staticStringMap * p = (const cMapElement_staticStringMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_staticStringMap) ;
  return GALGAS_staticStringMap_2D_element (p->mAttribute_lkey, p->mAttribute_mIndex) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_staticStringMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_staticStringMap::current_mIndex (LOCATION_ARGS) const {
  const cMapElement_staticStringMap * p = (const cMapElement_staticStringMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_staticStringMap) ;
  return p->mAttribute_mIndex ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @staticStringMap type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_staticStringMap ("staticStringMap",
                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_staticStringMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_staticStringMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_staticStringMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_staticStringMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_staticStringMap GALGAS_staticStringMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_staticStringMap result ;
  const GALGAS_staticStringMap * p = (const GALGAS_staticStringMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_staticStringMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("staticStringMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalConstantMap::cMapElement_globalConstantMap (const GALGAS_lstring & inKey,
                                                              const GALGAS_operandIR & in_mValue
                                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mValue (in_mValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_globalConstantMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mValue.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_globalConstantMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_globalConstantMap (mAttribute_lkey, mAttribute_mValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_globalConstantMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mValue" ":" ;
  mAttribute_mValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_globalConstantMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_globalConstantMap * operand = (cMapElement_globalConstantMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mValue.objectCompare (operand->mAttribute_mValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap::GALGAS_globalConstantMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap::GALGAS_globalConstantMap (const GALGAS_globalConstantMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap & GALGAS_globalConstantMap::operator = (const GALGAS_globalConstantMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap GALGAS_globalConstantMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_globalConstantMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap GALGAS_globalConstantMap::constructor_mapWithMapToOverride (const GALGAS_globalConstantMap & inMapToOverride
                                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_globalConstantMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap GALGAS_globalConstantMap::getter_overriddenMap (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_globalConstantMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                    const GALGAS_operandIR & inArgument0,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_globalConstantMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@globalConstantMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMap::setter_insertKey (GALGAS_lstring inKey,
                                                 GALGAS_operandIR inArgument0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_globalConstantMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' constant is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_globalConstantMap_searchKey = "there is no '%K' constant" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMap::method_searchKey (GALGAS_lstring inKey,
                                                 GALGAS_operandIR & outArgument0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  const cMapElement_globalConstantMap * p = (const cMapElement_globalConstantMap *) performSearch (inKey,
                                                                                                     inCompiler,
                                                                                                     kSearchErrorMessage_globalConstantMap_searchKey
                                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_globalConstantMap) ;
    outArgument0 = p->mAttribute_mValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandIR GALGAS_globalConstantMap::getter_mValueForKey (const GALGAS_string & inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalConstantMap * p = (const cMapElement_globalConstantMap *) attributes ;
  GALGAS_operandIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMap) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMap::setter_setMValueForKey (GALGAS_operandIR inAttributeValue,
                                                       GALGAS_string inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalConstantMap * p = (cMapElement_globalConstantMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMap) ;
    p->mAttribute_mValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalConstantMap * GALGAS_globalConstantMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                             const GALGAS_string & inKey
                                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMap * result = (cMapElement_globalConstantMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_globalConstantMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_globalConstantMap::cEnumerator_globalConstantMap (const GALGAS_globalConstantMap & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap_2D_element cEnumerator_globalConstantMap::current (LOCATION_ARGS) const {
  const cMapElement_globalConstantMap * p = (const cMapElement_globalConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalConstantMap) ;
  return GALGAS_globalConstantMap_2D_element (p->mAttribute_lkey, p->mAttribute_mValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_globalConstantMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandIR cEnumerator_globalConstantMap::current_mValue (LOCATION_ARGS) const {
  const cMapElement_globalConstantMap * p = (const cMapElement_globalConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalConstantMap) ;
  return p->mAttribute_mValue ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @globalConstantMap type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalConstantMap ("globalConstantMap",
                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalConstantMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalConstantMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalConstantMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalConstantMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMap GALGAS_globalConstantMap::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_globalConstantMap result ;
  const GALGAS_globalConstantMap * p = (const GALGAS_globalConstantMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalConstantMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalConstantMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_allowedGuardMap::cMapElement_allowedGuardMap (const GALGAS_lstring & inKey
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_allowedGuardMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_allowedGuardMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_allowedGuardMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_allowedGuardMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_allowedGuardMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_allowedGuardMap * operand = (cMapElement_allowedGuardMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap::GALGAS_allowedGuardMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap::GALGAS_allowedGuardMap (const GALGAS_allowedGuardMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap & GALGAS_allowedGuardMap::operator = (const GALGAS_allowedGuardMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap GALGAS_allowedGuardMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_allowedGuardMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap GALGAS_allowedGuardMap::constructor_mapWithMapToOverride (const GALGAS_allowedGuardMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_allowedGuardMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap GALGAS_allowedGuardMap::getter_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_allowedGuardMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_allowedGuardMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cMapElement_allowedGuardMap * p = NULL ;
  macroMyNew (p, cMapElement_allowedGuardMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@allowedGuardMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_allowedGuardMap::setter_insertKey (GALGAS_lstring inKey,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_allowedGuardMap * p = NULL ;
  macroMyNew (p, cMapElement_allowedGuardMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' guard is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_allowedGuardMap_searchKey = "there is no '%K' guard" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_allowedGuardMap::method_searchKey (GALGAS_lstring inKey,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  const cMapElement_allowedGuardMap * p = (const cMapElement_allowedGuardMap *) performSearch (inKey,
                                                                                                 inCompiler,
                                                                                                 kSearchErrorMessage_allowedGuardMap_searchKey
                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, cMapElement_allowedGuardMap) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_allowedGuardMap * GALGAS_allowedGuardMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                         const GALGAS_string & inKey
                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_allowedGuardMap * result = (cMapElement_allowedGuardMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_allowedGuardMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_allowedGuardMap::cEnumerator_allowedGuardMap (const GALGAS_allowedGuardMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap_2D_element cEnumerator_allowedGuardMap::current (LOCATION_ARGS) const {
  const cMapElement_allowedGuardMap * p = (const cMapElement_allowedGuardMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_allowedGuardMap) ;
  return GALGAS_allowedGuardMap_2D_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_allowedGuardMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @allowedGuardMap type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_allowedGuardMap ("allowedGuardMap",
                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_allowedGuardMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_allowedGuardMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_allowedGuardMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_allowedGuardMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap GALGAS_allowedGuardMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_allowedGuardMap result ;
  const GALGAS_allowedGuardMap * p = (const GALGAS_allowedGuardMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_allowedGuardMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("allowedGuardMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalVariableMap::cMapElement_globalVariableMap (const GALGAS_lstring & inKey,
                                                              const GALGAS_unifiedTypeMap_2D_proxy & in_type,
                                                              const GALGAS_stringset & in_executionModeSet,
                                                              const GALGAS_allowedRoutineMap & in_allowedRoutineMap,
                                                              const GALGAS_allowedGuardMap & in_allowedGuardMap,
                                                              const GALGAS_valueIR & in_initialValue,
                                                              const GALGAS_bool & in_isConstant
                                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_type (in_type),
mAttribute_executionModeSet (in_executionModeSet),
mAttribute_allowedRoutineMap (in_allowedRoutineMap),
mAttribute_allowedGuardMap (in_allowedGuardMap),
mAttribute_initialValue (in_initialValue),
mAttribute_isConstant (in_isConstant) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_globalVariableMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_type.isValid () && mAttribute_executionModeSet.isValid () && mAttribute_allowedRoutineMap.isValid () && mAttribute_allowedGuardMap.isValid () && mAttribute_initialValue.isValid () && mAttribute_isConstant.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_globalVariableMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_globalVariableMap (mAttribute_lkey, mAttribute_type, mAttribute_executionModeSet, mAttribute_allowedRoutineMap, mAttribute_allowedGuardMap, mAttribute_initialValue, mAttribute_isConstant COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_globalVariableMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "type" ":" ;
  mAttribute_type.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "executionModeSet" ":" ;
  mAttribute_executionModeSet.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "allowedRoutineMap" ":" ;
  mAttribute_allowedRoutineMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "allowedGuardMap" ":" ;
  mAttribute_allowedGuardMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "initialValue" ":" ;
  mAttribute_initialValue.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "isConstant" ":" ;
  mAttribute_isConstant.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_globalVariableMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_globalVariableMap * operand = (cMapElement_globalVariableMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_type.objectCompare (operand->mAttribute_type) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_executionModeSet.objectCompare (operand->mAttribute_executionModeSet) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_allowedRoutineMap.objectCompare (operand->mAttribute_allowedRoutineMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_allowedGuardMap.objectCompare (operand->mAttribute_allowedGuardMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_initialValue.objectCompare (operand->mAttribute_initialValue) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_isConstant.objectCompare (operand->mAttribute_isConstant) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap::GALGAS_globalVariableMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap::GALGAS_globalVariableMap (const GALGAS_globalVariableMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap & GALGAS_globalVariableMap::operator = (const GALGAS_globalVariableMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap GALGAS_globalVariableMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_globalVariableMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap GALGAS_globalVariableMap::constructor_mapWithMapToOverride (const GALGAS_globalVariableMap & inMapToOverride
                                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_globalVariableMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap GALGAS_globalVariableMap::getter_overriddenMap (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_globalVariableMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                    const GALGAS_unifiedTypeMap_2D_proxy & inArgument0,
                                                    const GALGAS_stringset & inArgument1,
                                                    const GALGAS_allowedRoutineMap & inArgument2,
                                                    const GALGAS_allowedGuardMap & inArgument3,
                                                    const GALGAS_valueIR & inArgument4,
                                                    const GALGAS_bool & inArgument5,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMap * p = NULL ;
  macroMyNew (p, cMapElement_globalVariableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@globalVariableMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::setter_insertKey (GALGAS_lstring inKey,
                                                 GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                 GALGAS_stringset inArgument1,
                                                 GALGAS_allowedRoutineMap inArgument2,
                                                 GALGAS_allowedGuardMap inArgument3,
                                                 GALGAS_valueIR inArgument4,
                                                 GALGAS_bool inArgument5,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMap * p = NULL ;
  macroMyNew (p, cMapElement_globalVariableMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' global variable is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_globalVariableMap_searchKey = "there is no '%K' global variable" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::method_searchKey (GALGAS_lstring inKey,
                                                 GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                 GALGAS_stringset & outArgument1,
                                                 GALGAS_allowedRoutineMap & outArgument2,
                                                 GALGAS_allowedGuardMap & outArgument3,
                                                 GALGAS_valueIR & outArgument4,
                                                 GALGAS_bool & outArgument5,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) performSearch (inKey,
                                                                                                     inCompiler,
                                                                                                     kSearchErrorMessage_globalVariableMap_searchKey
                                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    outArgument0 = p->mAttribute_type ;
    outArgument1 = p->mAttribute_executionModeSet ;
    outArgument2 = p->mAttribute_allowedRoutineMap ;
    outArgument3 = p->mAttribute_allowedGuardMap ;
    outArgument4 = p->mAttribute_initialValue ;
    outArgument5 = p->mAttribute_isConstant ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_globalVariableMap::getter_typeForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    result = p->mAttribute_type ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset GALGAS_globalVariableMap::getter_executionModeSetForKey (const GALGAS_string & inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) attributes ;
  GALGAS_stringset result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    result = p->mAttribute_executionModeSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedRoutineMap GALGAS_globalVariableMap::getter_allowedRoutineMapForKey (const GALGAS_string & inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) attributes ;
  GALGAS_allowedRoutineMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    result = p->mAttribute_allowedRoutineMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap GALGAS_globalVariableMap::getter_allowedGuardMapForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) attributes ;
  GALGAS_allowedGuardMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    result = p->mAttribute_allowedGuardMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_valueIR GALGAS_globalVariableMap::getter_initialValueForKey (const GALGAS_string & inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) attributes ;
  GALGAS_valueIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    result = p->mAttribute_initialValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_globalVariableMap::getter_isConstantForKey (const GALGAS_string & inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    result = p->mAttribute_isConstant ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::setter_setTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                                     GALGAS_string inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMap * p = (cMapElement_globalVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    p->mAttribute_type = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::setter_setExecutionModeSetForKey (GALGAS_stringset inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMap * p = (cMapElement_globalVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    p->mAttribute_executionModeSet = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::setter_setAllowedRoutineMapForKey (GALGAS_allowedRoutineMap inAttributeValue,
                                                                  GALGAS_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMap * p = (cMapElement_globalVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    p->mAttribute_allowedRoutineMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::setter_setAllowedGuardMapForKey (GALGAS_allowedGuardMap inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMap * p = (cMapElement_globalVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    p->mAttribute_allowedGuardMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::setter_setInitialValueForKey (GALGAS_valueIR inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMap * p = (cMapElement_globalVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    p->mAttribute_initialValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMap::setter_setIsConstantForKey (GALGAS_bool inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMap * p = (cMapElement_globalVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMap) ;
    p->mAttribute_isConstant = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalVariableMap * GALGAS_globalVariableMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                             const GALGAS_string & inKey
                                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMap * result = (cMapElement_globalVariableMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_globalVariableMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_globalVariableMap::cEnumerator_globalVariableMap (const GALGAS_globalVariableMap & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap_2D_element cEnumerator_globalVariableMap::current (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return GALGAS_globalVariableMap_2D_element (p->mAttribute_lkey, p->mAttribute_type, p->mAttribute_executionModeSet, p->mAttribute_allowedRoutineMap, p->mAttribute_allowedGuardMap, p->mAttribute_initialValue, p->mAttribute_isConstant) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_globalVariableMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_globalVariableMap::current_type (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return p->mAttribute_type ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset cEnumerator_globalVariableMap::current_executionModeSet (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return p->mAttribute_executionModeSet ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedRoutineMap cEnumerator_globalVariableMap::current_allowedRoutineMap (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return p->mAttribute_allowedRoutineMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_allowedGuardMap cEnumerator_globalVariableMap::current_allowedGuardMap (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return p->mAttribute_allowedGuardMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_valueIR cEnumerator_globalVariableMap::current_initialValue (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return p->mAttribute_initialValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_globalVariableMap::current_isConstant (LOCATION_ARGS) const {
  const cMapElement_globalVariableMap * p = (const cMapElement_globalVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMap) ;
  return p->mAttribute_isConstant ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @globalVariableMap type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalVariableMap ("globalVariableMap",
                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalVariableMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalVariableMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalVariableMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalVariableMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMap GALGAS_globalVariableMap::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_globalVariableMap result ;
  const GALGAS_globalVariableMap * p = (const GALGAS_globalVariableMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalVariableMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalVariableMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_unifiedTypeMap::cMapElement_unifiedTypeMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_string & in_llvmTypeName,
                                                        const GALGAS_typeKind & in_kind,
                                                        const GALGAS_typedConstantMap & in_typedConstantMap,
                                                        const GALGAS_bool & in_instantiable,
                                                        const GALGAS_bool & in_copyable,
                                                        const GALGAS_bool & in_equatable,
                                                        const GALGAS_bool & in_comparable,
                                                        const GALGAS_unifiedTypeMap_2D_proxy & in_enumerationType
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_llvmTypeName (in_llvmTypeName),
mAttribute_kind (in_kind),
mAttribute_typedConstantMap (in_typedConstantMap),
mAttribute_instantiable (in_instantiable),
mAttribute_copyable (in_copyable),
mAttribute_equatable (in_equatable),
mAttribute_comparable (in_comparable),
mAttribute_enumerationType (in_enumerationType) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_unifiedTypeMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_llvmTypeName.isValid () && mAttribute_kind.isValid () && mAttribute_typedConstantMap.isValid () && mAttribute_instantiable.isValid () && mAttribute_copyable.isValid () && mAttribute_equatable.isValid () && mAttribute_comparable.isValid () && mAttribute_enumerationType.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_unifiedTypeMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_unifiedTypeMap (mAttribute_lkey, mAttribute_llvmTypeName, mAttribute_kind, mAttribute_typedConstantMap, mAttribute_instantiable, mAttribute_copyable, mAttribute_equatable, mAttribute_comparable, mAttribute_enumerationType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_unifiedTypeMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "llvmTypeName" ":" ;
  mAttribute_llvmTypeName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "kind" ":" ;
  mAttribute_kind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "typedConstantMap" ":" ;
  mAttribute_typedConstantMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "instantiable" ":" ;
  mAttribute_instantiable.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "copyable" ":" ;
  mAttribute_copyable.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "equatable" ":" ;
  mAttribute_equatable.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "comparable" ":" ;
  mAttribute_comparable.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "enumerationType" ":" ;
  mAttribute_enumerationType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_unifiedTypeMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_unifiedTypeMap * operand = (cMapElement_unifiedTypeMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_llvmTypeName.objectCompare (operand->mAttribute_llvmTypeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_kind.objectCompare (operand->mAttribute_kind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_typedConstantMap.objectCompare (operand->mAttribute_typedConstantMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_instantiable.objectCompare (operand->mAttribute_instantiable) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_copyable.objectCompare (operand->mAttribute_copyable) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_equatable.objectCompare (operand->mAttribute_equatable) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_comparable.objectCompare (operand->mAttribute_comparable) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_enumerationType.objectCompare (operand->mAttribute_enumerationType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap::GALGAS_unifiedTypeMap (void) :
AC_GALGAS_uniqueMap () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap::GALGAS_unifiedTypeMap (const GALGAS_unifiedTypeMap & inSource) :
AC_GALGAS_uniqueMap (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap & GALGAS_unifiedTypeMap::operator = (const GALGAS_unifiedTypeMap & inSource) {
  * ((AC_GALGAS_uniqueMap *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap GALGAS_unifiedTypeMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_unifiedTypeMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton states                                                       *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton state names                                                  *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton actions                                                    *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton action names                                                 *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton transitions                                                  *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//  Map automaton final state issues                                           *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_insertKey (GALGAS_lstring inKey,
                                              GALGAS_string inArgument0,
                                              GALGAS_typeKind inArgument1,
                                              GALGAS_typedConstantMap inArgument2,
                                              GALGAS_bool inArgument3,
                                              GALGAS_bool inArgument4,
                                              GALGAS_bool inArgument5,
                                              GALGAS_bool inArgument6,
                                              GALGAS_unifiedTypeMap_2D_proxy inArgument7,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  cMapElement_unifiedTypeMap * p = NULL ;
  macroMyNew (p, cMapElement_unifiedTypeMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6, inArgument7 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' type is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        0,
                        NULL,
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_unifiedTypeMap_searchKey = "there is no '%K' type" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_string & outArgument0,
                                              GALGAS_typeKind & outArgument1,
                                              GALGAS_typedConstantMap & outArgument2,
                                              GALGAS_bool & outArgument3,
                                              GALGAS_bool & outArgument4,
                                              GALGAS_bool & outArgument5,
                                              GALGAS_bool & outArgument6,
                                              GALGAS_unifiedTypeMap_2D_proxy & outArgument7,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_unifiedTypeMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
    outArgument7.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    outArgument0 = p->mAttribute_llvmTypeName ;
    outArgument1 = p->mAttribute_kind ;
    outArgument2 = p->mAttribute_typedConstantMap ;
    outArgument3 = p->mAttribute_instantiable ;
    outArgument4 = p->mAttribute_copyable ;
    outArgument5 = p->mAttribute_equatable ;
    outArgument6 = p->mAttribute_comparable ;
    outArgument7 = p->mAttribute_enumerationType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_unifiedTypeMap::getter_llvmTypeNameForKey (const GALGAS_string & inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_llvmTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_unifiedTypeMap::getter_kindForKey (const GALGAS_string & inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_typeKind result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_kind ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typedConstantMap GALGAS_unifiedTypeMap::getter_typedConstantMapForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_typedConstantMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_typedConstantMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_unifiedTypeMap::getter_instantiableForKey (const GALGAS_string & inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_instantiable ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_unifiedTypeMap::getter_copyableForKey (const GALGAS_string & inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_copyable ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_unifiedTypeMap::getter_equatableForKey (const GALGAS_string & inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_equatable ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_unifiedTypeMap::getter_comparableForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_comparable ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_unifiedTypeMap::getter_enumerationTypeForKey (const GALGAS_string & inKey,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_enumerationType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_setLlvmTypeNameForKey (GALGAS_string inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_llvmTypeName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_setKindForKey (GALGAS_typeKind inAttributeValue,
                                                  GALGAS_string inKey,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_kind = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_setTypedConstantMapForKey (GALGAS_typedConstantMap inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_typedConstantMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_setInstantiableForKey (GALGAS_bool inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_instantiable = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_setCopyableForKey (GALGAS_bool inAttributeValue,
                                                      GALGAS_string inKey,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_copyable = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_setEquatableForKey (GALGAS_bool inAttributeValue,
                                                       GALGAS_string inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_equatable = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_setComparableForKey (GALGAS_bool inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_comparable = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::setter_setEnumerationTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_enumerationType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_unifiedTypeMap * GALGAS_unifiedTypeMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                       const GALGAS_string & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_unifiedTypeMap * result = (cMapElement_unifiedTypeMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_unifiedTypeMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_unifiedTypeMap::cEnumerator_unifiedTypeMap (const GALGAS_unifiedTypeMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_unifiedTypeMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_unifiedTypeMap::current_llvmTypeName (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_llvmTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind cEnumerator_unifiedTypeMap::current_kind (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_kind ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typedConstantMap cEnumerator_unifiedTypeMap::current_typedConstantMap (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_typedConstantMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_unifiedTypeMap::current_instantiable (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_instantiable ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_unifiedTypeMap::current_copyable (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_copyable ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_unifiedTypeMap::current_equatable (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_equatable ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_unifiedTypeMap::current_comparable (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_comparable ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_unifiedTypeMap::current_enumerationType (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_enumerationType ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @unifiedTypeMap type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_unifiedTypeMap ("unifiedTypeMap",
                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_unifiedTypeMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_unifiedTypeMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_unifiedTypeMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_unifiedTypeMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap GALGAS_unifiedTypeMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeMap result ;
  const GALGAS_unifiedTypeMap * p = (const GALGAS_unifiedTypeMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_unifiedTypeMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("unifiedTypeMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_typedConstantMap::cMapElement_typedConstantMap (const GALGAS_lstring & inKey,
                                                            const GALGAS_valueIR & in_mValue
                                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mValue (in_mValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_typedConstantMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mValue.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_typedConstantMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_typedConstantMap (mAttribute_lkey, mAttribute_mValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_typedConstantMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mValue" ":" ;
  mAttribute_mValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_typedConstantMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_typedConstantMap * operand = (cMapElement_typedConstantMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mValue.objectCompare (operand->mAttribute_mValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typedConstantMap::GALGAS_typedConstantMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typedConstantMap::GALGAS_typedConstantMap (const GALGAS_typedConstantMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typedConstantMap & GALGAS_typedConstantMap::operator = (const GALGAS_typedConstantMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typedConstantMap GALGAS_typedConstantMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_typedConstantMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typedConstantMap GALGAS_typedConstantMap::constructor_mapWithMapToOverride (const GALGAS_typedConstantMap & inMapToOverride
                                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_typedConstantMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typedConstantMap GALGAS_typedConstantMap::getter_overriddenMap (C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  GALGAS_typedConstantMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typedConstantMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                   const GALGAS_valueIR & inArgument0,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_typedConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_typedConstantMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@typedConstantMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typedConstantMap::setter_insertKey (GALGAS_lstring inKey,
                                                GALGAS_valueIR inArgument0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_typedConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_typedConstantMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' constructor is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_typedConstantMap_searchKey = "there is no '%K' constructor" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typedConstantMap::method_searchKey (GALGAS_lstring inKey,
                                                GALGAS_valueIR & outArgument0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  const cMapElement_typedConstantMap * p = (const cMapElement_typedConstantMap *) performSearch (inKey,
                                                                                                   inCompiler,
                                                                                                   kSearchErrorMessage_typedConstantMap_searchKey
                                                                                                   COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_typedConstantMap) ;
    outArgument0 = p->mAttribute_mValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_valueIR GALGAS_typedConstantMap::getter_mValueForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_typedConstantMap * p = (const cMapElement_typedConstantMap *) attributes ;
  GALGAS_valueIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_typedConstantMap) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typedConstantMap::setter_setMValueForKey (GALGAS_valueIR inAttributeValue,
                                                      GALGAS_string inKey,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_typedConstantMap * p = (cMapElement_typedConstantMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_typedConstantMap) ;
    p->mAttribute_mValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_typedConstantMap * GALGAS_typedConstantMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                           const GALGAS_string & inKey
                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement_typedConstantMap * result = (cMapElement_typedConstantMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_typedConstantMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_typedConstantMap::cEnumerator_typedConstantMap (const GALGAS_typedConstantMap & inEnumeratedObject,
                                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typedConstantMap_2D_element cEnumerator_typedConstantMap::current (LOCATION_ARGS) const {
  const cMapElement_typedConstantMap * p = (const cMapElement_typedConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_typedConstantMap) ;
  return GALGAS_typedConstantMap_2D_element (p->mAttribute_lkey, p->mAttribute_mValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_typedConstantMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_valueIR cEnumerator_typedConstantMap::current_mValue (LOCATION_ARGS) const {
  const cMapElement_typedConstantMap * p = (const cMapElement_typedConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_typedConstantMap) ;
  return p->mAttribute_mValue ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @typedConstantMap type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_typedConstantMap ("typedConstantMap",
                                         NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_typedConstantMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typedConstantMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_typedConstantMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_typedConstantMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typedConstantMap GALGAS_typedConstantMap::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_typedConstantMap result ;
  const GALGAS_typedConstantMap * p = (const GALGAS_typedConstantMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_typedConstantMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("typedConstantMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Class for element of '@typeList' list                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_typeList : public cCollectionElement {
  public : GALGAS_typeList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_typeList (const GALGAS_unifiedTypeMap_2D_proxy & in_mActualType
                                        COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
  public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_typeList::cCollectionElement_typeList (const GALGAS_unifiedTypeMap_2D_proxy & in_mActualType
                                                          COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mActualType) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_typeList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_typeList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_typeList (mObject.mAttribute_mActualType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_typeList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActualType" ":" ;
  mObject.mAttribute_mActualType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_typeList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_typeList * operand = (cCollectionElement_typeList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_typeList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList::GALGAS_typeList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList::GALGAS_typeList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList GALGAS_typeList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_typeList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList GALGAS_typeList::constructor_listWithValue (const GALGAS_unifiedTypeMap_2D_proxy & inOperand0
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_typeList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_typeList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                 const GALGAS_unifiedTypeMap_2D_proxy & in_mActualType
                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement_typeList * p = NULL ;
  macroMyNew (p, cCollectionElement_typeList (in_mActualType COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::addAssign_operation (const GALGAS_unifiedTypeMap_2D_proxy & inOperand0
                                           COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_typeList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::setter_insertAtIndex (const GALGAS_unifiedTypeMap_2D_proxy inOperand0,
                                            const GALGAS_uint inInsertionIndex,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_typeList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::setter_removeAtIndex (GALGAS_unifiedTypeMap_2D_proxy & outOperand0,
                                            const GALGAS_uint inRemoveIndex,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_typeList * p = (cCollectionElement_typeList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_typeList) ;
      outOperand0 = p->mObject.mAttribute_mActualType ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::setter_popFirst (GALGAS_unifiedTypeMap_2D_proxy & outOperand0,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_typeList * p = (cCollectionElement_typeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_typeList) ;
    outOperand0 = p->mObject.mAttribute_mActualType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::setter_popLast (GALGAS_unifiedTypeMap_2D_proxy & outOperand0,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_typeList * p = (cCollectionElement_typeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_typeList) ;
    outOperand0 = p->mObject.mAttribute_mActualType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::method_first (GALGAS_unifiedTypeMap_2D_proxy & outOperand0,
                                    C_Compiler * inCompiler
                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_typeList * p = (cCollectionElement_typeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_typeList) ;
    outOperand0 = p->mObject.mAttribute_mActualType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::method_last (GALGAS_unifiedTypeMap_2D_proxy & outOperand0,
                                   C_Compiler * inCompiler
                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_typeList * p = (cCollectionElement_typeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_typeList) ;
    outOperand0 = p->mObject.mAttribute_mActualType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList GALGAS_typeList::add_operation (const GALGAS_typeList & inOperand,
                                                C_Compiler * /* inCompiler */
                                                COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_typeList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList GALGAS_typeList::getter_subListWithRange (const GALGAS_range & inRange,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_typeList result = GALGAS_typeList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList GALGAS_typeList::getter_subListFromIndex (const GALGAS_uint & inIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_typeList result = GALGAS_typeList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList GALGAS_typeList::getter_subListToIndex (const GALGAS_uint & inIndex,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_typeList result = GALGAS_typeList::constructor_emptyList (THERE) ;
  subListToIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeList::plusAssign_operation (const GALGAS_typeList inOperand,
                                            C_Compiler * /* inCompiler */
                                            COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_typeList::getter_mActualTypeAtIndex (const GALGAS_uint & inIndex,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_typeList * p = (cCollectionElement_typeList *) attributes.ptr () ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_typeList) ;
    result = p->mObject.mAttribute_mActualType ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_typeList::cEnumerator_typeList (const GALGAS_typeList & inEnumeratedObject,
                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList_2D_element cEnumerator_typeList::current (LOCATION_ARGS) const {
  const cCollectionElement_typeList * p = (const cCollectionElement_typeList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_typeList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_typeList::current_mActualType (LOCATION_ARGS) const {
  const cCollectionElement_typeList * p = (const cCollectionElement_typeList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_typeList) ;
  return p->mObject.mAttribute_mActualType ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                   @typeList type                                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_typeList ("typeList",
                                 NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_typeList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_typeList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_typeList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeList GALGAS_typeList::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  GALGAS_typeList result ;
  const GALGAS_typeList * p = (const GALGAS_typeList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_typeList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("typeList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     Class for element of '@operandIRList' list                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_operandIRList : public cCollectionElement {
  public : GALGAS_operandIRList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_operandIRList (const GALGAS_operandIR & in_mOperand
                                             COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
  public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_operandIRList::cCollectionElement_operandIRList (const GALGAS_operandIR & in_mOperand
                                                                    COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mOperand) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_operandIRList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_operandIRList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_operandIRList (mObject.mAttribute_mOperand COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_operandIRList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOperand" ":" ;
  mObject.mAttribute_mOperand.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_operandIRList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_operandIRList * operand = (cCollectionElement_operandIRList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_operandIRList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandIRList::GALGAS_operandIRList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandIRList::GALGAS_operandIRList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandIRList GALGAS_operandIRList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_operandIRList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandIRList GALGAS_operandIRList::constructor_listWithValue (const GALGAS_operandIR & inOperand0
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_operandIRList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_operandIRList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandIRList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                      const GALGAS_operandIR & in_mOperand
                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement_operandIRList * p = NULL ;
  macroMyNew (p, cCollectionElement_operandIRList (in_mOperand COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandIRList::addAssign_operation (const GALGAS_operandIR & inOperand0
                                                COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_operandIRList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandIRList::setter_insertAtIndex (const GALGAS_operandIR inOperand0,
                                                 const GALGAS_uint inInsertionIndex,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_operandIRList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandIRList::setter_removeAtIndex (GALGAS_operandIR & outOperand0,
                                                 const GALGAS_uint inRemoveIndex,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_operandIRList * p = (cCollectionElement_operandIRList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_operandIRList) ;
      outOperand0 = p->mObject.mAttribute_mOperand ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandIRList::setter_popFirst (GALGAS_operandIR & outOperand0,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_operandIRList * p = (cCollectionElement_operandIRList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_operandIRList) ;
    outOperand0 = p->mObject.mAttribute_mOperand ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandIRList::setter_popLast (GALGAS_operandIR & outOperand0,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_operandIRList * p = (cCollectionElement_operandIRList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_operandIRList) ;
    outOperand0 = p->mObject.mAttribute_mOperand ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandIRList::method_first (GALGAS_operandIR & outOperand0,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_operandIRList * p = (cCollectionElement_operandIRList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_operandIRList) ;
    outOperand0 = p->mObject.mAttribute_mOperand ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandIRList::method_last (GALGAS_operandIR & outOperand0,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_operandIRList * p = (cCollectionElement_operandIRList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_operandIRList) ;
    outOperand0 = p->mObject.mAttribute_mOperand ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandIRList GALGAS_operandIRList::add_operation (const GALGAS_operandIRList & inOperand,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_operandIRList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandIRList GALGAS_operandIRList::getter_subListWithRange (const GALGAS_range & inRange,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_operandIRList result = GALGAS_operandIRList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandIRList GALGAS_operandIRList::getter_subListFromIndex (const GALGAS_uint & inIndex,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_operandIRList result = GALGAS_operandIRList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandIRList GALGAS_operandIRList::getter_subListToIndex (const GALGAS_uint & inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_operandIRList result = GALGAS_operandIRList::constructor_emptyList (THERE) ;
  subListToIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_operandIRList::plusAssign_operation (const GALGAS_operandIRList inOperand,
                                                 C_Compiler * /* inCompiler */
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandIR GALGAS_operandIRList::getter_mOperandAtIndex (const GALGAS_uint & inIndex,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_operandIRList * p = (cCollectionElement_operandIRList *) attributes.ptr () ;
  GALGAS_operandIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_operandIRList) ;
    result = p->mObject.mAttribute_mOperand ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_operandIRList::cEnumerator_operandIRList (const GALGAS_operandIRList & inEnumeratedObject,
                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandIRList_2D_element cEnumerator_operandIRList::current (LOCATION_ARGS) const {
  const cCollectionElement_operandIRList * p = (const cCollectionElement_operandIRList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_operandIRList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandIR cEnumerator_operandIRList::current_mOperand (LOCATION_ARGS) const {
  const cCollectionElement_operandIRList * p = (const cCollectionElement_operandIRList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_operandIRList) ;
  return p->mObject.mAttribute_mOperand ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 @operandIRList type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_operandIRList ("operandIRList",
                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_operandIRList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_operandIRList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_operandIRList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_operandIRList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_operandIRList GALGAS_operandIRList::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_operandIRList result ;
  const GALGAS_operandIRList * p = (const GALGAS_operandIRList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_operandIRList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("operandIRList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_constructorValue_simple::cEnumAssociatedValues_constructorValue_simple (const GALGAS_bigint & inAssociatedValue0
                                                                                              COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_constructorValue_simple::description (C_String & ioString,
                                                                 const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_constructorValue_simple::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_constructorValue_simple * ptr = dynamic_cast<const cEnumAssociatedValues_constructorValue_simple *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumAssociatedValues_constructorValue_structure::cEnumAssociatedValues_constructorValue_structure (const GALGAS_constructorSignature & inAssociatedValue0,
                                                                                                    const GALGAS_sortedOperandIRList & inAssociatedValue1
                                                                                                    COMMA_LOCATION_ARGS) :
cEnumAssociatedValues (THERE),
mAssociatedValue0 (inAssociatedValue0),
mAssociatedValue1 (inAssociatedValue1) {
} ;

//---------------------------------------------------------------------------------------------------------------------*

void cEnumAssociatedValues_constructorValue_structure::description (C_String & ioString,
                                                                    const int32_t inIndentation) const {
  ioString << "(\n" ;
  mAssociatedValue0.description (ioString, inIndentation) ;
  mAssociatedValue1.description (ioString, inIndentation) ;
  ioString << ")" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cEnumAssociatedValues_constructorValue_structure::compare (const cEnumAssociatedValues * inOperand) const {
  const cEnumAssociatedValues_constructorValue_structure * ptr = dynamic_cast<const cEnumAssociatedValues_constructorValue_structure *> (inOperand) ;
  macroValidPointer (ptr) ;
  typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAssociatedValue0.objectCompare (ptr->mAssociatedValue0) ;
  }
  if (result == kOperandEqual) {
    result = mAssociatedValue1.objectCompare (ptr->mAssociatedValue1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorValue::GALGAS_constructorValue (void) :
mAssociatedValues (),
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorValue GALGAS_constructorValue::constructor_simple (const GALGAS_bigint & inAssociatedValue0
                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_constructorValue result ;
  if (inAssociatedValue0.isValid ()) {
    result.mEnum = kEnum_simple ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_constructorValue_simple (inAssociatedValue0 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorValue GALGAS_constructorValue::constructor_structure (const GALGAS_constructorSignature & inAssociatedValue0,
                                                                        const GALGAS_sortedOperandIRList & inAssociatedValue1
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_constructorValue result ;
  if (inAssociatedValue0.isValid () && inAssociatedValue1.isValid ()) {
    result.mEnum = kEnum_structure ;
    cEnumAssociatedValues * ptr = NULL ;
    macroMyNew (ptr, cEnumAssociatedValues_constructorValue_structure (inAssociatedValue0, inAssociatedValue1 COMMA_THERE)) ;
    result.mAssociatedValues.setPointer (ptr) ;
    macroDetachSharedObject (ptr) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorValue::method_simple (GALGAS_bigint & outAssociatedValue0,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_simple) {
    outAssociatedValue0.drop () ;
    C_String s ;
    s << "method @constructorValue simple invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_constructorValue_simple * ptr = (const cEnumAssociatedValues_constructorValue_simple *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorValue::method_structure (GALGAS_constructorSignature & outAssociatedValue0,
                                                GALGAS_sortedOperandIRList & outAssociatedValue1,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  if (mEnum != kEnum_structure) {
    outAssociatedValue0.drop () ;
    outAssociatedValue1.drop () ;
    C_String s ;
    s << "method @constructorValue structure invoked with an invalid enum value" ;
    inCompiler->onTheFlyRunTimeError (s COMMA_THERE) ;
  }else{
    const cEnumAssociatedValues_constructorValue_structure * ptr = (const cEnumAssociatedValues_constructorValue_structure *) unsafePointer () ;
    outAssociatedValue0 = ptr->mAssociatedValue0 ;
    outAssociatedValue1 = ptr->mAssociatedValue1 ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_constructorValue [3] = {
  "(not built)",
  "simple",
  "structure"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_constructorValue::getter_isSimple (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_simple == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_constructorValue::getter_isStructure (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_structure == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorValue::description (C_String & ioString,
                                           const int32_t inIndentation) const {
  ioString << "<enum @constructorValue: " << gEnumNameArrayFor_constructorValue [mEnum] ;
  mAssociatedValues.description (ioString, inIndentation) ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_constructorValue::objectCompare (const GALGAS_constructorValue & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mAssociatedValues.objectCompare (inOperand.mAssociatedValues) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @constructorValue type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_constructorValue ("constructorValue",
                                         NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_constructorValue::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_constructorValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_constructorValue::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_constructorValue (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorValue GALGAS_constructorValue::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_constructorValue result ;
  const GALGAS_constructorValue * p = (const GALGAS_constructorValue *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_constructorValue *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("constructorValue", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_constructorMap::cMapElement_constructorMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_constructorValue & in_mInitValue
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mInitValue (in_mInitValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_constructorMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mInitValue.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_constructorMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_constructorMap (mAttribute_lkey, mAttribute_mInitValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_constructorMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInitValue" ":" ;
  mAttribute_mInitValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_constructorMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_constructorMap * operand = (cMapElement_constructorMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mInitValue.objectCompare (operand->mAttribute_mInitValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap::GALGAS_constructorMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap::GALGAS_constructorMap (const GALGAS_constructorMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap & GALGAS_constructorMap::operator = (const GALGAS_constructorMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap GALGAS_constructorMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_constructorMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap GALGAS_constructorMap::constructor_mapWithMapToOverride (const GALGAS_constructorMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_constructorMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap GALGAS_constructorMap::getter_overriddenMap (C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_constructorMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                 const GALGAS_constructorValue & inArgument0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_constructorMap * p = NULL ;
  macroMyNew (p, cMapElement_constructorMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@constructorMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorMap::setter_insertKey (GALGAS_lstring inKey,
                                              GALGAS_constructorValue inArgument0,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  cMapElement_constructorMap * p = NULL ;
  macroMyNew (p, cMapElement_constructorMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "-- internal error --" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_constructorMap_searchKey = "-- internal error --" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_constructorValue & outArgument0,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_constructorMap * p = (const cMapElement_constructorMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_constructorMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_constructorMap) ;
    outArgument0 = p->mAttribute_mInitValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorValue GALGAS_constructorMap::getter_mInitValueForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_constructorMap * p = (const cMapElement_constructorMap *) attributes ;
  GALGAS_constructorValue result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_constructorMap) ;
    result = p->mAttribute_mInitValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constructorMap::setter_setMInitValueForKey (GALGAS_constructorValue inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_constructorMap * p = (cMapElement_constructorMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_constructorMap) ;
    p->mAttribute_mInitValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_constructorMap * GALGAS_constructorMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                       const GALGAS_string & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_constructorMap * result = (cMapElement_constructorMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_constructorMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_constructorMap::cEnumerator_constructorMap (const GALGAS_constructorMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap_2D_element cEnumerator_constructorMap::current (LOCATION_ARGS) const {
  const cMapElement_constructorMap * p = (const cMapElement_constructorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_constructorMap) ;
  return GALGAS_constructorMap_2D_element (p->mAttribute_lkey, p->mAttribute_mInitValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_constructorMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorValue cEnumerator_constructorMap::current_mInitValue (LOCATION_ARGS) const {
  const cMapElement_constructorMap * p = (const cMapElement_constructorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_constructorMap) ;
  return p->mAttribute_mInitValue ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @constructorMap type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_constructorMap ("constructorMap",
                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_constructorMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_constructorMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_constructorMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_constructorMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constructorMap GALGAS_constructorMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_constructorMap result ;
  const GALGAS_constructorMap * p = (const GALGAS_constructorMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_constructorMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("constructorMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 Class for element of '@globalTaskVariableList' list                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_globalTaskVariableList : public cCollectionElement {
  public : GALGAS_globalTaskVariableList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_globalTaskVariableList (const GALGAS_string & in_mTaskName,
                                                      const GALGAS_string & in_mTaskTypeName,
                                                      const GALGAS_valueIR & in_mInitialValue
                                                      COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
  public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_globalTaskVariableList::cCollectionElement_globalTaskVariableList (const GALGAS_string & in_mTaskName,
                                                                                      const GALGAS_string & in_mTaskTypeName,
                                                                                      const GALGAS_valueIR & in_mInitialValue
                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mTaskName, in_mTaskTypeName, in_mInitialValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_globalTaskVariableList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_globalTaskVariableList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_globalTaskVariableList (mObject.mAttribute_mTaskName, mObject.mAttribute_mTaskTypeName, mObject.mAttribute_mInitialValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_globalTaskVariableList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTaskName" ":" ;
  mObject.mAttribute_mTaskName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTaskTypeName" ":" ;
  mObject.mAttribute_mTaskTypeName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInitialValue" ":" ;
  mObject.mAttribute_mInitialValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_globalTaskVariableList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_globalTaskVariableList * operand = (cCollectionElement_globalTaskVariableList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_globalTaskVariableList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList::GALGAS_globalTaskVariableList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList::GALGAS_globalTaskVariableList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList GALGAS_globalTaskVariableList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_globalTaskVariableList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList GALGAS_globalTaskVariableList::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                        const GALGAS_string & inOperand1,
                                                                                        const GALGAS_valueIR & inOperand2
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_globalTaskVariableList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_globalTaskVariableList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                               const GALGAS_string & in_mTaskName,
                                                               const GALGAS_string & in_mTaskTypeName,
                                                               const GALGAS_valueIR & in_mInitialValue
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement_globalTaskVariableList * p = NULL ;
  macroMyNew (p, cCollectionElement_globalTaskVariableList (in_mTaskName,
                                                            in_mTaskTypeName,
                                                            in_mInitialValue COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::addAssign_operation (const GALGAS_string & inOperand0,
                                                         const GALGAS_string & inOperand1,
                                                         const GALGAS_valueIR & inOperand2
                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_globalTaskVariableList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::setter_insertAtIndex (const GALGAS_string inOperand0,
                                                          const GALGAS_string inOperand1,
                                                          const GALGAS_valueIR inOperand2,
                                                          const GALGAS_uint inInsertionIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_globalTaskVariableList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::setter_removeAtIndex (GALGAS_string & outOperand0,
                                                          GALGAS_string & outOperand1,
                                                          GALGAS_valueIR & outOperand2,
                                                          const GALGAS_uint inRemoveIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_globalTaskVariableList * p = (cCollectionElement_globalTaskVariableList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
      outOperand0 = p->mObject.mAttribute_mTaskName ;
      outOperand1 = p->mObject.mAttribute_mTaskTypeName ;
      outOperand2 = p->mObject.mAttribute_mInitialValue ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::setter_popFirst (GALGAS_string & outOperand0,
                                                     GALGAS_string & outOperand1,
                                                     GALGAS_valueIR & outOperand2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_globalTaskVariableList * p = (cCollectionElement_globalTaskVariableList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
    outOperand0 = p->mObject.mAttribute_mTaskName ;
    outOperand1 = p->mObject.mAttribute_mTaskTypeName ;
    outOperand2 = p->mObject.mAttribute_mInitialValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::setter_popLast (GALGAS_string & outOperand0,
                                                    GALGAS_string & outOperand1,
                                                    GALGAS_valueIR & outOperand2,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_globalTaskVariableList * p = (cCollectionElement_globalTaskVariableList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
    outOperand0 = p->mObject.mAttribute_mTaskName ;
    outOperand1 = p->mObject.mAttribute_mTaskTypeName ;
    outOperand2 = p->mObject.mAttribute_mInitialValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::method_first (GALGAS_string & outOperand0,
                                                  GALGAS_string & outOperand1,
                                                  GALGAS_valueIR & outOperand2,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_globalTaskVariableList * p = (cCollectionElement_globalTaskVariableList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
    outOperand0 = p->mObject.mAttribute_mTaskName ;
    outOperand1 = p->mObject.mAttribute_mTaskTypeName ;
    outOperand2 = p->mObject.mAttribute_mInitialValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::method_last (GALGAS_string & outOperand0,
                                                 GALGAS_string & outOperand1,
                                                 GALGAS_valueIR & outOperand2,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_globalTaskVariableList * p = (cCollectionElement_globalTaskVariableList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
    outOperand0 = p->mObject.mAttribute_mTaskName ;
    outOperand1 = p->mObject.mAttribute_mTaskTypeName ;
    outOperand2 = p->mObject.mAttribute_mInitialValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList GALGAS_globalTaskVariableList::add_operation (const GALGAS_globalTaskVariableList & inOperand,
                                                                            C_Compiler * /* inCompiler */
                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_globalTaskVariableList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList GALGAS_globalTaskVariableList::getter_subListWithRange (const GALGAS_range & inRange,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_globalTaskVariableList result = GALGAS_globalTaskVariableList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList GALGAS_globalTaskVariableList::getter_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_globalTaskVariableList result = GALGAS_globalTaskVariableList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList GALGAS_globalTaskVariableList::getter_subListToIndex (const GALGAS_uint & inIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_globalTaskVariableList result = GALGAS_globalTaskVariableList::constructor_emptyList (THERE) ;
  subListToIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalTaskVariableList::plusAssign_operation (const GALGAS_globalTaskVariableList inOperand,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_globalTaskVariableList::getter_mTaskNameAtIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_globalTaskVariableList * p = (cCollectionElement_globalTaskVariableList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
    result = p->mObject.mAttribute_mTaskName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_globalTaskVariableList::getter_mTaskTypeNameAtIndex (const GALGAS_uint & inIndex,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_globalTaskVariableList * p = (cCollectionElement_globalTaskVariableList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
    result = p->mObject.mAttribute_mTaskTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_valueIR GALGAS_globalTaskVariableList::getter_mInitialValueAtIndex (const GALGAS_uint & inIndex,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_globalTaskVariableList * p = (cCollectionElement_globalTaskVariableList *) attributes.ptr () ;
  GALGAS_valueIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
    result = p->mObject.mAttribute_mInitialValue ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_globalTaskVariableList::cEnumerator_globalTaskVariableList (const GALGAS_globalTaskVariableList & inEnumeratedObject,
                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList_2D_element cEnumerator_globalTaskVariableList::current (LOCATION_ARGS) const {
  const cCollectionElement_globalTaskVariableList * p = (const cCollectionElement_globalTaskVariableList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_globalTaskVariableList::current_mTaskName (LOCATION_ARGS) const {
  const cCollectionElement_globalTaskVariableList * p = (const cCollectionElement_globalTaskVariableList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
  return p->mObject.mAttribute_mTaskName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_globalTaskVariableList::current_mTaskTypeName (LOCATION_ARGS) const {
  const cCollectionElement_globalTaskVariableList * p = (const cCollectionElement_globalTaskVariableList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
  return p->mObject.mAttribute_mTaskTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_valueIR cEnumerator_globalTaskVariableList::current_mInitialValue (LOCATION_ARGS) const {
  const cCollectionElement_globalTaskVariableList * p = (const cCollectionElement_globalTaskVariableList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_globalTaskVariableList) ;
  return p->mObject.mAttribute_mInitialValue ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @globalTaskVariableList type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalTaskVariableList ("globalTaskVariableList",
                                               NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalTaskVariableList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalTaskVariableList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalTaskVariableList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalTaskVariableList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalTaskVariableList GALGAS_globalTaskVariableList::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_globalTaskVariableList result ;
  const GALGAS_globalTaskVariableList * p = (const GALGAS_globalTaskVariableList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalTaskVariableList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalTaskVariableList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         '@subprogramInvocationGraph' graph                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_subprogramInvocationGraph::GALGAS_subprogramInvocationGraph (void) :
AC_GALGAS_graph () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_subprogramInvocationGraph GALGAS_subprogramInvocationGraph::constructor_emptyGraph (LOCATION_ARGS) {
  GALGAS_subprogramInvocationGraph result ;
  result.makeNewEmptyGraph (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_subprogramInvocationGraph::setter_addNode (GALGAS_lstring inKey,
                                                       GALGAS_lstring inArgument_0,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  GALGAS_lstringlist::makeAttributesFromObjects (attributes, inArgument_0 COMMA_THERE) ;
  const char * kErrorMessage = "the '%K' subprogram is already declared at %L" ;
  internalAddNode (inKey, kErrorMessage, attributes, inCompiler COMMA_THERE) ;
}


//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_subprogramInvocationGraph::method_topologicalSort (GALGAS_lstringlist & outSortedList,
                                                               GALGAS_lstringlist & outSortedKeyList,
                                                               GALGAS_lstringlist & outUnsortedList,
                                                               GALGAS_lstringlist & outUnsortedKeyList,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  cSharedList * sortedList = NULL ;
  cSharedList * unsortedList = NULL ;
  internalTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_lstringlist (sortedList) ;
  outUnsortedList = GALGAS_lstringlist (unsortedList) ;
  GALGAS_lstringlist::detachSharedList (sortedList) ;
  GALGAS_lstringlist::detachSharedList (unsortedList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_subprogramInvocationGraph::method_depthFirstTopologicalSort (GALGAS_lstringlist & outSortedList,
                                                                         GALGAS_lstringlist & outSortedKeyList,
                                                                         GALGAS_lstringlist & outUnsortedList,
                                                                         GALGAS_lstringlist & outUnsortedKeyList,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  cSharedList * sortedList = NULL ;
  cSharedList * unsortedList = NULL ;
  internalDepthFirstTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_lstringlist (sortedList) ;
  outUnsortedList = GALGAS_lstringlist (unsortedList) ;
  GALGAS_lstringlist::detachSharedList (sortedList) ;
  GALGAS_lstringlist::detachSharedList (unsortedList) ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_subprogramInvocationGraph GALGAS_subprogramInvocationGraph::getter_reversedGraph (LOCATION_ARGS) const {
  GALGAS_subprogramInvocationGraph result ;
  result.reversedGraphFromGraph (*this COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_subprogramInvocationGraph::method_circularities (GALGAS_lstringlist & outInfoList,
                                                             GALGAS_lstringlist & outKeyList
                                                             COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalFindCircularities (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_lstringlist (infoList) ;
  GALGAS_lstringlist::detachSharedList (infoList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_subprogramInvocationGraph::method_nodesWithNoSuccessor (GALGAS_lstringlist & outInfoList,
                                                                    GALGAS_lstringlist & outKeyList
                                                                    COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalNodesWithNoSuccessor (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_lstringlist (infoList) ;
  GALGAS_lstringlist::detachSharedList (infoList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_subprogramInvocationGraph::method_nodesWithNoPredecessor (GALGAS_lstringlist & outInfoList,
                                                                      GALGAS_lstringlist & outKeyList
                                                                      COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalNodesWithNoPredecessor (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_lstringlist (infoList) ;
  GALGAS_lstringlist::detachSharedList (infoList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_subprogramInvocationGraph GALGAS_subprogramInvocationGraph::getter_subgraphFromNodes (const GALGAS_lstringlist & inStartKeyList,
                                                                                             const GALGAS_stringset & inKeysToExclude,
                                                                                             C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_subprogramInvocationGraph result ;
  subGraph (result, inStartKeyList, inKeysToExclude, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_subprogramInvocationGraph::getter_accessibleNodesFromNodes (const GALGAS_lstringlist & inStartKeyList,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_lstringlist result ;
  GALGAS_subprogramInvocationGraph resultingGraph ;
  subGraph (resultingGraph,
            inStartKeyList,
            GALGAS_stringset::constructor_emptySet (HERE),
            inCompiler
            COMMA_THERE) ;
  if (resultingGraph.isValid ()) {
    result = resultingGraph.getter_lkeyList (THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @subprogramInvocationGraph type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_subprogramInvocationGraph ("subprogramInvocationGraph",
                                                  NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_subprogramInvocationGraph::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_subprogramInvocationGraph ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_subprogramInvocationGraph::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_subprogramInvocationGraph (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_subprogramInvocationGraph GALGAS_subprogramInvocationGraph::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_subprogramInvocationGraph result ;
  const GALGAS_subprogramInvocationGraph * p = (const GALGAS_subprogramInvocationGraph *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_subprogramInvocationGraph *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("subprogramInvocationGraph", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessKind::GALGAS_accessKind (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessKind GALGAS_accessKind::constructor_noAccess (UNUSED_LOCATION_ARGS) {
  GALGAS_accessKind result ;
  result.mEnum = kEnum_noAccess ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessKind GALGAS_accessKind::constructor_readAccess (UNUSED_LOCATION_ARGS) {
  GALGAS_accessKind result ;
  result.mEnum = kEnum_readAccess ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessKind GALGAS_accessKind::constructor_readWriteAccess (UNUSED_LOCATION_ARGS) {
  GALGAS_accessKind result ;
  result.mEnum = kEnum_readWriteAccess ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_accessKind [4] = {
  "(not built)",
  "noAccess",
  "readAccess",
  "readWriteAccess"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_accessKind::getter_isNoAccess (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_noAccess == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_accessKind::getter_isReadAccess (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_readAccess == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_accessKind::getter_isReadWriteAccess (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_readWriteAccess == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_accessKind::description (C_String & ioString,
                                     const int32_t /* inIndentation */) const {
  ioString << "<enum @accessKind: " << gEnumNameArrayFor_accessKind [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_accessKind::objectCompare (const GALGAS_accessKind & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                  @accessKind type                                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_accessKind ("accessKind",
                                   NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_accessKind::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_accessKind ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_accessKind::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_accessKind (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_accessKind GALGAS_accessKind::extractObject (const GALGAS_object & inObject,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  GALGAS_accessKind result ;
  const GALGAS_accessKind * p = (const GALGAS_accessKind *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_accessKind *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("accessKind", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_controlRegisterMapIR::cMapElement_controlRegisterMapIR (const GALGAS_lstring & inKey,
                                                                    const GALGAS_string & in_mRegisterTypeName,
                                                                    const GALGAS_bigint & in_mRegisterAddress
                                                                    COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRegisterTypeName (in_mRegisterTypeName),
mAttribute_mRegisterAddress (in_mRegisterAddress) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_controlRegisterMapIR::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRegisterTypeName.isValid () && mAttribute_mRegisterAddress.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_controlRegisterMapIR::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_controlRegisterMapIR (mAttribute_lkey, mAttribute_mRegisterTypeName, mAttribute_mRegisterAddress COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_controlRegisterMapIR::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRegisterTypeName" ":" ;
  mAttribute_mRegisterTypeName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRegisterAddress" ":" ;
  mAttribute_mRegisterAddress.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_controlRegisterMapIR::compare (const cCollectionElement * inOperand) const {
  cMapElement_controlRegisterMapIR * operand = (cMapElement_controlRegisterMapIR *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRegisterTypeName.objectCompare (operand->mAttribute_mRegisterTypeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRegisterAddress.objectCompare (operand->mAttribute_mRegisterAddress) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterMapIR::GALGAS_controlRegisterMapIR (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterMapIR::GALGAS_controlRegisterMapIR (const GALGAS_controlRegisterMapIR & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterMapIR & GALGAS_controlRegisterMapIR::operator = (const GALGAS_controlRegisterMapIR & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterMapIR GALGAS_controlRegisterMapIR::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_controlRegisterMapIR result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterMapIR GALGAS_controlRegisterMapIR::constructor_mapWithMapToOverride (const GALGAS_controlRegisterMapIR & inMapToOverride
                                                                                           COMMA_LOCATION_ARGS) {
  GALGAS_controlRegisterMapIR result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterMapIR GALGAS_controlRegisterMapIR::getter_overriddenMap (C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  GALGAS_controlRegisterMapIR result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controlRegisterMapIR::addAssign_operation (const GALGAS_lstring & inKey,
                                                       const GALGAS_string & inArgument0,
                                                       const GALGAS_bigint & inArgument1,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_controlRegisterMapIR * p = NULL ;
  macroMyNew (p, cMapElement_controlRegisterMapIR (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@controlRegisterMapIR insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controlRegisterMapIR::setter_insertKey (GALGAS_lstring inKey,
                                                    GALGAS_string inArgument0,
                                                    GALGAS_bigint inArgument1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_controlRegisterMapIR * p = NULL ;
  macroMyNew (p, cMapElement_controlRegisterMapIR (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "** internal error **" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_controlRegisterMapIR_searchKey = "** internal error **" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controlRegisterMapIR::method_searchKey (GALGAS_lstring inKey,
                                                    GALGAS_string & outArgument0,
                                                    GALGAS_bigint & outArgument1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) const {
  const cMapElement_controlRegisterMapIR * p = (const cMapElement_controlRegisterMapIR *) performSearch (inKey,
                                                                                                           inCompiler,
                                                                                                           kSearchErrorMessage_controlRegisterMapIR_searchKey
                                                                                                           COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_controlRegisterMapIR) ;
    outArgument0 = p->mAttribute_mRegisterTypeName ;
    outArgument1 = p->mAttribute_mRegisterAddress ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_controlRegisterMapIR::getter_mRegisterTypeNameForKey (const GALGAS_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controlRegisterMapIR * p = (const cMapElement_controlRegisterMapIR *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controlRegisterMapIR) ;
    result = p->mAttribute_mRegisterTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bigint GALGAS_controlRegisterMapIR::getter_mRegisterAddressForKey (const GALGAS_string & inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controlRegisterMapIR * p = (const cMapElement_controlRegisterMapIR *) attributes ;
  GALGAS_bigint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controlRegisterMapIR) ;
    result = p->mAttribute_mRegisterAddress ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controlRegisterMapIR::setter_setMRegisterTypeNameForKey (GALGAS_string inAttributeValue,
                                                                     GALGAS_string inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controlRegisterMapIR * p = (cMapElement_controlRegisterMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controlRegisterMapIR) ;
    p->mAttribute_mRegisterTypeName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controlRegisterMapIR::setter_setMRegisterAddressForKey (GALGAS_bigint inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controlRegisterMapIR * p = (cMapElement_controlRegisterMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controlRegisterMapIR) ;
    p->mAttribute_mRegisterAddress = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_controlRegisterMapIR * GALGAS_controlRegisterMapIR::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                   const GALGAS_string & inKey
                                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_controlRegisterMapIR * result = (cMapElement_controlRegisterMapIR *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_controlRegisterMapIR) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_controlRegisterMapIR::cEnumerator_controlRegisterMapIR (const GALGAS_controlRegisterMapIR & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterMapIR_2D_element cEnumerator_controlRegisterMapIR::current (LOCATION_ARGS) const {
  const cMapElement_controlRegisterMapIR * p = (const cMapElement_controlRegisterMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_controlRegisterMapIR) ;
  return GALGAS_controlRegisterMapIR_2D_element (p->mAttribute_lkey, p->mAttribute_mRegisterTypeName, p->mAttribute_mRegisterAddress) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_controlRegisterMapIR::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_controlRegisterMapIR::current_mRegisterTypeName (LOCATION_ARGS) const {
  const cMapElement_controlRegisterMapIR * p = (const cMapElement_controlRegisterMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_controlRegisterMapIR) ;
  return p->mAttribute_mRegisterTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bigint cEnumerator_controlRegisterMapIR::current_mRegisterAddress (LOCATION_ARGS) const {
  const cMapElement_controlRegisterMapIR * p = (const cMapElement_controlRegisterMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_controlRegisterMapIR) ;
  return p->mAttribute_mRegisterAddress ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @controlRegisterMapIR type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controlRegisterMapIR ("controlRegisterMapIR",
                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controlRegisterMapIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controlRegisterMapIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controlRegisterMapIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controlRegisterMapIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controlRegisterMapIR GALGAS_controlRegisterMapIR::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_controlRegisterMapIR result ;
  const GALGAS_controlRegisterMapIR * p = (const GALGAS_controlRegisterMapIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controlRegisterMapIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("controlRegisterMapIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalVariableMapIR::cMapElement_globalVariableMapIR (const GALGAS_lstring & inKey,
                                                                  const GALGAS_unifiedTypeMap_2D_proxy & in_mType,
                                                                  const GALGAS_bool & in_mGenerateVolatile,
                                                                  const GALGAS_valueIR & in_mInitialValue
                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mType (in_mType),
mAttribute_mGenerateVolatile (in_mGenerateVolatile),
mAttribute_mInitialValue (in_mInitialValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_globalVariableMapIR::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () && mAttribute_mGenerateVolatile.isValid () && mAttribute_mInitialValue.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_globalVariableMapIR::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_globalVariableMapIR (mAttribute_lkey, mAttribute_mType, mAttribute_mGenerateVolatile, mAttribute_mInitialValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_globalVariableMapIR::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGenerateVolatile" ":" ;
  mAttribute_mGenerateVolatile.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInitialValue" ":" ;
  mAttribute_mInitialValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_globalVariableMapIR::compare (const cCollectionElement * inOperand) const {
  cMapElement_globalVariableMapIR * operand = (cMapElement_globalVariableMapIR *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mGenerateVolatile.objectCompare (operand->mAttribute_mGenerateVolatile) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInitialValue.objectCompare (operand->mAttribute_mInitialValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR::GALGAS_globalVariableMapIR (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR::GALGAS_globalVariableMapIR (const GALGAS_globalVariableMapIR & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR & GALGAS_globalVariableMapIR::operator = (const GALGAS_globalVariableMapIR & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR GALGAS_globalVariableMapIR::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_globalVariableMapIR result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR GALGAS_globalVariableMapIR::constructor_mapWithMapToOverride (const GALGAS_globalVariableMapIR & inMapToOverride
                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_globalVariableMapIR result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR GALGAS_globalVariableMapIR::getter_overriddenMap (C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_globalVariableMapIR result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::addAssign_operation (const GALGAS_lstring & inKey,
                                                      const GALGAS_unifiedTypeMap_2D_proxy & inArgument0,
                                                      const GALGAS_bool & inArgument1,
                                                      const GALGAS_valueIR & inArgument2,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMapIR * p = NULL ;
  macroMyNew (p, cMapElement_globalVariableMapIR (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@globalVariableMapIR insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::setter_insertKey (GALGAS_lstring inKey,
                                                   GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                   GALGAS_bool inArgument1,
                                                   GALGAS_valueIR inArgument2,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMapIR * p = NULL ;
  macroMyNew (p, cMapElement_globalVariableMapIR (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "** internal error **" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_globalVariableMapIR_searchKey = "** internal error **" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::method_searchKey (GALGAS_lstring inKey,
                                                   GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                   GALGAS_bool & outArgument1,
                                                   GALGAS_valueIR & outArgument2,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) performSearch (inKey,
                                                                                                         inCompiler,
                                                                                                         kSearchErrorMessage_globalVariableMapIR_searchKey
                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    outArgument0 = p->mAttribute_mType ;
    outArgument1 = p->mAttribute_mGenerateVolatile ;
    outArgument2 = p->mAttribute_mInitialValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_globalVariableMapIR::getter_mTypeForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_globalVariableMapIR::getter_mGenerateVolatileForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    result = p->mAttribute_mGenerateVolatile ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_valueIR GALGAS_globalVariableMapIR::getter_mInitialValueForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) attributes ;
  GALGAS_valueIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    result = p->mAttribute_mInitialValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::setter_setMTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMapIR * p = (cMapElement_globalVariableMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    p->mAttribute_mType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::setter_setMGenerateVolatileForKey (GALGAS_bool inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMapIR * p = (cMapElement_globalVariableMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    p->mAttribute_mGenerateVolatile = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalVariableMapIR::setter_setMInitialValueForKey (GALGAS_valueIR inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalVariableMapIR * p = (cMapElement_globalVariableMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
    p->mAttribute_mInitialValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalVariableMapIR * GALGAS_globalVariableMapIR::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                 const GALGAS_string & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_globalVariableMapIR * result = (cMapElement_globalVariableMapIR *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_globalVariableMapIR) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_globalVariableMapIR::cEnumerator_globalVariableMapIR (const GALGAS_globalVariableMapIR & inEnumeratedObject,
                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR_2D_element cEnumerator_globalVariableMapIR::current (LOCATION_ARGS) const {
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
  return GALGAS_globalVariableMapIR_2D_element (p->mAttribute_lkey, p->mAttribute_mType, p->mAttribute_mGenerateVolatile, p->mAttribute_mInitialValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_globalVariableMapIR::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_globalVariableMapIR::current_mType (LOCATION_ARGS) const {
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
  return p->mAttribute_mType ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_globalVariableMapIR::current_mGenerateVolatile (LOCATION_ARGS) const {
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
  return p->mAttribute_mGenerateVolatile ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_valueIR cEnumerator_globalVariableMapIR::current_mInitialValue (LOCATION_ARGS) const {
  const cMapElement_globalVariableMapIR * p = (const cMapElement_globalVariableMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalVariableMapIR) ;
  return p->mAttribute_mInitialValue ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @globalVariableMapIR type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalVariableMapIR ("globalVariableMapIR",
                                            NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalVariableMapIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalVariableMapIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalVariableMapIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalVariableMapIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalVariableMapIR GALGAS_globalVariableMapIR::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_globalVariableMapIR result ;
  const GALGAS_globalVariableMapIR * p = (const GALGAS_globalVariableMapIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalVariableMapIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalVariableMapIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalConstantMapIR::cMapElement_globalConstantMapIR (const GALGAS_lstring & inKey,
                                                                  const GALGAS_unifiedTypeMap_2D_proxy & in_mType,
                                                                  const GALGAS_valueIR & in_mSourceExpression
                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mType (in_mType),
mAttribute_mSourceExpression (in_mSourceExpression) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_globalConstantMapIR::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () && mAttribute_mSourceExpression.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_globalConstantMapIR::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_globalConstantMapIR (mAttribute_lkey, mAttribute_mType, mAttribute_mSourceExpression COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_globalConstantMapIR::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSourceExpression" ":" ;
  mAttribute_mSourceExpression.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_globalConstantMapIR::compare (const cCollectionElement * inOperand) const {
  cMapElement_globalConstantMapIR * operand = (cMapElement_globalConstantMapIR *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSourceExpression.objectCompare (operand->mAttribute_mSourceExpression) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR::GALGAS_globalConstantMapIR (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR::GALGAS_globalConstantMapIR (const GALGAS_globalConstantMapIR & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR & GALGAS_globalConstantMapIR::operator = (const GALGAS_globalConstantMapIR & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR GALGAS_globalConstantMapIR::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_globalConstantMapIR result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR GALGAS_globalConstantMapIR::constructor_mapWithMapToOverride (const GALGAS_globalConstantMapIR & inMapToOverride
                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_globalConstantMapIR result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR GALGAS_globalConstantMapIR::getter_overriddenMap (C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_globalConstantMapIR result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMapIR::addAssign_operation (const GALGAS_lstring & inKey,
                                                      const GALGAS_unifiedTypeMap_2D_proxy & inArgument0,
                                                      const GALGAS_valueIR & inArgument1,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMapIR * p = NULL ;
  macroMyNew (p, cMapElement_globalConstantMapIR (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@globalConstantMapIR insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMapIR::setter_insertKey (GALGAS_lstring inKey,
                                                   GALGAS_unifiedTypeMap_2D_proxy inArgument0,
                                                   GALGAS_valueIR inArgument1,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMapIR * p = NULL ;
  macroMyNew (p, cMapElement_globalConstantMapIR (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "** internal error **" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_globalConstantMapIR_searchKey = "** internal error **" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMapIR::method_searchKey (GALGAS_lstring inKey,
                                                   GALGAS_unifiedTypeMap_2D_proxy & outArgument0,
                                                   GALGAS_valueIR & outArgument1,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_globalConstantMapIR * p = (const cMapElement_globalConstantMapIR *) performSearch (inKey,
                                                                                                         inCompiler,
                                                                                                         kSearchErrorMessage_globalConstantMapIR_searchKey
                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
    outArgument0 = p->mAttribute_mType ;
    outArgument1 = p->mAttribute_mSourceExpression ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_globalConstantMapIR::getter_mTypeForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalConstantMapIR * p = (const cMapElement_globalConstantMapIR *) attributes ;
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_valueIR GALGAS_globalConstantMapIR::getter_mSourceExpressionForKey (const GALGAS_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalConstantMapIR * p = (const cMapElement_globalConstantMapIR *) attributes ;
  GALGAS_valueIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
    result = p->mAttribute_mSourceExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMapIR::setter_setMTypeForKey (GALGAS_unifiedTypeMap_2D_proxy inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalConstantMapIR * p = (cMapElement_globalConstantMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
    p->mAttribute_mType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_globalConstantMapIR::setter_setMSourceExpressionForKey (GALGAS_valueIR inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalConstantMapIR * p = (cMapElement_globalConstantMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
    p->mAttribute_mSourceExpression = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_globalConstantMapIR * GALGAS_globalConstantMapIR::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                 const GALGAS_string & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_globalConstantMapIR * result = (cMapElement_globalConstantMapIR *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_globalConstantMapIR) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_globalConstantMapIR::cEnumerator_globalConstantMapIR (const GALGAS_globalConstantMapIR & inEnumeratedObject,
                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR_2D_element cEnumerator_globalConstantMapIR::current (LOCATION_ARGS) const {
  const cMapElement_globalConstantMapIR * p = (const cMapElement_globalConstantMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
  return GALGAS_globalConstantMapIR_2D_element (p->mAttribute_lkey, p->mAttribute_mType, p->mAttribute_mSourceExpression) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_globalConstantMapIR::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cEnumerator_globalConstantMapIR::current_mType (LOCATION_ARGS) const {
  const cMapElement_globalConstantMapIR * p = (const cMapElement_globalConstantMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
  return p->mAttribute_mType ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_valueIR cEnumerator_globalConstantMapIR::current_mSourceExpression (LOCATION_ARGS) const {
  const cMapElement_globalConstantMapIR * p = (const cMapElement_globalConstantMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalConstantMapIR) ;
  return p->mAttribute_mSourceExpression ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @globalConstantMapIR type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalConstantMapIR ("globalConstantMapIR",
                                            NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalConstantMapIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalConstantMapIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalConstantMapIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalConstantMapIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_globalConstantMapIR GALGAS_globalConstantMapIR::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_globalConstantMapIR result ;
  const GALGAS_globalConstantMapIR * p = (const GALGAS_globalConstantMapIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalConstantMapIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalConstantMapIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_typeMapIR::cMapElement_typeMapIR (const GALGAS_lstring & inKey,
                                              const GALGAS_abstractTypeIR & in_mType
                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mType (in_mType) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_typeMapIR::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_typeMapIR::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_typeMapIR (mAttribute_lkey, mAttribute_mType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_typeMapIR::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_typeMapIR::compare (const cCollectionElement * inOperand) const {
  cMapElement_typeMapIR * operand = (cMapElement_typeMapIR *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeMapIR::GALGAS_typeMapIR (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeMapIR::GALGAS_typeMapIR (const GALGAS_typeMapIR & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeMapIR & GALGAS_typeMapIR::operator = (const GALGAS_typeMapIR & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeMapIR GALGAS_typeMapIR::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_typeMapIR result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeMapIR GALGAS_typeMapIR::constructor_mapWithMapToOverride (const GALGAS_typeMapIR & inMapToOverride
                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_typeMapIR result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeMapIR GALGAS_typeMapIR::getter_overriddenMap (C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_typeMapIR result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeMapIR::addAssign_operation (const GALGAS_lstring & inKey,
                                            const GALGAS_abstractTypeIR & inArgument0,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  cMapElement_typeMapIR * p = NULL ;
  macroMyNew (p, cMapElement_typeMapIR (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@typeMapIR insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeMapIR::setter_insertKey (GALGAS_lstring inKey,
                                         GALGAS_abstractTypeIR inArgument0,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) {
  cMapElement_typeMapIR * p = NULL ;
  macroMyNew (p, cMapElement_typeMapIR (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "** internal error **" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_typeMapIR_searchKey = "** internal error **" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeMapIR::method_searchKey (GALGAS_lstring inKey,
                                         GALGAS_abstractTypeIR & outArgument0,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) const {
  const cMapElement_typeMapIR * p = (const cMapElement_typeMapIR *) performSearch (inKey,
                                                                                     inCompiler,
                                                                                     kSearchErrorMessage_typeMapIR_searchKey
                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_typeMapIR) ;
    outArgument0 = p->mAttribute_mType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractTypeIR GALGAS_typeMapIR::getter_mTypeForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_typeMapIR * p = (const cMapElement_typeMapIR *) attributes ;
  GALGAS_abstractTypeIR result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_typeMapIR) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_typeMapIR::setter_setMTypeForKey (GALGAS_abstractTypeIR inAttributeValue,
                                              GALGAS_string inKey,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_typeMapIR * p = (cMapElement_typeMapIR *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_typeMapIR) ;
    p->mAttribute_mType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_typeMapIR * GALGAS_typeMapIR::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                             const GALGAS_string & inKey
                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_typeMapIR * result = (cMapElement_typeMapIR *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_typeMapIR) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_typeMapIR::cEnumerator_typeMapIR (const GALGAS_typeMapIR & inEnumeratedObject,
                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeMapIR_2D_element cEnumerator_typeMapIR::current (LOCATION_ARGS) const {
  const cMapElement_typeMapIR * p = (const cMapElement_typeMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_typeMapIR) ;
  return GALGAS_typeMapIR_2D_element (p->mAttribute_lkey, p->mAttribute_mType) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_typeMapIR::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractTypeIR cEnumerator_typeMapIR::current_mType (LOCATION_ARGS) const {
  const cMapElement_typeMapIR * p = (const cMapElement_typeMapIR *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_typeMapIR) ;
  return p->mAttribute_mType ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                   @typeMapIR type                                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_typeMapIR ("typeMapIR",
                                  NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_typeMapIR::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeMapIR ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_typeMapIR::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_typeMapIR (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeMapIR GALGAS_typeMapIR::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_typeMapIR result ;
  const GALGAS_typeMapIR * p = (const GALGAS_typeMapIR *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_typeMapIR *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("typeMapIR", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

#include "utilities/MF_MemoryControl.h"
#include "galgas2/C_galgas_CLI_Options.h"

#include "files/C_FileManager.h"

//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       N O N    T E R M I N A L    N A M E S                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const char * gNonTerminalNames_plm_grammar [100] = {
  "<start_symbol>",// Index 0
  "<declaration>",// Index 1
  "<procedure>",// Index 2
  "<procedure_header>",// Index 3
  "<procedure_formal_arguments>",// Index 4
  "<section>",// Index 5
  "<service>",// Index 6
  "<guard>",// Index 7
  "<expression>",// Index 8
  "<expression_12>",// Index 9
  "<expression_11>",// Index 10
  "<expression_10>",// Index 11
  "<expression_9>",// Index 12
  "<expression_8>",// Index 13
  "<expression_7>",// Index 14
  "<expression_6>",// Index 15
  "<expression_5>",// Index 16
  "<expression_4>",// Index 17
  "<expression_3>",// Index 18
  "<expression_2>",// Index 19
  "<expression_1>",// Index 20
  "<primary>",// Index 21
  "<instruction>",// Index 22
  "<instructionList>",// Index 23
  "<op_assign>",// Index 24
  "<if_instruction>",// Index 25
  "<guarded_command>",// Index 26
  "<routine_call>",// Index 27
  "<effective_parameters>",// Index 28
  "<select_common_5F_syntax_0>",// Index 29
  "<select_common_5F_syntax_1>",// Index 30
  "<select_common_5F_syntax_2>",// Index 31
  "<select_common_5F_syntax_3>",// Index 32
  "<select_common_5F_syntax_4>",// Index 33
  "<select_common_5F_syntax_5>",// Index 34
  "<select_common_5F_syntax_6>",// Index 35
  "<select_common_5F_syntax_7>",// Index 36
  "<select_common_5F_syntax_8>",// Index 37
  "<select_common_5F_syntax_9>",// Index 38
  "<select_common_5F_syntax_10>",// Index 39
  "<select_common_5F_syntax_11>",// Index 40
  "<select_common_5F_syntax_12>",// Index 41
  "<select_common_5F_syntax_13>",// Index 42
  "<select_common_5F_syntax_14>",// Index 43
  "<select_common_5F_syntax_15>",// Index 44
  "<select_common_5F_syntax_16>",// Index 45
  "<select_common_5F_syntax_17>",// Index 46
  "<select_common_5F_syntax_18>",// Index 47
  "<select_common_5F_syntax_19>",// Index 48
  "<select_common_5F_syntax_20>",// Index 49
  "<select_common_5F_syntax_21>",// Index 50
  "<select_common_5F_syntax_22>",// Index 51
  "<select_common_5F_syntax_23>",// Index 52
  "<select_common_5F_syntax_24>",// Index 53
  "<select_common_5F_syntax_25>",// Index 54
  "<select_common_5F_syntax_26>",// Index 55
  "<select_common_5F_syntax_27>",// Index 56
  "<select_common_5F_syntax_28>",// Index 57
  "<select_common_5F_syntax_29>",// Index 58
  "<select_common_5F_syntax_30>",// Index 59
  "<select_common_5F_syntax_31>",// Index 60
  "<select_common_5F_syntax_32>",// Index 61
  "<select_common_5F_syntax_33>",// Index 62
  "<select_common_5F_syntax_34>",// Index 63
  "<select_common_5F_syntax_35>",// Index 64
  "<select_common_5F_syntax_36>",// Index 65
  "<select_common_5F_syntax_37>",// Index 66
  "<select_common_5F_syntax_38>",// Index 67
  "<select_common_5F_syntax_39>",// Index 68
  "<select_common_5F_syntax_40>",// Index 69
  "<select_common_5F_syntax_41>",// Index 70
  "<select_common_5F_syntax_42>",// Index 71
  "<select_common_5F_syntax_43>",// Index 72
  "<select_common_5F_syntax_44>",// Index 73
  "<select_common_5F_syntax_45>",// Index 74
  "<select_common_5F_syntax_46>",// Index 75
  "<select_common_5F_syntax_47>",// Index 76
  "<select_common_5F_syntax_48>",// Index 77
  "<select_common_5F_syntax_49>",// Index 78
  "<select_common_5F_syntax_50>",// Index 79
  "<select_common_5F_syntax_51>",// Index 80
  "<select_common_5F_syntax_52>",// Index 81
  "<select_common_5F_syntax_53>",// Index 82
  "<select_common_5F_syntax_54>",// Index 83
  "<select_common_5F_syntax_55>",// Index 84
  "<select_common_5F_syntax_56>",// Index 85
  "<select_common_5F_syntax_57>",// Index 86
  "<select_common_5F_syntax_58>",// Index 87
  "<select_common_5F_syntax_59>",// Index 88
  "<select_common_5F_syntax_60>",// Index 89
  "<select_common_5F_syntax_61>",// Index 90
  "<select_common_5F_syntax_62>",// Index 91
  "<select_common_5F_syntax_63>",// Index 92
  "<select_common_5F_syntax_64>",// Index 93
  "<select_common_5F_syntax_65>",// Index 94
  "<select_common_5F_syntax_66>",// Index 95
  "<select_common_5F_syntax_67>",// Index 96
  "<select_common_5F_syntax_68>",// Index 97
  "<select_common_5F_syntax_69>",// Index 98
  "<>"// Index 99
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                S L R    A N A L Y Z E R    A C T I O N    T A B L E                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

// Action tables handle shift and reduce actions ;
//  - a shift action is (terminal_symbol, SHIFT (n)) : if shifts to state n ;
//  - the accept action is (terminal_symbol, ACCEPT) ;
//  - a reduce action is (terminal_symbol, REDUCE (n)) ; if reduces to state n.

#define SHIFT(a) ((a) + 2)
#define REDUCE(a) (-(a) - 1)
#define ACCEPT (1)
#define END (-1)

static const int16_t gActionTable_plm_grammar [] = {
// State S0 (index = 0)
  C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_struct, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_newType, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_extension, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_guard, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_section, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_task, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_boot, SHIFT (16)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (17)
, C_Lexique_plm_5F_lexique::kToken_extern, SHIFT (18)
, C_Lexique_plm_5F_lexique::kToken_service, SHIFT (19)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (20)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (83)
, END
// State S1 (index = 43)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (29)
, END
// State S2 (index = 46)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (30)
, END
// State S3 (index = 49)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (31)
, END
// State S4 (index = 52)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (32)
, END
// State S5 (index = 55)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (33)
, END
// State S6 (index = 58)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (34)
, END
// State S7 (index = 61)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (35)
, END
// State S8 (index = 64)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (36)
, END
// State S9 (index = 67)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (37)
, END
// State S10 (index = 70)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (38)
, END
// State S11 (index = 73)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (39)
, END
// State S12 (index = 76)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (40)
, END
// State S13 (index = 79)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (41)
, END
// State S14 (index = 82)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (42)
, END
// State S15 (index = 85)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (43)
, END
// State S16 (index = 88)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (44)
, END
// State S17 (index = 91)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, END
// State S18 (index = 94)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, END
// State S19 (index = 97)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (47)
, END
// State S20 (index = 100)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (48)
, END
// State S21 (index = 103)
, C_Lexique_plm_5F_lexique::kToken_, ACCEPT
, END
// State S22 (index = 106)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_struct, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_newType, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_extension, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_guard, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_section, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_task, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_boot, SHIFT (16)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (17)
, C_Lexique_plm_5F_lexique::kToken_extern, SHIFT (18)
, C_Lexique_plm_5F_lexique::kToken_service, SHIFT (19)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (20)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (83)
, END
// State S23 (index = 149)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_struct, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_newType, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_extension, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_guard, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_section, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_task, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_boot, SHIFT (16)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (17)
, C_Lexique_plm_5F_lexique::kToken_extern, SHIFT (18)
, C_Lexique_plm_5F_lexique::kToken_service, SHIFT (19)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (20)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (83)
, END
// State S24 (index = 192)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (150)
, C_Lexique_plm_5F_lexique::kToken__2D__3E_, SHIFT (51)
, END
// State S25 (index = 197)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_struct, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_newType, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_extension, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_guard, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_section, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_task, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_boot, SHIFT (16)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (17)
, C_Lexique_plm_5F_lexique::kToken_extern, SHIFT (18)
, C_Lexique_plm_5F_lexique::kToken_service, SHIFT (19)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (20)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (83)
, END
// State S26 (index = 240)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_struct, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_newType, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_extension, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_guard, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_section, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_task, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_boot, SHIFT (16)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (17)
, C_Lexique_plm_5F_lexique::kToken_extern, SHIFT (18)
, C_Lexique_plm_5F_lexique::kToken_service, SHIFT (19)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (20)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (83)
, END
// State S27 (index = 283)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (22)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (22)
, END
// State S28 (index = 326)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (0)
, END
// State S29 (index = 329)
, C_Lexique_plm_5F_lexique::kToken_import, SHIFT (1)
, C_Lexique_plm_5F_lexique::kToken_enum, SHIFT (2)
, C_Lexique_plm_5F_lexique::kToken_struct, SHIFT (3)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (4)
, C_Lexique_plm_5F_lexique::kToken_newType, SHIFT (5)
, C_Lexique_plm_5F_lexique::kToken_extension, SHIFT (6)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, SHIFT (7)
, C_Lexique_plm_5F_lexique::kToken_guard, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_section, SHIFT (9)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (11)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (12)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (13)
, C_Lexique_plm_5F_lexique::kToken_register, SHIFT (14)
, C_Lexique_plm_5F_lexique::kToken_task, SHIFT (15)
, C_Lexique_plm_5F_lexique::kToken_boot, SHIFT (16)
, C_Lexique_plm_5F_lexique::kToken_required, SHIFT (17)
, C_Lexique_plm_5F_lexique::kToken_extern, SHIFT (18)
, C_Lexique_plm_5F_lexique::kToken_service, SHIFT (19)
, C_Lexique_plm_5F_lexique::kToken_target, SHIFT (20)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (83)
, END
// State S30 (index = 372)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (56)
, END
// State S31 (index = 375)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (57)
, END
// State S32 (index = 380)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (59)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (108)
, END
// State S33 (index = 385)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (61)
, END
// State S34 (index = 388)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (62)
, END
// State S35 (index = 391)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (63)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (106)
, END
// State S36 (index = 396)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (65)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (172)
, END
// State S37 (index = 401)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (67)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (162)
, END
// State S38 (index = 406)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (69)
, END
// State S39 (index = 409)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (146)
, C_Lexique_plm_5F_lexique::kToken_requiredBy, SHIFT (70)
, END
// State S40 (index = 414)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (72)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (73)
, END
// State S41 (index = 419)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (74)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (124)
, END
// State S42 (index = 424)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (76)
, C_Lexique_plm_5F_lexique::kToken_at, REDUCE (128)
, END
// State S43 (index = 429)
, C_Lexique_plm_5F_lexique::kToken_priority, SHIFT (78)
, END
// State S44 (index = 432)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (79)
, END
// State S45 (index = 435)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (17)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (17)
, END
// State S46 (index = 478)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken__2D__3E_, SHIFT (80)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (160)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (160)
, END
// State S47 (index = 523)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (82)
, END
// State S48 (index = 526)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (82)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (82)
, END
// State S49 (index = 569)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (84)
, END
// State S50 (index = 572)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (85)
, END
// State S51 (index = 575)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (83)
, END
// State S52 (index = 578)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (84)
, END
// State S53 (index = 581)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (86)
, END
// State S54 (index = 584)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (87)
, END
// State S55 (index = 587)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (88)
, END
// State S56 (index = 590)
, C_Lexique_plm_5F_lexique::kToken_case, SHIFT (85)
, END
// State S57 (index = 593)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (91)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (57)
, END
// State S58 (index = 598)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (87)
, END
// State S59 (index = 601)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (109)
, END
// State S60 (index = 604)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (88)
, END
// State S61 (index = 607)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (89)
, END
// State S62 (index = 610)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (90)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (91)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, END
// State S63 (index = 619)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (63)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (106)
, END
// State S64 (index = 624)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (95)
, END
// State S65 (index = 627)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (65)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (172)
, END
// State S66 (index = 632)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (97)
, END
// State S67 (index = 635)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (67)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (162)
, END
// State S68 (index = 640)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (97)
, END
// State S69 (index = 643)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (152)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (101)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (152)
, END
// State S70 (index = 650)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (103)
, END
// State S71 (index = 653)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (104)
, END
// State S72 (index = 656)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (105)
, END
// State S73 (index = 659)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (106)
, END
// State S74 (index = 662)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (125)
, END
// State S75 (index = 665)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (107)
, END
// State S76 (index = 668)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (76)
, C_Lexique_plm_5F_lexique::kToken_at, REDUCE (128)
, END
// State S77 (index = 673)
, C_Lexique_plm_5F_lexique::kToken_at, SHIFT (109)
, END
// State S78 (index = 676)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (110)
, END
// State S79 (index = 679)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (113)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (114)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (118)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (119)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_select, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (121)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (122)
, END
// State S80 (index = 716)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (127)
, END
// State S81 (index = 719)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (18)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (18)
, END
// State S82 (index = 762)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (128)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (166)
, END
// State S83 (index = 769)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (151)
, END
// State S84 (index = 772)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (113)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (114)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (118)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (119)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_select, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (121)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (122)
, END
// State S85 (index = 809)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (131)
, END
// State S86 (index = 812)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (92)
, END
// State S87 (index = 815)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (133)
, C_Lexique_plm_5F_lexique::kToken_guard, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_service, SHIFT (19)
, END
// State S88 (index = 828)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S89 (index = 861)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (3)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (3)
, END
// State S90 (index = 904)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (168)
, END
// State S91 (index = 907)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (90)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (91)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, END
// State S92 (index = 916)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (90)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (91)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, END
// State S93 (index = 925)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (171)
, END
// State S94 (index = 928)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (107)
, END
// State S95 (index = 931)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (172)
, END
// State S96 (index = 934)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (173)
, END
// State S97 (index = 937)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (173)
, C_Lexique_plm_5F_lexique::kToken__3F__21_, SHIFT (174)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (175)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (156)
, END
// State S98 (index = 946)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (174)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (177)
, END
// State S99 (index = 951)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (163)
, END
// State S100 (index = 954)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (164)
, C_Lexique_plm_5F_lexique::kToken__2D__3E_, SHIFT (179)
, END
// State S101 (index = 959)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (152)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (101)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (152)
, END
// State S102 (index = 966)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (182)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (154)
, END
// State S103 (index = 971)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (97)
, END
// State S104 (index = 974)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (113)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (114)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (118)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (119)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_select, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (121)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (122)
, END
// State S105 (index = 1011)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (186)
, END
// State S106 (index = 1014)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (187)
, END
// State S107 (index = 1017)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S108 (index = 1050)
, C_Lexique_plm_5F_lexique::kToken_at, REDUCE (129)
, END
// State S109 (index = 1053)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (189)
, END
// State S110 (index = 1056)
, C_Lexique_plm_5F_lexique::kToken_stackSize, SHIFT (190)
, END
// State S111 (index = 1059)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (191)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__7C__3D_, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken__26__3D_, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken__5E__3D_, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken__2B__3D_, SHIFT (197)
, C_Lexique_plm_5F_lexique::kToken__2B__25__3D_, SHIFT (198)
, C_Lexique_plm_5F_lexique::kToken__2D__3D_, SHIFT (199)
, C_Lexique_plm_5F_lexique::kToken__2D__25__3D_, SHIFT (200)
, C_Lexique_plm_5F_lexique::kToken__2A__3D_, SHIFT (201)
, C_Lexique_plm_5F_lexique::kToken__2A__25__3D_, SHIFT (202)
, END
// State S112 (index = 1084)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (206)
, END
// State S113 (index = 1087)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (113)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (114)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (118)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (119)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_select, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (121)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (122)
, END
// State S114 (index = 1124)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S115 (index = 1157)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (209)
, END
// State S116 (index = 1160)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (210)
, END
// State S117 (index = 1163)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S118 (index = 1196)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S119 (index = 1229)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (213)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (233)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (233)
, END
// State S120 (index = 1264)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (215)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (250)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (250)
, END
// State S121 (index = 1271)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (266)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (266)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (266)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (217)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (266)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (266)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (266)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (266)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (266)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (266)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (266)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (266)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (266)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (266)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (266)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (266)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (266)
, END
// State S122 (index = 1306)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (219)
, END
// State S123 (index = 1309)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (113)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (114)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (118)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (119)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_select, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (121)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (122)
, END
// State S124 (index = 1346)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (221)
, END
// State S125 (index = 1349)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (74)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (74)
, END
// State S126 (index = 1386)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (59)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (59)
, END
// State S127 (index = 1399)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (161)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (161)
, END
// State S128 (index = 1442)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (166)
, C_Lexique_plm_5F_lexique::kToken_modeName, SHIFT (128)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (166)
, END
// State S129 (index = 1449)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (223)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (168)
, END
// State S130 (index = 1454)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (225)
, END
// State S131 (index = 1457)
, C_Lexique_plm_5F_lexique::kToken_case, SHIFT (226)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (89)
, END
// State S132 (index = 1462)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (228)
, END
// State S133 (index = 1465)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (133)
, C_Lexique_plm_5F_lexique::kToken_guard, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_service, SHIFT (19)
, END
// State S134 (index = 1478)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (133)
, C_Lexique_plm_5F_lexique::kToken_guard, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_service, SHIFT (19)
, END
// State S135 (index = 1491)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (133)
, C_Lexique_plm_5F_lexique::kToken_guard, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_service, SHIFT (19)
, END
// State S136 (index = 1504)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (133)
, C_Lexique_plm_5F_lexique::kToken_guard, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_service, SHIFT (19)
, END
// State S137 (index = 1517)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (233)
, END
// State S138 (index = 1520)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (47)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (47)
, END
// State S139 (index = 1657)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (214)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (234)
, END
// State S140 (index = 1662)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (235)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__3A__3A_, SHIFT (236)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (50)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (50)
, END
// State S141 (index = 1805)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (46)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (46)
, END
// State S142 (index = 1942)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S143 (index = 1975)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S144 (index = 2008)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S145 (index = 2041)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S146 (index = 2074)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S147 (index = 2107)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S148 (index = 2140)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S149 (index = 2173)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S150 (index = 2206)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (48)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (48)
, END
// State S151 (index = 2343)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (49)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (49)
, END
// State S152 (index = 2480)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (246)
, END
// State S153 (index = 2483)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (247)
, END
// State S154 (index = 2486)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (23)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (23)
, END
// State S155 (index = 2575)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_or, SHIFT (248)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (176)
, END
// State S156 (index = 2666)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_xor, SHIFT (250)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (178)
, END
// State S157 (index = 2759)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_and, SHIFT (252)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (180)
, END
// State S158 (index = 2854)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (254)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (182)
, END
// State S159 (index = 2951)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (256)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (184)
, END
// State S160 (index = 3050)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (258)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (186)
, END
// State S161 (index = 3151)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, SHIFT (260)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, SHIFT (261)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (188)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (188)
, END
// State S162 (index = 3256)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, SHIFT (263)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, SHIFT (264)
, C_Lexique_plm_5F_lexique::kToken__3C_, SHIFT (265)
, C_Lexique_plm_5F_lexique::kToken__3E_, SHIFT (266)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (191)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (191)
, END
// State S163 (index = 3369)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (268)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (269)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (196)
, END
// State S164 (index = 3486)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (271)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, SHIFT (272)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (273)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (274)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (199)
, END
// State S165 (index = 3611)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (276)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, SHIFT (277)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (278)
, C_Lexique_plm_5F_lexique::kToken__21__25_, SHIFT (279)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (280)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, SHIFT (281)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (204)
, END
// State S166 (index = 3748)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (35)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (35)
, END
// State S167 (index = 3885)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (283)
, END
// State S168 (index = 3888)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (284)
, END
// State S169 (index = 3891)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (105)
, END
// State S170 (index = 3894)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (104)
, END
// State S171 (index = 3897)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (4)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (4)
, END
// State S172 (index = 3940)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (5)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (5)
, END
// State S173 (index = 3983)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (285)
, END
// State S174 (index = 3986)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (286)
, END
// State S175 (index = 3989)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (287)
, END
// State S176 (index = 3992)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (288)
, END
// State S177 (index = 3995)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (289)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (290)
, END
// State S178 (index = 4000)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (292)
, END
// State S179 (index = 4003)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (293)
, END
// State S180 (index = 4006)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (294)
, END
// State S181 (index = 4009)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (153)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (153)
, END
// State S182 (index = 4014)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (182)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (154)
, END
// State S183 (index = 4019)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (97)
, END
// State S184 (index = 4022)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (148)
, C_Lexique_plm_5F_lexique::kToken__2C_, SHIFT (297)
, END
// State S185 (index = 4027)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (299)
, END
// State S186 (index = 4030)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (113)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (114)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (118)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (119)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_select, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (121)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (122)
, END
// State S187 (index = 4067)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (11)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (11)
, END
// State S188 (index = 4110)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (7)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (7)
, END
// State S189 (index = 4153)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (301)
, END
// State S190 (index = 4158)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (303)
, END
// State S191 (index = 4161)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S192 (index = 4194)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (305)
, END
// State S193 (index = 4197)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (306)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (307)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (256)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (308)
, END
// State S194 (index = 4206)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (224)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (224)
, END
// State S195 (index = 4239)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (225)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (225)
, END
// State S196 (index = 4272)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (226)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (226)
, END
// State S197 (index = 4305)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (227)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (227)
, END
// State S198 (index = 4338)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (228)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (228)
, END
// State S199 (index = 4371)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (229)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (229)
, END
// State S200 (index = 4404)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (230)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (230)
, END
// State S201 (index = 4437)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (231)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (231)
, END
// State S202 (index = 4470)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (232)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (232)
, END
// State S203 (index = 4503)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S204 (index = 4536)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (78)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (78)
, END
// State S205 (index = 4575)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (67)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (67)
, END
// State S206 (index = 4608)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (311)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (220)
, END
// State S207 (index = 4613)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (219)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (219)
, END
// State S208 (index = 4626)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (66)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (66)
, END
// State S209 (index = 4663)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (313)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (222)
, END
// State S210 (index = 4668)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (315)
, END
// State S211 (index = 4671)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (58)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (58)
, END
// State S212 (index = 4708)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (65)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (65)
, END
// State S213 (index = 4745)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (234)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (234)
, END
// State S214 (index = 4778)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S215 (index = 4811)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (251)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (251)
, END
// State S216 (index = 4816)
, C_Lexique_plm_5F_lexique::kToken_when, SHIFT (318)
, C_Lexique_plm_5F_lexique::kToken_on, SHIFT (319)
, END
// State S217 (index = 4821)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (267)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (267)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (267)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (267)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (267)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (267)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (267)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (267)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (267)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (267)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (267)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (267)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (267)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (267)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (267)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (267)
, END
// State S218 (index = 4854)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S219 (index = 4887)
, C_Lexique_plm_5F_lexique::kToken_in, SHIFT (323)
, END
// State S220 (index = 4890)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (218)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (218)
, END
// State S221 (index = 4903)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (12)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (12)
, END
// State S222 (index = 4946)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (167)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (167)
, END
// State S223 (index = 4951)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (223)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (168)
, END
// State S224 (index = 4956)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (97)
, END
// State S225 (index = 4959)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (14)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (14)
, END
// State S226 (index = 5006)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (326)
, END
// State S227 (index = 5009)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (327)
, END
// State S228 (index = 5012)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (328)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (101)
, END
// State S229 (index = 5017)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (99)
, END
// State S230 (index = 5020)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (96)
, END
// State S231 (index = 5023)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (97)
, END
// State S232 (index = 5026)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (98)
, END
// State S233 (index = 5029)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (2)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (2)
, END
// State S234 (index = 5072)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (330)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (211)
, END
// State S235 (index = 5077)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (332)
, END
// State S236 (index = 5080)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (333)
, END
// State S237 (index = 5083)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (54)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (54)
, END
// State S238 (index = 5220)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (334)
, END
// State S239 (index = 5223)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (38)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (38)
, END
// State S240 (index = 5360)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (39)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (39)
, END
// State S241 (index = 5497)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (36)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (36)
, END
// State S242 (index = 5634)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (37)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (37)
, END
// State S243 (index = 5771)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (335)
, END
// State S244 (index = 5774)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (336)
, END
// State S245 (index = 5777)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (337)
, END
// State S246 (index = 5780)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (338)
, END
// State S247 (index = 5783)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (339)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (112)
, END
// State S248 (index = 5796)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S249 (index = 5829)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (24)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (24)
, END
// State S250 (index = 5918)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S251 (index = 5951)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (25)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (25)
, END
// State S252 (index = 6042)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S253 (index = 6075)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (26)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (26)
, END
// State S254 (index = 6168)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S255 (index = 6201)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (27)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (27)
, END
// State S256 (index = 6296)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S257 (index = 6329)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (28)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (28)
, END
// State S258 (index = 6426)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S259 (index = 6459)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (29)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (29)
, END
// State S260 (index = 6558)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S261 (index = 6591)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S262 (index = 6624)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (30)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (30)
, END
// State S263 (index = 6725)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S264 (index = 6758)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S265 (index = 6791)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S266 (index = 6824)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S267 (index = 6857)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (31)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (31)
, END
// State S268 (index = 6962)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S269 (index = 6995)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S270 (index = 7028)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (32)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (32)
, END
// State S271 (index = 7141)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S272 (index = 7174)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S273 (index = 7207)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S274 (index = 7240)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S275 (index = 7273)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (33)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (33)
, END
// State S276 (index = 7390)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S277 (index = 7423)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S278 (index = 7456)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S279 (index = 7489)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S280 (index = 7522)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S281 (index = 7555)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S282 (index = 7588)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (34)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (34)
, END
// State S283 (index = 7713)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (365)
, END
// State S284 (index = 7716)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (366)
, END
// State S285 (index = 7719)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (367)
, END
// State S286 (index = 7722)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (368)
, END
// State S287 (index = 7725)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (369)
, END
// State S288 (index = 7728)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken__2D__3E_, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (16)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (16)
, END
// State S289 (index = 7779)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (192)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (193)
, END
// State S290 (index = 7784)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (370)
, END
// State S291 (index = 7787)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (175)
, END
// State S292 (index = 7790)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (113)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (114)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (118)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (119)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_select, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (121)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (122)
, END
// State S293 (index = 7827)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (165)
, END
// State S294 (index = 7830)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (113)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (114)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (118)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (119)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_select, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (121)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (122)
, END
// State S295 (index = 7867)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (155)
, END
// State S296 (index = 7870)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken__2D__3E_, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (15)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (15)
, END
// State S297 (index = 7917)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (373)
, END
// State S298 (index = 7920)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (147)
, END
// State S299 (index = 7923)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (13)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (13)
, END
// State S300 (index = 7966)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (374)
, END
// State S301 (index = 7969)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (76)
, C_Lexique_plm_5F_lexique::kToken_at, REDUCE (128)
, END
// State S302 (index = 7974)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (376)
, END
// State S303 (index = 7977)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (377)
, END
// State S304 (index = 7980)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (63)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (63)
, END
// State S305 (index = 8017)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (193)
, END
// State S306 (index = 8020)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S307 (index = 8053)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (380)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (381)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (382)
, END
// State S308 (index = 8060)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (384)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (385)
, END
// State S309 (index = 8065)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (386)
, END
// State S310 (index = 8068)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (68)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (68)
, END
// State S311 (index = 8105)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (221)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (61)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (61)
, END
// State S312 (index = 8144)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (387)
, END
// State S313 (index = 8147)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (223)
, END
// State S314 (index = 8150)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (388)
, END
// State S315 (index = 8153)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (389)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (390)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__7C__3D_, SHIFT (194)
, C_Lexique_plm_5F_lexique::kToken__26__3D_, SHIFT (195)
, C_Lexique_plm_5F_lexique::kToken__5E__3D_, SHIFT (196)
, C_Lexique_plm_5F_lexique::kToken__2B__3D_, SHIFT (197)
, C_Lexique_plm_5F_lexique::kToken__2B__25__3D_, SHIFT (198)
, C_Lexique_plm_5F_lexique::kToken__2D__3D_, SHIFT (199)
, C_Lexique_plm_5F_lexique::kToken__2D__25__3D_, SHIFT (200)
, C_Lexique_plm_5F_lexique::kToken__2A__3D_, SHIFT (201)
, C_Lexique_plm_5F_lexique::kToken__2A__25__3D_, SHIFT (202)
, END
// State S316 (index = 8178)
, C_Lexique_plm_5F_lexique::kToken_then, SHIFT (393)
, END
// State S317 (index = 8181)
, C_Lexique_plm_5F_lexique::kToken_end, SHIFT (394)
, END
// State S318 (index = 8184)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S319 (index = 8217)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (396)
, END
// State S320 (index = 8220)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (397)
, END
// State S321 (index = 8223)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (72)
, END
// State S322 (index = 8226)
, C_Lexique_plm_5F_lexique::kToken_do, SHIFT (398)
, END
// State S323 (index = 8229)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S324 (index = 8262)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (169)
, END
// State S325 (index = 8265)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (170)
, C_Lexique_plm_5F_lexique::kToken__2D__3E_, SHIFT (400)
, END
// State S326 (index = 8270)
, C_Lexique_plm_5F_lexique::kToken_case, SHIFT (226)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (89)
, END
// State S327 (index = 8275)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (1)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (1)
, END
// State S328 (index = 8318)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (100)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (133)
, C_Lexique_plm_5F_lexique::kToken_guard, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_service, SHIFT (19)
, END
// State S329 (index = 8333)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (404)
, END
// State S330 (index = 8336)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S331 (index = 8369)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (406)
, END
// State S332 (index = 8372)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (407)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (215)
, END
// State S333 (index = 8513)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (410)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (56)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (56)
, END
// State S334 (index = 8652)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (40)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (40)
, END
// State S335 (index = 8789)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (411)
, END
// State S336 (index = 8792)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (412)
, END
// State S337 (index = 8795)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (413)
, END
// State S338 (index = 8798)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (193)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (52)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (52)
, END
// State S339 (index = 8937)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (113)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (113)
, END
// State S340 (index = 8948)
, C_Lexique_plm_5F_lexique::kToken_guard, SHIFT (415)
, C_Lexique_plm_5F_lexique::kToken_section, SHIFT (416)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (417)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (418)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (419)
, END
// State S341 (index = 8959)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_or, SHIFT (248)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (176)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (176)
, END
// State S342 (index = 9050)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_xor, SHIFT (250)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (178)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (178)
, END
// State S343 (index = 9143)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_and, SHIFT (252)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (180)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (180)
, END
// State S344 (index = 9238)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__7C_, SHIFT (254)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (182)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (182)
, END
// State S345 (index = 9335)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__5E_, SHIFT (256)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (184)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (184)
, END
// State S346 (index = 9434)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__26_, SHIFT (258)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (186)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (186)
, END
// State S347 (index = 9535)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (189)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (189)
, END
// State S348 (index = 9636)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (190)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (190)
, END
// State S349 (index = 9737)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (192)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (192)
, END
// State S350 (index = 9842)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (193)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (193)
, END
// State S351 (index = 9947)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (194)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (194)
, END
// State S352 (index = 10052)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (195)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (195)
, END
// State S353 (index = 10157)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (268)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (269)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (196)
, END
// State S354 (index = 10274)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, SHIFT (268)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, SHIFT (269)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (196)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (196)
, END
// State S355 (index = 10391)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (271)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, SHIFT (272)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (273)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (274)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (199)
, END
// State S356 (index = 10516)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (271)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, SHIFT (272)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (273)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (274)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (199)
, END
// State S357 (index = 10641)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (271)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, SHIFT (272)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (273)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (274)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (199)
, END
// State S358 (index = 10766)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__2B_, SHIFT (271)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, SHIFT (272)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (273)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (274)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (199)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (199)
, END
// State S359 (index = 10891)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (276)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, SHIFT (277)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (278)
, C_Lexique_plm_5F_lexique::kToken__21__25_, SHIFT (279)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (280)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, SHIFT (281)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (204)
, END
// State S360 (index = 11028)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (276)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, SHIFT (277)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (278)
, C_Lexique_plm_5F_lexique::kToken__21__25_, SHIFT (279)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (280)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, SHIFT (281)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (204)
, END
// State S361 (index = 11165)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (276)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, SHIFT (277)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (278)
, C_Lexique_plm_5F_lexique::kToken__21__25_, SHIFT (279)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (280)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, SHIFT (281)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (204)
, END
// State S362 (index = 11302)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (276)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, SHIFT (277)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (278)
, C_Lexique_plm_5F_lexique::kToken__21__25_, SHIFT (279)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (280)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, SHIFT (281)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (204)
, END
// State S363 (index = 11439)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (276)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, SHIFT (277)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (278)
, C_Lexique_plm_5F_lexique::kToken__21__25_, SHIFT (279)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (280)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, SHIFT (281)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (204)
, END
// State S364 (index = 11576)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__2A_, SHIFT (276)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, SHIFT (277)
, C_Lexique_plm_5F_lexique::kToken__25_, SHIFT (278)
, C_Lexique_plm_5F_lexique::kToken__21__25_, SHIFT (279)
, C_Lexique_plm_5F_lexique::kToken__2F_, SHIFT (280)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, SHIFT (281)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (204)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (204)
, END
// State S365 (index = 11713)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (45)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (45)
, END
// State S366 (index = 11850)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S367 (index = 11883)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (173)
, C_Lexique_plm_5F_lexique::kToken__3F__21_, SHIFT (174)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (175)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (156)
, END
// State S368 (index = 11892)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (173)
, C_Lexique_plm_5F_lexique::kToken__3F__21_, SHIFT (174)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (175)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (156)
, END
// State S369 (index = 11901)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (173)
, C_Lexique_plm_5F_lexique::kToken__3F__21_, SHIFT (174)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (175)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (156)
, END
// State S370 (index = 11910)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (443)
, END
// State S371 (index = 11913)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (444)
, END
// State S372 (index = 11916)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (445)
, END
// State S373 (index = 11919)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (97)
, END
// State S374 (index = 11922)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (10)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (10)
, END
// State S375 (index = 11965)
, C_Lexique_plm_5F_lexique::kToken_at, SHIFT (447)
, END
// State S376 (index = 11968)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (448)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (130)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (130)
, END
// State S377 (index = 12013)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (138)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (450)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (451)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (452)
, END
// State S378 (index = 12022)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (76)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (76)
, END
// State S379 (index = 12061)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (306)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (307)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (256)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (308)
, END
// State S380 (index = 12070)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (306)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (307)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (256)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (308)
, END
// State S381 (index = 12079)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (262)
, END
// State S382 (index = 12082)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (263)
, END
// State S383 (index = 12085)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (456)
, END
// State S384 (index = 12088)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (306)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (307)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (256)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (308)
, END
// State S385 (index = 12097)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (458)
, END
// State S386 (index = 12100)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (79)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (79)
, END
// State S387 (index = 12237)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S388 (index = 12270)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S389 (index = 12303)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S390 (index = 12336)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (462)
, END
// State S391 (index = 12339)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S392 (index = 12372)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (75)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (75)
, END
// State S393 (index = 12411)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (113)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (114)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (118)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (119)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_select, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (121)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (122)
, END
// State S394 (index = 12448)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (465)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (235)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (235)
, END
// State S395 (index = 12487)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (247)
, C_Lexique_plm_5F_lexique::kToken_on, SHIFT (467)
, END
// State S396 (index = 12492)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (469)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (193)
, END
// State S397 (index = 12497)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (113)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (114)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (118)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (119)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_select, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (121)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (122)
, END
// State S398 (index = 12534)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (113)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (114)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (118)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (119)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_select, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (121)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (122)
, END
// State S399 (index = 12571)
, C_Lexique_plm_5F_lexique::kToken_do, SHIFT (473)
, END
// State S400 (index = 12574)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (474)
, END
// State S401 (index = 12577)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (475)
, END
// State S402 (index = 12580)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (90)
, END
// State S403 (index = 12583)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (95)
, END
// State S404 (index = 12586)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S405 (index = 12619)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (330)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (211)
, END
// State S406 (index = 12624)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (44)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (44)
, END
// State S407 (index = 12761)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (478)
, END
// State S408 (index = 12764)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (55)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (55)
, END
// State S409 (index = 12901)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (51)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (51)
, END
// State S410 (index = 13038)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S411 (index = 13071)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (41)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (41)
, END
// State S412 (index = 13208)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (42)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (42)
, END
// State S413 (index = 13345)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (43)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (43)
, END
// State S414 (index = 13482)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (53)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (53)
, END
// State S415 (index = 13619)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (480)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (120)
, END
// State S416 (index = 13624)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (482)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (122)
, END
// State S417 (index = 13629)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (484)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (485)
, END
// State S418 (index = 13634)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (486)
, END
// State S419 (index = 13637)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (487)
, END
// State S420 (index = 13640)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (339)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (112)
, END
// State S421 (index = 13655)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (177)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (177)
, END
// State S422 (index = 13744)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (179)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (179)
, END
// State S423 (index = 13835)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (181)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (181)
, END
// State S424 (index = 13928)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (183)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (183)
, END
// State S425 (index = 14023)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (185)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (185)
, END
// State S426 (index = 14120)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (187)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (187)
, END
// State S427 (index = 14219)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (197)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (197)
, END
// State S428 (index = 14332)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (198)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (198)
, END
// State S429 (index = 14445)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (200)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (200)
, END
// State S430 (index = 14562)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (201)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (201)
, END
// State S431 (index = 14679)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (202)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (202)
, END
// State S432 (index = 14796)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (203)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (203)
, END
// State S433 (index = 14913)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (205)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (205)
, END
// State S434 (index = 15038)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (206)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (206)
, END
// State S435 (index = 15163)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (207)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (207)
, END
// State S436 (index = 15288)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (208)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (208)
, END
// State S437 (index = 15413)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (209)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (209)
, END
// State S438 (index = 15538)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (210)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (210)
, END
// State S439 (index = 15663)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (102)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (90)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (91)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, END
// State S440 (index = 15672)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (157)
, END
// State S441 (index = 15675)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (158)
, END
// State S442 (index = 15678)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (159)
, END
// State S443 (index = 15681)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (390)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (193)
, END
// State S444 (index = 15686)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (21)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (21)
, END
// State S445 (index = 15733)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (19)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (19)
, END
// State S446 (index = 15776)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (148)
, C_Lexique_plm_5F_lexique::kToken__2C_, SHIFT (297)
, END
// State S447 (index = 15781)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (492)
, END
// State S448 (index = 15784)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (493)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (494)
, END
// State S449 (index = 15789)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (8)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (8)
, END
// State S450 (index = 15832)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (496)
, END
// State S451 (index = 15835)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (497)
, END
// State S452 (index = 15838)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (498)
, END
// State S453 (index = 15841)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (499)
, END
// State S454 (index = 15844)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (257)
, END
// State S455 (index = 15847)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (260)
, END
// State S456 (index = 15850)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (500)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (264)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (264)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (264)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (264)
, END
// State S457 (index = 15861)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (258)
, END
// State S458 (index = 15864)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (502)
, END
// State S459 (index = 15867)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (60)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (60)
, END
// State S460 (index = 15904)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (62)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (62)
, END
// State S461 (index = 15941)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (64)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (64)
, END
// State S462 (index = 15978)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (193)
, END
// State S463 (index = 15981)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (69)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (69)
, END
// State S464 (index = 16018)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (237)
, C_Lexique_plm_5F_lexique::kToken_else, SHIFT (504)
, C_Lexique_plm_5F_lexique::kToken_elsif, SHIFT (505)
, END
// State S465 (index = 16025)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (236)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (236)
, END
// State S466 (index = 16062)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (70)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (70)
, END
// State S467 (index = 16099)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (507)
, END
// State S468 (index = 16102)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (244)
, END
// State S469 (index = 16105)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (508)
, END
// State S470 (index = 16108)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (245)
, END
// State S471 (index = 16111)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (252)
, C_Lexique_plm_5F_lexique::kToken_when, SHIFT (318)
, C_Lexique_plm_5F_lexique::kToken_on, SHIFT (319)
, END
// State S472 (index = 16118)
, C_Lexique_plm_5F_lexique::kToken_end, SHIFT (511)
, END
// State S473 (index = 16121)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (113)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (114)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (118)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (119)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_select, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (121)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (122)
, END
// State S474 (index = 16158)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (171)
, END
// State S475 (index = 16161)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (113)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (114)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (118)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (119)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_select, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (121)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (122)
, END
// State S476 (index = 16198)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (93)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (132)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (133)
, C_Lexique_plm_5F_lexique::kToken_guard, SHIFT (8)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (10)
, C_Lexique_plm_5F_lexique::kToken_service, SHIFT (19)
, END
// State S477 (index = 16211)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (212)
, END
// State S478 (index = 16214)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (407)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (215)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (215)
, END
// State S479 (index = 16353)
, C_Lexique_plm_5F_lexique::kToken__29_, SHIFT (516)
, END
// State S480 (index = 16356)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (517)
, END
// State S481 (index = 16359)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (518)
, END
// State S482 (index = 16362)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (519)
, END
// State S483 (index = 16365)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (520)
, END
// State S484 (index = 16368)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (521)
, END
// State S485 (index = 16371)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (116)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (116)
, END
// State S486 (index = 16386)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (118)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (118)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (118)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (118)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (118)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (118)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (118)
, END
// State S487 (index = 16401)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (522)
, END
// State S488 (index = 16404)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (523)
, END
// State S489 (index = 16407)
, C_Lexique_plm_5F_lexique::kToken_guard, SHIFT (415)
, C_Lexique_plm_5F_lexique::kToken_section, SHIFT (416)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (417)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (418)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (419)
, END
// State S490 (index = 16418)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (103)
, END
// State S491 (index = 16421)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (149)
, END
// State S492 (index = 16424)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (126)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (301)
, END
// State S493 (index = 16429)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (136)
, C_Lexique_plm_5F_lexique::kToken__5B_, SHIFT (526)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (136)
, END
// State S494 (index = 16436)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (134)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (134)
, END
// State S495 (index = 16441)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (132)
, C_Lexique_plm_5F_lexique::kToken__2C_, SHIFT (528)
, END
// State S496 (index = 16446)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (530)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (142)
, END
// State S497 (index = 16451)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (97)
, END
// State S498 (index = 16454)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (533)
, END
// State S499 (index = 16457)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (9)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (9)
, END
// State S500 (index = 16500)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (265)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (265)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (265)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (265)
, END
// State S501 (index = 16509)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (306)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (307)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (256)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (308)
, END
// State S502 (index = 16518)
, C_Lexique_plm_5F_lexique::kToken__21_, SHIFT (306)
, C_Lexique_plm_5F_lexique::kToken__3F_, SHIFT (307)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (256)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, SHIFT (308)
, END
// State S503 (index = 16527)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (77)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (77)
, END
// State S504 (index = 16566)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (536)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (240)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (240)
, END
// State S505 (index = 16595)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (538)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (242)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (242)
, END
// State S506 (index = 16630)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (71)
, END
// State S507 (index = 16633)
, C_Lexique_plm_5F_lexique::kToken__2E_, SHIFT (540)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (193)
, END
// State S508 (index = 16638)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (193)
, END
// State S509 (index = 16641)
, C_Lexique_plm_5F_lexique::kToken__3A_, SHIFT (543)
, END
// State S510 (index = 16644)
, C_Lexique_plm_5F_lexique::kToken_end, SHIFT (544)
, END
// State S511 (index = 16647)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (268)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (268)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (545)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (268)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (268)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (268)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (268)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (268)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (268)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (268)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (268)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (268)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (268)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (268)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (268)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (268)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (268)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (268)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (268)
, END
// State S512 (index = 16686)
, C_Lexique_plm_5F_lexique::kToken_end, SHIFT (547)
, END
// State S513 (index = 16689)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (548)
, END
// State S514 (index = 16692)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (94)
, END
// State S515 (index = 16695)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (216)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (216)
, END
// State S516 (index = 16832)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__21_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3F_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_or, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_xor, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_and, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__7C_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__5E_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__26_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3D__3D_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__21__3D_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3C__3D_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3E__3D_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3C_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3E_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3C__3C_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__3E__3E_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__2B_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__2B__25_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__2A_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__2A__25_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__25_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__21__25_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__2F_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__21__2F_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_then, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken__21__3F_, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_do, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (57)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (57)
, END
// State S517 (index = 16969)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (121)
, END
// State S518 (index = 16972)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (114)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (114)
, END
// State S519 (index = 16987)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (123)
, END
// State S520 (index = 16990)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (115)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (115)
, END
// State S521 (index = 17005)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (549)
, END
// State S522 (index = 17008)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (550)
, END
// State S523 (index = 17011)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (6)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (6)
, END
// State S524 (index = 17054)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (110)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (339)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (112)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (112)
, END
// State S525 (index = 17069)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (127)
, END
// State S526 (index = 17072)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (552)
, END
// State S527 (index = 17075)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (135)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (135)
, END
// State S528 (index = 17080)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (493)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (494)
, END
// State S529 (index = 17085)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (554)
, END
// State S530 (index = 17088)
, C_Lexique_plm_5F_lexique::kToken__3D_, REDUCE (143)
, END
// State S531 (index = 17091)
, C_Lexique_plm_5F_lexique::kToken__3D_, SHIFT (555)
, END
// State S532 (index = 17094)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (144)
, C_Lexique_plm_5F_lexique::kToken__2D__3E_, SHIFT (556)
, END
// State S533 (index = 17099)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (113)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (114)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (118)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (119)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_select, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (121)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (122)
, END
// State S534 (index = 17136)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (261)
, END
// State S535 (index = 17139)
, C_Lexique_plm_5F_lexique::kToken__29_, REDUCE (259)
, END
// State S536 (index = 17142)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (241)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (241)
, END
// State S537 (index = 17169)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (113)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (114)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (118)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (119)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_select, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (121)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (122)
, END
// State S538 (index = 17206)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_typeName, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_integer, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__28_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__2D_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken__7E_, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_not, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_convert, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_extend, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_truncate, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_true, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_false, REDUCE (243)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (243)
, END
// State S539 (index = 17239)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S540 (index = 17272)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (561)
, END
// State S541 (index = 17275)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (248)
, END
// State S542 (index = 17278)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (246)
, END
// State S543 (index = 17281)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (113)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (114)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (118)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (119)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_select, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (121)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (122)
, END
// State S544 (index = 17318)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken_attribute, SHIFT (563)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (254)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (254)
, END
// State S545 (index = 17357)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (269)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (269)
, END
// State S546 (index = 17394)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (80)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (80)
, END
// State S547 (index = 17431)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (81)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (81)
, END
// State S548 (index = 17468)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (20)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (20)
, END
// State S549 (index = 17515)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (117)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (117)
, END
// State S550 (index = 17530)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (119)
, C_Lexique_plm_5F_lexique::kToken_attribute, REDUCE (119)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (119)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (119)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (119)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (119)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (119)
, END
// State S551 (index = 17545)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (111)
, END
// State S552 (index = 17548)
, C_Lexique_plm_5F_lexique::kToken__5D_, SHIFT (565)
, END
// State S553 (index = 17551)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (132)
, C_Lexique_plm_5F_lexique::kToken__2C_, SHIFT (528)
, END
// State S554 (index = 17556)
, C_Lexique_plm_5F_lexique::kToken_import, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_enum, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_struct, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_newType, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_extension, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_opaqueType, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_guard, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_section, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_func, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_init, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_register, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_task, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_boot, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_required, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_extern, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_service, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_target, REDUCE (131)
, C_Lexique_plm_5F_lexique::kToken_, REDUCE (131)
, END
// State S555 (index = 17599)
, C_Lexique_plm_5F_lexique::kToken_literal_5F_string, SHIFT (138)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (139)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (140)
, C_Lexique_plm_5F_lexique::kToken_integer, SHIFT (141)
, C_Lexique_plm_5F_lexique::kToken__2E_, REDUCE (213)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (142)
, C_Lexique_plm_5F_lexique::kToken__2D_, SHIFT (143)
, C_Lexique_plm_5F_lexique::kToken__2D__25_, SHIFT (144)
, C_Lexique_plm_5F_lexique::kToken__7E_, SHIFT (145)
, C_Lexique_plm_5F_lexique::kToken_not, SHIFT (146)
, C_Lexique_plm_5F_lexique::kToken_convert, SHIFT (147)
, C_Lexique_plm_5F_lexique::kToken_extend, SHIFT (148)
, C_Lexique_plm_5F_lexique::kToken_truncate, SHIFT (149)
, C_Lexique_plm_5F_lexique::kToken_true, SHIFT (150)
, C_Lexique_plm_5F_lexique::kToken_false, SHIFT (151)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (152)
, END
// State S556 (index = 17632)
, C_Lexique_plm_5F_lexique::kToken_typeName, SHIFT (568)
, END
// State S557 (index = 17635)
, C_Lexique_plm_5F_lexique::kToken__7B_, SHIFT (569)
, END
// State S558 (index = 17638)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (570)
, END
// State S559 (index = 17641)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (238)
, END
// State S560 (index = 17644)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (239)
, END
// State S561 (index = 17647)
, C_Lexique_plm_5F_lexique::kToken__28_, SHIFT (193)
, END
// State S562 (index = 17650)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (252)
, C_Lexique_plm_5F_lexique::kToken_when, SHIFT (318)
, C_Lexique_plm_5F_lexique::kToken_on, SHIFT (319)
, END
// State S563 (index = 17657)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (255)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (255)
, END
// State S564 (index = 17694)
, C_Lexique_plm_5F_lexique::kToken_identifier, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_var, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken__3B_, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_panic, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_let, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_self, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_check, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_assert, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_if, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_select, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_while, REDUCE (73)
, C_Lexique_plm_5F_lexique::kToken_for, REDUCE (73)
, END
// State S565 (index = 17731)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (137)
, C_Lexique_plm_5F_lexique::kToken__2C_, REDUCE (137)
, END
// State S566 (index = 17736)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (133)
, END
// State S567 (index = 17739)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (138)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (450)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (451)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (452)
, END
// State S568 (index = 17748)
, C_Lexique_plm_5F_lexique::kToken__7B_, REDUCE (145)
, END
// State S569 (index = 17751)
, C_Lexique_plm_5F_lexique::kToken_identifier, SHIFT (111)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (112)
, C_Lexique_plm_5F_lexique::kToken__3B_, SHIFT (113)
, C_Lexique_plm_5F_lexique::kToken_panic, SHIFT (114)
, C_Lexique_plm_5F_lexique::kToken_let, SHIFT (115)
, C_Lexique_plm_5F_lexique::kToken_self, SHIFT (116)
, C_Lexique_plm_5F_lexique::kToken_check, SHIFT (117)
, C_Lexique_plm_5F_lexique::kToken_assert, SHIFT (118)
, C_Lexique_plm_5F_lexique::kToken_if, SHIFT (119)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_when, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_on, REDUCE (217)
, C_Lexique_plm_5F_lexique::kToken_select, SHIFT (120)
, C_Lexique_plm_5F_lexique::kToken_while, SHIFT (121)
, C_Lexique_plm_5F_lexique::kToken_for, SHIFT (122)
, END
// State S570 (index = 17788)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (138)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (450)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (451)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (452)
, END
// State S571 (index = 17797)
, C_Lexique_plm_5F_lexique::kToken__3A_, REDUCE (249)
, END
// State S572 (index = 17800)
, C_Lexique_plm_5F_lexique::kToken_end, REDUCE (253)
, END
// State S573 (index = 17803)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (139)
, END
// State S574 (index = 17806)
, C_Lexique_plm_5F_lexique::kToken__7D_, SHIFT (576)
, END
// State S575 (index = 17809)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (141)
, END
// State S576 (index = 17812)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (138)
, C_Lexique_plm_5F_lexique::kToken_var, SHIFT (450)
, C_Lexique_plm_5F_lexique::kToken_func, SHIFT (451)
, C_Lexique_plm_5F_lexique::kToken_init, SHIFT (452)
, END
// State S577 (index = 17821)
, C_Lexique_plm_5F_lexique::kToken__7D_, REDUCE (140)
, END} ;

static const uint32_t gActionTableIndex_plm_grammar [578] = {
  0  // S0
, 43  // S1
, 46  // S2
, 49  // S3
, 52  // S4
, 55  // S5
, 58  // S6
, 61  // S7
, 64  // S8
, 67  // S9
, 70  // S10
, 73  // S11
, 76  // S12
, 79  // S13
, 82  // S14
, 85  // S15
, 88  // S16
, 91  // S17
, 94  // S18
, 97  // S19
, 100  // S20
, 103  // S21
, 106  // S22
, 149  // S23
, 192  // S24
, 197  // S25
, 240  // S26
, 283  // S27
, 326  // S28
, 329  // S29
, 372  // S30
, 375  // S31
, 380  // S32
, 385  // S33
, 388  // S34
, 391  // S35
, 396  // S36
, 401  // S37
, 406  // S38
, 409  // S39
, 414  // S40
, 419  // S41
, 424  // S42
, 429  // S43
, 432  // S44
, 435  // S45
, 478  // S46
, 523  // S47
, 526  // S48
, 569  // S49
, 572  // S50
, 575  // S51
, 578  // S52
, 581  // S53
, 584  // S54
, 587  // S55
, 590  // S56
, 593  // S57
, 598  // S58
, 601  // S59
, 604  // S60
, 607  // S61
, 610  // S62
, 619  // S63
, 624  // S64
, 627  // S65
, 632  // S66
, 635  // S67
, 640  // S68
, 643  // S69
, 650  // S70
, 653  // S71
, 656  // S72
, 659  // S73
, 662  // S74
, 665  // S75
, 668  // S76
, 673  // S77
, 676  // S78
, 679  // S79
, 716  // S80
, 719  // S81
, 762  // S82
, 769  // S83
, 772  // S84
, 809  // S85
, 812  // S86
, 815  // S87
, 828  // S88
, 861  // S89
, 904  // S90
, 907  // S91
, 916  // S92
, 925  // S93
, 928  // S94
, 931  // S95
, 934  // S96
, 937  // S97
, 946  // S98
, 951  // S99
, 954  // S100
, 959  // S101
, 966  // S102
, 971  // S103
, 974  // S104
, 1011  // S105
, 1014  // S106
, 1017  // S107
, 1050  // S108
, 1053  // S109
, 1056  // S110
, 1059  // S111
, 1084  // S112
, 1087  // S113
, 1124  // S114
, 1157  // S115
, 1160  // S116
, 1163  // S117
, 1196  // S118
, 1229  // S119
, 1264  // S120
, 1271  // S121
, 1306  // S122
, 1309  // S123
, 1346  // S124
, 1349  // S125
, 1386  // S126
, 1399  // S127
, 1442  // S128
, 1449  // S129
, 1454  // S130
, 1457  // S131
, 1462  // S132
, 1465  // S133
, 1478  // S134
, 1491  // S135
, 1504  // S136
, 1517  // S137
, 1520  // S138
, 1657  // S139
, 1662  // S140
, 1805  // S141
, 1942  // S142
, 1975  // S143
, 2008  // S144
, 2041  // S145
, 2074  // S146
, 2107  // S147
, 2140  // S148
, 2173  // S149
, 2206  // S150
, 2343  // S151
, 2480  // S152
, 2483  // S153
, 2486  // S154
, 2575  // S155
, 2666  // S156
, 2759  // S157
, 2854  // S158
, 2951  // S159
, 3050  // S160
, 3151  // S161
, 3256  // S162
, 3369  // S163
, 3486  // S164
, 3611  // S165
, 3748  // S166
, 3885  // S167
, 3888  // S168
, 3891  // S169
, 3894  // S170
, 3897  // S171
, 3940  // S172
, 3983  // S173
, 3986  // S174
, 3989  // S175
, 3992  // S176
, 3995  // S177
, 4000  // S178
, 4003  // S179
, 4006  // S180
, 4009  // S181
, 4014  // S182
, 4019  // S183
, 4022  // S184
, 4027  // S185
, 4030  // S186
, 4067  // S187
, 4110  // S188
, 4153  // S189
, 4158  // S190
, 4161  // S191
, 4194  // S192
, 4197  // S193
, 4206  // S194
, 4239  // S195
, 4272  // S196
, 4305  // S197
, 4338  // S198
, 4371  // S199
, 4404  // S200
, 4437  // S201
, 4470  // S202
, 4503  // S203
, 4536  // S204
, 4575  // S205
, 4608  // S206
, 4613  // S207
, 4626  // S208
, 4663  // S209
, 4668  // S210
, 4671  // S211
, 4708  // S212
, 4745  // S213
, 4778  // S214
, 4811  // S215
, 4816  // S216
, 4821  // S217
, 4854  // S218
, 4887  // S219
, 4890  // S220
, 4903  // S221
, 4946  // S222
, 4951  // S223
, 4956  // S224
, 4959  // S225
, 5006  // S226
, 5009  // S227
, 5012  // S228
, 5017  // S229
, 5020  // S230
, 5023  // S231
, 5026  // S232
, 5029  // S233
, 5072  // S234
, 5077  // S235
, 5080  // S236
, 5083  // S237
, 5220  // S238
, 5223  // S239
, 5360  // S240
, 5497  // S241
, 5634  // S242
, 5771  // S243
, 5774  // S244
, 5777  // S245
, 5780  // S246
, 5783  // S247
, 5796  // S248
, 5829  // S249
, 5918  // S250
, 5951  // S251
, 6042  // S252
, 6075  // S253
, 6168  // S254
, 6201  // S255
, 6296  // S256
, 6329  // S257
, 6426  // S258
, 6459  // S259
, 6558  // S260
, 6591  // S261
, 6624  // S262
, 6725  // S263
, 6758  // S264
, 6791  // S265
, 6824  // S266
, 6857  // S267
, 6962  // S268
, 6995  // S269
, 7028  // S270
, 7141  // S271
, 7174  // S272
, 7207  // S273
, 7240  // S274
, 7273  // S275
, 7390  // S276
, 7423  // S277
, 7456  // S278
, 7489  // S279
, 7522  // S280
, 7555  // S281
, 7588  // S282
, 7713  // S283
, 7716  // S284
, 7719  // S285
, 7722  // S286
, 7725  // S287
, 7728  // S288
, 7779  // S289
, 7784  // S290
, 7787  // S291
, 7790  // S292
, 7827  // S293
, 7830  // S294
, 7867  // S295
, 7870  // S296
, 7917  // S297
, 7920  // S298
, 7923  // S299
, 7966  // S300
, 7969  // S301
, 7974  // S302
, 7977  // S303
, 7980  // S304
, 8017  // S305
, 8020  // S306
, 8053  // S307
, 8060  // S308
, 8065  // S309
, 8068  // S310
, 8105  // S311
, 8144  // S312
, 8147  // S313
, 8150  // S314
, 8153  // S315
, 8178  // S316
, 8181  // S317
, 8184  // S318
, 8217  // S319
, 8220  // S320
, 8223  // S321
, 8226  // S322
, 8229  // S323
, 8262  // S324
, 8265  // S325
, 8270  // S326
, 8275  // S327
, 8318  // S328
, 8333  // S329
, 8336  // S330
, 8369  // S331
, 8372  // S332
, 8513  // S333
, 8652  // S334
, 8789  // S335
, 8792  // S336
, 8795  // S337
, 8798  // S338
, 8937  // S339
, 8948  // S340
, 8959  // S341
, 9050  // S342
, 9143  // S343
, 9238  // S344
, 9335  // S345
, 9434  // S346
, 9535  // S347
, 9636  // S348
, 9737  // S349
, 9842  // S350
, 9947  // S351
, 10052  // S352
, 10157  // S353
, 10274  // S354
, 10391  // S355
, 10516  // S356
, 10641  // S357
, 10766  // S358
, 10891  // S359
, 11028  // S360
, 11165  // S361
, 11302  // S362
, 11439  // S363
, 11576  // S364
, 11713  // S365
, 11850  // S366
, 11883  // S367
, 11892  // S368
, 11901  // S369
, 11910  // S370
, 11913  // S371
, 11916  // S372
, 11919  // S373
, 11922  // S374
, 11965  // S375
, 11968  // S376
, 12013  // S377
, 12022  // S378
, 12061  // S379
, 12070  // S380
, 12079  // S381
, 12082  // S382
, 12085  // S383
, 12088  // S384
, 12097  // S385
, 12100  // S386
, 12237  // S387
, 12270  // S388
, 12303  // S389
, 12336  // S390
, 12339  // S391
, 12372  // S392
, 12411  // S393
, 12448  // S394
, 12487  // S395
, 12492  // S396
, 12497  // S397
, 12534  // S398
, 12571  // S399
, 12574  // S400
, 12577  // S401
, 12580  // S402
, 12583  // S403
, 12586  // S404
, 12619  // S405
, 12624  // S406
, 12761  // S407
, 12764  // S408
, 12901  // S409
, 13038  // S410
, 13071  // S411
, 13208  // S412
, 13345  // S413
, 13482  // S414
, 13619  // S415
, 13624  // S416
, 13629  // S417
, 13634  // S418
, 13637  // S419
, 13640  // S420
, 13655  // S421
, 13744  // S422
, 13835  // S423
, 13928  // S424
, 14023  // S425
, 14120  // S426
, 14219  // S427
, 14332  // S428
, 14445  // S429
, 14562  // S430
, 14679  // S431
, 14796  // S432
, 14913  // S433
, 15038  // S434
, 15163  // S435
, 15288  // S436
, 15413  // S437
, 15538  // S438
, 15663  // S439
, 15672  // S440
, 15675  // S441
, 15678  // S442
, 15681  // S443
, 15686  // S444
, 15733  // S445
, 15776  // S446
, 15781  // S447
, 15784  // S448
, 15789  // S449
, 15832  // S450
, 15835  // S451
, 15838  // S452
, 15841  // S453
, 15844  // S454
, 15847  // S455
, 15850  // S456
, 15861  // S457
, 15864  // S458
, 15867  // S459
, 15904  // S460
, 15941  // S461
, 15978  // S462
, 15981  // S463
, 16018  // S464
, 16025  // S465
, 16062  // S466
, 16099  // S467
, 16102  // S468
, 16105  // S469
, 16108  // S470
, 16111  // S471
, 16118  // S472
, 16121  // S473
, 16158  // S474
, 16161  // S475
, 16198  // S476
, 16211  // S477
, 16214  // S478
, 16353  // S479
, 16356  // S480
, 16359  // S481
, 16362  // S482
, 16365  // S483
, 16368  // S484
, 16371  // S485
, 16386  // S486
, 16401  // S487
, 16404  // S488
, 16407  // S489
, 16418  // S490
, 16421  // S491
, 16424  // S492
, 16429  // S493
, 16436  // S494
, 16441  // S495
, 16446  // S496
, 16451  // S497
, 16454  // S498
, 16457  // S499
, 16500  // S500
, 16509  // S501
, 16518  // S502
, 16527  // S503
, 16566  // S504
, 16595  // S505
, 16630  // S506
, 16633  // S507
, 16638  // S508
, 16641  // S509
, 16644  // S510
, 16647  // S511
, 16686  // S512
, 16689  // S513
, 16692  // S514
, 16695  // S515
, 16832  // S516
, 16969  // S517
, 16972  // S518
, 16987  // S519
, 16990  // S520
, 17005  // S521
, 17008  // S522
, 17011  // S523
, 17054  // S524
, 17069  // S525
, 17072  // S526
, 17075  // S527
, 17080  // S528
, 17085  // S529
, 17088  // S530
, 17091  // S531
, 17094  // S532
, 17099  // S533
, 17136  // S534
, 17139  // S535
, 17142  // S536
, 17169  // S537
, 17206  // S538
, 17239  // S539
, 17272  // S540
, 17275  // S541
, 17278  // S542
, 17281  // S543
, 17318  // S544
, 17357  // S545
, 17394  // S546
, 17431  // S547
, 17468  // S548
, 17515  // S549
, 17530  // S550
, 17545  // S551
, 17548  // S552
, 17551  // S553
, 17556  // S554
, 17599  // S555
, 17632  // S556
, 17635  // S557
, 17638  // S558
, 17641  // S559
, 17644  // S560
, 17647  // S561
, 17650  // S562
, 17657  // S563
, 17694  // S564
, 17731  // S565
, 17736  // S566
, 17739  // S567
, 17748  // S568
, 17751  // S569
, 17788  // S570
, 17797  // S571
, 17800  // S572
, 17803  // S573
, 17806  // S574
, 17809  // S575
, 17812  // S576
, 17821  // S577
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            SLR states successors table                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

// Successor tables handle non terminal successors ;
// an entry is (non_terminal_symbol, n) ; successor is state n.

static const int16_t gSuccessorTable_plm_grammar_0 [17] = {0, 21,
  1, 22,
  2, 23,
  3, 24,
  5, 25,
  6, 26,
  7, 27,
  29, 28, -1} ;

static const int16_t gSuccessorTable_plm_grammar_17 [3] = {3, 45, -1} ;

static const int16_t gSuccessorTable_plm_grammar_18 [3] = {3, 46, -1} ;

static const int16_t gSuccessorTable_plm_grammar_22 [15] = {1, 22,
  2, 23,
  3, 24,
  5, 25,
  6, 26,
  7, 27,
  29, 49, -1} ;

static const int16_t gSuccessorTable_plm_grammar_23 [15] = {1, 22,
  2, 23,
  3, 24,
  5, 25,
  6, 26,
  7, 27,
  29, 50, -1} ;

static const int16_t gSuccessorTable_plm_grammar_24 [3] = {54, 52, -1} ;

static const int16_t gSuccessorTable_plm_grammar_25 [15] = {1, 22,
  2, 23,
  3, 24,
  5, 25,
  6, 26,
  7, 27,
  29, 53, -1} ;

static const int16_t gSuccessorTable_plm_grammar_26 [15] = {1, 22,
  2, 23,
  3, 24,
  5, 25,
  6, 26,
  7, 27,
  29, 54, -1} ;

static const int16_t gSuccessorTable_plm_grammar_29 [15] = {1, 22,
  2, 23,
  3, 24,
  5, 25,
  6, 26,
  7, 27,
  29, 55, -1} ;

static const int16_t gSuccessorTable_plm_grammar_31 [3] = {31, 58, -1} ;

static const int16_t gSuccessorTable_plm_grammar_32 [3] = {36, 60, -1} ;

static const int16_t gSuccessorTable_plm_grammar_35 [3] = {35, 64, -1} ;

static const int16_t gSuccessorTable_plm_grammar_36 [3] = {64, 66, -1} ;

static const int16_t gSuccessorTable_plm_grammar_37 [3] = {59, 68, -1} ;

static const int16_t gSuccessorTable_plm_grammar_39 [3] = {52, 71, -1} ;

static const int16_t gSuccessorTable_plm_grammar_41 [3] = {42, 75, -1} ;

static const int16_t gSuccessorTable_plm_grammar_42 [3] = {44, 77, -1} ;

static const int16_t gSuccessorTable_plm_grammar_46 [3] = {58, 81, -1} ;

static const int16_t gSuccessorTable_plm_grammar_57 [3] = {31, 86, -1} ;

static const int16_t gSuccessorTable_plm_grammar_62 [7] = {2, 92,
  3, 24,
  34, 93, -1} ;

static const int16_t gSuccessorTable_plm_grammar_63 [3] = {35, 94, -1} ;

static const int16_t gSuccessorTable_plm_grammar_65 [3] = {64, 96, -1} ;

static const int16_t gSuccessorTable_plm_grammar_66 [3] = {4, 98, -1} ;

static const int16_t gSuccessorTable_plm_grammar_67 [3] = {59, 99, -1} ;

static const int16_t gSuccessorTable_plm_grammar_68 [3] = {4, 100, -1} ;

static const int16_t gSuccessorTable_plm_grammar_69 [3] = {55, 102, -1} ;

static const int16_t gSuccessorTable_plm_grammar_76 [3] = {44, 108, -1} ;

static const int16_t gSuccessorTable_plm_grammar_79 [9] = {22, 123,
  23, 124,
  27, 125,
  80, 126, -1} ;

static const int16_t gSuccessorTable_plm_grammar_82 [3] = {61, 129, -1} ;

static const int16_t gSuccessorTable_plm_grammar_84 [9] = {22, 123,
  23, 130,
  27, 125,
  80, 126, -1} ;

static const int16_t gSuccessorTable_plm_grammar_87 [11] = {2, 134,
  3, 24,
  6, 135,
  7, 136,
  32, 137, -1} ;

static const int16_t gSuccessorTable_plm_grammar_88 [31] = {8, 153,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_91 [7] = {2, 92,
  3, 24,
  34, 169, -1} ;

static const int16_t gSuccessorTable_plm_grammar_92 [7] = {2, 92,
  3, 24,
  34, 170, -1} ;

static const int16_t gSuccessorTable_plm_grammar_97 [3] = {57, 176, -1} ;

static const int16_t gSuccessorTable_plm_grammar_98 [3] = {65, 178, -1} ;

static const int16_t gSuccessorTable_plm_grammar_100 [3] = {60, 180, -1} ;

static const int16_t gSuccessorTable_plm_grammar_101 [3] = {55, 181, -1} ;

static const int16_t gSuccessorTable_plm_grammar_102 [3] = {56, 183, -1} ;

static const int16_t gSuccessorTable_plm_grammar_103 [3] = {4, 184, -1} ;

static const int16_t gSuccessorTable_plm_grammar_104 [9] = {22, 123,
  23, 185,
  27, 125,
  80, 126, -1} ;

static const int16_t gSuccessorTable_plm_grammar_107 [31] = {8, 188,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_111 [7] = {24, 203,
  28, 204,
  83, 205, -1} ;

static const int16_t gSuccessorTable_plm_grammar_113 [7] = {22, 123,
  27, 125,
  80, 207, -1} ;

static const int16_t gSuccessorTable_plm_grammar_114 [31] = {8, 208,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_117 [31] = {8, 211,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_118 [31] = {8, 212,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_119 [3] = {84, 214, -1} ;

static const int16_t gSuccessorTable_plm_grammar_120 [3] = {91, 216, -1} ;

static const int16_t gSuccessorTable_plm_grammar_121 [3] = {97, 218, -1} ;

static const int16_t gSuccessorTable_plm_grammar_123 [7] = {22, 123,
  27, 125,
  80, 220, -1} ;

static const int16_t gSuccessorTable_plm_grammar_128 [3] = {61, 222, -1} ;

static const int16_t gSuccessorTable_plm_grammar_129 [3] = {62, 224, -1} ;

static const int16_t gSuccessorTable_plm_grammar_131 [3] = {30, 227, -1} ;

static const int16_t gSuccessorTable_plm_grammar_133 [11] = {2, 134,
  3, 24,
  6, 135,
  7, 136,
  32, 229, -1} ;

static const int16_t gSuccessorTable_plm_grammar_134 [11] = {2, 134,
  3, 24,
  6, 135,
  7, 136,
  32, 230, -1} ;

static const int16_t gSuccessorTable_plm_grammar_135 [11] = {2, 134,
  3, 24,
  6, 135,
  7, 136,
  32, 231, -1} ;

static const int16_t gSuccessorTable_plm_grammar_136 [11] = {2, 134,
  3, 24,
  6, 135,
  7, 136,
  32, 232, -1} ;

static const int16_t gSuccessorTable_plm_grammar_140 [3] = {28, 237, -1} ;

static const int16_t gSuccessorTable_plm_grammar_142 [31] = {8, 238,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_143 [5] = {21, 239,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_144 [5] = {21, 240,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_145 [5] = {21, 241,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_146 [5] = {21, 242,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_147 [31] = {8, 243,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_148 [31] = {8, 244,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_149 [31] = {8, 245,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_155 [3] = {66, 249, -1} ;

static const int16_t gSuccessorTable_plm_grammar_156 [3] = {67, 251, -1} ;

static const int16_t gSuccessorTable_plm_grammar_157 [3] = {68, 253, -1} ;

static const int16_t gSuccessorTable_plm_grammar_158 [3] = {69, 255, -1} ;

static const int16_t gSuccessorTable_plm_grammar_159 [3] = {70, 257, -1} ;

static const int16_t gSuccessorTable_plm_grammar_160 [3] = {71, 259, -1} ;

static const int16_t gSuccessorTable_plm_grammar_161 [3] = {72, 262, -1} ;

static const int16_t gSuccessorTable_plm_grammar_162 [3] = {73, 267, -1} ;

static const int16_t gSuccessorTable_plm_grammar_163 [3] = {74, 270, -1} ;

static const int16_t gSuccessorTable_plm_grammar_164 [3] = {75, 275, -1} ;

static const int16_t gSuccessorTable_plm_grammar_165 [3] = {76, 282, -1} ;

static const int16_t gSuccessorTable_plm_grammar_177 [3] = {27, 291, -1} ;

static const int16_t gSuccessorTable_plm_grammar_182 [3] = {56, 295, -1} ;

static const int16_t gSuccessorTable_plm_grammar_183 [3] = {4, 296, -1} ;

static const int16_t gSuccessorTable_plm_grammar_184 [3] = {53, 298, -1} ;

static const int16_t gSuccessorTable_plm_grammar_186 [9] = {22, 123,
  23, 300,
  27, 125,
  80, 126, -1} ;

static const int16_t gSuccessorTable_plm_grammar_189 [3] = {43, 302, -1} ;

static const int16_t gSuccessorTable_plm_grammar_191 [31] = {8, 304,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_193 [3] = {94, 309, -1} ;

static const int16_t gSuccessorTable_plm_grammar_203 [31] = {8, 310,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_206 [3] = {81, 312, -1} ;

static const int16_t gSuccessorTable_plm_grammar_209 [3] = {82, 314, -1} ;

static const int16_t gSuccessorTable_plm_grammar_214 [33] = {8, 316,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  25, 317,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_216 [5] = {26, 320,
  89, 321, -1} ;

static const int16_t gSuccessorTable_plm_grammar_218 [31] = {8, 322,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_223 [3] = {62, 324, -1} ;

static const int16_t gSuccessorTable_plm_grammar_224 [3] = {4, 325, -1} ;

static const int16_t gSuccessorTable_plm_grammar_228 [3] = {33, 329, -1} ;

static const int16_t gSuccessorTable_plm_grammar_234 [3] = {77, 331, -1} ;

static const int16_t gSuccessorTable_plm_grammar_247 [3] = {38, 340, -1} ;

static const int16_t gSuccessorTable_plm_grammar_248 [27] = {10, 341,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_250 [25] = {11, 342,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_252 [23] = {12, 343,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_254 [21] = {13, 344,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_256 [19] = {14, 345,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_258 [17] = {15, 346,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_260 [15] = {16, 347,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_261 [15] = {16, 348,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_263 [13] = {17, 349,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_264 [13] = {17, 350,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_265 [13] = {17, 351,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_266 [13] = {17, 352,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_268 [11] = {18, 353,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_269 [11] = {18, 354,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_271 [9] = {19, 355,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_272 [9] = {19, 356,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_273 [9] = {19, 357,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_274 [9] = {19, 358,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_276 [7] = {20, 359,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_277 [7] = {20, 360,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_278 [7] = {20, 361,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_279 [7] = {20, 362,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_280 [7] = {20, 363,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_281 [7] = {20, 364,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_289 [3] = {28, 204, -1} ;

static const int16_t gSuccessorTable_plm_grammar_292 [9] = {22, 123,
  23, 371,
  27, 125,
  80, 126, -1} ;

static const int16_t gSuccessorTable_plm_grammar_294 [9] = {22, 123,
  23, 372,
  27, 125,
  80, 126, -1} ;

static const int16_t gSuccessorTable_plm_grammar_301 [3] = {44, 375, -1} ;

static const int16_t gSuccessorTable_plm_grammar_305 [3] = {28, 378, -1} ;

static const int16_t gSuccessorTable_plm_grammar_306 [31] = {8, 379,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_307 [3] = {95, 383, -1} ;

static const int16_t gSuccessorTable_plm_grammar_315 [7] = {24, 391,
  28, 392,
  83, 205, -1} ;

static const int16_t gSuccessorTable_plm_grammar_318 [31] = {8, 395,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_323 [31] = {8, 399,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_325 [3] = {63, 401, -1} ;

static const int16_t gSuccessorTable_plm_grammar_326 [3] = {30, 402, -1} ;

static const int16_t gSuccessorTable_plm_grammar_328 [11] = {2, 134,
  3, 24,
  6, 135,
  7, 136,
  32, 403, -1} ;

static const int16_t gSuccessorTable_plm_grammar_330 [31] = {8, 405,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_332 [5] = {28, 408,
  79, 409, -1} ;

static const int16_t gSuccessorTable_plm_grammar_338 [3] = {28, 414, -1} ;

static const int16_t gSuccessorTable_plm_grammar_340 [3] = {39, 420, -1} ;

static const int16_t gSuccessorTable_plm_grammar_341 [3] = {66, 421, -1} ;

static const int16_t gSuccessorTable_plm_grammar_342 [3] = {67, 422, -1} ;

static const int16_t gSuccessorTable_plm_grammar_343 [3] = {68, 423, -1} ;

static const int16_t gSuccessorTable_plm_grammar_344 [3] = {69, 424, -1} ;

static const int16_t gSuccessorTable_plm_grammar_345 [3] = {70, 425, -1} ;

static const int16_t gSuccessorTable_plm_grammar_346 [3] = {71, 426, -1} ;

static const int16_t gSuccessorTable_plm_grammar_353 [3] = {74, 427, -1} ;

static const int16_t gSuccessorTable_plm_grammar_354 [3] = {74, 428, -1} ;

static const int16_t gSuccessorTable_plm_grammar_355 [3] = {75, 429, -1} ;

static const int16_t gSuccessorTable_plm_grammar_356 [3] = {75, 430, -1} ;

static const int16_t gSuccessorTable_plm_grammar_357 [3] = {75, 431, -1} ;

static const int16_t gSuccessorTable_plm_grammar_358 [3] = {75, 432, -1} ;

static const int16_t gSuccessorTable_plm_grammar_359 [3] = {76, 433, -1} ;

static const int16_t gSuccessorTable_plm_grammar_360 [3] = {76, 434, -1} ;

static const int16_t gSuccessorTable_plm_grammar_361 [3] = {76, 435, -1} ;

static const int16_t gSuccessorTable_plm_grammar_362 [3] = {76, 436, -1} ;

static const int16_t gSuccessorTable_plm_grammar_363 [3] = {76, 437, -1} ;

static const int16_t gSuccessorTable_plm_grammar_364 [3] = {76, 438, -1} ;

static const int16_t gSuccessorTable_plm_grammar_366 [31] = {8, 439,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_367 [3] = {57, 440, -1} ;

static const int16_t gSuccessorTable_plm_grammar_368 [3] = {57, 441, -1} ;

static const int16_t gSuccessorTable_plm_grammar_369 [3] = {57, 442, -1} ;

static const int16_t gSuccessorTable_plm_grammar_373 [3] = {4, 446, -1} ;

static const int16_t gSuccessorTable_plm_grammar_376 [3] = {45, 449, -1} ;

static const int16_t gSuccessorTable_plm_grammar_377 [3] = {49, 453, -1} ;

static const int16_t gSuccessorTable_plm_grammar_379 [3] = {94, 454, -1} ;

static const int16_t gSuccessorTable_plm_grammar_380 [3] = {94, 455, -1} ;

static const int16_t gSuccessorTable_plm_grammar_384 [3] = {94, 457, -1} ;

static const int16_t gSuccessorTable_plm_grammar_387 [31] = {8, 459,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_388 [31] = {8, 460,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_389 [31] = {8, 461,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_391 [31] = {8, 463,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_393 [9] = {22, 123,
  23, 464,
  27, 125,
  80, 126, -1} ;

static const int16_t gSuccessorTable_plm_grammar_394 [3] = {85, 466, -1} ;

static const int16_t gSuccessorTable_plm_grammar_395 [3] = {90, 468, -1} ;

static const int16_t gSuccessorTable_plm_grammar_396 [3] = {28, 470, -1} ;

static const int16_t gSuccessorTable_plm_grammar_397 [9] = {22, 123,
  23, 471,
  27, 125,
  80, 126, -1} ;

static const int16_t gSuccessorTable_plm_grammar_398 [9] = {22, 123,
  23, 472,
  27, 125,
  80, 126, -1} ;

static const int16_t gSuccessorTable_plm_grammar_404 [31] = {8, 476,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_405 [3] = {77, 477, -1} ;

static const int16_t gSuccessorTable_plm_grammar_410 [31] = {8, 479,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_415 [3] = {40, 481, -1} ;

static const int16_t gSuccessorTable_plm_grammar_416 [3] = {41, 483, -1} ;

static const int16_t gSuccessorTable_plm_grammar_420 [5] = {37, 488,
  38, 489, -1} ;

static const int16_t gSuccessorTable_plm_grammar_439 [7] = {2, 92,
  3, 24,
  34, 490, -1} ;

static const int16_t gSuccessorTable_plm_grammar_443 [3] = {28, 392, -1} ;

static const int16_t gSuccessorTable_plm_grammar_446 [3] = {53, 491, -1} ;

static const int16_t gSuccessorTable_plm_grammar_448 [3] = {47, 495, -1} ;

static const int16_t gSuccessorTable_plm_grammar_456 [3] = {96, 501, -1} ;

static const int16_t gSuccessorTable_plm_grammar_462 [3] = {28, 503, -1} ;

static const int16_t gSuccessorTable_plm_grammar_464 [3] = {86, 506, -1} ;

static const int16_t gSuccessorTable_plm_grammar_471 [7] = {26, 509,
  89, 321,
  92, 510, -1} ;

static const int16_t gSuccessorTable_plm_grammar_473 [9] = {22, 123,
  23, 512,
  27, 125,
  80, 126, -1} ;

static const int16_t gSuccessorTable_plm_grammar_475 [9] = {22, 123,
  23, 513,
  27, 125,
  80, 126, -1} ;

static const int16_t gSuccessorTable_plm_grammar_476 [11] = {2, 134,
  3, 24,
  6, 135,
  7, 136,
  32, 514, -1} ;

static const int16_t gSuccessorTable_plm_grammar_478 [3] = {79, 515, -1} ;

static const int16_t gSuccessorTable_plm_grammar_489 [3] = {39, 524, -1} ;

static const int16_t gSuccessorTable_plm_grammar_492 [3] = {43, 525, -1} ;

static const int16_t gSuccessorTable_plm_grammar_493 [3] = {48, 527, -1} ;

static const int16_t gSuccessorTable_plm_grammar_495 [3] = {46, 529, -1} ;

static const int16_t gSuccessorTable_plm_grammar_496 [3] = {50, 531, -1} ;

static const int16_t gSuccessorTable_plm_grammar_497 [3] = {4, 532, -1} ;

static const int16_t gSuccessorTable_plm_grammar_501 [3] = {94, 534, -1} ;

static const int16_t gSuccessorTable_plm_grammar_502 [3] = {94, 535, -1} ;

static const int16_t gSuccessorTable_plm_grammar_504 [3] = {87, 537, -1} ;

static const int16_t gSuccessorTable_plm_grammar_505 [3] = {88, 539, -1} ;

static const int16_t gSuccessorTable_plm_grammar_507 [3] = {28, 541, -1} ;

static const int16_t gSuccessorTable_plm_grammar_508 [3] = {28, 542, -1} ;

static const int16_t gSuccessorTable_plm_grammar_511 [3] = {98, 546, -1} ;

static const int16_t gSuccessorTable_plm_grammar_524 [5] = {37, 551,
  38, 489, -1} ;

static const int16_t gSuccessorTable_plm_grammar_528 [3] = {47, 553, -1} ;

static const int16_t gSuccessorTable_plm_grammar_532 [3] = {51, 557, -1} ;

static const int16_t gSuccessorTable_plm_grammar_533 [9] = {22, 123,
  23, 558,
  27, 125,
  80, 126, -1} ;

static const int16_t gSuccessorTable_plm_grammar_537 [9] = {22, 123,
  23, 559,
  27, 125,
  80, 126, -1} ;

static const int16_t gSuccessorTable_plm_grammar_539 [33] = {8, 316,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  25, 560,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_543 [9] = {22, 123,
  23, 562,
  27, 125,
  80, 126, -1} ;

static const int16_t gSuccessorTable_plm_grammar_544 [3] = {93, 564, -1} ;

static const int16_t gSuccessorTable_plm_grammar_553 [3] = {46, 566, -1} ;

static const int16_t gSuccessorTable_plm_grammar_555 [31] = {8, 567,
  9, 154,
  10, 155,
  11, 156,
  12, 157,
  13, 158,
  14, 159,
  15, 160,
  16, 161,
  17, 162,
  18, 163,
  19, 164,
  20, 165,
  21, 166,
  78, 167, -1} ;

static const int16_t gSuccessorTable_plm_grammar_561 [3] = {28, 571, -1} ;

static const int16_t gSuccessorTable_plm_grammar_562 [7] = {26, 509,
  89, 321,
  92, 572, -1} ;

static const int16_t gSuccessorTable_plm_grammar_567 [3] = {49, 573, -1} ;

static const int16_t gSuccessorTable_plm_grammar_569 [9] = {22, 123,
  23, 574,
  27, 125,
  80, 126, -1} ;

static const int16_t gSuccessorTable_plm_grammar_570 [3] = {49, 575, -1} ;

static const int16_t gSuccessorTable_plm_grammar_576 [3] = {49, 577, -1} ;

static const int16_t * gSuccessorTable_plm_grammar [578] = {
gSuccessorTable_plm_grammar_0, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_17, gSuccessorTable_plm_grammar_18, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_22, gSuccessorTable_plm_grammar_23, 
  gSuccessorTable_plm_grammar_24, gSuccessorTable_plm_grammar_25, gSuccessorTable_plm_grammar_26, NULL, 
  NULL, gSuccessorTable_plm_grammar_29, NULL, gSuccessorTable_plm_grammar_31, 
  gSuccessorTable_plm_grammar_32, NULL, NULL, gSuccessorTable_plm_grammar_35, 
  gSuccessorTable_plm_grammar_36, gSuccessorTable_plm_grammar_37, NULL, gSuccessorTable_plm_grammar_39, 
  NULL, gSuccessorTable_plm_grammar_41, gSuccessorTable_plm_grammar_42, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_46, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_57, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_62, gSuccessorTable_plm_grammar_63, 
  NULL, gSuccessorTable_plm_grammar_65, gSuccessorTable_plm_grammar_66, gSuccessorTable_plm_grammar_67, 
  gSuccessorTable_plm_grammar_68, gSuccessorTable_plm_grammar_69, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_76, NULL, NULL, gSuccessorTable_plm_grammar_79, 
  NULL, NULL, gSuccessorTable_plm_grammar_82, NULL, 
  gSuccessorTable_plm_grammar_84, NULL, NULL, gSuccessorTable_plm_grammar_87, 
  gSuccessorTable_plm_grammar_88, NULL, NULL, gSuccessorTable_plm_grammar_91, 
  gSuccessorTable_plm_grammar_92, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_97, gSuccessorTable_plm_grammar_98, NULL, 
  gSuccessorTable_plm_grammar_100, gSuccessorTable_plm_grammar_101, gSuccessorTable_plm_grammar_102, gSuccessorTable_plm_grammar_103, 
  gSuccessorTable_plm_grammar_104, NULL, NULL, gSuccessorTable_plm_grammar_107, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_111, 
  NULL, gSuccessorTable_plm_grammar_113, gSuccessorTable_plm_grammar_114, NULL, 
  NULL, gSuccessorTable_plm_grammar_117, gSuccessorTable_plm_grammar_118, gSuccessorTable_plm_grammar_119, 
  gSuccessorTable_plm_grammar_120, gSuccessorTable_plm_grammar_121, NULL, gSuccessorTable_plm_grammar_123, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_128, gSuccessorTable_plm_grammar_129, NULL, gSuccessorTable_plm_grammar_131, 
  NULL, gSuccessorTable_plm_grammar_133, gSuccessorTable_plm_grammar_134, gSuccessorTable_plm_grammar_135, 
  gSuccessorTable_plm_grammar_136, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_140, NULL, gSuccessorTable_plm_grammar_142, gSuccessorTable_plm_grammar_143, 
  gSuccessorTable_plm_grammar_144, gSuccessorTable_plm_grammar_145, gSuccessorTable_plm_grammar_146, gSuccessorTable_plm_grammar_147, 
  gSuccessorTable_plm_grammar_148, gSuccessorTable_plm_grammar_149, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_155, 
  gSuccessorTable_plm_grammar_156, gSuccessorTable_plm_grammar_157, gSuccessorTable_plm_grammar_158, gSuccessorTable_plm_grammar_159, 
  gSuccessorTable_plm_grammar_160, gSuccessorTable_plm_grammar_161, gSuccessorTable_plm_grammar_162, gSuccessorTable_plm_grammar_163, 
  gSuccessorTable_plm_grammar_164, gSuccessorTable_plm_grammar_165, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_177, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_182, gSuccessorTable_plm_grammar_183, 
  gSuccessorTable_plm_grammar_184, NULL, gSuccessorTable_plm_grammar_186, NULL, 
  NULL, gSuccessorTable_plm_grammar_189, NULL, gSuccessorTable_plm_grammar_191, 
  NULL, gSuccessorTable_plm_grammar_193, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_203, 
  NULL, NULL, gSuccessorTable_plm_grammar_206, NULL, 
  NULL, gSuccessorTable_plm_grammar_209, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_214, NULL, 
  gSuccessorTable_plm_grammar_216, NULL, gSuccessorTable_plm_grammar_218, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_223, 
  gSuccessorTable_plm_grammar_224, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_228, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_234, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_247, 
  gSuccessorTable_plm_grammar_248, NULL, gSuccessorTable_plm_grammar_250, NULL, 
  gSuccessorTable_plm_grammar_252, NULL, gSuccessorTable_plm_grammar_254, NULL, 
  gSuccessorTable_plm_grammar_256, NULL, gSuccessorTable_plm_grammar_258, NULL, 
  gSuccessorTable_plm_grammar_260, gSuccessorTable_plm_grammar_261, NULL, gSuccessorTable_plm_grammar_263, 
  gSuccessorTable_plm_grammar_264, gSuccessorTable_plm_grammar_265, gSuccessorTable_plm_grammar_266, NULL, 
  gSuccessorTable_plm_grammar_268, gSuccessorTable_plm_grammar_269, NULL, gSuccessorTable_plm_grammar_271, 
  gSuccessorTable_plm_grammar_272, gSuccessorTable_plm_grammar_273, gSuccessorTable_plm_grammar_274, NULL, 
  gSuccessorTable_plm_grammar_276, gSuccessorTable_plm_grammar_277, gSuccessorTable_plm_grammar_278, gSuccessorTable_plm_grammar_279, 
  gSuccessorTable_plm_grammar_280, gSuccessorTable_plm_grammar_281, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_289, NULL, NULL, 
  gSuccessorTable_plm_grammar_292, NULL, gSuccessorTable_plm_grammar_294, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_301, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_305, gSuccessorTable_plm_grammar_306, gSuccessorTable_plm_grammar_307, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_315, 
  NULL, NULL, gSuccessorTable_plm_grammar_318, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_323, 
  NULL, gSuccessorTable_plm_grammar_325, gSuccessorTable_plm_grammar_326, NULL, 
  gSuccessorTable_plm_grammar_328, NULL, gSuccessorTable_plm_grammar_330, NULL, 
  gSuccessorTable_plm_grammar_332, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_338, NULL, 
  gSuccessorTable_plm_grammar_340, gSuccessorTable_plm_grammar_341, gSuccessorTable_plm_grammar_342, gSuccessorTable_plm_grammar_343, 
  gSuccessorTable_plm_grammar_344, gSuccessorTable_plm_grammar_345, gSuccessorTable_plm_grammar_346, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_353, gSuccessorTable_plm_grammar_354, gSuccessorTable_plm_grammar_355, 
  gSuccessorTable_plm_grammar_356, gSuccessorTable_plm_grammar_357, gSuccessorTable_plm_grammar_358, gSuccessorTable_plm_grammar_359, 
  gSuccessorTable_plm_grammar_360, gSuccessorTable_plm_grammar_361, gSuccessorTable_plm_grammar_362, gSuccessorTable_plm_grammar_363, 
  gSuccessorTable_plm_grammar_364, NULL, gSuccessorTable_plm_grammar_366, gSuccessorTable_plm_grammar_367, 
  gSuccessorTable_plm_grammar_368, gSuccessorTable_plm_grammar_369, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_373, NULL, NULL, 
  gSuccessorTable_plm_grammar_376, gSuccessorTable_plm_grammar_377, NULL, gSuccessorTable_plm_grammar_379, 
  gSuccessorTable_plm_grammar_380, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_384, NULL, NULL, gSuccessorTable_plm_grammar_387, 
  gSuccessorTable_plm_grammar_388, gSuccessorTable_plm_grammar_389, NULL, gSuccessorTable_plm_grammar_391, 
  NULL, gSuccessorTable_plm_grammar_393, gSuccessorTable_plm_grammar_394, gSuccessorTable_plm_grammar_395, 
  gSuccessorTable_plm_grammar_396, gSuccessorTable_plm_grammar_397, gSuccessorTable_plm_grammar_398, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_404, gSuccessorTable_plm_grammar_405, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_410, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_415, 
  gSuccessorTable_plm_grammar_416, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_420, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_439, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_443, 
  NULL, NULL, gSuccessorTable_plm_grammar_446, NULL, 
  gSuccessorTable_plm_grammar_448, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_456, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_plm_grammar_462, NULL, 
  gSuccessorTable_plm_grammar_464, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_471, 
  NULL, gSuccessorTable_plm_grammar_473, NULL, gSuccessorTable_plm_grammar_475, 
  gSuccessorTable_plm_grammar_476, NULL, gSuccessorTable_plm_grammar_478, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_489, NULL, NULL, 
  gSuccessorTable_plm_grammar_492, gSuccessorTable_plm_grammar_493, NULL, gSuccessorTable_plm_grammar_495, 
  gSuccessorTable_plm_grammar_496, gSuccessorTable_plm_grammar_497, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_501, gSuccessorTable_plm_grammar_502, NULL, 
  gSuccessorTable_plm_grammar_504, gSuccessorTable_plm_grammar_505, NULL, gSuccessorTable_plm_grammar_507, 
  gSuccessorTable_plm_grammar_508, NULL, NULL, gSuccessorTable_plm_grammar_511, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_524, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_528, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_532, gSuccessorTable_plm_grammar_533, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_537, NULL, gSuccessorTable_plm_grammar_539, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_543, 
  gSuccessorTable_plm_grammar_544, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_553, NULL, gSuccessorTable_plm_grammar_555, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_plm_grammar_561, gSuccessorTable_plm_grammar_562, NULL, 
  NULL, NULL, NULL, gSuccessorTable_plm_grammar_567, 
  NULL, gSuccessorTable_plm_grammar_569, gSuccessorTable_plm_grammar_570, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_plm_grammar_576, NULL} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Production rules infos (left non terminal, size of right string)                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const int16_t gProductionsTable_plm_grammar [271 * 2] = {
  0, 1,
  1, 7,
  1, 6,
  1, 4,
  1, 5,
  1, 5,
  1, 10,
  1, 5,
  1, 8,
  1, 9,
  1, 7,
  1, 5,
  1, 5,
  1, 6,
  2, 5,
  3, 6,
  4, 3,
  1, 2,
  1, 3,
  5, 8,
  6, 10,
  7, 8,
  1, 1,
  8, 1,
  9, 2,
  10, 2,
  11, 2,
  12, 2,
  13, 2,
  14, 2,
  15, 2,
  16, 2,
  17, 2,
  18, 2,
  19, 2,
  20, 1,
  21, 2,
  21, 2,
  21, 2,
  21, 2,
  21, 3,
  21, 4,
  21, 4,
  21, 4,
  21, 4,
  21, 3,
  21, 1,
  21, 1,
  21, 1,
  21, 1,
  21, 1,
  21, 4,
  21, 3,
  21, 4,
  21, 2,
  21, 4,
  21, 3,
  21, 6,
  22, 2,
  23, 1,
  22, 5,
  22, 3,
  22, 5,
  22, 3,
  22, 5,
  22, 2,
  22, 2,
  24, 1,
  22, 3,
  22, 5,
  22, 5,
  25, 4,
  26, 1,
  22, 8,
  22, 1,
  27, 4,
  27, 4,
  27, 6,
  27, 2,
  28, 3,
  22, 7,
  22, 7,
  1, 2,
  29, 0,
  29, 2,
  29, 2,
  29, 2,
  29, 2,
  29, 3,
  30, 0,
  30, 3,
  31, 0,
  31, 2,
  32, 0,
  32, 6,
  32, 4,
  32, 2,
  32, 2,
  32, 2,
  32, 2,
  33, 1,
  33, 0,
  34, 0,
  34, 6,
  34, 2,
  34, 2,
  35, 0,
  35, 2,
  36, 0,
  36, 1,
  37, 0,
  37, 3,
  38, 0,
  38, 1,
  39, 3,
  39, 3,
  39, 2,
  39, 4,
  39, 2,
  39, 4,
  40, 0,
  40, 2,
  41, 0,
  41, 2,
  42, 0,
  42, 1,
  43, 0,
  43, 5,
  44, 0,
  44, 2,
  45, 0,
  45, 4,
  46, 0,
  46, 3,
  47, 1,
  47, 2,
  48, 0,
  48, 3,
  49, 0,
  49, 6,
  49, 8,
  49, 6,
  50, 0,
  50, 1,
  51, 0,
  51, 2,
  52, 0,
  52, 4,
  53, 0,
  53, 4,
  54, 0,
  54, 2,
  55, 0,
  55, 2,
  56, 0,
  56, 2,
  57, 0,
  57, 4,
  57, 4,
  57, 4,
  58, 0,
  58, 2,
  59, 0,
  59, 2,
  60, 0,
  60, 2,
  61, 0,
  61, 2,
  62, 0,
  62, 2,
  63, 0,
  63, 2,
  64, 0,
  64, 2,
  65, 0,
  65, 2,
  66, 0,
  66, 3,
  67, 0,
  67, 3,
  68, 0,
  68, 3,
  69, 0,
  69, 3,
  70, 0,
  70, 3,
  71, 0,
  71, 3,
  72, 0,
  72, 2,
  72, 2,
  73, 0,
  73, 2,
  73, 2,
  73, 2,
  73, 2,
  74, 0,
  74, 3,
  74, 3,
  75, 0,
  75, 3,
  75, 3,
  75, 3,
  75, 3,
  76, 0,
  76, 3,
  76, 3,
  76, 3,
  76, 3,
  76, 3,
  76, 3,
  77, 0,
  77, 3,
  78, 0,
  78, 1,
  79, 0,
  79, 3,
  80, 0,
  80, 2,
  80, 2,
  81, 0,
  81, 1,
  82, 0,
  82, 1,
  83, 1,
  83, 1,
  83, 1,
  83, 1,
  83, 1,
  83, 1,
  83, 1,
  83, 1,
  83, 1,
  84, 0,
  84, 1,
  85, 0,
  85, 1,
  86, 0,
  86, 3,
  86, 3,
  87, 0,
  87, 1,
  88, 0,
  88, 1,
  89, 3,
  89, 3,
  89, 5,
  90, 0,
  90, 3,
  90, 5,
  91, 0,
  91, 1,
  92, 0,
  92, 4,
  93, 0,
  93, 1,
  94, 0,
  94, 3,
  94, 3,
  94, 5,
  94, 3,
  94, 5,
  95, 1,
  95, 1,
  96, 0,
  96, 1,
  97, 0,
  97, 1,
  98, 0,
  98, 1,
  99, 1
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'start_symbol' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_start_5F_symbol_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 0 :
      rule_common_5F_syntax_start_5F_symbol_i0_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_start_5F_symbol_ (GALGAS_ast &  parameter_1,
                                GALGAS_lstringlist &  parameter_2,
                                GALGAS_location &  parameter_3,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 0 :
      rule_common_5F_syntax_start_5F_symbol_i0_(parameter_1, parameter_2, parameter_3, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

void cGrammar_plm_5F_grammar::performIndexing (C_Compiler * /* inCompiler */,
             const C_String & /* inSourceFilePath */) {
}

void cGrammar_plm_5F_grammar::performOnlyLexicalAnalysis (C_Compiler * inCompiler,
             const C_String & inSourceFilePath) {
  C_Lexique_plm_5F_lexique * scanner = NULL ;
  macroMyNew (scanner, C_Lexique_plm_5F_lexique (inCompiler, "", "", inSourceFilePath COMMA_HERE)) ;
  if (scanner->sourceText () != NULL) {
    scanner->performLexicalAnalysis () ;
  }
  macroDetachSharedObject (scanner) ;
}

void cGrammar_plm_5F_grammar::performOnlySyntaxAnalysis (C_Compiler * inCompiler,
             const C_String & inSourceFilePath) {
  C_Lexique_plm_5F_lexique * scanner = NULL ;
  macroMyNew (scanner, C_Lexique_plm_5F_lexique (inCompiler, "", "", inSourceFilePath COMMA_HERE)) ;
  if (scanner->sourceText () != NULL) {
    scanner->performBottomUpParsing (gActionTable_plm_grammar, gNonTerminalNames_plm_grammar,
                                     gActionTableIndex_plm_grammar, gSuccessorTable_plm_grammar,
                                     gProductionsTable_plm_grammar) ;
  }
  macroDetachSharedObject (scanner) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Grammar start symbol implementation                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::_performSourceFileParsing_ (C_Compiler * inCompiler,
                                GALGAS_lstring inFilePath,
                                GALGAS_ast &  parameter_1,
                                GALGAS_lstringlist &  parameter_2,
                                GALGAS_location &  parameter_3
                                COMMA_LOCATION_ARGS) {
  if (inFilePath.isValid ()) {
    const GALGAS_string filePathAsString = inFilePath.getter_string (HERE) ;
    C_String filePath = filePathAsString.stringValue () ;
    if (! C_FileManager::isAbsolutePath (filePath)) {
      filePath = inCompiler->sourceFilePath ().stringByDeletingLastPathComponent ().stringByAppendingPathComponent (filePath) ;
    }
    if (C_FileManager::fileExistsAtPath (filePath)) {
      C_Lexique_plm_5F_lexique * scanner = NULL ;
      macroMyNew (scanner, C_Lexique_plm_5F_lexique (inCompiler, "", "", filePath COMMA_HERE)) ;
      if (scanner->sourceText () != NULL) {
        const bool ok = scanner->performBottomUpParsing (gActionTable_plm_grammar, gNonTerminalNames_plm_grammar,
                                                         gActionTableIndex_plm_grammar, gSuccessorTable_plm_grammar,
                                                         gProductionsTable_plm_grammar) ;
        if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
          cGrammar_plm_5F_grammar grammar ;
          grammar.nt_start_5F_symbol_ (parameter_1, parameter_2, parameter_3, scanner) ;
        }
      }else{
        C_String message ;
        message << "the '" << filePath << "' file exists, but cannot be read" ;
        const GALGAS_location errorLocation (inFilePath.getter_location (THERE)) ;
        inCompiler->semanticErrorAtLocation (errorLocation, message COMMA_THERE) ;
      }
      macroDetachSharedObject (scanner) ;
    }else{
      C_String message ;
      message << "the '" << filePath << "' file does not exist" ;
      const GALGAS_location errorLocation (inFilePath.getter_location (THERE)) ;
      inCompiler->semanticErrorAtLocation (errorLocation, message COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::_performSourceStringParsing_ (C_Compiler * inCompiler,
                                GALGAS_string inSourceString,
                                GALGAS_string inNameString,
                                GALGAS_ast &  parameter_1,
                                GALGAS_lstringlist &  parameter_2,
                                GALGAS_location &  parameter_3
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (inSourceString.isValid () && inNameString.isValid ()) {
    const C_String sourceString = inSourceString.stringValue () ;
    const C_String nameString = inNameString.stringValue () ;
    C_Lexique_plm_5F_lexique * scanner = NULL ;
    macroMyNew (scanner, C_Lexique_plm_5F_lexique (inCompiler, sourceString, nameString COMMA_HERE)) ;
    if (scanner->sourceText () != NULL) {
      const bool ok = scanner->performBottomUpParsing (gActionTable_plm_grammar, gNonTerminalNames_plm_grammar,
                                                       gActionTableIndex_plm_grammar, gSuccessorTable_plm_grammar,
                                                       gProductionsTable_plm_grammar) ;
      if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
        cGrammar_plm_5F_grammar grammar ;
        grammar.nt_start_5F_symbol_ (parameter_1, parameter_2, parameter_3, scanner) ;
      }
    }
    macroDetachSharedObject (scanner) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'declaration' non terminal implementation                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_declaration_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 1 :
      rule_common_5F_syntax_declaration_i1_parse(inLexique) ;
    break ;
  case 2 :
      rule_common_5F_syntax_declaration_i2_parse(inLexique) ;
    break ;
  case 3 :
      rule_common_5F_syntax_declaration_i3_parse(inLexique) ;
    break ;
  case 4 :
      rule_common_5F_syntax_declaration_i4_parse(inLexique) ;
    break ;
  case 5 :
      rule_common_5F_syntax_declaration_i5_parse(inLexique) ;
    break ;
  case 6 :
      rule_common_5F_syntax_declaration_i6_parse(inLexique) ;
    break ;
  case 7 :
      rule_common_5F_syntax_declaration_i7_parse(inLexique) ;
    break ;
  case 8 :
      rule_common_5F_syntax_declaration_i8_parse(inLexique) ;
    break ;
  case 9 :
      rule_common_5F_syntax_declaration_i9_parse(inLexique) ;
    break ;
  case 10 :
      rule_common_5F_syntax_declaration_i10_parse(inLexique) ;
    break ;
  case 11 :
      rule_common_5F_syntax_declaration_i11_parse(inLexique) ;
    break ;
  case 12 :
      rule_common_5F_syntax_declaration_i12_parse(inLexique) ;
    break ;
  case 13 :
      rule_common_5F_syntax_declaration_i13_parse(inLexique) ;
    break ;
  case 17 :
      rule_common_5F_syntax_declaration_i17_parse(inLexique) ;
    break ;
  case 18 :
      rule_common_5F_syntax_declaration_i18_parse(inLexique) ;
    break ;
  case 22 :
      rule_common_5F_syntax_declaration_i22_parse(inLexique) ;
    break ;
  case 82 :
      rule_plm_5F_specific_5F_syntax_declaration_i0_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_declaration_ (GALGAS_ast &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 1 :
      rule_common_5F_syntax_declaration_i1_(parameter_1, inLexique) ;
    break ;
  case 2 :
      rule_common_5F_syntax_declaration_i2_(parameter_1, inLexique) ;
    break ;
  case 3 :
      rule_common_5F_syntax_declaration_i3_(parameter_1, inLexique) ;
    break ;
  case 4 :
      rule_common_5F_syntax_declaration_i4_(parameter_1, inLexique) ;
    break ;
  case 5 :
      rule_common_5F_syntax_declaration_i5_(parameter_1, inLexique) ;
    break ;
  case 6 :
      rule_common_5F_syntax_declaration_i6_(parameter_1, inLexique) ;
    break ;
  case 7 :
      rule_common_5F_syntax_declaration_i7_(parameter_1, inLexique) ;
    break ;
  case 8 :
      rule_common_5F_syntax_declaration_i8_(parameter_1, inLexique) ;
    break ;
  case 9 :
      rule_common_5F_syntax_declaration_i9_(parameter_1, inLexique) ;
    break ;
  case 10 :
      rule_common_5F_syntax_declaration_i10_(parameter_1, inLexique) ;
    break ;
  case 11 :
      rule_common_5F_syntax_declaration_i11_(parameter_1, inLexique) ;
    break ;
  case 12 :
      rule_common_5F_syntax_declaration_i12_(parameter_1, inLexique) ;
    break ;
  case 13 :
      rule_common_5F_syntax_declaration_i13_(parameter_1, inLexique) ;
    break ;
  case 17 :
      rule_common_5F_syntax_declaration_i17_(parameter_1, inLexique) ;
    break ;
  case 18 :
      rule_common_5F_syntax_declaration_i18_(parameter_1, inLexique) ;
    break ;
  case 22 :
      rule_common_5F_syntax_declaration_i22_(parameter_1, inLexique) ;
    break ;
  case 82 :
      rule_plm_5F_specific_5F_syntax_declaration_i0_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      'procedure' non terminal implementation                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_procedure_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 14 :
      rule_common_5F_syntax_procedure_i14_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_procedure_ (GALGAS_procedureDeclarationListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 14 :
      rule_common_5F_syntax_procedure_i14_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'procedure_header' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_procedure_5F_header_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 15 :
      rule_common_5F_syntax_procedure_5F_header_i15_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_procedure_5F_header_ (GALGAS_lstringlist &  parameter_1,
                                GALGAS_lstring &  parameter_2,
                                GALGAS_lstringlist &  parameter_3,
                                GALGAS_procFormalArgumentList &  parameter_4,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 15 :
      rule_common_5F_syntax_procedure_5F_header_i15_(parameter_1, parameter_2, parameter_3, parameter_4, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'procedure_formal_arguments' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_procedure_5F_formal_5F_arguments_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 16 :
      rule_common_5F_syntax_procedure_5F_formal_5F_arguments_i16_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_procedure_5F_formal_5F_arguments_ (GALGAS_procFormalArgumentList &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 16 :
      rule_common_5F_syntax_procedure_5F_formal_5F_arguments_i16_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       'section' non terminal implementation                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_section_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 19 :
      rule_common_5F_syntax_section_i19_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_section_ (GALGAS_sectionDeclarationListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 19 :
      rule_common_5F_syntax_section_i19_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       'service' non terminal implementation                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_service_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 20 :
      rule_common_5F_syntax_service_i20_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_service_ (GALGAS_serviceDeclarationListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 20 :
      rule_common_5F_syntax_service_i20_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        'guard' non terminal implementation                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_guard_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 21 :
      rule_common_5F_syntax_guard_i21_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_guard_ (GALGAS_guardDeclarationListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 21 :
      rule_common_5F_syntax_guard_i21_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      'expression' non terminal implementation                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 23 :
      rule_common_5F_syntax_expression_i23_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 23 :
      rule_common_5F_syntax_expression_i23_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'expression_12' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__31__32__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 24 :
      rule_common_5F_syntax_expression_5F__31__32__i24_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__31__32__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 24 :
      rule_common_5F_syntax_expression_5F__31__32__i24_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'expression_11' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__31__31__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 25 :
      rule_common_5F_syntax_expression_5F__31__31__i25_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__31__31__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 25 :
      rule_common_5F_syntax_expression_5F__31__31__i25_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'expression_10' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__31__30__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 26 :
      rule_common_5F_syntax_expression_5F__31__30__i26_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__31__30__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 26 :
      rule_common_5F_syntax_expression_5F__31__30__i26_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'expression_9' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__39__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 27 :
      rule_common_5F_syntax_expression_5F__39__i27_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__39__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 27 :
      rule_common_5F_syntax_expression_5F__39__i27_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'expression_8' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__38__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 28 :
      rule_common_5F_syntax_expression_5F__38__i28_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__38__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 28 :
      rule_common_5F_syntax_expression_5F__38__i28_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'expression_7' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__37__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 29 :
      rule_common_5F_syntax_expression_5F__37__i29_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__37__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 29 :
      rule_common_5F_syntax_expression_5F__37__i29_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'expression_6' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__36__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 30 :
      rule_common_5F_syntax_expression_5F__36__i30_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__36__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 30 :
      rule_common_5F_syntax_expression_5F__36__i30_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'expression_5' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__35__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 31 :
      rule_common_5F_syntax_expression_5F__35__i31_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__35__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 31 :
      rule_common_5F_syntax_expression_5F__35__i31_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'expression_4' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__34__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 32 :
      rule_common_5F_syntax_expression_5F__34__i32_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__34__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 32 :
      rule_common_5F_syntax_expression_5F__34__i32_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'expression_3' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__33__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 33 :
      rule_common_5F_syntax_expression_5F__33__i33_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__33__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 33 :
      rule_common_5F_syntax_expression_5F__33__i33_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'expression_2' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__32__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 34 :
      rule_common_5F_syntax_expression_5F__32__i34_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__32__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 34 :
      rule_common_5F_syntax_expression_5F__32__i34_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'expression_1' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_expression_5F__31__parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 35 :
      rule_common_5F_syntax_expression_5F__31__i35_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_expression_5F__31__ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 35 :
      rule_common_5F_syntax_expression_5F__31__i35_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       'primary' non terminal implementation                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_primary_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 36 :
      rule_common_5F_syntax_primary_i36_parse(inLexique) ;
    break ;
  case 37 :
      rule_common_5F_syntax_primary_i37_parse(inLexique) ;
    break ;
  case 38 :
      rule_common_5F_syntax_primary_i38_parse(inLexique) ;
    break ;
  case 39 :
      rule_common_5F_syntax_primary_i39_parse(inLexique) ;
    break ;
  case 40 :
      rule_common_5F_syntax_primary_i40_parse(inLexique) ;
    break ;
  case 41 :
      rule_common_5F_syntax_primary_i41_parse(inLexique) ;
    break ;
  case 42 :
      rule_common_5F_syntax_primary_i42_parse(inLexique) ;
    break ;
  case 43 :
      rule_common_5F_syntax_primary_i43_parse(inLexique) ;
    break ;
  case 44 :
      rule_common_5F_syntax_primary_i44_parse(inLexique) ;
    break ;
  case 45 :
      rule_common_5F_syntax_primary_i45_parse(inLexique) ;
    break ;
  case 46 :
      rule_common_5F_syntax_primary_i46_parse(inLexique) ;
    break ;
  case 47 :
      rule_common_5F_syntax_primary_i47_parse(inLexique) ;
    break ;
  case 48 :
      rule_common_5F_syntax_primary_i48_parse(inLexique) ;
    break ;
  case 49 :
      rule_common_5F_syntax_primary_i49_parse(inLexique) ;
    break ;
  case 50 :
      rule_common_5F_syntax_primary_i50_parse(inLexique) ;
    break ;
  case 51 :
      rule_common_5F_syntax_primary_i51_parse(inLexique) ;
    break ;
  case 52 :
      rule_common_5F_syntax_primary_i52_parse(inLexique) ;
    break ;
  case 53 :
      rule_common_5F_syntax_primary_i53_parse(inLexique) ;
    break ;
  case 54 :
      rule_common_5F_syntax_primary_i54_parse(inLexique) ;
    break ;
  case 55 :
      rule_common_5F_syntax_primary_i55_parse(inLexique) ;
    break ;
  case 56 :
      rule_common_5F_syntax_primary_i56_parse(inLexique) ;
    break ;
  case 57 :
      rule_common_5F_syntax_primary_i57_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_primary_ (GALGAS_expressionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 36 :
      rule_common_5F_syntax_primary_i36_(parameter_1, inLexique) ;
    break ;
  case 37 :
      rule_common_5F_syntax_primary_i37_(parameter_1, inLexique) ;
    break ;
  case 38 :
      rule_common_5F_syntax_primary_i38_(parameter_1, inLexique) ;
    break ;
  case 39 :
      rule_common_5F_syntax_primary_i39_(parameter_1, inLexique) ;
    break ;
  case 40 :
      rule_common_5F_syntax_primary_i40_(parameter_1, inLexique) ;
    break ;
  case 41 :
      rule_common_5F_syntax_primary_i41_(parameter_1, inLexique) ;
    break ;
  case 42 :
      rule_common_5F_syntax_primary_i42_(parameter_1, inLexique) ;
    break ;
  case 43 :
      rule_common_5F_syntax_primary_i43_(parameter_1, inLexique) ;
    break ;
  case 44 :
      rule_common_5F_syntax_primary_i44_(parameter_1, inLexique) ;
    break ;
  case 45 :
      rule_common_5F_syntax_primary_i45_(parameter_1, inLexique) ;
    break ;
  case 46 :
      rule_common_5F_syntax_primary_i46_(parameter_1, inLexique) ;
    break ;
  case 47 :
      rule_common_5F_syntax_primary_i47_(parameter_1, inLexique) ;
    break ;
  case 48 :
      rule_common_5F_syntax_primary_i48_(parameter_1, inLexique) ;
    break ;
  case 49 :
      rule_common_5F_syntax_primary_i49_(parameter_1, inLexique) ;
    break ;
  case 50 :
      rule_common_5F_syntax_primary_i50_(parameter_1, inLexique) ;
    break ;
  case 51 :
      rule_common_5F_syntax_primary_i51_(parameter_1, inLexique) ;
    break ;
  case 52 :
      rule_common_5F_syntax_primary_i52_(parameter_1, inLexique) ;
    break ;
  case 53 :
      rule_common_5F_syntax_primary_i53_(parameter_1, inLexique) ;
    break ;
  case 54 :
      rule_common_5F_syntax_primary_i54_(parameter_1, inLexique) ;
    break ;
  case 55 :
      rule_common_5F_syntax_primary_i55_(parameter_1, inLexique) ;
    break ;
  case 56 :
      rule_common_5F_syntax_primary_i56_(parameter_1, inLexique) ;
    break ;
  case 57 :
      rule_common_5F_syntax_primary_i57_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'instruction' non terminal implementation                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_instruction_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 58 :
      rule_common_5F_syntax_instruction_i58_parse(inLexique) ;
    break ;
  case 60 :
      rule_common_5F_syntax_instruction_i60_parse(inLexique) ;
    break ;
  case 61 :
      rule_common_5F_syntax_instruction_i61_parse(inLexique) ;
    break ;
  case 62 :
      rule_common_5F_syntax_instruction_i62_parse(inLexique) ;
    break ;
  case 63 :
      rule_common_5F_syntax_instruction_i63_parse(inLexique) ;
    break ;
  case 64 :
      rule_common_5F_syntax_instruction_i64_parse(inLexique) ;
    break ;
  case 65 :
      rule_common_5F_syntax_instruction_i65_parse(inLexique) ;
    break ;
  case 66 :
      rule_common_5F_syntax_instruction_i66_parse(inLexique) ;
    break ;
  case 68 :
      rule_common_5F_syntax_instruction_i68_parse(inLexique) ;
    break ;
  case 69 :
      rule_common_5F_syntax_instruction_i69_parse(inLexique) ;
    break ;
  case 70 :
      rule_common_5F_syntax_instruction_i70_parse(inLexique) ;
    break ;
  case 73 :
      rule_common_5F_syntax_instruction_i73_parse(inLexique) ;
    break ;
  case 74 :
      rule_common_5F_syntax_instruction_i74_parse(inLexique) ;
    break ;
  case 80 :
      rule_common_5F_syntax_instruction_i80_parse(inLexique) ;
    break ;
  case 81 :
      rule_common_5F_syntax_instruction_i81_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_instruction_ (GALGAS_instructionListAST &  parameter_1,
                                GALGAS_labelMap &  parameter_2,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 58 :
      rule_common_5F_syntax_instruction_i58_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 60 :
      rule_common_5F_syntax_instruction_i60_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 61 :
      rule_common_5F_syntax_instruction_i61_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 62 :
      rule_common_5F_syntax_instruction_i62_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 63 :
      rule_common_5F_syntax_instruction_i63_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 64 :
      rule_common_5F_syntax_instruction_i64_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 65 :
      rule_common_5F_syntax_instruction_i65_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 66 :
      rule_common_5F_syntax_instruction_i66_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 68 :
      rule_common_5F_syntax_instruction_i68_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 69 :
      rule_common_5F_syntax_instruction_i69_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 70 :
      rule_common_5F_syntax_instruction_i70_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 73 :
      rule_common_5F_syntax_instruction_i73_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 74 :
      rule_common_5F_syntax_instruction_i74_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 80 :
      rule_common_5F_syntax_instruction_i80_(parameter_1, parameter_2, inLexique) ;
    break ;
  case 81 :
      rule_common_5F_syntax_instruction_i81_(parameter_1, parameter_2, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'instructionList' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_instructionList_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 59 :
      rule_common_5F_syntax_instructionList_i59_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_instructionList_ (GALGAS_instructionListAST &  parameter_1,
                                GALGAS_labelMap &  parameter_2,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 59 :
      rule_common_5F_syntax_instructionList_i59_(parameter_1, parameter_2, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      'op_assign' non terminal implementation                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_op_5F_assign_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 67 :
      rule_common_5F_syntax_op_5F_assign_i67_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_op_5F_assign_ (GALGAS_operatorAssignKind &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 67 :
      rule_common_5F_syntax_op_5F_assign_i67_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'if_instruction' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_if_5F_instruction_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 71 :
      rule_common_5F_syntax_if_5F_instruction_i71_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_if_5F_instruction_ (GALGAS_ifInstructionAST &  parameter_1,
                                GALGAS_labelMap &  parameter_2,
                                const GALGAS_lstring  parameter_3,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 71 :
      rule_common_5F_syntax_if_5F_instruction_i71_(parameter_1, parameter_2, parameter_3, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'guarded_command' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_guarded_5F_command_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 72 :
      rule_common_5F_syntax_guarded_5F_command_i72_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_guarded_5F_command_ (GALGAS_guardedCommand &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 72 :
      rule_common_5F_syntax_guarded_5F_command_i72_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     'routine_call' non terminal implementation                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_routine_5F_call_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 75 :
      rule_common_5F_syntax_routine_5F_call_i75_parse(inLexique) ;
    break ;
  case 76 :
      rule_common_5F_syntax_routine_5F_call_i76_parse(inLexique) ;
    break ;
  case 77 :
      rule_common_5F_syntax_routine_5F_call_i77_parse(inLexique) ;
    break ;
  case 78 :
      rule_common_5F_syntax_routine_5F_call_i78_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_routine_5F_call_ (GALGAS_abstractCallInstructionAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 75 :
      rule_common_5F_syntax_routine_5F_call_i75_(parameter_1, inLexique) ;
    break ;
  case 76 :
      rule_common_5F_syntax_routine_5F_call_i76_(parameter_1, inLexique) ;
    break ;
  case 77 :
      rule_common_5F_syntax_routine_5F_call_i77_(parameter_1, inLexique) ;
    break ;
  case 78 :
      rule_common_5F_syntax_routine_5F_call_i78_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 'effective_parameters' non terminal implementation                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_plm_5F_grammar::nt_effective_5F_parameters_parse (C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 79 :
      rule_common_5F_syntax_effective_5F_parameters_i79_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_plm_5F_grammar::nt_effective_5F_parameters_ (GALGAS_effectiveParameterListAST &  parameter_1,
                                C_Lexique_plm_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 79 :
      rule_common_5F_syntax_effective_5F_parameters_i79_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_0' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_0 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 83 84 85 86 87 88
  return inLexique->nextProductionIndex () - 82 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_1' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_1 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 89 90
  return inLexique->nextProductionIndex () - 88 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_2' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_2 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 91 92
  return inLexique->nextProductionIndex () - 90 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_3' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_3 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 93 94 95 96 97 98 99
  return inLexique->nextProductionIndex () - 92 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_4' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_4 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 100 101
  return inLexique->nextProductionIndex () - 99 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_5' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_5 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 102 103 104 105
  return inLexique->nextProductionIndex () - 101 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_6' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_6 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 106 107
  return inLexique->nextProductionIndex () - 105 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_7' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_7 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 108 109
  return inLexique->nextProductionIndex () - 107 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_8' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_8 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 110 111
  return inLexique->nextProductionIndex () - 109 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_9' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_9 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 112 113
  return inLexique->nextProductionIndex () - 111 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_10' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_10 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 114 115 116 117 118 119
  return inLexique->nextProductionIndex () - 113 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_11' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_11 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 120 121
  return inLexique->nextProductionIndex () - 119 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_12' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_12 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 122 123
  return inLexique->nextProductionIndex () - 121 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_13' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_13 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 124 125
  return inLexique->nextProductionIndex () - 123 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_14' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_14 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 126 127
  return inLexique->nextProductionIndex () - 125 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_15' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_15 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 128 129
  return inLexique->nextProductionIndex () - 127 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_16' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_16 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 130 131
  return inLexique->nextProductionIndex () - 129 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_17' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_17 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 132 133
  return inLexique->nextProductionIndex () - 131 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_18' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_18 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 134 135
  return inLexique->nextProductionIndex () - 133 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_19' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_19 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 136 137
  return inLexique->nextProductionIndex () - 135 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_20' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_20 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 138 139 140 141
  return inLexique->nextProductionIndex () - 137 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_21' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_21 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 142 143
  return inLexique->nextProductionIndex () - 141 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_22' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_22 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 144 145
  return inLexique->nextProductionIndex () - 143 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_23' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_23 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 146 147
  return inLexique->nextProductionIndex () - 145 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_24' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_24 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 148 149
  return inLexique->nextProductionIndex () - 147 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_25' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_25 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 150 151
  return inLexique->nextProductionIndex () - 149 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_26' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_26 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 152 153
  return inLexique->nextProductionIndex () - 151 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_27' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_27 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 154 155
  return inLexique->nextProductionIndex () - 153 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_28' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_28 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 156 157 158 159
  return inLexique->nextProductionIndex () - 155 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_29' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_29 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 160 161
  return inLexique->nextProductionIndex () - 159 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_30' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_30 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 162 163
  return inLexique->nextProductionIndex () - 161 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_31' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_31 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 164 165
  return inLexique->nextProductionIndex () - 163 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_32' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_32 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 166 167
  return inLexique->nextProductionIndex () - 165 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_33' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_33 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 168 169
  return inLexique->nextProductionIndex () - 167 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_34' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_34 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 170 171
  return inLexique->nextProductionIndex () - 169 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_35' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_35 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 172 173
  return inLexique->nextProductionIndex () - 171 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_36' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_36 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 174 175
  return inLexique->nextProductionIndex () - 173 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_37' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_37 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 176 177
  return inLexique->nextProductionIndex () - 175 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_38' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_38 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 178 179
  return inLexique->nextProductionIndex () - 177 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_39' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_39 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 180 181
  return inLexique->nextProductionIndex () - 179 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_40' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_40 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 182 183
  return inLexique->nextProductionIndex () - 181 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_41' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_41 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 184 185
  return inLexique->nextProductionIndex () - 183 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_42' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_42 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 186 187
  return inLexique->nextProductionIndex () - 185 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_43' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_43 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 188 189 190
  return inLexique->nextProductionIndex () - 187 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_44' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_44 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 191 192 193 194 195
  return inLexique->nextProductionIndex () - 190 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_45' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_45 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 196 197 198
  return inLexique->nextProductionIndex () - 195 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_46' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_46 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 199 200 201 202 203
  return inLexique->nextProductionIndex () - 198 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_47' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_47 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 204 205 206 207 208 209 210
  return inLexique->nextProductionIndex () - 203 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_48' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_48 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 211 212
  return inLexique->nextProductionIndex () - 210 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_49' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_49 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 213 214
  return inLexique->nextProductionIndex () - 212 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_50' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_50 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 215 216
  return inLexique->nextProductionIndex () - 214 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_51' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_51 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 217 218 219
  return inLexique->nextProductionIndex () - 216 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_52' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_52 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 220 221
  return inLexique->nextProductionIndex () - 219 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_53' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_53 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 222 223
  return inLexique->nextProductionIndex () - 221 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_54' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_54 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 224 225 226 227 228 229 230 231 232
  return inLexique->nextProductionIndex () - 223 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_55' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_55 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 233 234
  return inLexique->nextProductionIndex () - 232 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_56' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_56 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 235 236
  return inLexique->nextProductionIndex () - 234 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_57' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_57 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 237 238 239
  return inLexique->nextProductionIndex () - 236 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_58' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_58 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 240 241
  return inLexique->nextProductionIndex () - 239 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_59' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_59 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 242 243
  return inLexique->nextProductionIndex () - 241 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_60' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_60 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 244 245 246
  return inLexique->nextProductionIndex () - 243 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_61' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_61 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 247 248 249
  return inLexique->nextProductionIndex () - 246 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_62' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_62 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 250 251
  return inLexique->nextProductionIndex () - 249 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_63' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_63 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 252 253
  return inLexique->nextProductionIndex () - 251 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_64' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_64 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 254 255
  return inLexique->nextProductionIndex () - 253 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_65' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_65 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 256 257 258 259 260 261
  return inLexique->nextProductionIndex () - 255 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_66' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_66 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 262 263
  return inLexique->nextProductionIndex () - 261 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_67' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_67 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 264 265
  return inLexique->nextProductionIndex () - 263 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_68' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_68 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 266 267
  return inLexique->nextProductionIndex () - 265 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'select_common_5F_syntax_69' non terminal implementation                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_plm_5F_grammar::select_common_5F_syntax_69 (C_Lexique_plm_5F_lexique * inLexique) {
// Productions numbers : 268 269
  return inLexique->nextProductionIndex () - 267 ;
}

//---------------------------------------------------------------------------------------------------------------------*

